{
	"_id": "leyserplus-postcss-assets",
	"_rev": "8-ea34bc333685071dbe0933f9a1a116b5",
	"name": "leyserplus-postcss-assets",
	"description": "PostCSS plugin to manage assets",
	"dist-tags": {
		"latest": "1.1.0"
	},
	"versions": {
		"1.0.0": {
			"name": "leyserplus-postcss-assets",
			"version": "1.0.0",
			"description": "PostCSS plugin to manage assets",
			"keywords": [
				"assets",
				"base64",
				"css",
				"image",
				"path",
				"postcss",
				"postcss-plugin",
				"size",
				"url"
			],
			"bugs": {
				"url": "https://github.com/assetsjs/assets/issues"
			},
			"license": "MIT",
			"author": {
				"name": "Vadym Borodin",
				"email": "borodean@gmail.com",
				"url": "http://borodean.com"
			},
			"contributors": [
				{
					"name": "Alexey Plutalov",
					"url": "https://github.com/demiazz"
				},
				{
					"name": "Andrey Sitnik",
					"url": "https://github.com/ai"
				},
				{
					"name": "Dave Clayton",
					"url": "https://github.com/davedx"
				},
				{
					"name": "Ivan Vlasenko",
					"url": "https://github.com/avanes"
				},
				{
					"name": "Liucw",
					"url": "https://github.com/booxood"
				},
				{
					"name": "Pascal Duez",
					"url": "https://github.com/pascalduez"
				}
			],
			"main": "./lib",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/assetsjs/postcss-assets.git"
			},
			"scripts": {
				"coveralls": "nyc report --reporter=text-lcov | coveralls",
				"test": "eslint --ignore-path .gitignore . && nyc --reporter=text --reporter=html ./node_modules/ava/cli.js"
			},
			"dependencies": {
				"leyserplus-assets": "^1.0.0",
				"bluebird": "^3.5.0",
				"postcss": "^6.0.10",
				"postcss-functions": "^3.0.0"
			},
			"devDependencies": {
				"ava": "^0.22.0",
				"coveralls": "^2.11.13",
				"eslint": "^4.5.0",
				"eslint-config-airbnb-base": "^11.3.2",
				"eslint-plugin-import": "^2.7.0",
				"nyc": "^11.1.0"
			},
			"engines": {
				"node": ">=0.12"
			},
			"gitHead": "8f256004fbc75aa04c45eb2ea558fbbee7969d7a",
			"homepage": "https://github.com/assetsjs/postcss-assets#readme",
			"_id": "leyserplus-postcss-assets@1.0.0",
			"_shasum": "db4f7099351c3039ddb7e23262cfb111d7d5836e",
			"_from": ".",
			"_npmVersion": "4.6.1",
			"_nodeVersion": "6.11.0",
			"_npmUser": {
				"name": "shikelong",
				"email": "rio.shikelong@gmail.com"
			},
			"dist": {
				"shasum": "db4f7099351c3039ddb7e23262cfb111d7d5836e",
				"tarball": "https://registry.npmjs.org/leyserplus-postcss-assets/-/leyserplus-postcss-assets-1.0.0.tgz",
				"integrity": "sha512-ubLFj+FsweDM8fgwaChvxMl1QzqMNlJpCA/BSQOK5StlTboyiW1oU1KjOavVaMfcv1OTCXFr7kRcbFk1MXxkuA==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIDW3NMhtLMIvqM8R1QMFvceeCmU0YErO+X9v7kBQNglLAiAO+D65ISo6xuxd2KoFcws18EYHp/oX99mY8IUzkpfU2A=="
					}
				]
			},
			"maintainers": [
				{
					"name": "shikelong",
					"email": "rio.shikelong@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/leyserplus-postcss-assets-1.0.0.tgz_1512444786262_0.767049269285053"
			},
			"directories": {}
		},
		"1.1.0": {
			"name": "leyserplus-postcss-assets",
			"version": "1.1.0",
			"description": "PostCSS plugin to manage assets",
			"keywords": [
				"assets",
				"base64",
				"css",
				"image",
				"path",
				"postcss",
				"postcss-plugin",
				"size",
				"url"
			],
			"bugs": {
				"url": "https://github.com/assetsjs/assets/issues"
			},
			"license": "MIT",
			"author": {
				"name": "Vadym Borodin",
				"email": "borodean@gmail.com",
				"url": "http://borodean.com"
			},
			"contributors": [
				{
					"name": "Alexey Plutalov",
					"url": "https://github.com/demiazz"
				},
				{
					"name": "Andrey Sitnik",
					"url": "https://github.com/ai"
				},
				{
					"name": "Dave Clayton",
					"url": "https://github.com/davedx"
				},
				{
					"name": "Ivan Vlasenko",
					"url": "https://github.com/avanes"
				},
				{
					"name": "Liucw",
					"url": "https://github.com/booxood"
				},
				{
					"name": "Pascal Duez",
					"url": "https://github.com/pascalduez"
				}
			],
			"main": "./lib",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/assetsjs/postcss-assets.git"
			},
			"scripts": {
				"coveralls": "nyc report --reporter=text-lcov | coveralls",
				"test": "eslint --ignore-path .gitignore . && nyc --reporter=text --reporter=html ./node_modules/ava/cli.js"
			},
			"dependencies": {
				"leyserplus-assets": "^1.0.0",
				"bluebird": "^3.5.0",
				"postcss": "^6.0.10",
				"postcss-functions": "^3.0.0"
			},
			"devDependencies": {
				"ava": "^0.22.0",
				"coveralls": "^2.11.13",
				"eslint": "^4.5.0",
				"eslint-config-airbnb-base": "^11.3.2",
				"eslint-plugin-import": "^2.7.0",
				"nyc": "^11.1.0"
			},
			"engines": {
				"node": ">=0.12"
			},
			"gitHead": "b37c63b0f7a35f41174bc284b5aa683507ec1051",
			"homepage": "https://github.com/assetsjs/postcss-assets#readme",
			"_id": "leyserplus-postcss-assets@1.1.0",
			"_shasum": "73b0cccc2d6b0f185df6a0c35590a59999bcff85",
			"_from": ".",
			"_npmVersion": "4.6.1",
			"_nodeVersion": "6.11.0",
			"_npmUser": {
				"name": "shikelong",
				"email": "rio.shikelong@gmail.com"
			},
			"dist": {
				"shasum": "73b0cccc2d6b0f185df6a0c35590a59999bcff85",
				"tarball": "https://registry.npmjs.org/leyserplus-postcss-assets/-/leyserplus-postcss-assets-1.1.0.tgz",
				"integrity": "sha512-LcQUoXK6Q/18t8bsBfAdtr67RS+lnz2p7rATZ0TxsSAM1iG+zaz7sghm0AtqJFFTxGdVXgKW76VznmCdRTsi/g==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCFPB/shIqVGzWEjfkJTJgtQJTiNE0c8WIqEKr0PdfnCgIhAJt2vohr9q7D0SoXF5EepM3Uy3pmaJQdVgat685Yd1Cs"
					}
				]
			},
			"maintainers": [
				{
					"name": "shikelong",
					"email": "rio.shikelong@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/leyserplus-postcss-assets-1.1.0.tgz_1512457746306_0.5491055124439299"
			},
			"directories": {}
		}
	},
	"readme": "# ![postcss-assets](https://rawgit.com/assetsjs/postcss-assets/develop/media/postcss-assets.svg)\r\n\r\n\r\nA Fork of [Vadym Borodin](borodean@gmail.com)'s postcss-assets repository. The only change is encoding all types of file include svg use base64 encoding to improve compatibility in ie11 by using leyserplus-assets instead of assets.\r\n\r\nBecause svg with `style` tag can't display well in ie11 if use a optimizing encoding to reduce size [](https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\r\n\r\n\r\n--------------\r\n\r\nPostCSS Assets is an asset manager for CSS. It isolates stylesheets from environmental changes, gets image sizes and inlines files.\r\n\r\n[![Unix Build Status][travis-badge]][travis] [![Windows Build Status][appveyor-badge]][appveyor] [![Coverage][coveralls-badge]][coveralls]\r\n\r\n[appveyor]:        https://ci.appveyor.com/project/borodean/postcss-assets\r\n[appveyor-badge]:  https://img.shields.io/appveyor/ci/borodean/postcss-assets.svg?label=windows\r\n[coveralls]:       https://coveralls.io/github/assetsjs/postcss-assets\r\n[coveralls-badge]: https://img.shields.io/coveralls/assetsjs/postcss-assets.svg\r\n[travis]:          https://travis-ci.org/assetsjs/postcss-assets\r\n[travis-badge]:    https://img.shields.io/travis/assetsjs/postcss-assets.svg?label=unix\r\n\r\nTable of contents\r\n-----------------\r\n\r\n* [Installation](#installation)\r\n* [Usage](#usage)\r\n* [URL resolution](#url-resolution)\r\n  * [Load paths](#load-paths)\r\n  * [Base path](#base-path)\r\n  * [Base URL](#base-url)\r\n  * [Relative paths](#relative-paths)\r\n* [Cachebuster](#cachebuster)\r\n* [Image dimensions](#image-dimensions)\r\n* [Inlining files](#inlining-files)\r\n* [Full list of options](#full-list-of-options)\r\n\r\nInstallation\r\n------------\r\n\r\n```bash\r\nnpm install postcss-assets --save-dev\r\n```\r\n\r\nUsage\r\n-----\r\n\r\n### [Gulp PostCSS](https://github.com/w0rm/gulp-postcss)\r\n\r\n```js\r\ngulp.task('assets', function () {\r\n  var postcss = require('gulp-postcss');\r\n  var assets  = require('postcss-assets');\r\n\r\n  return gulp.src('source/*.css')\r\n    .pipe(postcss([assets({\r\n      loadPaths: ['images/']\r\n    })]))\r\n    .pipe(gulp.dest('build/'));\r\n});\r\n```\r\n\r\n### [Grunt PostCSS](https://github.com/nDmitry/grunt-postcss)\r\n\r\n```js\r\nvar assets  = require('postcss-assets');\r\n\r\ngrunt.initConfig({\r\n  postcss: {\r\n    options: {\r\n      processors: [\r\n        assets({\r\n          loadPaths: ['images/']\r\n        })\r\n      ]\r\n    },\r\n    dist: { src: 'build/*.css' }\r\n  },\r\n});\r\n```\r\n\r\n**Note: all of the listed options below are parameters for the ```assets``` object, not the top level postcss options object.**\r\n\r\nURL resolution\r\n--------------\r\n\r\nThese options isolate stylesheets from environmental changes.\r\n\r\n### Load paths\r\n\r\nTo make PostCSS Assets search for files in specific directories, define load paths:\r\n\r\n```js\r\nvar options = {\r\n  loadPaths: ['fonts/', 'media/patterns/', 'images/']\r\n};\r\n```\r\n\r\nExample:\r\n\r\n```css\r\nbody {\r\n  background: resolve('foobar.jpg');\r\n  background: resolve('icons/baz.png');\r\n}\r\n```\r\n\r\nPostCSS Assets would look for the files relative to the source file, then in load paths, then in the base path. If it succeed, it would resolve a true URL:\r\n\r\n```css\r\nbody {\r\n  background: url('/media/patterns/foobar.jpg');\r\n  background: url('/images/icons/baz.png');\r\n}\r\n```\r\n\r\n### Base path\r\n\r\nIf the root directory of your site is not where you execute PostCSS Assets, correct it:\r\n\r\n```js\r\nvar options = {\r\n  basePath: 'source/'\r\n};\r\n```\r\n\r\nPostCSS Assets would treat `source` directory as `/` for all URLs and load paths would be relative to it.\r\n\r\n### Base URL\r\n\r\nIf the URL of your base path is not `/`, correct it:\r\n\r\n```js\r\nvar options = {\r\n  baseUrl: 'http://example.com/wp-content/themes/'\r\n};\r\n```\r\n\r\n### Relative paths\r\n\r\nTo make resolved paths relative to the input file, set a flag:\r\n\r\n```js\r\nvar options = {\r\n  relative: true\r\n};\r\n```\r\n\r\nTo relate to a particular directory, set it as a string:\r\n\r\n```js\r\nvar options = {\r\n  relative: 'assets/css'\r\n};\r\n```\r\n\r\nCachebuster\r\n-----------\r\n\r\nPostCSS Assets can bust assets cache, changing urls depending on asset’s modification date:\r\n\r\n```js\r\nvar options = {\r\n  cachebuster: true\r\n};\r\n```\r\n\r\n```css\r\nbody {\r\n  background: url('/images/icons/baz.png?14a931c501f');\r\n}\r\n```\r\n\r\nTo define a custom cachebuster pass a function as an option:\r\n\r\n```js\r\nvar options = {\r\n  cachebuster: function (filePath, urlPathname) {\r\n    return fs.statSync(filePath).mtime.getTime().toString(16);\r\n  }\r\n};\r\n```\r\n\r\nIf the returned value is falsy, no cache busting is done for the asset.\r\n\r\nIf the returned value is an object the values of `pathname` and/or `query` are used to generate a cache busted path to the asset.\r\n\r\nIf the returned value is a string, it is added as a query string.\r\n\r\nThe returned values for query strings must not include the starting `?`.\r\n\r\nBusting the cache via path:\r\n\r\n```js\r\nvar options = {\r\n  cachebuster: function (filePath, urlPathname) {\r\n    var hash = fs.statSync(filePath).mtime.getTime().toString(16);\r\n    return {\r\n      pathname: path.dirname(urlPathname)\r\n        + '/' + path.basename(urlPathname, path.extname(urlPathname))\r\n        + hash + path.extname(urlPathname),\r\n      query: false // you may omit this one\r\n    }\r\n  }\r\n};\r\n```\r\n\r\nImage dimensions\r\n----------------\r\n\r\nPostCSS Assets calculates dimensions of PNG, JPEG, GIF, SVG and WebP images:\r\n\r\n```css\r\nbody {\r\n  width: width('images/foobar.png'); /* 320px */\r\n  height: height('images/foobar.png'); /* 240px */\r\n  background-size: size('images/foobar.png'); /* 320px 240px */\r\n}\r\n```\r\n\r\nTo correct the dimensions for images with a high density, pass it as a second parameter:\r\n\r\n```css\r\nbody {\r\n  width: width('images/foobar.png', 2); /* 160px */\r\n  height: height('images/foobar.png', 2); /* 120px */\r\n  background-size: size('images/foobar.png', 2); /* 160px 120px */\r\n}\r\n```\r\n\r\nInlining files\r\n--------------\r\n\r\nPostCSS inlines files to a stylesheet in Base64 encoding:\r\n\r\n```css\r\nbody {\r\n  background: inline('images/foobar.png');\r\n}\r\n```\r\n\r\nSVG files would be inlined unencoded, because [then they benefit in size](http://css-tricks.com/probably-dont-base64-svg/).\r\n\r\nFull list of options\r\n--------------------\r\n\r\n| Option        | Description                                                                       | Default |\r\n|:--------------|:----------------------------------------------------------------------------------|:--------|\r\n| `basePath`    | Root directory of the project.                                                    | `.`     |\r\n| `baseUrl`     | URL of the project when running the web server.                                   | `/`     |\r\n| `cachebuster` | If cache should be busted. Pass a function to define custom busting strategy.     | `false` |\r\n| `loadPaths`   | Specific directories to look for the files.                                       | `[]`    |\r\n| `relative`    | Directory to relate to when resolving URLs. When `true`, relates to the input file. When `false`, disables relative URLs. | `false` |\r\n| `cache`       | When `true`, if the input file not been modifed, use the results before cached.   | `false` |\r\n",
	"maintainers": [
		{
			"email": "chevy.cai@grapecity.com",
			"name": "chevybean"
		},
		{
			"email": "harold.ligc@gmail.com",
			"name": "haroldligc"
		},
		{
			"email": "rio.shikelong@gmail.com",
			"name": "shikelong"
		},
		{
			"email": "599085363@qq.com",
			"name": "minajiale"
		},
		{
			"email": "emilwangshaolong@163.com",
			"name": "emilwang"
		},
		{
			"email": "zhaoce@outlook.com",
			"name": "zhaoce"
		}
	],
	"time": {
		"modified": "2022-06-19T11:56:26.669Z",
		"created": "2017-12-05T03:33:06.381Z",
		"1.0.0": "2017-12-05T03:33:06.381Z",
		"1.1.0": "2017-12-05T07:09:06.363Z"
	},
	"homepage": "https://github.com/assetsjs/postcss-assets#readme",
	"keywords": [
		"assets",
		"base64",
		"css",
		"image",
		"path",
		"postcss",
		"postcss-plugin",
		"size",
		"url"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/assetsjs/postcss-assets.git"
	},
	"contributors": [
		{
			"name": "Alexey Plutalov",
			"url": "https://github.com/demiazz"
		},
		{
			"name": "Andrey Sitnik",
			"url": "https://github.com/ai"
		},
		{
			"name": "Dave Clayton",
			"url": "https://github.com/davedx"
		},
		{
			"name": "Ivan Vlasenko",
			"url": "https://github.com/avanes"
		},
		{
			"name": "Liucw",
			"url": "https://github.com/booxood"
		},
		{
			"name": "Pascal Duez",
			"url": "https://github.com/pascalduez"
		}
	],
	"author": {
		"name": "Vadym Borodin",
		"email": "borodean@gmail.com",
		"url": "http://borodean.com"
	},
	"bugs": {
		"url": "https://github.com/assetsjs/assets/issues"
	},
	"license": "MIT",
	"readmeFilename": "README.md"
}
{
	"_id": "prefix-plus",
	"name": "prefix-plus",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "prefix-plus",
			"version": "1.0.0",
			"description": "Parse CSS and add vendor prefixes to CSS rules using values from the Can I Use website",
			"engines": {
				"node": "^10 || ^12 || >=14"
			},
			"keywords": [
				"styleprefixer",
				"css",
				"prefix",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"unit": "uvu . '\\.test\\.js$'",
				"test:coverage": "c8 pnpm unit",
				"test:lint": "eslint . bin/*",
				"test:size": "size-limit",
				"test": "pnpm run /^test:/"
			},
			"main": "lib/autoprefixer.js",
			"bin": {
				"prefix-plus": "bin/autoprefixer"
			},
			"types": "lib/autoprefixer.d.ts",
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/postcss/"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/autoprefixer"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"author": {
				"name": "Andrey Sitnik",
				"email": "andrey@sitnik.ru"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/postcss/autoprefixer.git"
			},
			"bugs": {
				"url": "https://github.com/postcss/autoprefixer/issues"
			},
			"peerDependencies": {
				"postcss": "^8.1.0"
			},
			"dependencies": {
				"browserslist": "^4.24.4",
				"caniuse-lite": "^1.0.30001702",
				"fraction.js": "^4.3.7",
				"normalize-range": "^0.1.2",
				"picocolors": "^1.1.1",
				"postcss-value-parser": "^4.2.0"
			},
			"devDependencies": {
				"@logux/eslint-config": "^55.0.1",
				"@size-limit/preset-small-lib": "11.2.0",
				"c8": "^10.1.3",
				"clean-publish": "^5.1.0",
				"eslint": "^9.22.0",
				"nanospy": "^1.0.0",
				"postcss": "^8.5.3",
				"size-limit": "^11.2.0",
				"uvu": "^0.5.6"
			},
			"prettier": {
				"arrowParens": "avoid",
				"jsxSingleQuote": false,
				"quoteProps": "consistent",
				"semi": false,
				"singleQuote": true,
				"trailingComma": "none"
			},
			"size-limit": [
				{
					"limit": "50 KB"
				}
			],
			"c8": {
				"exclude": [
					"test/*"
				],
				"lines": 100,
				"check-coverage": true,
				"reporter": [
					"text",
					"lcov"
				],
				"skip-full": true,
				"clean": true
			},
			"clean-publish": {
				"cleanDocs": true
			},
			"_id": "prefix-plus@1.0.0",
			"contributors": [
				{
					"name": "Aaron",
					"email": "me@aaron.md"
				},
				{
					"name": "Adam Lynch",
					"email": "contact@adamlynch.ie"
				},
				{
					"name": "Adonis K",
					"email": "aklp08@gmail.com"
				},
				{
					"name": "Adriaan",
					"email": "https://github.com/harianus"
				},
				{
					"name": "Albert Juhé Lluveras",
					"email": "aljullu@gmail.com"
				},
				{
					"name": "Aleksei Androsov",
					"email": "aandrosov@yandex-team.ru"
				},
				{
					"name": "Aleksey Shvayka",
					"email": "shvaikalesh@gmail.com"
				},
				{
					"name": "Aleks Hudochenkov",
					"email": "aleks@hudochenkov.com"
				},
				{
					"name": "Alexey Komarov",
					"email": "alex7kom@gmail.com"
				},
				{
					"name": "Alexey Plutalov",
					"email": "demiazz.py@gmail.com"
				},
				{
					"name": "Anders Olsen Sandvik",
					"email": "https://github.com/Andersos"
				},
				{
					"name": "Andreas Haller",
					"email": "Andreas.Haller@invision.de"
				},
				{
					"name": "Andreas Lind",
					"email": "andreas@one.com"
				},
				{
					"name": "Andrew Rhoads"
				},
				{
					"name": "Andrey Alexandrov",
					"email": "icima.fan@gmail.com"
				},
				{
					"name": "Andrey Deryabin",
					"email": "deriabin@gmail.com"
				},
				{
					"name": "Andrey Sitnik",
					"email": "andrey@sitnik.ru"
				},
				{
					"name": "Andrey Taritsyn",
					"email": "taritsyn@gmail.com"
				},
				{
					"name": "Andy Trevorah",
					"email": "a.trevorah@gmail.com"
				},
				{
					"name": "Antoine du Hamel",
					"email": "duhamelantoine1995@gmail.com"
				},
				{
					"name": "Anton Khlynovskiy",
					"email": "subzey@gmail.com"
				},
				{
					"name": "Artem Yavorsky",
					"email": "info@yavorsky.org"
				},
				{
					"name": "aruseni",
					"email": "aruseni.magiku@gmail.com"
				},
				{
					"name": "Ben Briggs",
					"email": "beneb.info@gmail.com"
				},
				{
					"name": "bernig",
					"email": "https://github.com/bernig"
				},
				{
					"name": "Bogdan Chadkin",
					"email": "trysound@yandex.ru"
				},
				{
					"name": "Bogdan Dolin",
					"email": "d.bogdan@inbox.ru"
				},
				{
					"name": "brainopia",
					"email": "brainopia@evilmartians.com"
				},
				{
					"name": "Brandon Mathis",
					"email": "brandon@imathis.com"
				},
				{
					"name": "Chad von Nau",
					"email": "chad@vonnau.com"
				},
				{
					"name": "Chi Vinh Le",
					"email": "vinh@wikiwi.io"
				},
				{
					"name": "Christian Oliff",
					"email": "christianoliff@yahoo.com"
				},
				{
					"name": "Cory House",
					"email": "housecor@gmail.com"
				},
				{
					"name": "Cory Simmons",
					"email": "cory@mojotech.com"
				},
				{
					"name": "Craig Martin",
					"email": "https://github.com/craigmichaelmartin"
				},
				{
					"name": "Damon",
					"email": "motoxer4533@gmail.com"
				},
				{
					"name": "Daniel Garcia-Carrillo",
					"email": "garciacarrillo.daniel@gmail.com"
				},
				{
					"name": "Daniel Tonon",
					"email": "https://github.com/Dan503"
				},
				{
					"name": "Daniel Tschinder",
					"email": "daniel@tschinder.de"
				},
				{
					"name": "Danny Pule",
					"email": "kojikusan@gmail.com"
				},
				{
					"name": "Darius"
				},
				{
					"name": "David Narbutovich",
					"email": "vamnemne@gmail.com"
				},
				{
					"name": "David Pike",
					"email": "david@evolution7.com.au"
				},
				{
					"name": "Denys Kniazevych",
					"email": "webschik@gmail.com"
				},
				{
					"name": "Denis Sokolov",
					"email": "denis@sokolov.cc"
				},
				{
					"name": "Diablohu",
					"email": "https://github.com/Diablohu"
				},
				{
					"name": "Dominik Porada",
					"email": "dominik@porada.co"
				},
				{
					"name": "Dominik Schilling",
					"email": "dominikschilling+git@gmail.com"
				},
				{
					"name": "dotch",
					"email": "ch.weiss@hotmail.de"
				},
				{
					"name": "Dmitry Semigradsky",
					"email": "semigradskyd@gmail.com"
				},
				{
					"name": "Eduard Kyvenko",
					"email": "duardeco@gmail.com"
				},
				{
					"name": "Efremov Alexey",
					"email": "lexich121@gmail.com"
				},
				{
					"name": "eitanr",
					"email": "eitanr@wix.com"
				},
				{
					"name": "Erik Sundahl",
					"email": "esundahl@gmail.com"
				},
				{
					"name": "Eugene Datsky",
					"email": "eugene@datsky.ru"
				},
				{
					"name": "Even Stensberg",
					"email": "evenstensberg@gmail.com"
				},
				{
					"name": "Evgeny Petukhov",
					"email": "petukhov.yevgeny@gmail.com"
				},
				{
					"name": "Evilebot Tnawi",
					"email": "sheo13666q@gmail.com"
				},
				{
					"name": "Fangzhou Li",
					"email": "riophaelee@gmail.com"
				},
				{
					"name": "Forrest York",
					"email": "https://github.com/badisa"
				},
				{
					"name": "Gibr",
					"email": "todayz@yandex.ru"
				},
				{
					"name": "Google Inc."
				},
				{
					"name": "Gregory Eremin",
					"email": "magnolia_fan@me.com"
				},
				{
					"name": "GU Yiling",
					"email": "justice360@gmail.com"
				},
				{
					"name": "Gustavo Real",
					"email": "https://github.com/kotfire"
				},
				{
					"name": "Hallvord R. M. Steen",
					"email": "hallvord@hallvord.com"
				},
				{
					"name": "heady",
					"email": "https://github.com/heady"
				},
				{
					"name": "HongShaoRou",
					"email": "evanzlist@sina.com"
				},
				{
					"name": "Huáng Jùnliàng",
					"email": "https://github.com/JLHwung"
				},
				{
					"name": "Iain Beeston",
					"email": "iain.beeston@gmail.com"
				},
				{
					"name": "Igor Adamenko",
					"email": "https://github.com/igoradamenko"
				},
				{
					"name": "Ivan",
					"email": "menshikov.ivn@gmail.com"
				},
				{
					"name": "Ivan Malov",
					"email": "https://github.com/ivandata"
				},
				{
					"name": "Ivan Verevkin",
					"email": "ivan.p.verevkin@gmail.com"
				},
				{
					"name": "Filipe W. Lima",
					"email": "fwl.ufpe@gmail.com"
				},
				{
					"name": "Jack Moore",
					"email": "hello@jacklmoore.com"
				},
				{
					"name": "Jason Kuhrt",
					"email": "jasonkuhrt@me.com"
				},
				{
					"name": "Jeff Escalante",
					"email": "hello@jenius.me"
				},
				{
					"name": "Joan León",
					"email": "joan.leon@gmail.com"
				},
				{
					"name": "Johannes J. Schmidt",
					"email": "schmidt@netzmerk.com"
				},
				{
					"name": "John Kreitlow",
					"email": "jkreitlow@deepfocus.net"
				},
				{
					"name": "Jonathan Ong",
					"email": "jonathanrichardong@gmail.com"
				},
				{
					"name": "Josh Gillies",
					"email": "github@joshgilli.es"
				},
				{
					"name": "Joshua Hall",
					"email": "joshuahallmail@gmail.com"
				},
				{
					"name": "Juan Martin Marco",
					"email": "jmmarco@gmail.com"
				},
				{
					"name": "Junliang Huang"
				},
				{
					"name": "jvdanilo",
					"email": "jvdanilo@gmail.com"
				},
				{
					"name": "Kevin Pfefferle",
					"email": "kevin@rebaseinteractive.com"
				},
				{
					"name": "Kieran",
					"email": "Kieranju@gmail.com"
				},
				{
					"name": "Kir Shatrov",
					"email": "shatrov@me.com"
				},
				{
					"name": "Kiwi",
					"email": "vinh@wikiwi.io"
				},
				{
					"name": "kizu",
					"email": "kizmarh@gmail.com"
				},
				{
					"name": "Leonya Khachaturov",
					"email": "leonidkhachaturov@gmail.com"
				},
				{
					"name": "Lovchikov Anton",
					"email": "besyanya@yandex.ru"
				},
				{
					"name": "L.T",
					"email": "ec.huyinghuan@gmail.com"
				},
				{
					"name": "Lucas Caton",
					"email": "lucascaton@gmail.com"
				},
				{
					"name": "Luciano Battagliero",
					"email": "lucianobattagliero+git@gmail.com"
				},
				{
					"name": "Luke Page",
					"email": "luke.a.page@gmail.com"
				},
				{
					"name": "martco",
					"email": "martco@gmail.com"
				},
				{
					"name": "Mat Gadd",
					"email": "github@catchall.drarok.com"
				},
				{
					"name": "Matt Buresh",
					"email": "matt@mburesh.com"
				},
				{
					"name": "Matt Smith",
					"email": "runner_28@hotmail.com"
				},
				{
					"name": "Maxime Thirouin",
					"email": "m@moox.io"
				},
				{
					"name": "Max Mechanic",
					"email": "max@philo.com"
				},
				{
					"name": "Michael Beil",
					"email": "michaelbeil@me.com"
				},
				{
					"name": "Michael Prentice",
					"email": "splaktar@gmail.com"
				},
				{
					"name": "Michael Scott Hertzberg",
					"email": "mshertzberg@gmail.com"
				},
				{
					"name": "Michał Gołębiowski-Owczarek",
					"email": "m.goleb@gmail.com"
				},
				{
					"name": "Mikael Jorhult",
					"email": "mikael@jorhult.se"
				},
				{
					"name": "Morton Fox",
					"email": "github@qslw.com"
				},
				{
					"name": "mvasilkov",
					"email": "mvasilkov@gmail.com"
				},
				{
					"name": "Nick Howes",
					"email": "nick@nickhowes.co.uk"
				},
				{
					"name": "Nick Marchenko",
					"email": "n30n1ck@gmail.com"
				},
				{
					"name": "Nic Nilov",
					"email": "https://github.com/nicnilov"
				},
				{
					"name": "Nick Schonning",
					"email": "nschonni@gmail.com"
				},
				{
					"name": "nickspielgist",
					"email": "dev@nickspiel.me"
				},
				{
					"name": "Niels Dequeker",
					"email": "niels.dequeker@gmail.com"
				},
				{
					"name": "Nikolay Burlov",
					"email": "kohgpat@gmail.com"
				},
				{
					"name": "Oleh Aloshkin",
					"email": "olegaleshkin@gmail.com"
				},
				{
					"name": "Oleksandr Sergiienko",
					"email": "sigerello@gmail.com"
				},
				{
					"name": "Pavel Pustovalov",
					"email": "pustovalov.pavel@gmail.com"
				},
				{
					"name": "Pavel Vostrikov",
					"email": "mail@vostrik.com"
				},
				{
					"name": "Paul Statezny",
					"email": "Paulstatezny@gmail.com"
				},
				{
					"name": "Peter van Westen",
					"email": "info@regularlabs.com"
				},
				{
					"name": "Peter Zotov",
					"email": "whitequark@whitequark.org"
				},
				{
					"name": "Phani Kandula",
					"email": "phani.kandula@gmail.com"
				},
				{
					"name": "Phil Dokas",
					"email": "phil@jetless.org"
				},
				{
					"name": "Rafael Silva",
					"email": "rafael@rafaelsilva.net"
				},
				{
					"name": "Ray Lehnhoff",
					"email": "raymond.lehnhoff@gmail.com"
				},
				{
					"name": "ReadmeCritic",
					"email": "frankensteinbot@gmail.com"
				},
				{
					"name": "Reinaldo Schiehll",
					"email": "rn.schiehll@gmail.com"
				},
				{
					"name": "René Stalder",
					"email": "rene@whatwedo.ch"
				},
				{
					"name": "Richard Wang",
					"email": "richardwa@google.com"
				},
				{
					"name": "Rob Howell",
					"email": "rob@robhowell.com"
				},
				{
					"name": "Roland Warmerdam",
					"email": "rowno@webspirited.com"
				},
				{
					"name": "Roman Dvornov",
					"email": "rdvornov@gmail.com"
				},
				{
					"name": "Roy Revelt",
					"email": "roy@codsen.com"
				},
				{
					"name": "Ryan Zimmerman",
					"email": "https://github.com/RyanZim"
				},
				{
					"name": "Sami Suo-Heikki",
					"email": "suoheikki.sami@gmail.com"
				},
				{
					"name": "Sasha Koss",
					"email": "koss@nocorp.me"
				},
				{
					"name": "Sean Anderson",
					"email": "Sean.Palmer.Anderson@gmail.com"
				},
				{
					"name": "Semen Levenson",
					"email": "levenson94@gmail.com"
				},
				{
					"name": "Sergey Belov",
					"email": "peimei@ya.ru"
				},
				{
					"name": "Sergey Leschina",
					"email": "mail@putnik.ws"
				},
				{
					"name": "Sergey Lysenko",
					"email": "soulwish.ls@gmail.com"
				},
				{
					"name": "sethjgore",
					"email": "sethjgore@gmail.com"
				},
				{
					"name": "Šime Vidas",
					"email": "sime.vidas@gmail.com"
				},
				{
					"name": "Simon Lydell",
					"email": "simon.lydell@gmail.com"
				},
				{
					"name": "Sindre Sorhus",
					"email": "sindresorhus@gmail.com"
				},
				{
					"name": "Sire"
				},
				{
					"name": "Stanislav",
					"email": "botev.st@gmail.com"
				},
				{
					"name": "Stanislav Lashmanov",
					"email": "stasvarenkin@gmail.com"
				},
				{
					"name": "Stephen Edgar",
					"email": "stephen@netweb.com.au"
				},
				{
					"name": "Steve Mao",
					"email": "https://github.com/stevemao"
				},
				{
					"name": "Stig Otnes Kolstad",
					"email": "stig@stigok.net"
				},
				{
					"name": "Subash Pathak",
					"email": "sbspk@msn.com"
				},
				{
					"name": "sunhao",
					"email": "sunhao_1988@msn.cn"
				},
				{
					"name": "Sven Wagner",
					"email": "https://github.com/svewag"
				},
				{
					"name": "Timothy",
					"email": "zzzzBov@gmail.com"
				},
				{
					"name": "tomdavenport",
					"email": "playmusic@me.com"
				},
				{
					"name": "Tony Ganch",
					"email": "tonyganch@gmail.com"
				},
				{
					"name": "Vegard Andreas Larsen",
					"email": "vegard@xaltra.net"
				},
				{
					"name": "Vera Surkova",
					"email": "vera@surkova.se"
				},
				{
					"name": "Vincent De Oliveira",
					"email": "vincent@iamvdo.me"
				},
				{
					"name": "Vishnu Ravi",
					"email": "vishnu@vishnu.io"
				},
				{
					"name": "Vladimir Pouzanov",
					"email": "farcaller@gmail.com"
				},
				{
					"name": "vladkens",
					"email": "vladkens@yandex.ru"
				},
				{
					"name": "Yet Another Minion",
					"email": "yam@thinkalexandria.com"
				},
				{
					"name": "Yuriy Alekseyev",
					"email": "dev.yuriy.a@gmail.com"
				},
				{
					"name": "Yury Timofeev",
					"email": "y.timofeyev@gmail.com"
				},
				{
					"name": "Даниил Пронин",
					"email": "mail@grawl.ru"
				},
				{
					"name": "一丝",
					"email": "jie.lijie@alibaba-inc.com"
				},
				{
					"name": "刘祺",
					"email": "gucong@gmail.com"
				},
				{
					"name": "忆初",
					"email": "baby@justjavac.com"
				}
			],
			"gitHead": "541295c0e6dd348db2d3f52772b59cd403c59d29",
			"homepage": "https://github.com/postcss/autoprefixer#readme",
			"_nodeVersion": "22.16.0",
			"_npmVersion": "10.9.2",
			"dist": {
				"integrity": "sha512-yGdjNm3K+nEoaIO0AOojs1sF2rZ6vFIHHLPREREj9tQxbE1DrDtELkP21mIYEMp7GC/4hPliVgCJ7AbAH5lAVA==",
				"shasum": "9ada7d1a4c3d59181a11f2b22384a5121971425c",
				"tarball": "https://registry.npmjs.org/prefix-plus/-/prefix-plus-1.0.0.tgz",
				"fileCount": 89,
				"unpackedSize": 285273,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIQCzdf/BaD5qVIixWyzVSxiOefDbVNwjZ2b5lJIF17CKjgIgUKZsvJIti1SSCHZCgh+hrHDs7R0HS2J9tz0jFaWgQm4="
					}
				]
			},
			"_npmUser": {
				"name": "mattfarser",
				"email": "mattfarser1989@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "mattfarser",
					"email": "mattfarser1989@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/prefix-plus_1.0.0_1749489641127_0.33915497138025463"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-06-09T17:20:40.999Z",
		"1.0.0": "2025-06-09T17:20:41.301Z",
		"modified": "2025-06-09T17:20:41.635Z"
	},
	"maintainers": [
		{
			"name": "mattfarser",
			"email": "mattfarser1989@gmail.com"
		}
	],
	"description": "Parse CSS and add vendor prefixes to CSS rules using values from the Can I Use website",
	"homepage": "https://github.com/postcss/autoprefixer#readme",
	"keywords": [
		"styleprefixer",
		"css",
		"prefix",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/postcss/autoprefixer.git"
	},
	"contributors": [
		{
			"name": "Aaron",
			"email": "me@aaron.md"
		},
		{
			"name": "Adam Lynch",
			"email": "contact@adamlynch.ie"
		},
		{
			"name": "Adonis K",
			"email": "aklp08@gmail.com"
		},
		{
			"name": "Adriaan",
			"email": "https://github.com/harianus"
		},
		{
			"name": "Albert Juhé Lluveras",
			"email": "aljullu@gmail.com"
		},
		{
			"name": "Aleksei Androsov",
			"email": "aandrosov@yandex-team.ru"
		},
		{
			"name": "Aleksey Shvayka",
			"email": "shvaikalesh@gmail.com"
		},
		{
			"name": "Aleks Hudochenkov",
			"email": "aleks@hudochenkov.com"
		},
		{
			"name": "Alexey Komarov",
			"email": "alex7kom@gmail.com"
		},
		{
			"name": "Alexey Plutalov",
			"email": "demiazz.py@gmail.com"
		},
		{
			"name": "Anders Olsen Sandvik",
			"email": "https://github.com/Andersos"
		},
		{
			"name": "Andreas Haller",
			"email": "Andreas.Haller@invision.de"
		},
		{
			"name": "Andreas Lind",
			"email": "andreas@one.com"
		},
		{
			"name": "Andrew Rhoads"
		},
		{
			"name": "Andrey Alexandrov",
			"email": "icima.fan@gmail.com"
		},
		{
			"name": "Andrey Deryabin",
			"email": "deriabin@gmail.com"
		},
		{
			"name": "Andrey Sitnik",
			"email": "andrey@sitnik.ru"
		},
		{
			"name": "Andrey Taritsyn",
			"email": "taritsyn@gmail.com"
		},
		{
			"name": "Andy Trevorah",
			"email": "a.trevorah@gmail.com"
		},
		{
			"name": "Antoine du Hamel",
			"email": "duhamelantoine1995@gmail.com"
		},
		{
			"name": "Anton Khlynovskiy",
			"email": "subzey@gmail.com"
		},
		{
			"name": "Artem Yavorsky",
			"email": "info@yavorsky.org"
		},
		{
			"name": "aruseni",
			"email": "aruseni.magiku@gmail.com"
		},
		{
			"name": "Ben Briggs",
			"email": "beneb.info@gmail.com"
		},
		{
			"name": "bernig",
			"email": "https://github.com/bernig"
		},
		{
			"name": "Bogdan Chadkin",
			"email": "trysound@yandex.ru"
		},
		{
			"name": "Bogdan Dolin",
			"email": "d.bogdan@inbox.ru"
		},
		{
			"name": "brainopia",
			"email": "brainopia@evilmartians.com"
		},
		{
			"name": "Brandon Mathis",
			"email": "brandon@imathis.com"
		},
		{
			"name": "Chad von Nau",
			"email": "chad@vonnau.com"
		},
		{
			"name": "Chi Vinh Le",
			"email": "vinh@wikiwi.io"
		},
		{
			"name": "Christian Oliff",
			"email": "christianoliff@yahoo.com"
		},
		{
			"name": "Cory House",
			"email": "housecor@gmail.com"
		},
		{
			"name": "Cory Simmons",
			"email": "cory@mojotech.com"
		},
		{
			"name": "Craig Martin",
			"email": "https://github.com/craigmichaelmartin"
		},
		{
			"name": "Damon",
			"email": "motoxer4533@gmail.com"
		},
		{
			"name": "Daniel Garcia-Carrillo",
			"email": "garciacarrillo.daniel@gmail.com"
		},
		{
			"name": "Daniel Tonon",
			"email": "https://github.com/Dan503"
		},
		{
			"name": "Daniel Tschinder",
			"email": "daniel@tschinder.de"
		},
		{
			"name": "Danny Pule",
			"email": "kojikusan@gmail.com"
		},
		{
			"name": "Darius"
		},
		{
			"name": "David Narbutovich",
			"email": "vamnemne@gmail.com"
		},
		{
			"name": "David Pike",
			"email": "david@evolution7.com.au"
		},
		{
			"name": "Denys Kniazevych",
			"email": "webschik@gmail.com"
		},
		{
			"name": "Denis Sokolov",
			"email": "denis@sokolov.cc"
		},
		{
			"name": "Diablohu",
			"email": "https://github.com/Diablohu"
		},
		{
			"name": "Dominik Porada",
			"email": "dominik@porada.co"
		},
		{
			"name": "Dominik Schilling",
			"email": "dominikschilling+git@gmail.com"
		},
		{
			"name": "dotch",
			"email": "ch.weiss@hotmail.de"
		},
		{
			"name": "Dmitry Semigradsky",
			"email": "semigradskyd@gmail.com"
		},
		{
			"name": "Eduard Kyvenko",
			"email": "duardeco@gmail.com"
		},
		{
			"name": "Efremov Alexey",
			"email": "lexich121@gmail.com"
		},
		{
			"name": "eitanr",
			"email": "eitanr@wix.com"
		},
		{
			"name": "Erik Sundahl",
			"email": "esundahl@gmail.com"
		},
		{
			"name": "Eugene Datsky",
			"email": "eugene@datsky.ru"
		},
		{
			"name": "Even Stensberg",
			"email": "evenstensberg@gmail.com"
		},
		{
			"name": "Evgeny Petukhov",
			"email": "petukhov.yevgeny@gmail.com"
		},
		{
			"name": "Evilebot Tnawi",
			"email": "sheo13666q@gmail.com"
		},
		{
			"name": "Fangzhou Li",
			"email": "riophaelee@gmail.com"
		},
		{
			"name": "Forrest York",
			"email": "https://github.com/badisa"
		},
		{
			"name": "Gibr",
			"email": "todayz@yandex.ru"
		},
		{
			"name": "Google Inc."
		},
		{
			"name": "Gregory Eremin",
			"email": "magnolia_fan@me.com"
		},
		{
			"name": "GU Yiling",
			"email": "justice360@gmail.com"
		},
		{
			"name": "Gustavo Real",
			"email": "https://github.com/kotfire"
		},
		{
			"name": "Hallvord R. M. Steen",
			"email": "hallvord@hallvord.com"
		},
		{
			"name": "heady",
			"email": "https://github.com/heady"
		},
		{
			"name": "HongShaoRou",
			"email": "evanzlist@sina.com"
		},
		{
			"name": "Huáng Jùnliàng",
			"email": "https://github.com/JLHwung"
		},
		{
			"name": "Iain Beeston",
			"email": "iain.beeston@gmail.com"
		},
		{
			"name": "Igor Adamenko",
			"email": "https://github.com/igoradamenko"
		},
		{
			"name": "Ivan",
			"email": "menshikov.ivn@gmail.com"
		},
		{
			"name": "Ivan Malov",
			"email": "https://github.com/ivandata"
		},
		{
			"name": "Ivan Verevkin",
			"email": "ivan.p.verevkin@gmail.com"
		},
		{
			"name": "Filipe W. Lima",
			"email": "fwl.ufpe@gmail.com"
		},
		{
			"name": "Jack Moore",
			"email": "hello@jacklmoore.com"
		},
		{
			"name": "Jason Kuhrt",
			"email": "jasonkuhrt@me.com"
		},
		{
			"name": "Jeff Escalante",
			"email": "hello@jenius.me"
		},
		{
			"name": "Joan León",
			"email": "joan.leon@gmail.com"
		},
		{
			"name": "Johannes J. Schmidt",
			"email": "schmidt@netzmerk.com"
		},
		{
			"name": "John Kreitlow",
			"email": "jkreitlow@deepfocus.net"
		},
		{
			"name": "Jonathan Ong",
			"email": "jonathanrichardong@gmail.com"
		},
		{
			"name": "Josh Gillies",
			"email": "github@joshgilli.es"
		},
		{
			"name": "Joshua Hall",
			"email": "joshuahallmail@gmail.com"
		},
		{
			"name": "Juan Martin Marco",
			"email": "jmmarco@gmail.com"
		},
		{
			"name": "Junliang Huang"
		},
		{
			"name": "jvdanilo",
			"email": "jvdanilo@gmail.com"
		},
		{
			"name": "Kevin Pfefferle",
			"email": "kevin@rebaseinteractive.com"
		},
		{
			"name": "Kieran",
			"email": "Kieranju@gmail.com"
		},
		{
			"name": "Kir Shatrov",
			"email": "shatrov@me.com"
		},
		{
			"name": "Kiwi",
			"email": "vinh@wikiwi.io"
		},
		{
			"name": "kizu",
			"email": "kizmarh@gmail.com"
		},
		{
			"name": "Leonya Khachaturov",
			"email": "leonidkhachaturov@gmail.com"
		},
		{
			"name": "Lovchikov Anton",
			"email": "besyanya@yandex.ru"
		},
		{
			"name": "L.T",
			"email": "ec.huyinghuan@gmail.com"
		},
		{
			"name": "Lucas Caton",
			"email": "lucascaton@gmail.com"
		},
		{
			"name": "Luciano Battagliero",
			"email": "lucianobattagliero+git@gmail.com"
		},
		{
			"name": "Luke Page",
			"email": "luke.a.page@gmail.com"
		},
		{
			"name": "martco",
			"email": "martco@gmail.com"
		},
		{
			"name": "Mat Gadd",
			"email": "github@catchall.drarok.com"
		},
		{
			"name": "Matt Buresh",
			"email": "matt@mburesh.com"
		},
		{
			"name": "Matt Smith",
			"email": "runner_28@hotmail.com"
		},
		{
			"name": "Maxime Thirouin",
			"email": "m@moox.io"
		},
		{
			"name": "Max Mechanic",
			"email": "max@philo.com"
		},
		{
			"name": "Michael Beil",
			"email": "michaelbeil@me.com"
		},
		{
			"name": "Michael Prentice",
			"email": "splaktar@gmail.com"
		},
		{
			"name": "Michael Scott Hertzberg",
			"email": "mshertzberg@gmail.com"
		},
		{
			"name": "Michał Gołębiowski-Owczarek",
			"email": "m.goleb@gmail.com"
		},
		{
			"name": "Mikael Jorhult",
			"email": "mikael@jorhult.se"
		},
		{
			"name": "Morton Fox",
			"email": "github@qslw.com"
		},
		{
			"name": "mvasilkov",
			"email": "mvasilkov@gmail.com"
		},
		{
			"name": "Nick Howes",
			"email": "nick@nickhowes.co.uk"
		},
		{
			"name": "Nick Marchenko",
			"email": "n30n1ck@gmail.com"
		},
		{
			"name": "Nic Nilov",
			"email": "https://github.com/nicnilov"
		},
		{
			"name": "Nick Schonning",
			"email": "nschonni@gmail.com"
		},
		{
			"name": "nickspielgist",
			"email": "dev@nickspiel.me"
		},
		{
			"name": "Niels Dequeker",
			"email": "niels.dequeker@gmail.com"
		},
		{
			"name": "Nikolay Burlov",
			"email": "kohgpat@gmail.com"
		},
		{
			"name": "Oleh Aloshkin",
			"email": "olegaleshkin@gmail.com"
		},
		{
			"name": "Oleksandr Sergiienko",
			"email": "sigerello@gmail.com"
		},
		{
			"name": "Pavel Pustovalov",
			"email": "pustovalov.pavel@gmail.com"
		},
		{
			"name": "Pavel Vostrikov",
			"email": "mail@vostrik.com"
		},
		{
			"name": "Paul Statezny",
			"email": "Paulstatezny@gmail.com"
		},
		{
			"name": "Peter van Westen",
			"email": "info@regularlabs.com"
		},
		{
			"name": "Peter Zotov",
			"email": "whitequark@whitequark.org"
		},
		{
			"name": "Phani Kandula",
			"email": "phani.kandula@gmail.com"
		},
		{
			"name": "Phil Dokas",
			"email": "phil@jetless.org"
		},
		{
			"name": "Rafael Silva",
			"email": "rafael@rafaelsilva.net"
		},
		{
			"name": "Ray Lehnhoff",
			"email": "raymond.lehnhoff@gmail.com"
		},
		{
			"name": "ReadmeCritic",
			"email": "frankensteinbot@gmail.com"
		},
		{
			"name": "Reinaldo Schiehll",
			"email": "rn.schiehll@gmail.com"
		},
		{
			"name": "René Stalder",
			"email": "rene@whatwedo.ch"
		},
		{
			"name": "Richard Wang",
			"email": "richardwa@google.com"
		},
		{
			"name": "Rob Howell",
			"email": "rob@robhowell.com"
		},
		{
			"name": "Roland Warmerdam",
			"email": "rowno@webspirited.com"
		},
		{
			"name": "Roman Dvornov",
			"email": "rdvornov@gmail.com"
		},
		{
			"name": "Roy Revelt",
			"email": "roy@codsen.com"
		},
		{
			"name": "Ryan Zimmerman",
			"email": "https://github.com/RyanZim"
		},
		{
			"name": "Sami Suo-Heikki",
			"email": "suoheikki.sami@gmail.com"
		},
		{
			"name": "Sasha Koss",
			"email": "koss@nocorp.me"
		},
		{
			"name": "Sean Anderson",
			"email": "Sean.Palmer.Anderson@gmail.com"
		},
		{
			"name": "Semen Levenson",
			"email": "levenson94@gmail.com"
		},
		{
			"name": "Sergey Belov",
			"email": "peimei@ya.ru"
		},
		{
			"name": "Sergey Leschina",
			"email": "mail@putnik.ws"
		},
		{
			"name": "Sergey Lysenko",
			"email": "soulwish.ls@gmail.com"
		},
		{
			"name": "sethjgore",
			"email": "sethjgore@gmail.com"
		},
		{
			"name": "Šime Vidas",
			"email": "sime.vidas@gmail.com"
		},
		{
			"name": "Simon Lydell",
			"email": "simon.lydell@gmail.com"
		},
		{
			"name": "Sindre Sorhus",
			"email": "sindresorhus@gmail.com"
		},
		{
			"name": "Sire"
		},
		{
			"name": "Stanislav",
			"email": "botev.st@gmail.com"
		},
		{
			"name": "Stanislav Lashmanov",
			"email": "stasvarenkin@gmail.com"
		},
		{
			"name": "Stephen Edgar",
			"email": "stephen@netweb.com.au"
		},
		{
			"name": "Steve Mao",
			"email": "https://github.com/stevemao"
		},
		{
			"name": "Stig Otnes Kolstad",
			"email": "stig@stigok.net"
		},
		{
			"name": "Subash Pathak",
			"email": "sbspk@msn.com"
		},
		{
			"name": "sunhao",
			"email": "sunhao_1988@msn.cn"
		},
		{
			"name": "Sven Wagner",
			"email": "https://github.com/svewag"
		},
		{
			"name": "Timothy",
			"email": "zzzzBov@gmail.com"
		},
		{
			"name": "tomdavenport",
			"email": "playmusic@me.com"
		},
		{
			"name": "Tony Ganch",
			"email": "tonyganch@gmail.com"
		},
		{
			"name": "Vegard Andreas Larsen",
			"email": "vegard@xaltra.net"
		},
		{
			"name": "Vera Surkova",
			"email": "vera@surkova.se"
		},
		{
			"name": "Vincent De Oliveira",
			"email": "vincent@iamvdo.me"
		},
		{
			"name": "Vishnu Ravi",
			"email": "vishnu@vishnu.io"
		},
		{
			"name": "Vladimir Pouzanov",
			"email": "farcaller@gmail.com"
		},
		{
			"name": "vladkens",
			"email": "vladkens@yandex.ru"
		},
		{
			"name": "Yet Another Minion",
			"email": "yam@thinkalexandria.com"
		},
		{
			"name": "Yuriy Alekseyev",
			"email": "dev.yuriy.a@gmail.com"
		},
		{
			"name": "Yury Timofeev",
			"email": "y.timofeyev@gmail.com"
		},
		{
			"name": "Даниил Пронин",
			"email": "mail@grawl.ru"
		},
		{
			"name": "一丝",
			"email": "jie.lijie@alibaba-inc.com"
		},
		{
			"name": "刘祺",
			"email": "gucong@gmail.com"
		},
		{
			"name": "忆初",
			"email": "baby@justjavac.com"
		}
	],
	"author": {
		"name": "Andrey Sitnik",
		"email": "andrey@sitnik.ru"
	},
	"bugs": {
		"url": "https://github.com/postcss/autoprefixer/issues"
	},
	"license": "MIT",
	"readme": "# Autoprefixer [![Cult Of Martians][cult-img]][cult]\r\n\r\n<img align=\"right\" width=\"94\" height=\"71\"\r\n     src=\"https://postcss.github.io/autoprefixer/logo.svg\"\r\n     title=\"Autoprefixer logo by Anton Lovchikov\">\r\n\r\n[PostCSS] plugin to parse CSS and add vendor prefixes to CSS rules using values\r\nfrom [Can I Use]. It is recommended by Google and used in Twitter and Alibaba.\r\n\r\nWrite your CSS rules without vendor prefixes (in fact, forget about them\r\nentirely):\r\n\r\n```css\r\n::placeholder {\r\n  color: gray;\r\n}\r\n\r\n.image {\r\n  background-image: url(image@1x.png);\r\n}\r\n@media (min-resolution: 2dppx) {\r\n  .image {\r\n    background-image: url(image@2x.png);\r\n  }\r\n}\r\n```\r\n\r\nAutoprefixer will use the data based on current browser popularity and property\r\nsupport to apply prefixes for you. You can try the [interactive demo]\r\nof Autoprefixer.\r\n\r\n```css\r\n::-moz-placeholder {\r\n  color: gray;\r\n}\r\n::placeholder {\r\n  color: gray;\r\n}\r\n\r\n.image {\r\n  background-image: url(image@1x.png);\r\n}\r\n@media (-webkit-min-device-pixel-ratio: 2),\r\n       (min-resolution: 2dppx) {\r\n  .image {\r\n    background-image: url(image@2x.png);\r\n  }\r\n}\r\n```\r\n\r\nTwitter account for news and releases: [@autoprefixer].\r\n\r\n<a href=\"https://evilmartians.com/?utm_source=autoprefixer\">\r\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\r\n</a>\r\n\r\n[interactive demo]: https://autoprefixer.github.io/\r\n[@autoprefixer]:    https://twitter.com/autoprefixer\r\n[Can I Use]:        https://caniuse.com/\r\n[cult-img]:         https://cultofmartians.com/assets/badges/badge.svg\r\n[PostCSS]:          https://github.com/postcss/postcss\r\n[cult]:             https://cultofmartians.com/tasks/autoprefixer-grid.html\r\n\r\n\r\n## Contents\r\n\r\n* [Contents](#contents)\r\n* [Browsers](#browsers)\r\n* [FAQ](#faq)\r\n  * [Does Autoprefixer polyfill Grid Layout for IE?](#does-autoprefixer-polyfill-grid-layout-for-ie)\r\n  * [Does it add polyfills?](#does-it-add-polyfills)\r\n  * [Why doesn’t Autoprefixer add prefixes to `border-radius`?](#why-doesnt-autoprefixer-add-prefixes-to-border-radius)\r\n  * [Why does Autoprefixer use unprefixed properties in `@-webkit-keyframes`?](#why-does-autoprefixer-use-unprefixed-properties-in--webkit-keyframes)\r\n  * [How to work with legacy `-webkit-` only code?](#how-to-work-with-legacy--webkit--only-code)\r\n  * [Does Autoprefixer add `-epub-` prefix?](#does-autoprefixer-add--epub--prefix)\r\n  * [Why doesn’t Autoprefixer transform generic font-family `system-ui`?](#why-doesnt-autoprefixer-transform-generic-font-family-system-ui)\r\n* [Usage](#usage)\r\n  * [Gulp](#gulp)\r\n  * [Webpack](#webpack)\r\n  * [CSS-in-JS](#css-in-js)\r\n  * [CLI](#cli)\r\n  * [Other Build Tools](#other-build-tools)\r\n    * [Preprocessors](#preprocessors)\r\n    * [GUI Tools](#gui-tools)\r\n  * [JavaScript](#javascript)\r\n  * [Text Editors and IDE](#text-editors-and-ide)\r\n* [Warnings](#warnings)\r\n* [Disabling](#disabling)\r\n  * [Prefixes](#prefixes)\r\n  * [Features](#features)\r\n  * [Control Comments](#control-comments)\r\n* [Options](#options)\r\n* [Environment Variables](#environment-variables)\r\n  * [Using environment variables to support CSS Grid prefixes in Create React App](#using-environment-variables-to-support-css-grid-prefixes-in-create-react-app)\r\n* [Grid Autoplacement support in IE](#grid-autoplacement-support-in-ie)\r\n  * [Beware of enabling autoplacement in old projects](#beware-of-enabling-autoplacement-in-old-projects)\r\n  * [Autoplacement limitations](#autoplacement-limitations)\r\n    * [Both columns and rows must be defined](#both-columns-and-rows-must-be-defined)\r\n    * [Repeat auto-fit and auto-fill are not supported](#repeat-auto-fit-and-auto-fill-are-not-supported)\r\n    * [No manual cell placement or column/row spans allowed inside an autoplacement grid](#no-manual-cell-placement-or-columnrow-spans-allowed-inside-an-autoplacement-grid)\r\n    * [Do not create `::before` and `::after` pseudo elements](#do-not-create-before-and-after-pseudo-elements)\r\n    * [When changing the `grid gap` value, columns and rows must be re-declared](#when-changing-the-grid-gap-value-columns-and-rows-must-be-re-declared)\r\n* [Debug](#debug)\r\n* [Security Contact](#security-contact)\r\n* [For Enterprise](#for-enterprise)\r\n\r\n## Browsers\r\n\r\nAutoprefixer uses [Browserslist], so you can specify the browsers\r\nyou want to target in your project with queries like `> 5%`\r\n(see [Best Practices]).\r\n\r\nThe best way to provide browsers is a `.browserslistrc` file in your project\r\nroot, or by adding a `browserslist` key to your `package.json`.\r\n\r\nWe recommend the use of these options over passing options to Autoprefixer so\r\nthat the config can be shared with other tools such as [babel-preset-env] and\r\n[Stylelint].\r\n\r\nSee [Browserslist docs] for queries, browser names, config format, and defaults.\r\n\r\n[Browserslist docs]: https://github.com/browserslist/browserslist#queries\r\n[babel-preset-env]:  https://github.com/babel/babel/tree/master/packages/babel-preset-env\r\n[Best Practices]:    https://github.com/browserslist/browserslist#best-practices\r\n[Browserslist]:      https://github.com/browserslist/browserslist\r\n[Stylelint]:         https://stylelint.io/\r\n\r\n\r\n## FAQ\r\n\r\n### Does Autoprefixer polyfill Grid Layout for IE?\r\n\r\nAutoprefixer can be used to translate modern CSS Grid syntax into IE 10\r\nand IE 11 syntax, but this polyfill will not work in 100% of cases.\r\nThis is why it is disabled by default.\r\n\r\nFirst, you need to enable Grid prefixes by using either the `grid: \"autoplace\"`\r\noption or the `/* autoprefixer grid: autoplace */` control comment.\r\nAlso you can use environment variable to enable Grid:\r\n`AUTOPREFIXER_GRID=autoplace npm build`.\r\n\r\nSecond, you need to test every fix with Grid in IE. It is not an enable and\r\nforget feature, but it is still very useful.\r\nFinancial Times and Yandex use it in production.\r\n\r\nThird, there is only very limited auto placement support. Read the\r\n[Grid Autoplacement support in IE](#grid-autoplacement-support-in-ie) section\r\nfor more details.\r\n\r\nFourth, if you are not using the autoplacement feature, the best way\r\nto use Autoprefixer is by using  `grid-template` or `grid-template-areas`.\r\n\r\n```css\r\n.page {\r\n  display: grid;\r\n  grid-gap: 33px;\r\n  grid-template:\r\n    \"head head  head\" 1fr\r\n    \"nav  main  main\" minmax(100px, 1fr)\r\n    \"nav  foot  foot\" 2fr /\r\n    1fr   100px 1fr;\r\n}\r\n.page__head {\r\n  grid-area: head;\r\n}\r\n.page__nav {\r\n  grid-area: nav;\r\n}\r\n.page__main {\r\n  grid-area: main;\r\n}\r\n.page__footer {\r\n  grid-area: foot;\r\n}\r\n```\r\n\r\nSee also:\r\n\r\n* [The guide about Grids in IE and Autoprefixer].\r\n* [`postcss-gap-properties`] to use new `gap` property\r\n  instead of old `grid-gap`.\r\n* [`postcss-grid-kiss`] has alternate “everything in one property” syntax,\r\n  which makes using Autoprefixer’s Grid translations safer.\r\n\r\n[The guide about Grids in IE and Autoprefixer]: https://css-tricks.com/css-grid-in-ie-css-grid-and-the-new-autoprefixer/\r\n[`postcss-gap-properties`]:                     https://github.com/jonathantneal/postcss-gap-properties\r\n[`postcss-grid-kiss`]:                          https://github.com/sylvainpolletvillard/postcss-grid-kiss\r\n\r\n\r\n### Does it add polyfills?\r\n\r\nNo. Autoprefixer only adds prefixes.\r\n\r\nMost new CSS features will require client side JavaScript to handle a new\r\nbehavior correctly.\r\n\r\nDepending on what you consider to be a “polyfill”, you can take a look at some\r\nother tools and libraries. If you are just looking for syntax sugar,\r\nyou might take a look at:\r\n\r\n- [postcss-preset-env] is a plugins preset with polyfills and Autoprefixer\r\n  to write future CSS today.\r\n- [Oldie], a PostCSS plugin that handles some IE hacks (opacity, rgba, etc).\r\n- [postcss-flexbugs-fixes], a PostCSS plugin to fix flexbox issues.\r\n\r\n[postcss-flexbugs-fixes]: https://github.com/luisrudge/postcss-flexbugs-fixes\r\n[postcss-preset-env]:     https://github.com/jonathantneal/postcss-preset-env\r\n[Oldie]:                  https://github.com/jonathantneal/oldie\r\n\r\n\r\n### Why doesn’t Autoprefixer add prefixes to `border-radius`?\r\n\r\nDevelopers are often surprised by how few prefixes are required today.\r\nIf Autoprefixer doesn’t add prefixes to your CSS, check if they’re still\r\nrequired on [Can I Use].\r\n\r\n[Can I Use]: https://caniuse.com/\r\n\r\n\r\n### Why does Autoprefixer use unprefixed properties in `@-webkit-keyframes`?\r\n\r\nBrowser teams can remove some prefixes before others, so we try to use all\r\ncombinations of prefixed/unprefixed values.\r\n\r\n\r\n### How to work with legacy `-webkit-` only code?\r\n\r\nAutoprefixer needs unprefixed property to add prefixes. So if you only\r\nwrote `-webkit-gradient` without W3C’s `gradient`,\r\nAutoprefixer will not add other prefixes.\r\n\r\nBut [PostCSS] has plugins to convert CSS to unprefixed state.\r\nUse [postcss-unprefix] before Autoprefixer.\r\n\r\n[postcss-unprefix]: https://github.com/gucong3000/postcss-unprefix\r\n\r\n\r\n### Does Autoprefixer add `-epub-` prefix?\r\n\r\nNo, Autoprefixer works only with browsers prefixes from Can I Use.\r\nBut you can use [postcss-epub] for prefixing ePub3 properties.\r\n\r\n[postcss-epub]: https://github.com/Rycochet/postcss-epub\r\n\r\n\r\n### Why doesn’t Autoprefixer transform generic font-family `system-ui`?\r\n\r\n`system-ui` is technically not a prefix and the transformation is not\r\nfuture-proof. You can use [postcss-font-family-system-ui] to transform\r\n`system-ui` to a practical font-family list.\r\n\r\n[postcss-font-family-system-ui]: https://github.com/JLHwung/postcss-font-family-system-ui\r\n\r\n\r\n## Usage\r\n\r\n### Gulp\r\n\r\nIn Gulp you can use [gulp-postcss] with `autoprefixer` npm package.\r\n\r\n```js\r\ngulp.task('autoprefixer', () => {\r\n  const autoprefixer = require('autoprefixer')\r\n  const sourcemaps = require('gulp-sourcemaps')\r\n  const postcss = require('gulp-postcss')\r\n\r\n  return gulp.src('./src/*.css')\r\n    .pipe(sourcemaps.init())\r\n    .pipe(postcss([ autoprefixer() ]))\r\n    .pipe(sourcemaps.write('.'))\r\n    .pipe(gulp.dest('./dest'))\r\n})\r\n```\r\n\r\nWith `gulp-postcss` you also can combine Autoprefixer\r\nwith [other PostCSS plugins].\r\n\r\n[gulp-postcss]:          https://github.com/postcss/gulp-postcss\r\n[other PostCSS plugins]: https://github.com/postcss/postcss#plugins\r\n\r\n\r\n### Webpack\r\n\r\nIn [webpack] you can use [postcss-loader] with `autoprefixer`\r\nand [other PostCSS plugins].\r\n\r\n```js\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [\"style-loader\", \"css-loader\", \"postcss-loader\"]\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nAnd create a `postcss.config.js` with:\r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    require('autoprefixer')\r\n  ]\r\n}\r\n```\r\n\r\n[other PostCSS plugins]: https://github.com/postcss/postcss#plugins\r\n[postcss-loader]:        https://github.com/postcss/postcss-loader\r\n[webpack]:               https://webpack.js.org/\r\n\r\n\r\n### CSS-in-JS\r\n\r\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\r\nAdd its loader to your `webpack.config.js`:\r\n\r\n```js\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: ['style-loader', 'postcss-loader'],\r\n      },\r\n      {\r\n        test: /\\.jsx?$/,\r\n        use: ['babel-loader', 'astroturf/loader'],\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nThen create `postcss.config.js`:\r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    require('autoprefixer')\r\n  ]\r\n}\r\n```\r\n\r\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\r\n\r\n\r\n### CLI\r\n\r\nYou can use the [postcss-cli] to run Autoprefixer from CLI:\r\n\r\n```sh\r\nnpm install postcss postcss-cli autoprefixer\r\nnpx postcss *.css --use autoprefixer -d build/\r\n```\r\n\r\nSee `postcss -h` for help.\r\n\r\n[postcss-cli]: https://github.com/postcss/postcss-cli\r\n\r\n\r\n### Other Build Tools\r\n\r\n* **Grunt:** [grunt-postcss]\r\n* **Ruby on Rails**: [autoprefixer-rails]\r\n* **Neutrino**: [neutrino-middleware-postcss]\r\n* **Jekyll**: add `autoprefixer-rails` and `jekyll-assets` to `Gemfile`\r\n* **Brunch**: [postcss-brunch]\r\n* **Broccoli**: [broccoli-postcss]\r\n* **Middleman**: [middleman-autoprefixer]\r\n* **Mincer**: add `autoprefixer` npm package and enable it:\r\n  `environment.enable('autoprefixer')`\r\n\r\n[neutrino-middleware-postcss]: https://www.npmjs.com/package/neutrino-middleware-postcss\r\n[middleman-autoprefixer]:      https://github.com/middleman/middleman-autoprefixer\r\n[autoprefixer-rails]:          https://github.com/ai/autoprefixer-rails\r\n[broccoli-postcss]:            https://github.com/jeffjewiss/broccoli-postcss\r\n[postcss-brunch]:              https://github.com/iamvdo/postcss-brunch\r\n[grunt-postcss]:               https://github.com/C-Lodder/grunt-postcss\r\n\r\n\r\n#### Preprocessors\r\n\r\n* **Less**: [less-plugin-autoprefix]\r\n* **Stylus**: [autoprefixer-stylus]\r\n* **Compass**: [autoprefixer-rails#compass]\r\n\r\n[less-plugin-autoprefix]: https://github.com/less/less-plugin-autoprefix\r\n[autoprefixer-stylus]:    https://github.com/jenius/autoprefixer-stylus\r\n[autoprefixer-rails#compass]:     https://github.com/ai/autoprefixer-rails#compass\r\n\r\n\r\n#### GUI Tools\r\n\r\n* [CodeKit](https://codekitapp.com/help/autoprefixer/)\r\n* [Prepros](https://prepros.io)\r\n\r\n\r\n### JavaScript\r\n\r\nYou can use Autoprefixer with [PostCSS] in your Node.js application\r\nor if you want to develop an Autoprefixer plugin for a new environment.\r\n\r\n```js\r\nconst autoprefixer = require('autoprefixer')\r\nconst postcss = require('postcss')\r\n\r\npostcss([ autoprefixer ]).process(css).then(result => {\r\n  result.warnings().forEach(warn => {\r\n    console.warn(warn.toString())\r\n  })\r\n  console.log(result.css)\r\n})\r\n```\r\n\r\nThere is also a [standalone build] for the browser or for a non-Node.js runtime.\r\n\r\nYou can use [html-autoprefixer] to process HTML with inlined CSS.\r\n\r\n[html-autoprefixer]: https://github.com/RebelMail/html-autoprefixer\r\n[standalone build]:  https://raw.github.com/ai/autoprefixer-rails/master/vendor/autoprefixer.js\r\n[PostCSS]:           https://github.com/postcss/postcss\r\n\r\n\r\n### Text Editors and IDE\r\n\r\nAutoprefixer should be used in assets build tools. Text editor plugins are not\r\na good solution, because prefixes decrease code readability and you will need\r\nto change values in all prefixed properties.\r\n\r\nI recommend you to learn how to use build tools like [Parcel].\r\nThey work much better and will open you a whole new world of useful plugins\r\nand automation.\r\n\r\nIf you can’t move to a build tool, you can use text editor plugins:\r\n\r\n* [Visual Studio Code](https://github.com/mrmlnc/vscode-autoprefixer)\r\n* [Sublime Text](https://github.com/sindresorhus/sublime-autoprefixer)\r\n\r\n[Parcel]: https://parceljs.org/\r\n\r\n\r\n## Warnings\r\n\r\nAutoprefixer uses the [PostCSS warning API] to warn about really important\r\nproblems in your CSS:\r\n\r\n* Old direction syntax in gradients.\r\n* Old unprefixed `display: box` instead of `display: flex`\r\n  by latest specification version.\r\n\r\nYou can get warnings from `result.warnings()`:\r\n\r\n```js\r\nresult.warnings().forEach(warn => {\r\n  console.warn(warn.toString())\r\n})\r\n```\r\n\r\nEvery Autoprefixer runner should display these warnings.\r\n\r\n[PostCSS warning API]: https://postcss.org/api/#warning\r\n\r\n\r\n## Disabling\r\n\r\n### Prefixes\r\n\r\nAutoprefixer was designed to have no interface – it just works.\r\nIf you need some browser specific hack just write a prefixed property\r\nafter the unprefixed one.\r\n\r\n```css\r\na {\r\n  transform: scale(0.5);\r\n  -moz-transform: scale(0.6);\r\n}\r\n```\r\n\r\nIf some prefixes were generated incorrectly, please create an [issue on GitHub].\r\n\r\n[issue on GitHub]: https://github.com/postcss/autoprefixer/issues\r\n\r\n\r\n### Features\r\n\r\nYou can use these plugin options to control some of Autoprefixer’s features.\r\n\r\n* `grid: \"autoplace\"` will enable `-ms-` prefixes for Grid Layout including some\r\n  [limited autoplacement support](#grid-autoplacement-support-in-ie).\r\n* `supports: false` will disable `@supports` parameters prefixing.\r\n* `flexbox: false` will disable flexbox properties prefixing.\r\n  Or `flexbox: \"no-2009\"` will add prefixes only for final and IE\r\n  versions of specification.\r\n* `remove: false` will disable cleaning outdated prefixes.\r\n\r\nYou should set them inside the plugin like so:\r\n\r\n```js\r\nautoprefixer({ grid: 'autoplace' })\r\n```\r\n\r\n\r\n### Control Comments\r\n\r\nIf you do not need Autoprefixer in some part of your CSS,\r\nyou can use control comments to disable Autoprefixer.\r\n\r\n```css\r\n.a {\r\n  transition: 1s; /* will be prefixed */\r\n}\r\n\r\n.b {\r\n  /* autoprefixer: off */\r\n  transition: 1s; /* will not be prefixed */\r\n}\r\n\r\n.c {\r\n  /* autoprefixer: ignore next */\r\n  transition: 1s; /* will not be prefixed */\r\n  mask: url(image.png); /* will be prefixed */\r\n}\r\n```\r\n\r\nThere are three types of control comments:\r\n\r\n* `/* autoprefixer: (on|off) */`: enable/disable all Autoprefixer translations for the\r\n  whole block both *before* and *after* the comment.\r\n* `/* autoprefixer: ignore next */`: disable Autoprefixer only for the next property\r\n  or next rule selector or at-rule parameters (but not rule/at‑rule body).\r\n* `/* autoprefixer grid: (autoplace|no-autoplace|off) */`: control how Autoprefixer handles\r\n  grid translations for the whole block:\r\n  * `autoplace`: enable grid translations with autoplacement support.\r\n  * `no-autoplace`: enable grid translations with autoplacement\r\n    support *disabled* (alias for deprecated value `on`).\r\n  * `off`: disable all grid translations.\r\n\r\nYou can also use comments recursively:\r\n\r\n```css\r\n/* autoprefixer: off */\r\n@supports (transition: all) {\r\n  /* autoprefixer: on */\r\n  a {\r\n    /* autoprefixer: off */\r\n  }\r\n}\r\n```\r\n\r\nNote that comments that disable the whole block should not be featured in the same\r\nblock twice:\r\n\r\n```css\r\n/* How not to use block level control comments */\r\n\r\n.do-not-do-this {\r\n  /* autoprefixer: off */\r\n  transition: 1s;\r\n  /* autoprefixer: on */\r\n  transform: rotate(20deg);\r\n}\r\n```\r\n\r\n\r\n## Options\r\n\r\nFunction `autoprefixer(options)` returns a new PostCSS plugin.\r\nSee [PostCSS API] for plugin usage documentation.\r\n\r\n```js\r\nautoprefixer({ cascade: false })\r\n```\r\n\r\nAvailable options are:\r\n\r\n* `env` (string): environment for Browserslist.\r\n* `cascade` (boolean): should Autoprefixer use Visual Cascade,\r\n  if CSS is uncompressed. Default: `true`\r\n* `add` (boolean): should Autoprefixer add prefixes. Default is `true`.\r\n* `remove` (boolean): should Autoprefixer [remove outdated] prefixes.\r\n  Default is `true`.\r\n* `supports` (boolean): should Autoprefixer add prefixes for `@supports`\r\n  parameters. Default is `true`.\r\n* `flexbox` (boolean|string): should Autoprefixer add prefixes for flexbox\r\n  properties. With `\"no-2009\"` value Autoprefixer will add prefixes only\r\n  for final and IE 10 versions of specification. Default is `true`.\r\n* `grid` (false|`\"autoplace\"`|`\"no-autoplace\"`): should Autoprefixer\r\n  add IE 10-11 prefixes for Grid Layout properties?\r\n    * `false` (default): prevent Autoprefixer from outputting\r\n       CSS Grid translations.\r\n    * `\"autoplace\"`: enable Autoprefixer grid translations\r\n      and *include* autoplacement support. You can also use\r\n      `/* autoprefixer grid: autoplace */` in your CSS.\r\n    * `\"no-autoplace\"`: enable Autoprefixer grid translations\r\n      but *exclude* autoplacement support. You can also use\r\n      `/* autoprefixer grid: no-autoplace */` in your CSS.\r\n      (alias for the deprecated `true` value)\r\n* `stats` (object): custom [usage statistics] for `> 10% in my stats`\r\n  browsers query.\r\n* `overrideBrowserslist` (array): list of queries for target browsers.\r\n  Try to not use it. The best practice is to use `.browserslistrc` config\r\n  or `browserslist` key in `package.json` to share target browsers\r\n  with Babel, ESLint and Stylelint. See [Browserslist docs]\r\n  for available queries and default value.\r\n* `ignoreUnknownVersions` (boolean): do not raise error on unknown browser\r\n  version in Browserslist config. Default is `false`.\r\n\r\nPlugin object has `info()` method for debugging purpose.\r\n\r\nYou can use PostCSS processor to process several CSS files\r\nto increase performance.\r\n\r\n[usage statistics]: https://github.com/browserslist/browserslist#custom-usage-data\r\n[PostCSS API]:      https://postcss.org/api/\r\n\r\n## Environment Variables\r\n\r\n* `AUTOPREFIXER_GRID`: (`autoplace`|`no-autoplace`) should Autoprefixer\r\n  add IE 10-11 prefixes for Grid Layout properties?\r\n    * `autoplace`: enable Autoprefixer grid translations\r\n      and *include* autoplacement support.\r\n    * `no-autoplace`: enable Autoprefixer grid translations\r\n      but *exclude* autoplacement support.\r\n\r\nEnvironment variables are useful, when you want to change Autoprefixer options but don't have access to config files.\r\n[Create React App] is a good example of this.\r\n\r\n[Create React App]: (https://reactjs.org/docs/create-a-new-react-app.html#create-react-app)\r\n\r\n### Using environment variables to support CSS Grid prefixes in Create React App\r\n\r\n1. Install the latest version of Autoprefixer and [cross-env](https://www.npmjs.com/package/cross-env):\r\n\r\n```\r\nnpm install autoprefixer@latest cross-env --save-dev\r\n```\r\n\r\n2. Under `\"browserslist\"` > `\"development\"` in the package.json file, add `\"last 1 ie version\"`\r\n\r\n```\r\n\"browserslist\": {\r\n  \"production\": [\r\n    \">0.2%\",\r\n    \"not dead\",\r\n    \"not op_mini all\"\r\n  ],\r\n  \"development\": [\r\n    \"last 1 chrome version\",\r\n    \"last 1 firefox version\",\r\n    \"last 1 safari version\",\r\n    \"last 1 ie version\"\r\n  ]\r\n}\r\n```\r\n\r\n3. Update `\"scripts\"` in the package.json file to the following:\r\n\r\n```\r\n\"scripts\": {\r\n  \"start\": \"cross-env AUTOPREFIXER_GRID=autoplace react-scripts start\",\r\n  \"build\": \"cross-env AUTOPREFIXER_GRID=autoplace react-scripts build\",\r\n  \"test\": \"cross-env AUTOPREFIXER_GRID=autoplace react-scripts test\",\r\n  \"eject\": \"react-scripts eject\"\r\n},\r\n```\r\n\r\nReplace `autoplace` with `no-autoplace` in the above example if you prefer to disable Autoprefixer Grid autoplacement support.\r\n\r\nNow when you run `npm start` you will see CSS Grid prefixes automatically being applied to your output CSS.\r\n\r\nSee also [Browserslist environment variables] for more examples on how to use environment variables in your project.\r\n\r\n[Browserslist environment variables]: https://github.com/browserslist/browserslist#environment-variables\r\n\r\n## Grid Autoplacement support in IE\r\n\r\nIf the `grid` option is set to `\"autoplace\"`, limited autoplacement support is added to Autoprefixers grid translations. You can also use\r\nthe `/* autoprefixer grid: autoplace */` control comment or\r\n`AUTOPREFIXER_GRID=autoplace npm build` environment variable.\r\n\r\nAutoprefixer will only autoplace grid cells if both `grid-template-rows`\r\nand `grid-template-columns` has been set. If `grid-template`\r\nor `grid-template-areas` has been set, Autoprefixer will use area based\r\ncell placement instead.\r\n\r\nAutoprefixer supports autoplacement by using `nth-child` CSS selectors.\r\nIt creates [number of columns] x [number of rows] `nth-child` selectors.\r\nFor this reason Autoplacement is only supported within the explicit grid.\r\n\r\n```css\r\n/* Input CSS */\r\n\r\n/* autoprefixer grid: autoplace */\r\n\r\n.autoplacement-example {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: auto auto;\r\n  grid-gap: 20px;\r\n}\r\n```\r\n\r\n```css\r\n/* Output CSS */\r\n\r\n/* autoprefixer grid: autoplace */\r\n\r\n.autoplacement-example {\r\n  display: -ms-grid;\r\n  display: grid;\r\n  -ms-grid-columns: 1fr 20px 1fr;\r\n  grid-template-columns: 1fr 1fr;\r\n  -ms-grid-rows: auto 20px auto;\r\n  grid-template-rows: auto auto;\r\n  grid-gap: 20px;\r\n}\r\n\r\n.autoplacement-example > *:nth-child(1) {\r\n  -ms-grid-row: 1;\r\n  -ms-grid-column: 1;\r\n}\r\n\r\n.autoplacement-example > *:nth-child(2) {\r\n  -ms-grid-row: 1;\r\n  -ms-grid-column: 3;\r\n}\r\n\r\n.autoplacement-example > *:nth-child(3) {\r\n  -ms-grid-row: 3;\r\n  -ms-grid-column: 1;\r\n}\r\n\r\n.autoplacement-example > *:nth-child(4) {\r\n  -ms-grid-row: 3;\r\n  -ms-grid-column: 3;\r\n}\r\n```\r\n\r\n### Beware of enabling autoplacement in old projects\r\n\r\nBe careful about enabling autoplacement in any already established projects that have\r\npreviously not used Autoprefixer's grid autoplacement feature before.\r\n\r\nIf this was your html:\r\n\r\n```html\r\n<div class=\"grid\">\r\n  <div class=\"grid-cell\"></div>\r\n</div>\r\n```\r\n\r\nThe following CSS will not work as expected with the autoplacement feature enabled:\r\n\r\n```css\r\n/* Unsafe CSS when Autoplacement is enabled */\r\n\r\n.grid-cell {\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n}\r\n\r\n.grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n}\r\n```\r\n\r\nSwapping the rules around will not fix the issue either:\r\n\r\n```css\r\n/* Also unsafe to use this CSS */\r\n\r\n.grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n}\r\n\r\n.grid-cell {\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n}\r\n```\r\n\r\nOne way to deal with this issue is to disable autoplacement in the\r\ngrid-declaration rule:\r\n\r\n```css\r\n/* Disable autoplacement to fix the issue */\r\n\r\n.grid {\r\n  /* autoprefixer grid: no-autoplace */\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n}\r\n\r\n.grid-cell {\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n}\r\n```\r\n\r\nThe absolute best way to integrate autoplacement into already existing projects\r\nthough is to leave autoplacement turned off by default and then use a control\r\ncomment to enable it when needed. This method is far less likely to cause\r\nsomething on the site to break.\r\n\r\n```css\r\n/* Disable autoplacement by default in old projects */\r\n/* autoprefixer grid: no-autoplace */\r\n\r\n/* Old code will function the same way it always has */\r\n.old-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n}\r\n.old-grid-cell {\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n}\r\n\r\n/* Enable autoplacement when you want to use it in new code */\r\n.new-autoplace-friendly-grid {\r\n  /* autoprefixer grid: autoplace */\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, auto);\r\n}\r\n```\r\n\r\nNote that the `grid: \"no-autoplace\"` setting and the\r\n`/* autoprefixer grid: no-autoplace */` control comment share identical\r\nfunctionality to the `grid: true` setting and the `/* autoprefixer grid: on */`\r\ncontrol comment. There is no need to refactor old code to use `no-autoplace`\r\nin place of the old `true` and `on` statements.\r\n\r\n### Autoplacement limitations\r\n\r\n#### Both columns and rows must be defined\r\n\r\nAutoplacement only works inside the explicit grid. The columns and rows need to be defined\r\nso that Autoprefixer knows how many `nth-child` selectors to generate.\r\n\r\n```css\r\n.not-allowed {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n}\r\n\r\n.is-allowed {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(10, auto);\r\n}\r\n```\r\n\r\n#### Repeat auto-fit and auto-fill are not supported\r\n\r\nThe `repeat(auto-fit, ...)` and `repeat(auto-fill, ...)` grid functionality relies on\r\nknowledge from the browser about screen dimensions and the number of available grid\r\nitems for it to work properly. Autoprefixer does not have access to this information\r\nso unfortunately this little snippet will _never_ be IE friendly.\r\n\r\n```css\r\n.grid {\r\n  /* This will never be IE friendly */\r\n  grid-template-columns: repeat(auto-fit, min-max(200px, 1fr))\r\n}\r\n```\r\n\r\n#### No manual cell placement or column/row spans allowed inside an autoplacement grid\r\n\r\nElements must not be manually placed or given column/row spans inside\r\nan autoplacement grid. Only the most basic of autoplacement grids are supported.\r\nGrid cells can still be placed manually outside the the explicit grid though.\r\nSupport for manually placing individual grid cells inside an explicit\r\nautoplacement grid is planned for a future release.\r\n\r\n```css\r\n.autoplacement-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, auto);\r\n}\r\n\r\n/* Grid cells placed inside the explicit grid\r\n   will break the layout in IE */\r\n.not-permitted-grid-cell {\r\n  grid-column: 1;\r\n  grid-row: 1;\r\n}\r\n\r\n/* Grid cells placed outside the\r\n   explicit grid will work in IE */\r\n.permitted-grid-cell {\r\n  grid-column: 1 / span 2;\r\n  grid-row: 4;\r\n}\r\n```\r\n\r\nIf manual cell placement is required, we recommend using `grid-template` or\r\n`grid-template-areas` instead:\r\n\r\n```css\r\n.page {\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  grid-template:\r\n      \"head head\"\r\n      \"nav  main\" minmax(100px, 1fr)\r\n      \"foot foot\" /\r\n      200px 1fr;\r\n}\r\n.page__head {\r\n  grid-area: head;\r\n}\r\n.page__nav {\r\n  grid-area: nav;\r\n}\r\n.page__main {\r\n  grid-area: main;\r\n}\r\n.page__footer {\r\n  grid-area: foot;\r\n}\r\n```\r\n\r\n#### Do not create `::before` and `::after` pseudo elements\r\n\r\nLet's say you have this HTML:\r\n\r\n```html\r\n<div class=\"grid\">\r\n  <div class=\"grid-cell\"></div>\r\n</div>\r\n```\r\n\r\nAnd you write this CSS:\r\n\r\n```css\r\n.grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: auto;\r\n}\r\n\r\n.grid::before {\r\n  content: 'before';\r\n}\r\n\r\n.grid::after {\r\n  content: 'after';\r\n}\r\n```\r\n\r\nThis will be the output:\r\n\r\n```css\r\n.grid {\r\n  display: -ms-grid;\r\n  display: grid;\r\n  -ms-grid-columns: 1fr 1fr;\r\n  grid-template-columns: 1fr 1fr;\r\n  -ms-grid-rows: auto;\r\n  grid-template-rows: auto;\r\n}\r\n\r\n.grid > *:nth-child(1) {\r\n  -ms-grid-row: 1;\r\n  -ms-grid-column: 1;\r\n}\r\n\r\n\r\n.grid > *:nth-child(2) {\r\n  -ms-grid-row: 1;\r\n  -ms-grid-column: 2;\r\n}\r\n\r\n.grid::before {\r\n  content: 'before';\r\n}\r\n\r\n.grid::after {\r\n  content: 'after';\r\n}\r\n```\r\n\r\nIE will place `.grid-cell`, `::before` and `::after` in row 1 column 1.\r\nModern browsers on the other hand will place `::before` in row 1 column 1,\r\n`.grid-cell` in row 1 column 2, and `::after` in row 2 column 1.\r\n\r\nSee this [CodePen](https://codepen.io/daniel-tonon/pen/gBymVw) to see a visualization\r\nof the issue. View the CodePen in both a modern browser and IE to see the difference.\r\n\r\nNote that you can still create `::before` and `::after` elements as long as you manually\r\nplace them outside the explicit grid.\r\n\r\n#### When changing the `grid gap` value, columns and rows must be re-declared\r\n\r\nIf you wish to change the size of a `grid-gap`, you will need to redeclare the grid columns and rows.\r\n\r\n```css\r\n.grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: auto;\r\n  grid-gap: 50px;\r\n}\r\n\r\n/* This will *NOT* work in IE */\r\n@media (max-width: 600px) {\r\n  .grid {\r\n    grid-gap: 20px;\r\n  }\r\n}\r\n\r\n/* This will *NOT* work in IE */\r\n.grid.small-gap {\r\n  grid-gap: 20px;\r\n}\r\n```\r\n\r\n```css\r\n.grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: auto;\r\n  grid-gap: 50px;\r\n}\r\n\r\n/* This *WILL* work in IE */\r\n@media (max-width: 600px) {\r\n  .grid {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: auto;\r\n    grid-gap: 20px;\r\n  }\r\n}\r\n\r\n/* This *WILL* work in IE */\r\n.grid.small-gap {\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: auto;\r\n  grid-gap: 20px;\r\n}\r\n```\r\n\r\n## Debug\r\n\r\nRun `npx autoprefixer --info` in your project directory to check\r\nwhich browsers are selected and which properties will be prefixed:\r\n\r\n```console\r\n$ npx autoprefixer --info\r\nBrowsers:\r\n  Edge: 16\r\n\r\nThese browsers account for 0.26% of all users globally\r\n\r\nAt-Rules:\r\n  @viewport: ms\r\n\r\nSelectors:\r\n  ::placeholder: ms\r\n\r\nProperties:\r\n  appearance: webkit\r\n  flow-from: ms\r\n  flow-into: ms\r\n  hyphens: ms\r\n  overscroll-behavior: ms\r\n  region-fragment: ms\r\n  scroll-snap-coordinate: ms\r\n  scroll-snap-destination: ms\r\n  scroll-snap-points-x: ms\r\n  scroll-snap-points-y: ms\r\n  scroll-snap-type: ms\r\n  text-size-adjust: ms\r\n  text-spacing: ms\r\n  user-select: ms\r\n```\r\n\r\nJS API is also available:\r\n\r\n```js\r\nconsole.log(autoprefixer().info())\r\n```\r\n\r\n## Security Contact\r\n\r\nTo report a security vulnerability, please use the [Tidelift security contact].\r\nTidelift will coordinate the fix and disclosure.\r\n\r\n[Tidelift security contact]: https://tidelift.com/security\r\n\r\n## For Enterprise\r\n\r\nAvailable as part of the Tidelift Subscription.\r\n\r\nThe maintainers of `autoprefixer` and thousands of other packages are working\r\nwith Tidelift to deliver commercial support and maintenance for the open source\r\ndependencies you use to build your applications. Save time, reduce risk,\r\nand improve code health, while paying the maintainers of the exact dependencies\r\nyou use. [Learn more.](https://tidelift.com/subscription/pkg/npm-autoprefixer?utm_source=npm-autoprefixer&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\r\n",
	"readmeFilename": "README.md",
	"_rev": "1-b3a89c30db46580af6d6ece628acfa46",
	"_downloads": 0
}
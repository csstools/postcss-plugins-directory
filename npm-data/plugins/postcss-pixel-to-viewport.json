{
	"_id": "postcss-pixel-to-viewport",
	"_rev": "5-f31bfa57e295331b6de8c1796d1ddf70",
	"name": "postcss-pixel-to-viewport",
	"dist-tags": {
		"latest": "1.0.2"
	},
	"versions": {
		"1.0.1": {
			"name": "postcss-pixel-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units.",
			"engines": {
				"node": ">=6.0.0"
			},
			"scripts": {
				"test": "node example"
			},
			"version": "1.0.1",
			"author": {
				"name": "meltifa",
				"email": "meltifa@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/meltifa/postcss-pixel-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/meltifa/postcss-pixel-to-viewport/issues"
			},
			"homepage": "https://github.com/meltifa/postcss-pixel-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"postcss": "^6.0.21"
			},
			"gitHead": "f34bffe788469b67919bc9388dbc9aa94eeea0f8",
			"_id": "postcss-pixel-to-viewport@1.0.1",
			"_shasum": "171b5b84981ac2475feef682b5025c1e4a1af1d1",
			"_from": ".",
			"_npmVersion": "3.10.10",
			"_nodeVersion": "6.13.1",
			"_npmUser": {
				"name": "meltifa",
				"email": "meltifa@gmail.com"
			},
			"dist": {
				"shasum": "171b5b84981ac2475feef682b5025c1e4a1af1d1",
				"tarball": "https://registry.npmjs.org/postcss-pixel-to-viewport/-/postcss-pixel-to-viewport-1.0.1.tgz",
				"fileCount": 9,
				"unpackedSize": 8901,
				"integrity": "sha512-gufEaVWPJNCLiVEFh9RHPZJAvNedhRVa6tewA5l0zRQxeIXYly9GY1+ZHqrQLny7yt+MFc4cq8MiNHuDxyTZKQ==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQD8IOYECWQ5hWeGuRfzS9J3Imweb/tQPZcngUN9zKVE0AIhAKII4QagwV5lAfQgjX461BKSkz8uDbCB4CfgDpSA3cWz"
					}
				]
			},
			"maintainers": [
				{
					"name": "meltifa",
					"email": "meltifa@gmail.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pixel-to-viewport_1.0.1_1523505214388_0.5340569606767902"
			},
			"_hasShrinkwrap": false
		},
		"1.0.2": {
			"name": "postcss-pixel-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units.",
			"engines": {
				"node": ">=6.0.0"
			},
			"scripts": {
				"test": "node example"
			},
			"version": "1.0.2",
			"author": {
				"name": "meltifa",
				"email": "meltifa@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/meltifa/postcss-pixel-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/meltifa/postcss-pixel-to-viewport/issues"
			},
			"homepage": "https://github.com/meltifa/postcss-pixel-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"postcss": "^6.0.21"
			},
			"gitHead": "dfd9e74e9472bab47eecfde7f9f5ab97013ce21b",
			"_id": "postcss-pixel-to-viewport@1.0.2",
			"_npmVersion": "5.6.0",
			"_nodeVersion": "8.11.1",
			"_npmUser": {
				"name": "meltifa",
				"email": "meltifa@gmail.com"
			},
			"dist": {
				"integrity": "sha512-JMt8S8vXNZ/nyQxfy1lzEHxrgEVpjOYDvxokqr+43WA5CByzbFjNrnFjtGtpA1MzhwSd5cfct4ME68lWwlSTbQ==",
				"shasum": "be63ac52dccd80851cc5148e7edc0bae28233a4b",
				"tarball": "https://registry.npmjs.org/postcss-pixel-to-viewport/-/postcss-pixel-to-viewport-1.0.2.tgz",
				"fileCount": 8,
				"unpackedSize": 8934,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2RcxCRA9TVsSAnZWagAAOdwP/i/WGo0b+FSvet/ifuKW\n0c8VRl4snvE197vw9KTCkt9uEtdTcMmphGRTi7PmXEPl6Kh3Qfv2n3GzYyDr\nG0VOK71JIgIxaHkpB+gFba2lu1PogRZiN+LBlkmSmdk8IFDEVdJ9yiHrf1WO\n7qriXsE4DnPD62Zg1sJ4s0z7zPfYnNMyyk6n4u6xiKBkYC638GJYVJYRV2Ts\nCGE76NENJULHACfYIQYiaxxYizMz0zR7VypIpT5gqCvey3i9e8jvXt30Pyx5\n1PFT9EJtVxom+MKFWchQl50YZHmWaVYyDHqn92kRiU7iRfmFabUApDdgStXV\nzv5/E1NbH+zhOqJGl0dnYtiO5AA6bQcAKD2ncQ9teEybresXsYlGKkVCXgGq\nBeRNprtJ7OVZ9gwv/6RaSZpSJEkiKFQrZc0ZWYDlKJnibDkIrLEtQRQqYN8V\ndTj64AcZ2WaT7dtyB3WyO7kGAS0rnHN3UvJdGBfCg49VZJGWRZqlK0Nf8itT\njmaU3PI6isk5ZtS5OiGCNA1WFvqBpqdp3pDJwI3XSdeSmf9bosi7Rgs81yAd\njcx8HHXSz/mPea01s4bdgC3AbGEavG8pk9lERGvAIrDoGrSn3y1zJkj674od\nrZ/7+fD6b4bhQQE++CG9PetCsPY0Ix4khT+wE7qSMuBfTLMh92okJd1KHiSJ\n7rea\r\n=LpTv\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDd3i5Ozppc0EU2wTVugNXBlluilzwW+NEenidCgQxvTAIgLBEI9uXFcEghmx+nVR/gutlsLyaZaxvjqgobSMiuYFA="
					}
				]
			},
			"maintainers": [
				{
					"name": "meltifa",
					"email": "meltifa@gmail.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pixel-to-viewport_1.0.2_1524176688515_0.6757604885606416"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2018-04-12T03:53:34.388Z",
		"1.0.1": "2018-04-12T03:53:34.483Z",
		"modified": "2022-06-24T10:34:24.681Z",
		"1.0.2": "2018-04-19T22:24:48.566Z"
	},
	"maintainers": [
		{
			"name": "meltifa",
			"email": "meltifa@gmail.com"
		}
	],
	"description": "A CSS post-processor that converts px to viewport units.",
	"homepage": "https://github.com/meltifa/postcss-pixel-to-viewport",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/meltifa/postcss-pixel-to-viewport.git"
	},
	"author": {
		"name": "meltifa",
		"email": "meltifa@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/meltifa/postcss-pixel-to-viewport/issues"
	},
	"license": "MIT",
	"readme": "# postcss-pixel-to-viewport\r\n\r\nA plugin for [PostCSS](https://github.com/postcss/postcss) that generates viewport units (vw, vh, vmin, vmax) from pixel units.\r\n\r\n## Usage\r\n\r\nIf your project involves a fixed width, this script will help to convert pixels into viewport units.\r\n\r\n### Input/Output\r\n\r\n```css\r\n// input\r\n\r\n.class {\r\n  margin: -10px .5vh;\r\n  padding: 5vmin 9.5px 1px;\r\n  border: 3px solid black;\r\n  border-bottom-width: 1px;\r\n  font-size: 14px;/*on*/\r\n  line-height: 20px;/*off*/\r\n}\r\n\r\n.class2 {\r\n  border: 1px solid black;\r\n  margin-bottom: 1px;\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n}\r\n\r\n@media (min-width: 750px) {\r\n  .class3 {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n\r\n// output\r\n\r\n.class {\r\n  margin: -1.33333vmin .5vh;\r\n  padding: 5vmin 1.26667vmin 1px;\r\n  border: 0.4vmin solid black;\r\n  border-bottom-width: 1px;\r\n  font-size: 1.86667vmin;\r\n  line-height: 20px;\r\n}\r\n\r\n.class2 {\r\n  border: 1px solid black;\r\n  margin-bottom: 1px;\r\n  font-size: 2.66667vmin;\r\n  line-height: 4vmin;\r\n}\r\n\r\n@media (min-width: 750px) {\r\n  .class3 {\r\n    font-size: 2.13333vmin;\r\n    line-height: 2.93333vmin;\r\n  }\r\n}\r\n```\r\n\r\n### Example\r\n\r\n```js\r\n'use strict';\r\n\r\nvar fs = require('fs');\r\nvar postcss = require('postcss');\r\nvar px2viewport = require('..');\r\nvar css = fs.readFileSync('main.css', 'utf8');\r\nvar options = {\r\n  propertyBlacklist: ['font-size']\r\n};\r\nvar processedCss = postcss(px2viewport(options)).process(css).css;\r\n\r\nfs.writeFile('main-viewport.css', processedCss, function (err) {\r\n  if (err) {\r\n    throw err;\r\n  }\r\n  console.log('File with viewport units written.');\r\n});\r\n```\r\n\r\n### Options\r\n\r\nDefault:\r\n```js\r\n{\r\n  viewportWidth: 750,\r\n  viewportUnit: 'vmin',\r\n  propertyBlacklist: [],\r\n  minPixelValue: 2,\r\n  enableConvertComment: 'on',\r\n  disableConvertComment: 'off',\r\n  mediaQuery: false\r\n}\r\n```\r\n- `viewportWidth` (Number) The width of the viewport.\r\n- `viewportUnit` (String) Expected units.\r\n- `propertyBlacklist` (Array) The propertys to ignore and leave as px.\r\n    - If value is string, it checks to see if property contains the string.\r\n        - `['font']` will match `font-size`\r\n    - If value is regexp, it checks to see if the property matches the regexp.\r\n        - `[/^font$/]` will match `font` but not `font-size`\r\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\r\n- `enableConvertComment` (String) content of comment for enable convert px unit before the declaration.\r\n- `disableConvertComment` (String) content of comment for disable convert px unit before the declaration.\r\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\r\n\r\n### Use comment to enable/disable convert px value for single declaration\r\n\r\n- `font-size: 14px;/*on*/` comment before the declaration will convert px to viewport unit, if `font-size` is in your property blacklist but you want to convert this single declaration.\r\n- `font-size: 14px;/*off*/` comment before the declaration will not convert px unit.\r\n\r\n### Use with gulp-postcss\r\n\r\n```js\r\nvar gulp = require('gulp');\r\nvar postcss = require('gulp-postcss');\r\nvar px2viewport = require('postcss-pixel-to-viewport');\r\n\r\ngulp.task('css', function () {\r\n  var processors = [\r\n    px2viewport({\r\n      viewportWidth: 750\r\n    })\r\n  ];\r\n  return gulp.src(['build/css/**/*.css'])\r\n    .pipe(postcss(processors))\r\n    .pipe(gulp.dest('build/css'));\r\n});\r\n```\r\n",
	"readmeFilename": "README.md",
	"_downloads": 38
}
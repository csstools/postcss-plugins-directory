{
	"_id": "@brn/postcss-import",
	"_rev": "6-86cae7e38f5a52118e87bfe3f7cea1fb",
	"name": "@brn/postcss-import",
	"description": "PostCSS plugin to import CSS files",
	"dist-tags": {
		"latest": "8.2.3"
	},
	"versions": {
		"8.2.0": {
			"name": "@brn/postcss-import",
			"version": "8.2.0",
			"description": "PostCSS plugin to import CSS files",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"import",
				"node modules",
				"npm"
			],
			"author": {
				"name": "Maxime Thirouin"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/postcss/postcss-import.git"
			},
			"files": [
				"index.js",
				"lib"
			],
			"dependencies": {
				"object-assign": "^4.0.1",
				"postcss": "^5.0.14",
				"postcss-value-parser": "^3.2.3",
				"promise-each": "^2.2.0",
				"read-cache": "^1.0.0",
				"resolve": "^1.1.7"
			},
			"devDependencies": {
				"ava": "^0.16.0",
				"eslint": "^1.10.3",
				"eslint-config-i-am-meticulous": "^2.0.0",
				"npmpub": "^3.0.1",
				"postcss-scss": "^0.1.3"
			},
			"jspm": {
				"name": "postcss-import",
				"main": "index.js",
				"browser": {
					"./lib/load-content": "@empty",
					"./lib/resolve-id": "@empty"
				}
			},
			"scripts": {
				"lint": "eslint --fix .",
				"pretest": "npm run lint",
				"test": "ava",
				"release": "npmpub"
			},
			"eslintConfig": {
				"extends": "eslint-config-i-am-meticulous/es5"
			},
			"gitHead": "b89222fbd7133ba51258350f448c2aa568bb29da",
			"bugs": {
				"url": "https://github.com/postcss/postcss-import/issues"
			},
			"homepage": "https://github.com/postcss/postcss-import#readme",
			"_id": "@brn/postcss-import@8.2.0",
			"_shasum": "fdca885bc52e118b10043e99923312c988668a20",
			"_from": ".",
			"_npmVersion": "3.10.3",
			"_nodeVersion": "6.6.0",
			"_npmUser": {
				"name": "brn",
				"email": "dobaw20@gmail.com"
			},
			"dist": {
				"shasum": "fdca885bc52e118b10043e99923312c988668a20",
				"tarball": "https://registry.npmjs.org/@brn/postcss-import/-/postcss-import-8.2.0.tgz",
				"integrity": "sha512-qMG5ZDOakeHOJ8TGE/UTv58xVf/7SV2P1vHxwBjPB/fRqa89tKhnChQtCUFarkypauB/X3v8Aouyg2PaqEAg3Q==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQD4Csab6cpDOZeq5usQP24B0usZqHJp5rmXpXIsnGCeNgIgV6eHe8GRrJbubnDDvxOh6fAlOGrV/qkjcf2swyzOyVU="
					}
				]
			},
			"maintainers": [
				{
					"name": "brn",
					"email": "dobaw20@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "packages-18-east.internal.npmjs.com",
				"tmp": "tmp/postcss-import-8.2.0.tgz_1479099300619_0.3469154890626669"
			}
		},
		"8.2.1": {
			"name": "@brn/postcss-import",
			"version": "8.2.1",
			"description": "PostCSS plugin to import CSS files",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"import",
				"node modules",
				"npm"
			],
			"author": {
				"name": "Maxime Thirouin"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/postcss/postcss-import.git"
			},
			"files": [
				"index.js",
				"lib"
			],
			"dependencies": {
				"object-assign": "^4.0.1",
				"postcss": "^5.0.14",
				"postcss-value-parser": "^3.2.3",
				"promise-each": "^2.2.0",
				"read-cache": "^1.0.0",
				"resolve": "^1.1.7"
			},
			"devDependencies": {
				"ava": "^0.16.0",
				"eslint": "^1.10.3",
				"eslint-config-i-am-meticulous": "^2.0.0",
				"npmpub": "^3.0.1",
				"postcss-scss": "^0.1.3"
			},
			"jspm": {
				"name": "postcss-import",
				"main": "index.js",
				"browser": {
					"./lib/load-content": "@empty",
					"./lib/resolve-id": "@empty"
				}
			},
			"scripts": {
				"lint": "eslint --fix .",
				"pretest": "npm run lint",
				"test": "ava",
				"release": "npmpub"
			},
			"eslintConfig": {
				"extends": "eslint-config-i-am-meticulous/es5"
			},
			"gitHead": "0cf36eca4251d68324d2623f39d079017839ed11",
			"bugs": {
				"url": "https://github.com/postcss/postcss-import/issues"
			},
			"homepage": "https://github.com/postcss/postcss-import#readme",
			"_id": "@brn/postcss-import@8.2.1",
			"_shasum": "7e9783f82e3dcec8eb6a9e83ad162d231b5c44dc",
			"_from": ".",
			"_npmVersion": "3.10.3",
			"_nodeVersion": "6.6.0",
			"_npmUser": {
				"name": "brn",
				"email": "dobaw20@gmail.com"
			},
			"dist": {
				"shasum": "7e9783f82e3dcec8eb6a9e83ad162d231b5c44dc",
				"tarball": "https://registry.npmjs.org/@brn/postcss-import/-/postcss-import-8.2.1.tgz",
				"integrity": "sha512-T5FegCVooCzX6YLZ4hrzGG6BUetu8A5evxK1kWBTCNbNXmGz/9k8KwB14G5F4fH/a5Z8c58iJNZamzeAimTQtQ==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIHTi+np9CceMPUSS4za3waY2xIBb+UDzpuubU76Dq/c/AiAPJ5Koy87Ptn6yKqxIgNFJ7XGo1Iw9Yw7r+lxZx8WviA=="
					}
				]
			},
			"maintainers": [
				{
					"name": "brn",
					"email": "dobaw20@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "packages-12-west.internal.npmjs.com",
				"tmp": "tmp/postcss-import-8.2.1.tgz_1479100881706_0.5270229084417224"
			}
		},
		"8.2.2": {
			"name": "@brn/postcss-import",
			"version": "8.2.2",
			"description": "PostCSS plugin to import CSS files",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"import",
				"node modules",
				"npm"
			],
			"author": {
				"name": "Maxime Thirouin"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/postcss/postcss-import.git"
			},
			"files": [
				"index.js",
				"lib"
			],
			"dependencies": {
				"object-assign": "^4.0.1",
				"postcss": "^5.0.14",
				"postcss-value-parser": "^3.2.3",
				"promise-each": "^2.2.0",
				"read-cache": "^1.0.0",
				"resolve": "^1.1.7"
			},
			"devDependencies": {
				"ava": "^0.16.0",
				"eslint": "^1.10.3",
				"eslint-config-i-am-meticulous": "^2.0.0",
				"npmpub": "^3.0.1",
				"postcss-scss": "^0.1.3"
			},
			"jspm": {
				"name": "postcss-import",
				"main": "index.js",
				"browser": {
					"./lib/load-content": "@empty",
					"./lib/resolve-id": "@empty"
				}
			},
			"scripts": {
				"lint": "eslint --fix .",
				"pretest": "npm run lint",
				"test": "ava",
				"release": "npmpub"
			},
			"eslintConfig": {
				"extends": "eslint-config-i-am-meticulous/es5"
			},
			"gitHead": "b89222fbd7133ba51258350f448c2aa568bb29da",
			"bugs": {
				"url": "https://github.com/postcss/postcss-import/issues"
			},
			"homepage": "https://github.com/postcss/postcss-import#readme",
			"_id": "@brn/postcss-import@8.2.2",
			"_shasum": "7b4ba6030cf0fa155d20df355241155c81365e54",
			"_from": ".",
			"_npmVersion": "3.10.3",
			"_nodeVersion": "6.6.0",
			"_npmUser": {
				"name": "brn",
				"email": "dobaw20@gmail.com"
			},
			"dist": {
				"shasum": "7b4ba6030cf0fa155d20df355241155c81365e54",
				"tarball": "https://registry.npmjs.org/@brn/postcss-import/-/postcss-import-8.2.2.tgz",
				"integrity": "sha512-sg0rKDAtoHZ/Ci2/BpyY3wIfDKLM0VqQXXipOLXM0nP/Sqwff829HJNlmGGC1szXX/Jhwams7Lzjw9IukD1S6Q==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCICfjy4P5wynDyfASJA0UEWMPbMWMeVD+CqS/KchXfXVEAiEA62xSw4EW8L/ba9lPCNxNFMv0AnvaLTBW96B0NOM3GSo="
					}
				]
			},
			"maintainers": [
				{
					"name": "brn",
					"email": "dobaw20@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "packages-12-west.internal.npmjs.com",
				"tmp": "tmp/postcss-import-8.2.2.tgz_1479101080608_0.1655277512036264"
			}
		},
		"8.2.3": {
			"name": "@brn/postcss-import",
			"version": "8.2.3",
			"description": "PostCSS plugin to import CSS files",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"import",
				"node modules",
				"npm"
			],
			"author": {
				"name": "Maxime Thirouin"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/postcss/postcss-import.git"
			},
			"files": [
				"index.js",
				"lib"
			],
			"dependencies": {
				"object-assign": "^4.0.1",
				"postcss": "^5.0.14",
				"postcss-value-parser": "^3.2.3",
				"promise-each": "^2.2.0",
				"read-cache": "^1.0.0",
				"resolve": "^1.1.7"
			},
			"devDependencies": {
				"ava": "^0.16.0",
				"eslint": "^1.10.3",
				"eslint-config-i-am-meticulous": "^2.0.0",
				"npmpub": "^3.0.1",
				"postcss-scss": "^0.1.3"
			},
			"jspm": {
				"name": "postcss-import",
				"main": "index.js",
				"browser": {
					"./lib/load-content": "@empty",
					"./lib/resolve-id": "@empty"
				}
			},
			"scripts": {
				"lint": "eslint --fix .",
				"pretest": "npm run lint",
				"test": "ava",
				"release": "npmpub"
			},
			"eslintConfig": {
				"extends": "eslint-config-i-am-meticulous/es5"
			},
			"gitHead": "b89222fbd7133ba51258350f448c2aa568bb29da",
			"bugs": {
				"url": "https://github.com/postcss/postcss-import/issues"
			},
			"homepage": "https://github.com/postcss/postcss-import#readme",
			"_id": "@brn/postcss-import@8.2.3",
			"_shasum": "6a9dcb0442742f03c56a0c282436286629d05369",
			"_from": ".",
			"_npmVersion": "3.10.3",
			"_nodeVersion": "6.6.0",
			"_npmUser": {
				"name": "brn",
				"email": "dobaw20@gmail.com"
			},
			"dist": {
				"shasum": "6a9dcb0442742f03c56a0c282436286629d05369",
				"tarball": "https://registry.npmjs.org/@brn/postcss-import/-/postcss-import-8.2.3.tgz",
				"integrity": "sha512-jLeTVHjdIR5/hWEyArVtL0OGdMOaOTwRz4o7aomagJ6h5w791jkpj9fOj0pjdBSGbion04BOOjRUoiNV/fJvcw==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQD5V8759XtN5wB1cIoSaxivh3zEYFwSnWJEgPkLcqbd9wIhANY9WUgGirQzuQmQQadoFbWTwNd6R0Chlm4b4jodUtmb"
					}
				]
			},
			"maintainers": [
				{
					"name": "brn",
					"email": "dobaw20@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "packages-18-east.internal.npmjs.com",
				"tmp": "tmp/postcss-import-8.2.3.tgz_1479101908621_0.5066251053940505"
			}
		}
	},
	"readme": "# postcss-import\n\n[![Unix Build status](https://img.shields.io/travis/postcss/postcss-import/master.svg?branch=master&label=unix%20build)](https://travis-ci.org/postcss/postcss-import)\n[![Windows Build status](https://img.shields.io/appveyor/ci/MoOx/postcss-import/master.svg?label=window%20build)](https://ci.appveyor.com/project/MoOx/postcss-import/branch/master)\n[![Version](https://img.shields.io/npm/v/postcss-import.svg)](https://github.com/postcss/postcss-import/blob/master/CHANGELOG.md)\n\n> [PostCSS](https://github.com/postcss/postcss) plugin to transform `@import`\nrules by inlining content.\n\nThis plugin can consume local files, node modules or web_modules.\nTo resolve path of an `@import` rule, it can look into root directory\n(by default `process.cwd()`), `web_modules`, `node_modules`\nor local modules.\n_When importing a module, it will look for `index.css` or file referenced in\n`package.json` in the `style` or `main` fields._\nYou can also provide manually multiples paths where to look at.\n\n**Notes:**\n\n- **This plugin should probably be used as the first plugin of your list.\nThis way, other plugins will work on the AST as if there were only a single file\nto process, and will probably work as you can expect**.\n- This plugin works great with\n[postcss-url](https://github.com/postcss/postcss-url) plugin,\nwhich will allow you to adjust assets `url()` (or even inline them) after\ninlining imported files.\n- In order to optimize output, **this plugin will only import a file once** on\na given scope (root, media query...).\nTests are made from the path & the content of imported files (using a hash\ntable).\nIf this behavior is not what you want, look at `skipDuplicates` option\n- **If you are looking for glob, or sass like imports (prefixed partials)**,\nplease look at\n[postcss-easy-import](https://github.com/trysound/postcss-easy-import)\n(which use this plugin under the hood).\n- **This plugin attempts to follow the CSS `@import` spec**; `@import`\n  statements must precede all other statements (besides `@charset`).\n\n## Installation\n\n```console\n$ npm install postcss-import\n```\n\n## Usage\n\nIf your stylesheets are not in the same place where you run postcss\n(`process.cwd()`), you will need to use `from` option to make relative imports\nwork from input dirname.\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar atImport = require(\"postcss-import\")\n\n// css to be processed\nvar css = fs.readFileSync(\"css/input.css\", \"utf8\")\n\n// process css\npostcss()\n  .use(atImport())\n  .process(css, {\n    // `from` option is required so relative import can work from input dirname\n    from: \"css/input.css\"\n  })\n  .then(function (result) {\n    var output = result.css\n\n    console.log(output)\n  })\n```\n\nUsing this `input.css`:\n\n```css\n/* can consume `node_modules`, `web_modules` or local modules */\n@import \"cssrecipes-defaults\"; /* == @import \"./node_modules/cssrecipes-defaults/index.css\"; */\n@import \"normalize.css\"; /* == @import \"./node_modules/normalize.css/normalize.css\"; */\n\n@import \"css/foo.css\"; /* relative to stylesheets/ according to `from` option above */\n\n@import \"css/bar.css\" (min-width: 25em);\n\nbody {\n  background: black;\n}\n```\n\nwill give you:\n\n```css\n/* ... content of ./node_modules/cssrecipes-defaults/index.css */\n/* ... content of ./node_modules/normalize.css/normalize.css */\n\n/* ... content of foo.css */\n\n@media (min-width: 25em) {\n/* ... content of bar.css */\n}\n\nbody {\n  background: black;\n}\n```\n\nCheckout [tests](test) for more examples.\n\n### Options\n\n#### `root`\n\nType: `String`  \nDefault: `process.cwd()` or _dirname of\n[the postcss `from`](https://github.com/postcss/postcss#node-source)_\n\nDefine the root where to resolve path (eg: place where `node_modules` are).\nShould not be used that much.  \n_Note: nested `@import` will additionally benefit of the relative dirname of\nimported files._\n\n#### `path`\n\nType: `String|Array`  \nDefault: `[]`\n\nA string or an array of paths in where to look for files.\n\n#### `transform`\n\nType: `Function`  \nDefault: `null`\n\nA function to transform the content of imported files. Take one argument (file\n  content) and should return the modified content or a resolved promise with it.\n`undefined` result will be skipped.\n\n```js\ntransform: function(css) {\n  return postcss([somePlugin]).process(css).then(function(result) {\n    return result.css;\n  });\n}\n```\n\n#### `plugins`\n\nType: `Array`  \nDefault: `undefined`\n\nAn array of plugins to be applied on each imported files.\n\n#### `onImport`\n\nType: `Function`  \nDefault: `null`\n\nFunction called after the import process. Take one argument (array of imported\nfiles).\n\n#### `resolve`\n\nType: `Function`  \nDefault: `null`\n\nYou can overwrite the default path resolving way by setting this option.\nThis function gets `(id, basedir, importOptions)` arguments and returns full\npath, array of paths or promise resolving paths.\nYou can use [resolve](https://github.com/substack/node-resolve) for that.\n\n#### `load`\n\nType: `Function`  \nDefault: null\n\nYou can overwrite the default loading way by setting this option.\nThis function gets `(filename, importOptions)` arguments and returns content or\npromised content.\n\n#### `skipDuplicates`\n\nType: `Boolean`  \nDefault: `true`\n\nBy default, similar files (based on the same content) are being skipped.\nIt's to optimize output and skip similar files like `normalize.css` for example.\nIf this behavior is not what you want, just set this option to `false` to\ndisable it.\n\n#### `addDependencyTo`\n\nType: `Object`  \nDefault: null\n\nAn object with `addDependency()` method, taking file path as an argument.\nCalled whenever a file is imported.\nYou can use it for hot-reloading in webpack `postcss-loader` like this:\n\n```js\npostcss: function(webpack) {\n  return [\n    require('postcss-import')({\n      addDependencyTo: webpack\n      /* Is equivalent to\n      onImport: function (files) {\n        files.forEach(this.addDependency)\n      }.bind(webpack)\n      */\n    })\n  ]\n}\n```\n\n#### Example with some options\n\n```js\nvar postcss = require(\"postcss\")\nvar atImport = require(\"postcss-import\")\n\npostcss()\n  .use(atImport({\n    path: [\"src/css\"],\n    transform: require(\"css-whitespace\")\n  }))\n  .process(cssString)\n  .then(function (result) {\n    var css = result.css\n  })\n```\n\n---\n\n## CONTRIBUTING\n\n* ⇄ Pull requests and ★ Stars are always welcome.\n* For bugs and feature requests, please create an issue.\n* Pull requests must be accompanied by passing automated tests (`$ npm test`).\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
	"maintainers": [
		{
			"name": "brn",
			"email": "dobaw20@gmail.com"
		}
	],
	"time": {
		"modified": "2022-06-12T15:30:27.959Z",
		"created": "2016-11-14T04:55:02.499Z",
		"8.2.0": "2016-11-14T04:55:02.499Z",
		"8.2.1": "2016-11-14T05:21:21.944Z",
		"8.2.2": "2016-11-14T05:24:40.850Z",
		"8.2.3": "2016-11-14T05:38:30.438Z"
	},
	"homepage": "https://github.com/postcss/postcss-import#readme",
	"keywords": [
		"css",
		"postcss",
		"postcss-plugin",
		"import",
		"node modules",
		"npm"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/postcss/postcss-import.git"
	},
	"author": {
		"name": "Maxime Thirouin"
	},
	"bugs": {
		"url": "https://github.com/postcss/postcss-import/issues"
	},
	"license": "MIT",
	"readmeFilename": "README.md",
	"_downloads": 8
}
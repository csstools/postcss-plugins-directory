{
	"_id": "@chariz/postcss-clean",
	"name": "@chariz/postcss-clean",
	"dist-tags": {
		"latest": "1.2.3"
	},
	"versions": {
		"1.2.3": {
			"name": "@chariz/postcss-clean",
			"version": "1.2.3",
			"description": "PostCSS plugin to minify CSS with clean-css",
			"author": {
				"name": "Leo Di Donato",
				"email": "leodidonato@gmail.com",
				"url": "http://git.io/leodido"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/chariz/postcss-clean.git"
			},
			"bugs": {
				"url": "https://github.com/chariz/postcss-clean/issues"
			},
			"homepage": "https://github.com/chariz/postcss-clean",
			"main": "index.js",
			"module": "index.m.js",
			"types": "index.d.ts",
			"dependencies": {
				"clean-css": "^5.x",
				"postcss": "^8.x"
			},
			"devDependencies": {
				"@babel/eslint-parser": "^7.16.3",
				"@rollup/plugin-buble": "^0.21.3",
				"ava": "^3.15.0",
				"buble": "^0.20.0",
				"conventional-changelog-cli": "^2.1",
				"coveralls": "^3.1",
				"eslint": "^8.3.0",
				"eslint-config-defaults": "^9.0",
				"nyc": "^15.1",
				"rollup": "^2.60.1"
			},
			"scripts": {
				"clean": "rm -f $npm_package_main *.log && rm -rf coverage .nyc_output",
				"lint": "eslint $npm_package_jsnext:main test.js rollup.config.js",
				"develop": "BUILD_ENV=dev rollup -c rollup.config.js",
				"distrib": "rollup -c rollup.config.js",
				"pretest": "npm run lint && npm run develop",
				"test": "nyc ava --verbose --serial",
				"coverage": "nyc report --cache --reporter=text-summary --reporter=lcov",
				"report": "nyc report --reporter=html",
				"prepublish": "npm run distrib",
				"changelog": "conventional-changelog -p eslint -i CHANGELOG.md -s",
				"changelog:edit": "$(git var GIT_EDITOR) CHANGELOG.md",
				"preversion": "npm run distrib",
				"version": "npm run changelog && npm run changelog:edit && git add CHANGELOG.md",
				"postversion": "git push && git push --tags"
			},
			"eslintConfig": {
				"extends": "eslint-config-defaults",
				"parser": "@babel/eslint-parser",
				"parserOptions": {
					"ecmaVersion": 6,
					"sourceType": "module"
				},
				"globals": {
					"Promise": true
				},
				"env": {
					"es6": true
				}
			},
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"clean-css",
				"cleancss",
				"minifier",
				"minify",
				"minification",
				"optimisation",
				"optimization",
				"optimise",
				"optimize",
				"compress",
				"compression"
			],
			"gitHead": "a69e2ccade571854e6b0a8d126c5e4885cd60b61",
			"_id": "@chariz/postcss-clean@1.2.3",
			"_nodeVersion": "20.2.0",
			"_npmVersion": "9.6.6",
			"dist": {
				"integrity": "sha512-23IR6D5etgJNJKctocuDGzZOGwYVZfN1ZNjsEPLw2oeK/Y1VBdlsy0aOTHxvreM50cE2VFMSASWBKVYacUlYwg==",
				"shasum": "9eed4c1ab1b3d995ba01789adfb7046a2dbfc8bc",
				"tarball": "https://registry.npmjs.org/@chariz/postcss-clean/-/postcss-clean-1.2.3.tgz",
				"fileCount": 12,
				"unpackedSize": 20502,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCICXn5ndgQ3/MM0KO+ojWuISBrO3HUsANiFa1pTWYVq/wAiEAtlmOxJgkw8JrzlHa9zZ75x1Kg6LniF0qAU8YEHWJMeA="
					}
				]
			},
			"_npmUser": {
				"name": "kirb",
				"email": "adam@hbang.ws"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "aarnavtale",
					"email": "aarnav@tale.me"
				},
				{
					"name": "kirb",
					"email": "adam@hbang.ws"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-clean_1.2.3_1686724014621_0.8819273707086519"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2023-06-14T06:26:54.550Z",
		"1.2.3": "2023-06-14T06:26:54.776Z",
		"modified": "2023-06-14T06:26:54.971Z"
	},
	"maintainers": [
		{
			"name": "aarnavtale",
			"email": "aarnav@tale.me"
		},
		{
			"name": "kirb",
			"email": "adam@hbang.ws"
		}
	],
	"description": "PostCSS plugin to minify CSS with clean-css",
	"homepage": "https://github.com/chariz/postcss-clean",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"clean-css",
		"cleancss",
		"minifier",
		"minify",
		"minification",
		"optimisation",
		"optimization",
		"optimise",
		"optimize",
		"compress",
		"compression"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/chariz/postcss-clean.git"
	},
	"author": {
		"name": "Leo Di Donato",
		"email": "leodidonato@gmail.com",
		"url": "http://git.io/leodido"
	},
	"bugs": {
		"url": "https://github.com/chariz/postcss-clean/issues"
	},
	"license": "MIT",
	"readme": "# [postcss][postcss]-clean ![GitHub Workflow Status (branch)](https://img.shields.io/github/workflow/status/leodido/postcss-clean/build/master?style=flat-square) [![NPM](https://img.shields.io/npm/v/postcss-clean.svg?style=flat-square)][npm] [![Coveralls branch](https://img.shields.io/coveralls/leodido/postcss-clean/master.svg?style=flat-square)](https://coveralls.io/r/leodido/postcss-clean?branch=master) [![NPM Monthly Downloads](https://img.shields.io/npm/dm/postcss-clean.svg?style=flat-square)][npm]\n\n> PostCss plugin to minify your CSS\n\nCompression will be handled by **[clean-css][clean-css]**, which according to [this benchmark](http://goalsmashers.github.io/css-minification-benchmark) is one of the top (probably the best) libraries for minifying CSS.\n\n## Install\n\nWith [npm](https://npmjs.org/package/postcss-clean) do:\n\n```console\nnpm install postcss-clean --save\n```\n\n## Example\n\n### Input 1\n\n```css\n.try {\n  color: #607d8b;\n  width: 32px;\n}\n```\n\n### Output 1\n\n```css\n.try{color:#607d8b;width:32px}\n```\n\n### Input 2\n\n```css\n:host {\n  display: block;\n}\n\n:host ::content {\n  & > * {\n    color: var(--primary-color);\n  }\n}\n```\n\n### Output 2\n\n```css\n:host{display:block}:host ::content>*{color:var(--my-color)}\n```\n\n**Note** this example assumes you combined postcss-clean with other plugins (e.g. [postcss-nesting][postcss-nesting]).\n\n## API\n\n### `clean([options])`\n\nNote that **postcss-clean** is an asynchronous processor. It cannot be used like this:\n\n```javascript\nvar out = postcss([ clean() ]).process(css).css;\nconsole.log(out)\n```\n\nInstead make sure your runner uses the async APIs:\n\n```javascript\npostcss([ clean() ]).process(css).then(function(out) {\n    console.log(out.css);\n});\n```\n\n#### options\n\nIt simply proxies the [clean-css][clean-css] options. See the complete list of options [here][clean-css-opts].\n\n## Usage\n\nSee the [PostCSS documentation](https://github.com/postcss/postcss#usage) for examples for your environment.\n\n## Contributing\n\nPull requests are welcome.\n\n## License\n\nMIT Â© Leonardo Di Donato\n\n---\n\n[![Analytics](https://ga-beacon.appspot.com/UA-49657176-1/postcss-clean?flat)](https://github.com/igrigorik/ga-beacon)\n\n[clean-css]:       http://github.com/jakubpawlowicz/clean-css\n[clean-css-opts]:  https://github.com/jakubpawlowicz/clean-css/tree/3.4#how-to-use-clean-css-api\n[ci]:              https://travis-ci.org/leodido/postcss-clean\n[deps]:            https://gemnasium.com/leodido/postcss-clean\n[postcss]:         https://github.com/postcss/postcss\n[postcss-nesting]: https://github.com/jonathantneal/postcss-nesting\n[npm]:             https://www.npmjs.com/package/postcss-clean\n",
	"readmeFilename": "README.md",
	"_downloads": 331
}
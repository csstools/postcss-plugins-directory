{
	"_id": "postcss-assemble-grid",
	"_rev": "3-e9c7647dc928ecc9a1ce92b1360f67fc",
	"name": "postcss-assemble-grid",
	"description": "A PostCSS plugin for easily creating flexbox grids.",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-assemble-grid",
			"version": "1.0.0",
			"description": "A PostCSS plugin for easily creating flexbox grids.",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"grid",
				"grids",
				"flexbox"
			],
			"main": "index.js",
			"scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			},
			"author": {
				"name": "Luke Larsen",
				"email": "luke@lukelarsen.com"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/lukelarsen/postcss-assemble-grid.git"
			},
			"license": "MIT",
			"dependencies": {
				"postcss": "^5.0.11"
			},
			"gitHead": "2507b98b0f7d41cfa74567317c1cafc4a489aef7",
			"bugs": {
				"url": "https://github.com/lukelarsen/postcss-assemble-grid/issues"
			},
			"homepage": "https://github.com/lukelarsen/postcss-assemble-grid#readme",
			"_id": "postcss-assemble-grid@1.0.0",
			"_shasum": "eaea8abfa654bee7c7daa58bd48b28e0f0c024f4",
			"_from": ".",
			"_npmVersion": "2.13.5",
			"_nodeVersion": "0.12.2",
			"_npmUser": {
				"name": "lukelarsen",
				"email": "luke@lukelarsen.com"
			},
			"dist": {
				"shasum": "eaea8abfa654bee7c7daa58bd48b28e0f0c024f4",
				"tarball": "https://registry.npmjs.org/postcss-assemble-grid/-/postcss-assemble-grid-1.0.0.tgz",
				"integrity": "sha512-3U1amY2OzoErFL7vjpO9lFq+wxW0RiE6XpOVo7eb96qT0ySLeIyuXDRjnXI8RWHSLSjZJVTKjG6Ze0Eg9OAMWg==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDPP2fSbmc+89P4Q4+d6i2J6lNnszmfDKxuHcOaZPszewIhALqUmGkbkGAJvZibs7s9jPcv8JtBglbf4WZacViE/bFv"
					}
				]
			},
			"maintainers": [
				{
					"name": "lukelarsen",
					"email": "luke@lukelarsen.com"
				}
			]
		}
	},
	"readme": "[PostCSS]:                 https://github.com/postcss/postcss\n[PostCSS Custom Media]:    https://github.com/postcss/postcss-custom-media\n[Demo]:                    https://jsfiddle.net/lukelarsen/brf1xky7/\n\n# PostCSS Assemble Grid\n\n<img align=\"right\" width=\"135\" height=\"95\"\n     title=\"Philosopherâ€™s stone, logo of PostCSS\"\n     src=\"http://postcss.github.io/postcss/logo-leftp.png\">\n\n[PostCSS] plugin for easily creating flexbox grids.\n\n## Example\n```html\n<body>\n    <div class=\"frame\">\n        <div class=\"frame-cell  frame-cell--sidebar\">\n            <div class=\"sidebar\">\n                Sidebar\n            </div>\n        </div>\n        <div class=\"frame-cell\">\n            <div class=\"grid\">\n                <div class=\"grid__cell\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Est fugiat, nam odit incidunt ab vitae explicabo hic, placeat, aliquid dolorem nisi quisquam omnis nulla eum maxime ipsum magnam non. Nam.</p>\n                </div>\n                <div class=\"grid__cell\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Corrupti harum quia nostrum laboriosam perferendis quos aliquid quae voluptate cupiditate sed! Quaerat nisi voluptatem corporis expedita similique placeat itaque voluptatibus eum?</p>\n                </div>\n                <div class=\"grid__cell  grid__cell--half\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Pariatur autem magnam illum amet odit quasi dolore. Vero reprehenderit odit magni, quis totam aut officiis dignissimos ad, ut minus dicta perspiciatis.</p>\n                </div>\n                <div class=\"grid__cell\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci eos optio ea maxime illum facilis rerum non ex tempora, voluptatem excepturi, in deserunt repellat nostrum distinctio praesentium tempore porro quam.</p>\n                </div>\n                <div class=\"grid__cell\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Est fugiat, nam odit incidunt ab vitae explicabo hic, placeat, aliquid dolorem nisi quisquam omnis nulla eum maxime ipsum magnam non. Nam.</p>\n                </div>\n                <div class=\"grid__cell\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Corrupti harum quia nostrum laboriosam perferendis quos aliquid quae voluptate cupiditate sed! Quaerat nisi voluptatem corporis expedita similique placeat itaque voluptatibus eum?</p>\n                </div>\n                <div class=\"grid__cell\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Pariatur autem magnam illum amet odit quasi dolore. Vero reprehenderit odit magni, quis totam aut officiis dignissimos ad, ut minus dicta perspiciatis.</p>\n                </div>\n                <div class=\"grid__cell\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci eos optio ea maxime illum facilis rerum non ex tempora, voluptatem excepturi, in deserunt repellat nostrum distinctio praesentium tempore porro quam.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n```\n\n```css\n/* For example only. */\nbody{\n    margin: 0;\n    padding: 0;\n}\n\n/* Using border-box on the grid is required.\n   You don't have to apply it to everything.\n   You could just apply it to the grid markup. */\n*,\n*:before,\n*:after {\n    box-sizing: border-box;\n}\n\n/* Plugin Usage */\n.frame{\n    assemble-grid: fit 30px;\n}\n\n.frame-cell--sidebar{\n    assemble-cell: 350px;\n}\n\n.grid{\n    assemble-grid: 1/4 30px;\n}\n\n@media all and (max-width: 750px) and (min-width: 200px) {\n    .grid{\n        assemble-mq-grid: 1/1 20px;\n    }\n}\n\n.grid__cell--half{\n    assemble-cell: 1/2 bottom;\n}\n\n/* For example only. */\n.sidebar{\n    width: 100%;\n    background-color: red;\n}\n\n.grid__cell p{\n    margin: 0;\n    background-color: blue;\n}\n```\n\nWill output:\n\n```css\n/* For example only. */\nbody{\n    margin: 0;\n    padding: 0;\n}\n\n/* Using border-box on the grid is required.\n   You don't have to apply it to everything.\n   You could just apply it to the grid markup. */\n*,\n*:before,\n*:after {\n    box-sizing: border-box;\n}\n\n/* Plugin Usage */\n.frame{\n    display: flex;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    flex-wrap: wrap;\n    margin-left: -30px;\n}\n.frame > *{\n    display: flex;\n    flex: 1;\n    margin-bottom: 30px;\n    padding-left: 30px;\n}\n\n.frame-cell--sidebar{\n    flex: 0 0 350px;\n}\n\n.grid{\n    display: flex;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    flex-wrap: wrap;\n    margin-left: -30px;\n}\n\n.grid > *{\n    display: flex;\n    flex: 0 0 25%;\n    margin-bottom: 30px;\n    padding-left: 30px;\n}\n\n@media all and (max-width: 750px) and (min-width: 200px) {\n    .grid{\n        margin-left: -20px;\n    }\n    .grid > *{\n        flex: 0 0 100% !important;\n        margin-bottom: 20px;\n        padding-left: 20px;\n    }\n}\n\n.grid__cell--half{\n    flex: 0 0 50%;\n    align-self: flex-end;\n}\n\n/* For example only. */\n.sidebar{\n    width: 100%;\n    background-color: red;\n}\n\n.grid__cell p{\n    margin: 0;\n    background-color: blue;\n}\n```\n\n[Demo]\n\n## Usage\n\n```\nnpm install postcss-assemble-grid --save-dev\n```\n\n### Gulp\n```js\nvar postcss = require('gulp-postcss');\nvar assembleGrid = require('postcss-assemble-grid');\n\ngulp.task('css', function () {\n    var processors = [\n        assembleGrid\n    ];\n    return gulp.src('./src/*.css')\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('./dest'));\n});\n```\n\n### Requirements\nThe use of Assemble Grid requires that box-sizing: border-box; be set on the grid cells. It is common to just apply this to everything with:\n```css\n*,\n*:before,\n*:after {\n    box-sizing: border-box;\n}\n```\n\nYou can apply it to only the grid if you don't want to apply it to everything in your project. You do this by setting the box-sizing option to true when using assemble-grid:\nSee more information under 'Options'.\n```css\n.grid{\n    assemble-grid: 1/4 30px _ _ true;\n}\n```\n\n### Options\n#### *assemble-grid*\nassemble-grid will set options for all the cells in a grid at once. It should always be used when using Assemble Grid. It builds the base for your grid.\nOptions for 'assemble-grid' are as follows:<br>\nassemble-grid: *Cell Width*, *Gutter Width*, *Grid Width/Center*, *Cell Alignment*, *Box Sizing*\n\n##### Cell Width (required)\nThis will set the width of all the cells in your grid. Cell Width can be any of the following:\n- Fraction (ex. 1/4)\n- Number Value (ex. 320px)\n- 'fit' (This will fit all cells in a single row.)\n\n##### Gutter Width (optional)\nThis will set the size of the gutters in your grid. Gutter Width can only be:\n- Number Value (ex 30px)\n\n##### Grid Width/Center (optional)\nThis will give the grid a set width and center it. Grid Width/Center can only be:\n- Number Value (ex 850px)\n\n##### Cell Alignment (optional)\nThis will set the alignment of each cell in the grid. Cell Alignment can be any of the following:\n- top\n- bottom\n- center\n\n##### Box Sizing (optional)\nThis will add the needed box-sizing: border-box; to each grid cell. Many people prefer this to be included on everyhting with *. If you do not use this on everything you must set this to true. Box Sizing can be:\n- true\n- false\n\n##### Not setting some options\nIf you would like to set an option but leave the option before it blank you can do so like this:\nassemble-grid: 1/4 _ 800px;\nThis would set a grid cell width of 25%, no gutters (the '_'), and a fixed grid width of 800px.\n\n<br><br>\n#### *assemble-cell*\nassemble-cell will allow you to change the behavior of a single grid cell. Let's say you used assemble-grid like this:\n```css\n.grid{\n    assemble-grid: 1/4 30px;\n}\n```\n\nThis makes all the cells in your grid 25% with 30px gutters. Now lets say you want one cell in that grid to be 1/2. On that cell add this:\n```css\n.grid-cell{\n    assemble-cell: 1/2;\n}\n```\n\nThis would override the 25% declaration from assemble-grid and make just this cell 50%.\n\nOptions for 'assemble-cell' are as follows:<br>\nassemble-cell: *Cell Width*, *Cell Alignment*\n\n##### Cell Width (optional)\nThis will set the width of only this cell. Cell Width can be any of the following:\n- Fraction (ex. 1/4)\n- Number Value (ex. 320px)\n\n##### Cell Alignment (optional)\nThis will set the alignment of only this cell. Cell Alignment can be any of the following:\n- top\n- bottom\n- center\n\n##### Both are optional?\nYes, both are optional but you will need at least one of these options when using assemble-cell.\n\n<br><br>\n#### *assemble-mq-grid*\nUsing assemble-mq-grid is for when you need to change the behavior of a grid in a media query. Instead of re-writing all the css for the grid we only override the parts that need changing.\nAssemble Grid leaves defining the media queries up to you. A great plugin for this is [PostCSS Custom Media].\nAfter you have defined a media query you can use it like this:\n\n```css\n@media all and (max-width: 1000px) and (min-width: 700px) {\n    .grid{\n        assemble-mq-grid: 1/2 20px;\n    }\n}\n```\n\nThis would change the grid to have 50% cell widths and 20px gutters within the given media query.\n\nOptions for 'assemble-mq-grid' are as follows:<br>\nassemble-mq-grid: *Cell Width*, *Gutter Width*, *Grid Width/Center*, *Cell Alignment*\n\n##### Cell Width (optional)\nThis will set the width of all the cells in your grid. Cell Width can be any of the following:\n- Fraction (ex. 1/4)\n- Number Value (ex. 320px)\n- 'fit' (This will fit all cells in a single row.)\n\n##### Gutter Width (optional)\nThis will set the size of the gutters in your grid. Gutter Width can only be:\n- Number Value (ex 30px)\n\n##### Grid Width/Center (optional)\nThis will give the grid a set width and center it. Grid Width/Center can only be:\n- Number Value (ex 850px)\n\n##### Cell Alignment (optional)\nThis will set the alignment of each cell in the grid. Cell Alignment can be an of the following:\n- top\n- bottom\n- center\n\n##### Everything is optional?\nYes, everything is optional but you will need at least one of these options when using assemble-mq-grid.\n\n##### What about assemble-mq-cell?\nWhat if you want to modifiy a single cell in a media query? When modifing a single cell have to override everything that assemble-cell generates so there is no need for a assemble-mq-cell. Just use assemble-cell within a media query and you are good to go.\n\n<br><br>\n#### Nesting\nNesting just works. You can next as many grids as you want. With a lot of grid systems you have to nest to achieve what you can probably do with assemble-cell. Check to see if you can accomplish what you need with asseble-cell before you start nesting.\nTo nest you just need to place another assemble-grid inside a single cell.\n\n<br><br>\n#### Extra Info\nWhile not a requirement it is recommended that when you are creating markup for your grids you only apply assemble-grid, assemble-cell, and assemble-mq-grid to a specific html tag. If you need to add style, such as background-color (or anything else), you should do that on a differnt tag withing your grid markup. This will help keep things organized and allow you to re-use your gird classes with out visual style getting in the way. Again, this is just advice. It is not required.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	"maintainers": [
		{
			"name": "lukelarsen",
			"email": "luke@lukelarsen.com"
		}
	],
	"time": {
		"modified": "2022-06-24T09:26:10.726Z",
		"created": "2015-12-01T19:40:05.344Z",
		"1.0.0": "2015-12-01T19:40:05.344Z"
	},
	"homepage": "https://github.com/lukelarsen/postcss-assemble-grid#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"grid",
		"grids",
		"flexbox"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/lukelarsen/postcss-assemble-grid.git"
	},
	"author": {
		"name": "Luke Larsen",
		"email": "luke@lukelarsen.com"
	},
	"bugs": {
		"url": "https://github.com/lukelarsen/postcss-assemble-grid/issues"
	},
	"license": "MIT",
	"readmeFilename": "README.md",
	"_downloads": 10
}
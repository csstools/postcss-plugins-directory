{
	"_id": "@startupjs/postcss-rem-to-pixel",
	"_rev": "9-eaa5d15ac213d1a00d12f29d792e6bc3",
	"name": "@startupjs/postcss-rem-to-pixel",
	"dist-tags": {
		"latest": "1004.1.2"
	},
	"versions": {
		"1004.1.2": {
			"name": "@startupjs/postcss-rem-to-pixel",
			"description": "Convert rem (root em) units to px units using PostCSS. Based on postcss-pxtorem.",
			"version": "1004.1.2",
			"publishConfig": {
				"access": "public"
			},
			"author": {
				"name": "cuth, jesstech"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/jesstech/postcss-rem-to-pixel.git"
			},
			"bugs": {
				"url": "https://github.com/jesstech/postcss-rem-to-pixel/issues"
			},
			"main": "index.js",
			"scripts": {
				"test": "jasmine-node spec"
			},
			"devDependencies": {
				"jasmine-node": "~1.11.0",
				"postcss-pxtorem": "^4.0.1"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": "^4.1.0",
				"postcss": "^5.2.10"
			},
			"gitHead": "a898a5d237349b51efa6e6305fa5c1ca80f33d2b",
			"homepage": "https://github.com/jesstech/postcss-rem-to-pixel#readme",
			"_id": "@startupjs/postcss-rem-to-pixel@1004.1.2",
			"_nodeVersion": "10.16.0",
			"_npmVersion": "6.9.0",
			"dist": {
				"integrity": "sha512-CFTkRQOIA+pCy54noGG0vxnIWPuve8d4jrytJLtSJ3p9j/Nezy6JGCcxUk02wkePaOpxZGlu8y6tPtX6B4jVTA==",
				"shasum": "b40f0875f6aa9d89ec776bfa6076417fd87fcc90",
				"tarball": "https://registry.npmjs.org/@startupjs/postcss-rem-to-pixel/-/postcss-rem-to-pixel-1004.1.2.tgz",
				"fileCount": 13,
				"unpackedSize": 24985,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd724nCRA9TVsSAnZWagAAwt8P/jjA3uugKu3JEubbF9sP\nEZ/uxv6nRf6l1PXTpLTuI4qE5bcpGDkiF+oeaJByRRxTGnooCWBTc6WMEuB0\nnNzhngSshuGcCwx64ce9rt+x14QP2hikQiFeQUItq1Ho0nCAvnVwKRsV/pOW\nMrDqv+Qvy/20qVQBld1s0hTbYMvp2wyk0nP6MBV/7JoAnPR6M6Ny4cgN09GE\n8Sc4vEYnCZzCvchPGxvGe1jR1VcRzRlYK/95wkwQllf43oc2D23iExH925R+\noHpTVllnLkw4HW/m8k86WemBgnAKkOq0v9lTzFPCcK0UnwvmQUIWVTUbQA5K\nXXUqPMBRV4Bp3a2gv6gAzyQa9UHSedIYdm2UdBqrRRNevQhTNe2LSJhuGE9s\negejqb1XJxefWRCuSkOtBnmtM3Krzg/VDgO5uZxuiM2OC5m2DEeCJR8XQfGB\nHFAIuo+WZ/cdghfiGd34YCJIs8zSatKAbAf0GKKTEj7nR6FSds76YUUP3qtJ\npqHoJdgWJTWdO8jION6LyV7IpD1DH+FOe0HJVSqhXQX/LR9hFeOfmnrGp+7k\n78Y2lXWBAGIczOaPY2cW38aWG4/4ed5tKx6qukxfNlTv6XrkVOMuj+vqrnCB\nx/Tzjp4uejKjTDuIYc6uH9zLIdL/u/2VUuhUajdRCyXAGmP9HAErPpCJVoXu\nWvqo\r\n=iLeB\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIDu79yhrOvQ4/Nyc7AbJvMWEPLyEeZF4ZSGWgjUoYxZWAiAPqHTAn73A8u5QOK4jzHfXYDaGNAfvh3P7OmszpjQ//g=="
					}
				]
			},
			"maintainers": [
				{
					"name": "maestro.sc",
					"email": "maestro.simf@gmail.com"
				},
				{
					"name": "fctsvirus",
					"email": "fctsvirus0k@gmail.com"
				},
				{
					"name": "zag2art",
					"email": "zag2art@gmail.com"
				},
				{
					"name": "ratik",
					"email": "serg.s.r@gmail.com"
				},
				{
					"name": "yska",
					"email": "pturchik@yandex.ru"
				},
				{
					"name": "cray0000",
					"email": "cray0000@gmail.com"
				}
			],
			"_npmUser": {
				"name": "yska",
				"email": "pturchik@yandex.ru"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-rem-to-pixel_1004.1.2_1575972390587_0.2520788649255197"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2019-12-10T10:06:30.362Z",
		"1004.1.2": "2019-12-10T10:06:30.762Z",
		"modified": "2022-04-07T02:19:04.008Z"
	},
	"maintainers": [
		{
			"email": "cray0000@gmail.com",
			"name": "cray0000"
		},
		{
			"email": "pturchik@yandex.ru",
			"name": "yska"
		},
		{
			"email": "zag2art@gmail.com",
			"name": "zag2art"
		},
		{
			"email": "fctsvirus0k@gmail.com",
			"name": "fctsvirus"
		},
		{
			"email": "maestro.simf@gmail.com",
			"name": "maestro.sc"
		},
		{
			"email": "ivan.lepkin@yandex.ru",
			"name": "byshock"
		}
	],
	"description": "Convert rem (root em) units to px units using PostCSS. Based on postcss-pxtorem.",
	"homepage": "https://github.com/jesstech/postcss-rem-to-pixel#readme",
	"keywords": [
		"css",
		"rem",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/jesstech/postcss-rem-to-pixel.git"
	},
	"author": {
		"name": "cuth, jesstech"
	},
	"bugs": {
		"url": "https://github.com/jesstech/postcss-rem-to-pixel/issues"
	},
	"license": "MIT",
	"readme": "# postcss-rem-to-pixel [![NPM version](https://badge.fury.io/js/postcss-rem-to-pixel.svg)](http://badge.fury.io/js/postcss-rem-to-pixel)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates px units from u units.\n\n## Install\n\n```shell\n$ npm install postcss-rem-to-pixel --save-dev\n```\n\n## Usage\n\nSometimes you need to include a third-party css file that uses u's.  Great pracitice!  Unless you can't afford to change your body font-size just for some vendor.  This script converts every u value to a px value from the properties you choose using a default font size of 8px.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 2u;\n    line-height: 1.2;\n    letter-spacing: 0.0625u;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 16px;\n    line-height: 1.2;\n    letter-spacing: 0.5px;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar remToPx = require('postcss-rem-to-pixel');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(remToPx(options)).process(css).css;\n\nfs.writeFile('main-px.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 8,\n    unitPrecision: 5,\n    propList: ['*'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minUnitValue: 0\n}\n```\n\n- `rootValue` (Number) The root element font size.\n- `unitPrecision` (Number) The decimal precision px units are allowed to use, floored (rounding down on half).\n- `propList` (Array) The properties that can change from u to px.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']`\n- `selectorBlackList` (Array) The selectors to ignore and leave as u.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) replaces rules containing u's instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow u to be converted in media queries.\n- `minUnitValue` (Number) Set the minimum u value to replace.\n\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar remToPx = require('postcss-rem-to-pixel');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        remToPx({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\n\n```css\n// `u` is converted to `px`\n.convert {\n    font-size: 1u; // converted to 16px\n}\n\n// `U`is ignored by `postcss-rem-to-pixel`\n.ignore {\n    border-width: 2U; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 9
}
{
	"_id": "postcss-svg-legacy",
	"name": "postcss-svg-legacy",
	"dist-tags": {
		"latest": "3.0.1"
	},
	"versions": {
		"3.0.1": {
			"name": "postcss-svg-legacy",
			"version": "3.0.1",
			"description": "Inline SVGs in CSS. Supports SVG Fragments, SVG Parameters.",
			"author": {
				"name": "Jonathan Neal",
				"email": "jonathantneal@hotmail.com"
			},
			"contributors": [
				{
					"name": "Pavel Gorlov",
					"email": "i@pavliko.com"
				},
				{
					"name": "Jonathan Neal",
					"email": "jonathantneal@hotmail.com"
				},
				{
					"name": "Alejandro Ponce",
					"email": "alejandropb46@gmail.com"
				}
			],
			"license": "CC0-1.0",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/alejandropb36/postcss-svg-legacy.git"
			},
			"homepage": "https://github.com/alejandropb36/postcss-svg-legacy#readme",
			"bugs": {
				"url": "https://github.com/alejandropb36/postcss-svg-legacy/issues"
			},
			"main": "index.js",
			"module": "index.mjs",
			"scripts": {
				"prepublish": "npm test",
				"pretest": "rollup -c .rollup.js --silent",
				"test": "npm run test:js && npm run test:tape",
				"test:js": "eslint src/*.js --cache --ignore-path .gitignore --quiet",
				"test:tape": "postcss-tape"
			},
			"engines": {
				"node": ">=6.0.0"
			},
			"dependencies": {
				"postcss": "7.0.6",
				"postcss-values-parser": "2.0.0",
				"svgo": "1.1.1",
				"xmldoc": "1.1.2"
			},
			"devDependencies": {
				"@babel/core": "^7.1.6",
				"@babel/plugin-syntax-dynamic-import": "^7.0.0",
				"@babel/preset-env": "^7.1.6",
				"babel-eslint": "^10.0.1",
				"eslint": "^5.9.0",
				"eslint-config-dev": "^2.0.0",
				"postcss-tape": "^3.0.0",
				"pre-commit": "^1.2.2",
				"rollup": "^0.67.3",
				"rollup-plugin-babel": "^4.0.3"
			},
			"eslintConfig": {
				"extends": "dev",
				"parser": "babel-eslint"
			},
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"svgs",
				"scalable",
				"vector",
				"graphic",
				"image",
				"img",
				"picture",
				"pic",
				"fragment",
				"identifier",
				"id",
				"hash",
				"url",
				"inline",
				"utf8",
				"base64",
				"custom",
				"properties",
				"property"
			],
			"gitHead": "a0a8df8d92fe0f4599550362eff49c63b556629a",
			"_id": "postcss-svg-legacy@3.0.1",
			"_nodeVersion": "14.17.6",
			"_npmVersion": "6.14.15",
			"dist": {
				"integrity": "sha512-gCiHAQKTgjHyLMqa8HKAYgIhN/Xle0KpgvO+wYviJhUDviDYTilpg8QHB60Zy9LfGGZaIaCT+wVnIgDNlhFvyA==",
				"shasum": "05998a8f1bee61ab098a152808a2fa764313a6fb",
				"tarball": "https://registry.npmjs.org/postcss-svg-legacy/-/postcss-svg-legacy-3.0.1.tgz",
				"fileCount": 8,
				"unpackedSize": 103400,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDb5CrTvXHzhicX7PAp6+4a9ue12gqumkUryA+3stsyTQIgE1VoxR378gHgOO/0sfZ40kXUOM/jL1sVkRFJZKZSc3U="
					}
				]
			},
			"_npmUser": {
				"name": "alejandropb36",
				"email": "alexponce36@hotmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "alejandropb36",
					"email": "alexponce36@hotmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-svg-legacy_3.0.1_1688667203709_0.7098813498674548"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2023-07-06T18:13:23.654Z",
		"3.0.1": "2023-07-06T18:13:23.861Z",
		"modified": "2023-07-06T18:13:24.038Z"
	},
	"maintainers": [
		{
			"name": "alejandropb36",
			"email": "alexponce36@hotmail.com"
		}
	],
	"description": "Inline SVGs in CSS. Supports SVG Fragments, SVG Parameters.",
	"homepage": "https://github.com/alejandropb36/postcss-svg-legacy#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"svgs",
		"scalable",
		"vector",
		"graphic",
		"image",
		"img",
		"picture",
		"pic",
		"fragment",
		"identifier",
		"id",
		"hash",
		"url",
		"inline",
		"utf8",
		"base64",
		"custom",
		"properties",
		"property"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/alejandropb36/postcss-svg-legacy.git"
	},
	"contributors": [
		{
			"name": "Pavel Gorlov",
			"email": "i@pavliko.com"
		},
		{
			"name": "Jonathan Neal",
			"email": "jonathantneal@hotmail.com"
		},
		{
			"name": "Alejandro Ponce",
			"email": "alejandropb46@gmail.com"
		}
	],
	"author": {
		"name": "Jonathan Neal",
		"email": "jonathantneal@hotmail.com"
	},
	"bugs": {
		"url": "https://github.com/alejandropb36/postcss-svg-legacy/issues"
	},
	"license": "CC0-1.0",
	"readme": "# PostCSS SVG [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS\" width=\"90\" height=\"90\" align=\"right\">][postcss]\r\n\r\n[![NPM Version][npm-img]][npm-url]\r\n[![Build Status][cli-img]][cli-url]\r\n[![Support Chat][git-img]][git-url]\r\n\r\n[PostCSS SVG] lets you inline SVGs in CSS.\r\n\r\n```pcss\r\n.icon--square {\r\n  content: url(\"shared-sprites#square\" param(--color blue));\r\n}\r\n\r\n/* becomes */\r\n\r\n.icon--square {\r\n  content: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Crect style='fill:blue' width='100%25' height='100%25'/%3E%3C/svg%3E\");\r\n}\r\n```\r\n\r\n[SVG Fragments] let you reference elements within an SVG. [SVG Parameters] let\r\nyou push compiled CSS variables into your SVGs.\r\n\r\n```svg\r\n<svg xmlns=\"http://www.w3.org/2000/svg\">\r\n  <symbol id=\"square\">\r\n    <rect style=\"fill:var(--color,black)\" width=\"100%\" height=\"100%\"/>\r\n  </symbol>\r\n</svg>\r\n```\r\n\r\n[Modules] let you reference the `media` or `main` fields from a `package.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"shared-sprites\",\r\n  \"media\": \"sprites.svg\"\r\n}\r\n```\r\n\r\nThe location of an SVG is intelligently resolved using the\r\n[SVG Resolve Algorithm].\r\n\r\n## Usage\r\n\r\nAdd [PostCSS SVG] to your project:\r\n\r\n```bash\r\nnpm install postcss-svg --save-dev\r\n```\r\n\r\nUse [PostCSS SVG] to process your CSS:\r\n\r\n```js\r\nconst postcssSVG = require('postcss-svg');\r\n\r\npostcssSVG.process(YOUR_CSS /*, processOptions, pluginOptions */);\r\n```\r\n\r\nOr use it as a [PostCSS] plugin:\r\n\r\n```js\r\nconst postcss = require('postcss');\r\nconst postcssSVG = require('postcss-svg');\r\n\r\npostcss([\r\n  postcssSVG(/* pluginOptions */)\r\n]).process(YOUR_CSS /*, processOptions */);\r\n```\r\n\r\n[PostCSS SVG] runs in all Node environments, with special instructions for:\r\n\r\n| [Node](INSTALL.md#node) | [PostCSS CLI](INSTALL.md#postcss-cli) | [Webpack](INSTALL.md#webpack) | [Create React App](INSTALL.md#create-react-app) | [Gulp](INSTALL.md#gulp) | [Grunt](INSTALL.md#grunt) |\r\n| --- | --- | --- | --- | --- | --- |\r\n\r\n## Options\r\n\r\n### dirs\r\n\r\nThe `dirs` option specifies additional directories used to locate SVGs.\r\n\r\n```js\r\npostcssSVG({\r\n  dirs: ['some-folder', 'another-folder'] /* Just a string will work, too */\r\n})\r\n```\r\n\r\nThe `utf8` option determines whether the SVG is UTF-8 encoded or base64 encoded.\r\n\r\n```js\r\npostcssSVG({\r\n  utf8: false /* Whether to use utf-8 or base64 encoding. Default is true. */\r\n})\r\n```\r\n\r\nThe `svgo` option determines whether and how [svgo] compression is used.\r\n\r\n```js\r\npostcssSVG({\r\n  svgo: { plugins: [{ cleanupAttrs: true }] } /* Whether and how to use svgo compression. Default is false. */\r\n})\r\n```\r\n\r\n[cli-img]: https://img.shields.io/travis/jonathantneal/postcss-svg.svg\r\n[cli-url]: https://travis-ci.org/jonathantneal/postcss-svg\r\n[git-img]: https://img.shields.io/badge/support-chat-blue.svg\r\n[git-url]: https://gitter.im/postcss/postcss\r\n[npm-img]: https://img.shields.io/npm/v/postcss-svg.svg\r\n[npm-url]: https://www.npmjs.com/package/postcss-svg-legacy\r\n\r\n[PostCSS]: https://github.com/postcss/postcss\r\n[PostCSS SVG]: https://github.com/jonathantneal/postcss-svg\r\n[Modules]: https://nodejs.org/api/modules.html#modules_modules\r\n[SVG Fragments]: https://css-tricks.com/svg-fragment-identifiers-work/\r\n[SVG Parameters]: https://tabatkins.github.io/specs/svg-params/\r\n[SVG Resolve Algorithm]: lib/read-closest-svg.md\r\n[svgo]: https://github.com/svg/svgo\r\n",
	"readmeFilename": "README.md",
	"_downloads": 7
}
{
	"_id": "postcss-inline-svg-multipath",
	"_rev": "4-cce8936c0e461a30c1b9667c1707e539",
	"name": "postcss-inline-svg-multipath",
	"dist-tags": {
		"latest": "3.1.2"
	},
	"versions": {
		"3.0.0": {
			"name": "postcss-inline-svg-multipath",
			"version": "3.0.0",
			"description": "PostCSS plugin to reference an SVG file and control its attributes with CSS syntax",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"svg",
				"inline"
			],
			"main": "dist/postcss-inline-svg.js",
			"files": [
				"dist"
			],
			"scripts": {
				"build": "rollup -c",
				"pretest": "rollup -c",
				"test": "jest --coverage",
				"posttest": "eslint src test"
			},
			"jest": {
				"coverageDirectory": "coverage"
			},
			"babel": {
				"presets": [
					[
						"env",
						{
							"targets": {
								"node": 4
							},
							"modules": false
						}
					]
				]
			},
			"eslintConfig": {
				"extends": "postcss",
				"rules": {
					"quotes": [
						0
					],
					"max-len": [
						0
					]
				}
			},
			"author": {
				"name": "Zach Schnackel",
				"email": "info@zslabs.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/zslabs/postcss-inline-svg.git"
			},
			"bugs": {
				"url": "https://github.com/zslabs/postcss-inline-svg/issues"
			},
			"homepage": "https://github.com/zslabs/postcss-inline-svg",
			"dependencies": {
				"css-select": "^1.2.0",
				"dom-serializer": "^0.1.0",
				"htmlparser2": "^3.9.0",
				"postcss": "^6.0.1",
				"postcss-value-parser": "^3.2.3"
			},
			"devDependencies": {
				"babel-preset-env": "^1.4.0",
				"eslint": "^3.4.0",
				"eslint-config-postcss": "^2.0.0",
				"jest": "^20.0.1",
				"rollup": "^0.34.10",
				"rollup-plugin-babel": "^2.7.1"
			},
			"gitHead": "78330621bb343f5aab0de4231674d73a9ac80551",
			"_id": "postcss-inline-svg-multipath@3.0.0",
			"_npmVersion": "5.6.0",
			"_nodeVersion": "8.9.4",
			"_npmUser": {
				"name": "zachschnackel",
				"email": "info@zslabs.com"
			},
			"dist": {
				"integrity": "sha512-y0ToXMPjjZoRZ1KPqd9T1fmc7FkOR/46g0UXSSN9Tpg0dauZTG39JfBalt3uvVPPqYr1PquANeLPyLFBFWMhhg==",
				"shasum": "51700908cdf33ce87b0bcda53738fc863af48dba",
				"tarball": "https://registry.npmjs.org/postcss-inline-svg-multipath/-/postcss-inline-svg-multipath-3.0.0.tgz",
				"fileCount": 4,
				"unpackedSize": 7047,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQD2g9xuDyuEWII81GC6fN+9fV8lWSM7XgIQqWP1vS7UAAIhANdnAF/u1NHX4LexIizhkSvjVB1uV/Ek39/Y6VvQCX/J"
					}
				]
			},
			"maintainers": [
				{
					"name": "zachschnackel",
					"email": "info@zslabs.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-inline-svg-multipath_3.0.0_1520523636913_0.7275717699147679"
			},
			"_hasShrinkwrap": false
		},
		"3.0.1": {
			"name": "postcss-inline-svg-multipath",
			"version": "3.0.1",
			"description": "PostCSS plugin to reference an SVG file and control its attributes with CSS syntax",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"svg",
				"inline"
			],
			"main": "dist/postcss-inline-svg.js",
			"files": [
				"dist"
			],
			"scripts": {
				"build": "rollup -c",
				"pretest": "rollup -c",
				"test": "jest --coverage",
				"posttest": "eslint src test"
			},
			"jest": {
				"coverageDirectory": "coverage"
			},
			"babel": {
				"presets": [
					[
						"env",
						{
							"targets": {
								"node": 4
							},
							"modules": false
						}
					]
				]
			},
			"eslintConfig": {
				"extends": "postcss",
				"rules": {
					"quotes": [
						0
					],
					"max-len": [
						0
					]
				}
			},
			"author": {
				"name": "Zach Schnackel",
				"email": "info@zslabs.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/zslabs/postcss-inline-svg.git"
			},
			"bugs": {
				"url": "https://github.com/zslabs/postcss-inline-svg/issues"
			},
			"homepage": "https://github.com/zslabs/postcss-inline-svg",
			"dependencies": {
				"css-select": "^1.2.0",
				"dom-serializer": "^0.1.0",
				"htmlparser2": "^3.9.0",
				"postcss": "^6.0.1",
				"postcss-value-parser": "^3.2.3"
			},
			"devDependencies": {
				"babel-preset-env": "^1.4.0",
				"eslint": "^3.4.0",
				"eslint-config-postcss": "^2.0.0",
				"jest": "^20.0.1",
				"rollup": "^0.34.10",
				"rollup-plugin-babel": "^2.7.1"
			},
			"gitHead": "ee5557bb72cbcb1301066edf5aacf0bfd285a7b5",
			"_id": "postcss-inline-svg-multipath@3.0.1",
			"_npmVersion": "5.6.0",
			"_nodeVersion": "8.9.4",
			"_npmUser": {
				"name": "zachschnackel",
				"email": "info@zslabs.com"
			},
			"dist": {
				"integrity": "sha512-9E61dNVIfzDYN0WAcwkQcuVSU8/6VD9IJaCuHfQ3D6J3hcK96Yb7NpFF9Zunb0xkPnMuzdFH6UkrsyFI/EHycA==",
				"shasum": "4d1109b785b17ade8366b5fae9b409d5ddd682b7",
				"tarball": "https://registry.npmjs.org/postcss-inline-svg-multipath/-/postcss-inline-svg-multipath-3.0.1.tgz",
				"fileCount": 5,
				"unpackedSize": 20659,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIAYq9FvU5EkHqVLX1MnRt4b6QRR/lVbhRzkaEcQP/hYMAiBBiaIh9JjCghbVsYdeh37tj9WFa5uSUaToq4RKsEV59w=="
					}
				]
			},
			"maintainers": [
				{
					"name": "zachschnackel",
					"email": "info@zslabs.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-inline-svg-multipath_3.0.1_1520524246487_0.20776806813626258"
			},
			"_hasShrinkwrap": false
		},
		"3.1.2": {
			"name": "postcss-inline-svg-multipath",
			"version": "3.1.2",
			"description": "PostCSS plugin to reference an SVG file and control its attributes with CSS syntax",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"svg",
				"inline"
			],
			"main": "dist/index.js",
			"files": [
				"dist"
			],
			"scripts": {
				"build": "rollup -c",
				"pretest": "yarn build",
				"test": "jest",
				"prepublish": "yarn build"
			},
			"lint-staged": {
				"*.{js,md}": [
					"prettier --write"
				]
			},
			"babel": {
				"presets": [
					[
						"env",
						{
							"targets": {
								"node": 4
							},
							"modules": false
						}
					]
				]
			},
			"author": {
				"name": "Zach Schnackel",
				"email": "info@zslabs.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/zslabs/postcss-inline-svg.git"
			},
			"bugs": {
				"url": "https://github.com/zslabs/postcss-inline-svg/issues"
			},
			"homepage": "https://github.com/zslabs/postcss-inline-svg",
			"dependencies": {
				"css-select": "^2.0.0",
				"dom-serializer": "^0.1.0",
				"htmlparser2": "^3.9.0",
				"postcss": "^6.0.21",
				"postcss-value-parser": "^3.2.3"
			},
			"devDependencies": {
				"babel-preset-env": "^1.6.1",
				"husky": "^0.14.3",
				"jest": "^22.4.3",
				"lint-staged": "^7.0.0",
				"prettier": "^1.11.1",
				"rollup": "^0.57.1",
				"rollup-plugin-babel": "^3.0.3"
			},
			"gitHead": "d52cdb6a2e7df7f26e638e52b35e9050e363d0ef",
			"_id": "postcss-inline-svg-multipath@3.1.2",
			"_npmVersion": "5.6.0",
			"_nodeVersion": "8.9.4",
			"_npmUser": {
				"name": "zachschnackel",
				"email": "info@zslabs.com"
			},
			"dist": {
				"integrity": "sha512-MBsGfbstP2L7wA9owB78BRrsdD0J7+ATdRBOoefUqrkiRUJ5pBtlf3Epgq8nlLnSj557L2PVDGGRc9t6Cmhywg==",
				"shasum": "a54594af2e372582aff8c35bb7809667073bcc5c",
				"tarball": "https://registry.npmjs.org/postcss-inline-svg-multipath/-/postcss-inline-svg-multipath-3.1.2.tgz",
				"fileCount": 6,
				"unpackedSize": 32750,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDzhB+ZMOyxkvlStsJf4wjB9xcdYYzm7SRRy2cYeHqeSgIgEBERTYUJQ3x43WgHP0f0+fQYZY7mnaFvu5HFn/m2Uv8="
					}
				]
			},
			"maintainers": [
				{
					"name": "zachschnackel",
					"email": "info@zslabs.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-inline-svg-multipath_3.1.2_1522357806276_0.2623713731338033"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2018-03-08T15:40:36.912Z",
		"3.0.0": "2018-03-08T15:40:36.986Z",
		"modified": "2022-05-13T06:23:35.823Z",
		"3.0.1": "2018-03-08T15:50:46.548Z",
		"3.1.2": "2018-03-29T21:10:06.358Z"
	},
	"maintainers": [
		{
			"name": "zachschnackel",
			"email": "info@zslabs.com"
		}
	],
	"description": "PostCSS plugin to reference an SVG file and control its attributes with CSS syntax",
	"homepage": "https://github.com/zslabs/postcss-inline-svg",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"svg",
		"inline"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/zslabs/postcss-inline-svg.git"
	},
	"author": {
		"name": "Zach Schnackel",
		"email": "info@zslabs.com"
	},
	"bugs": {
		"url": "https://github.com/zslabs/postcss-inline-svg/issues"
	},
	"license": "MIT",
	"readme": "# postcss-inline-svg [![Build Status][travis-img]][travis]\n\n[PostCSS] plugin to reference an SVG file and control its attributes with CSS syntax.\n\n[PostCSS]: https://github.com/postcss/postcss\n[travis-img]: https://travis-ci.org/TrySound/postcss-inline-svg.svg\n[travis]: https://travis-ci.org/TrySound/postcss-inline-svg\n\n```css\n@svg-load nav url(img/nav.svg) {\n    fill: #cfc;\n    path:nth-child(2) {\n        fill: #ff0;\n    }\n}\n.nav {\n    background: svg-inline(nav);\n}\n.up {\n    background: svg-load('img/arrow-up.svg', fill=#000, stroke=#fff);\n}\n```\n\n```css\n.nav {\n    background: url(\"data:image/svg+xml;charset=utf-8,%3Csvg fill='%23cfc'%3E%3Cpath d='...'/%3E%3Cpath d='...' fill='%23ff0'/%3E%3Cpath d='...'/%3E%3C/svg%3E\");\n}\n.up {\n    background: url(\"data:image/svg+xml;charset=utf-8,%3Csvg fill='%23000' stroke='%23fff'%3E...%3C/svg%3E\");\n}\n```\n\nPostCSS parsers allow to use different syntax (but only one syntax in one svg-load() definition):\n\n```css\n.up {\n    background: svg-load('img/arrow-up.svg', fill: #000, stroke: #fff);\n}\n.down {\n    background: svg-load('img/arrow-down.svg', fill=#000, stroke=#fff);\n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-inline-svg')(options) ])\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n### Options\n\n#### options.path\n\nPath to resolve url.\n\nDefault: `false` - path will be relative to source file if it was specified.\n\n#### options.paths\n\nArray of paths to resolve url. Paths are tried in order, until an existing file is found.\n\nDefault: `false` - path will be relative to source file if it was specified.\n\n#### options.removeFill\n\nDefault: `false` - with `true` removes all `fill` attributes before applying specified.\nPassed RegExp filters files by id.\n\n#### options.encode(svg)\n\nProcesses svg after applying parameters. Default will be ommited if passed `false`.\n\nDefault:\n\n```js\nfunction encode(code) {\n    return code\n        .replace(/%/g, '%25')\n        .replace(/</g, '%3C')\n        .replace(/>/g, '%3E')\n        .replace(/&/g, '%26')\n        .replace(/#/g, '%23');\n}\n```\n\n#### options.transform(svg, path)\n\nTransforms svg after `encode` function and generates url.\n\n#### options.xmlns\n\ntype: boolean  \ndefault: true\n\nAdds `xmlns` attribute to svg if not present\n\n\n## Frequently asked questions\n\n### Why svg-load() doesn't work and the color still black (or red or whatever)?\n\nThat's because `svg-load()` overrides attributes only in `<svg>` element and children inherit that color.\nBut if there is already color on children nothing will be inherited.\n\nFor example\n\n```xml\n<svg>\n    <path fill=\"#ff0000\" d=\"...\" />\n</svg>\n```\n\nafter inline-svg (fill: #000) will looks like\n\n```xml\n<svg fill=\"#000\">\n    <path fill=\"#ff0000\" d=\"...\" />\n</svg>\n```\n\nThere are three solutions: to remove that attribute (preferable), to use extended `@svg-load` notation or to use removeFill option.\n\n### How to optimize svg on build step?\n\n> There is a plugin. :)\n\nYou are able to add [postcss-svgo](https://github.com/ben-eb/postcss-svgo) in your postcss plugins list\nwhich will detect every url which contains data svg uri and\nminify via [svgo](https://github.com/svg/svgo).\n\n```js\npostcss([\n    require('postcss-inline-svg'),\n    require('postcss-svgo')\n])\n```\n\nOr if you use [cssnano](https://github.com/ben-eb/cssnano) your svg urls already minified\nas cssnano includes postcss-svgo.\n\n```js\npostcss([\n    require('postcss-inline-svg'),\n    require('cssnano')\n])\n```\n\n\n# License\n\nMIT © [Bogdan Chadkin](mailto:trysound@yandex.ru)\n",
	"readmeFilename": "README.md",
	"_downloads": 605
}
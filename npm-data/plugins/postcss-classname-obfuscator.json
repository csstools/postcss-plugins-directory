{
	"_id": "postcss-classname-obfuscator",
	"name": "postcss-classname-obfuscator",
	"dist-tags": {
		"latest": "0.1.0"
	},
	"versions": {
		"0.1.0": {
			"name": "postcss-classname-obfuscator",
			"version": "0.1.0",
			"description": "This PostCSS plugin replaces CSS class names with hard-to-guess characters.",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"postcss-classname-obfuscator"
			],
			"main": "dist/index.js",
			"types": "dist/index.d.ts",
			"scripts": {
				"build": "tsc",
				"minify": "terser dist/index.js --mangle -o dist/index.js",
				"dev": "swc src -d dist",
				"unit": "npm run dev && node --test index.test.js",
				"test": "npm run unit && eslint ./dist",
				"format": "prettier --write 'src/**/*.ts'",
				"publish": "npm run build && npm run minify && npm publish"
			},
			"author": {
				"name": "minagishl"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/minagishl/postcss-classname-obfuscator.git"
			},
			"engines": {
				"node": ">=18.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.4.27"
			},
			"devDependencies": {
				"@swc/cli": "^0.1.63",
				"@swc/core": "^1.3.104",
				"@types/node": "^20.11.5",
				"eslint": "^8.56.0",
				"postcss": "^8.4.33",
				"prettier": "^3.2.4",
				"terser": "^5.27.0",
				"typescript": "^5.3.3"
			},
			"eslintConfig": {
				"parserOptions": {
					"ecmaVersion": 2017
				},
				"env": {
					"node": true,
					"es6": true
				},
				"extends": [
					"eslint:recommended"
				]
			},
			"_id": "postcss-classname-obfuscator@0.1.0",
			"gitHead": "7bf3add6c1416ccaee4ffbec9fb913c44d33cb0f",
			"bugs": {
				"url": "https://github.com/minagishl/postcss-classname-obfuscator/issues"
			},
			"homepage": "https://github.com/minagishl/postcss-classname-obfuscator#readme",
			"_nodeVersion": "20.9.0",
			"_npmVersion": "10.2.5",
			"dist": {
				"integrity": "sha512-L6FjWFZzLlj21YnrcypYv/qL8pMToWU0qVytJJpUdybAsp5otrRRga8XNlr34GKkvS/ZBDdfIihjixX48N1n4A==",
				"shasum": "352f200d0d3ce9a88288f53f3ec92762178b9537",
				"tarball": "https://registry.npmjs.org/postcss-classname-obfuscator/-/postcss-classname-obfuscator-0.1.0.tgz",
				"fileCount": 6,
				"unpackedSize": 7648,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIEg8b93Re0o4r1w4XxY+Br6DjralXEQza8fVjuW61nxCAiEAg3tlhOGAsTIdy/v6PNoQED76GaTjTiK0s5zJNDUn2SQ="
					}
				]
			},
			"_npmUser": {
				"name": "minagishl",
				"email": "mvxd567.local@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "minagishl",
					"email": "mvxd567.local@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-classname-obfuscator_0.1.0_1705710681680_0.18882664347013067"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2024-01-20T00:31:21.678Z",
		"0.1.0": "2024-01-20T00:31:21.826Z",
		"modified": "2024-01-20T00:31:22.108Z"
	},
	"maintainers": [
		{
			"name": "minagishl",
			"email": "mvxd567.local@gmail.com"
		}
	],
	"description": "This PostCSS plugin replaces CSS class names with hard-to-guess characters.",
	"homepage": "https://github.com/minagishl/postcss-classname-obfuscator#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"postcss-classname-obfuscator"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/minagishl/postcss-classname-obfuscator.git"
	},
	"author": {
		"name": "minagishl"
	},
	"bugs": {
		"url": "https://github.com/minagishl/postcss-classname-obfuscator/issues"
	},
	"license": "MIT",
	"readme": "# postcss-classname-obfuscator\n\nThis PostCSS plugin replaces CSS class names with hard-to-guess characters.\n\n```css\n.primary {\n  color: var(--primary);\n}\n\n.secondary {\n  color: var(--secondary);\n}\n```\n\n```css\n.b6d946 {\n  color: var(--primary);\n}\n\n.d6bdb8 {\n  color: var(--secondary);\n}\n```\n\n## Usage\n\n**Step 1:** Install plugin:\n\n```bash\nnpm install --save-dev postcss postcss-classname-obfuscator\n```\n\n**Step 2:** Check your project for existing PostCSS config: `postcss.config.js`\nin the project root, `\"postcss\"` section in `package.json`\nor `postcss` in bundle config.\n\nIf you do not use PostCSS, add it according to [official docs]\nand set this plugin in settings.\n\n**Step 3:** Add the plugin to plugins list:\n\n```diff\nmodule.exports = {\n\tplugins: {\n+   'postcss-classname-obfuscator': {},\n\t\tautoprefixer: {}\n\t},\n};\n```\n\n## Options\n\n| Option        | Type                | Default                 | Description                                                    |\n| ------------- | ------------------- | ----------------------- | -------------------------------------------------------------- |\n| enable        | boolean             | true                    | Enable or disable the obfuscation.                             |\n| length        | number              | 6                       | Character length (max. 32 characters)length.                   |\n| method        | string              | \"random\"                | \"random\" or \"none\" obfuscation method for classes.             |\n| prefix        | string              | \"\"                      | Prefix for custom properties.                                  |\n| suffix        | string              | \"\"                      | Suffix for custom properties.                                  |\n| ignore        | string[]            | []                      | Array of custom properties to ignore.                          |\n| output        | string              | \"\"                      | Obfuscated property list json file output destination          |\n| ignoreRegex   | string[]            | []                      | Regex to ignore.                                               |\n| hashAlgorithm | string              | \"sha256\"                | Hash algorithm for obfuscation.                                |\n| preRun        | () => Promise<void> | () => Promise.resolve() | What to do before running the plugin                           |\n| callBack      | () => void          | function () {}          | Callback function to run after the plugin has finished running |\n\n## License\n\nThis source code is released under the [MIT license.]\n\n[MIT license.]: https://opensource.org/licenses/MIT\n[official docs]: https://github.com/postcss/postcss#usage\n",
	"readmeFilename": "README.md",
	"_downloads": 0
}
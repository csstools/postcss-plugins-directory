{
	"_id": "literate-postcss",
	"_rev": "5-e7796615144bde30605328ab28bf79ff",
	"name": "literate-postcss",
	"description": "Write CSS documentation with Markdown and then transform it into CSS.",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "literate-postcss",
			"version": "1.0.0",
			"description": "Write CSS documentation with Markdown and then transform it into CSS.",
			"main": "dist/index.js",
			"files": [
				"LICENSE-MIT",
				"dist"
			],
			"engines": {
				"node": ">=4"
			},
			"scripts": {
				"contributorAdd": "all-contributors add",
				"contributorGenerate": "all-contributors generate",
				"docs": "documentation build src -f html -o docs --name literate-postcss",
				"pretest": "eslint src && flow check",
				"prepublish": "npm run readme && del-cli dist && rollup -c rollup.config.js",
				"readme": "documentation readme src --section 'API'",
				"report": "nyc report --reporter=html",
				"test": "cross-env BABEL_ENV=test nyc ava"
			},
			"keywords": [
				"css",
				"docs",
				"documentation",
				"markdown",
				"postcss",
				"postcss-plugin",
				"remark",
				"styles"
			],
			"license": "MIT",
			"devDependencies": {
				"all-contributors-cli": "^3.0.6",
				"ava": "^0.16.0",
				"babel-cli": "^6.5.1",
				"babel-core": "^6.5.1",
				"babel-plugin-istanbul": "^2.0.0",
				"babel-plugin-transform-flow-strip-types": "^6.8.0",
				"babel-preset-es2015": "^6.0.0",
				"babel-preset-stage-0": "^6.5.0",
				"babel-register": "^6.9.0",
				"cross-env": "^2.0.0",
				"del-cli": "^0.2.0",
				"documentation": "git+https://git@github.com/documentationjs/documentation.git",
				"eslint": "^3.0.0",
				"eslint-config-cssnano": "^3.0.0",
				"eslint-plugin-babel": "^3.3.0",
				"eslint-plugin-flow-vars": "^0.5.0",
				"eslint-plugin-flowtype": "^2.3.0",
				"eslint-plugin-import": "^2.0.1",
				"flow-bin": "^0.34.0",
				"less": "^2.7.1",
				"nyc": "^8.0.0",
				"postcss-less-engine": "^0.6.2",
				"postcss-safe-parser": "^2.0.0",
				"postcss-scss": "^0.4.0",
				"rollup": "^0.36.3",
				"rollup-plugin-babel": "^2.6.1",
				"sugarss": "^0.2.0"
			},
			"homepage": "https://github.com/ben-eb/literate-postcss",
			"author": {
				"name": "Ben Briggs",
				"email": "beneb.info@gmail.com",
				"url": "http://beneb.info"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/ben-eb/literate-postcss.git"
			},
			"dependencies": {
				"postcss": "^5.2.5",
				"remark": "^6.2.0",
				"remark-comment-blocks": "^2.0.1"
			},
			"ava": {
				"babel": "inherit",
				"require": "babel-register"
			},
			"eslintConfig": {
				"extends": "cssnano/flow"
			},
			"nyc": {
				"sourceMap": false,
				"instrument": false
			},
			"gitHead": "bebc5bf0cc3be5476de9353565be3d381dfb25d5",
			"bugs": {
				"url": "https://github.com/ben-eb/literate-postcss/issues"
			},
			"_id": "literate-postcss@1.0.0",
			"_shasum": "67beeae7bdc07250338efa556e659bf28bd54652",
			"_from": ".",
			"_npmVersion": "3.10.8",
			"_nodeVersion": "6.9.1",
			"_npmUser": {
				"name": "beneb",
				"email": "beneb.info@gmail.com"
			},
			"dist": {
				"shasum": "67beeae7bdc07250338efa556e659bf28bd54652",
				"tarball": "https://registry.npmjs.org/literate-postcss/-/literate-postcss-1.0.0.tgz",
				"integrity": "sha512-tpTC95gsR6CigoyZ/s5HiPk7CvHv59IeHSZe/aoe67QCVrlu6LMxrhtlYO2e55klm5Pg9nQ/Z8nEUdfnNknS8Q==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIFExRsRf0gQiWcYUT71xgElcGk2XyqYFCmiXB5dQm97wAiEA4faVn0G61DkQWziPvotjSn1Yv7bwapFhU0Cv+LDggFg="
					}
				]
			},
			"maintainers": [
				{
					"name": "beneb",
					"email": "beneb.info@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "packages-12-west.internal.npmjs.com",
				"tmp": "tmp/literate-postcss-1.0.0.tgz_1479325526666_0.5446809781715274"
			}
		}
	},
	"readme": "# literate-[postcss][postcss] [![Build Status](https://travis-ci.org/ben-eb/literate-postcss.svg?branch=master)][ci]  [![NPM version](https://badge.fury.io/js/literate-postcss.svg)][npm] [![Dependency Status](https://gemnasium.com/ben-eb/literate-postcss.svg)][deps]\n\n> Write CSS documentation with Markdown and then transform it into CSS.\n\n## Install\n\nWith [npm](https://npmjs.org/package/literate-postcss) do:\n\n    npm install literate-postcss --save\n\n## Examples\n\nSee the [`examples` directory][examples] for some ideas on how you can use\nliterate-postcss. If you're using literate-postcss for your styles, please\nfeel free to get in touch and we'll list your site here.\n\n[examples]: https://github.com/ben-eb/literate-postcss/tree/master/examples\n\n## API\n\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->\n\n### literate-postcss\n\nliterate-postcss allows you to write Markdown files with embedded CSS code,\nand then transform them into a format that can be processed by PostCSS. It's\na way of writing stylesheets that is more like a short-form article, and is\ngreat for documentation focused use cases such as style guides or\npattern libraries.\n\nBecause this tool is based on open standards, there's no new language that\nyou need to learn, or plugin that you need to install in your editor to\nenable syntax highlighting, beyond support for CSS & Markdown. If you use\nAtom, for instance, there's a Markdown preview that works extremely well\nwith this format.\n\nWriting CSS in this way allows you to take any Markdown previewer to your\nstyles and instantly transform them into beautiful documentation. There's\nno docblock convention to follow, and you can write as much or as little\nsupporting text as you would like. You can also use headings and links\nto help structure and add meaning to your stylesheet.\n\n The following parsers have been tested and are known to work out of the box:\n\n-   [postcss](https://github.com/postcss/postcss)' default parser.\n-   [postcss-less](https://github.com/Crunch/postcss-less)\n-   [postcss-safe-parser](https://github.com/postcss/postcss-safe-parser)\n-   [postcss-scss](https://github.com/postcss/postcss-scss)\n-   [sugarss](https://github.com/postcss/sugarss)\n\nNote that as literate-postcss is a wrapper for the PostCSS options object,\nit should not be used as a traditional plugin. See the examples for details.\n\n**Parameters**\n\n-   `opts` **\\[[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)]** Same as the [PostCSS options](https://github.com/postcss/postcss#options),\n    plus:\n    -   `opts.start` **\\[[String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)]** This string is used to begin the comment block.\n    -   `opts.middle` **\\[[String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)]** This string is prepended to each comment block\n        line, other than the `start` & `end` lines.\n    -   `opts.end` **\\[[String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)]** This string is used to end the comment block.\n    -   `opts.stripComments` **\\[[Boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean)]** Setting to `true` removes any\n        non-code blocks when parsing Markdown. Note that this option does not\n        analyse comments _within_ code blocks and therefore will not strip them. (optional, default `false`)\n    -   `opts.languages` **\\[[Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)]** This sets the\n        languages that will not be converted into comments, and should be anything\n        that a PostCSS parser is capable of parsing. (optional, default `['css','less','scss','sss']`)\n\n**Examples**\n\n_Basic usage_\n\n```javascript\nimport postcss from 'postcss';\nimport literate from 'literate-postcss';\n\nconst markdown = `# Hello!\n\n    h1 {\n        color: blue;\n    }`;\n\npostcss().process(markdown, literate()).then(result => {\n    console.log(result.content);\n    // /*\n    //  * # Hello!\n    //  *\\/\n    // h1 {\n    //     color: blue;\n    // }\n});\n```\n\n_Usage with postcss-less_\n\n```javascript\nimport postcss from 'postcss';\nimport less from 'postcss-less-engine';\nimport literate from 'literate-postcss';\n\nconst markdown = `# Hello!\n\n    h1 {\n        width: (1 + 1);\n    }`;\n\npostcss(less).process(markdown, literate({parser: less.parser})).then(result => {\n    console.log(result.content);\n    // /* * # Hello! *\\/\n    // h1 {\n    //     width: 2;\n    // }\n});\n```\n\n_Usage with postcss-scss_\n\n```javascript\nimport postcss from 'postcss';\nimport scss from 'postcss-scss';\nimport literate from 'literate-postcss';\n\nconst markdown = `# Hello!\n\n    .#{class} {\n        color: blue;\n    }`;\n\npostcss().process(markdown, literate({syntax: scss})).then(result => {\n    console.log(result.content);\n    // /*\n    //  * # Hello!\n    //  *\\/\n    // .#{class} {\n    //     color: blue;\n    // }\n});\n```\n\n_Usage with sugarss_\n\n```javascript\nimport postcss from 'postcss';\nimport sugarss from 'sugarss';\nimport literate from 'literate-postcss';\n\nconst markdown = `# Hello!\n\n    h1\n        color: blue\n`;\n\npostcss().process(markdown, literate({syntax: sugarss})).then(result => {\n    console.log(result.content);\n    // /*\n    //  * # Hello! *\\/\n    // h1\n    //     color: blue\n});\n```\n\n## Contributors\n\nThanks goes to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n| [<img src=\"https://avatars.githubusercontent.com/u/1282980?v=3\" width=\"100px;\"/><br /><sub>Ben Briggs</sub>](http://beneb.info)<br />[💻](https://github.com/ben-eb/literate-postcss/commits?author=ben-eb) [📖](https://github.com/ben-eb/literate-postcss/commits?author=ben-eb) 👀 [⚠️](https://github.com/ben-eb/literate-postcss/commits?author=ben-eb) |\n| :---: |\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors] specification. Contributions of\nany kind welcome!\n\n## License\n\nMIT © [Ben Briggs](http://beneb.info)\n\n[all-contributors]: https://github.com/kentcdodds/all-contributors\n\n[ci]: https://travis-ci.org/ben-eb/literate-postcss\n\n[deps]: https://gemnasium.com/ben-eb/literate-postcss\n\n[npm]: http://badge.fury.io/js/literate-postcss\n\n[postcss]: https://github.com/postcss/postcss\n",
	"maintainers": [
		{
			"name": "beneb",
			"email": "beneb.info@gmail.com"
		}
	],
	"time": {
		"modified": "2022-06-19T12:51:01.037Z",
		"created": "2016-11-16T19:45:28.793Z",
		"1.0.0": "2016-11-16T19:45:28.793Z"
	},
	"homepage": "https://github.com/ben-eb/literate-postcss",
	"keywords": [
		"css",
		"docs",
		"documentation",
		"markdown",
		"postcss",
		"postcss-plugin",
		"remark",
		"styles"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ben-eb/literate-postcss.git"
	},
	"author": {
		"name": "Ben Briggs",
		"email": "beneb.info@gmail.com",
		"url": "http://beneb.info"
	},
	"bugs": {
		"url": "https://github.com/ben-eb/literate-postcss/issues"
	},
	"license": "MIT",
	"readmeFilename": "README.md",
	"_downloads": 3
}
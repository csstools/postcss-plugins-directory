{
	"_id": "postcss-pxtoupx",
	"_rev": "1-753fd2ab97e77feeea66809fde9e32d1",
	"name": "postcss-pxtoupx",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-pxtoupx",
			"description": "A CSS post-processor that converts px to upx.",
			"version": "1.0.0",
			"author": {
				"name": "zhouhuafei"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/zhouhuafei-team/postcss-pxtorem.git"
			},
			"bugs": {
				"url": "https://github.com/zhouhuafei-team/postcss-pxtorem/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^6.8.0",
				"husky": "^4.2.3",
				"jasmine-node": "^3.0.0",
				"lint-staged": "^10.0.8",
				"postcss": "^8.0.0",
				"prettier": "^1.19.1"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"gitHead": "708e2eb583599260c1f4b38e5806a7c633cfb3cb",
			"homepage": "https://github.com/zhouhuafei-team/postcss-pxtorem#readme",
			"_id": "postcss-pxtoupx@1.0.0",
			"_nodeVersion": "18.17.0",
			"_npmVersion": "9.6.7",
			"dist": {
				"integrity": "sha512-LEZFogA6cjJMwetEt0w5d8rHo0pIZBEN0F6PqDyIBigipkYWsUzMoWaDD8OLN6EEiWDEs86DZUpW+vCFxc5qrg==",
				"shasum": "abb3ef6211591ba14e5609f5aa217b430fb7484d",
				"tarball": "https://registry.npmjs.org/postcss-pxtoupx/-/postcss-pxtoupx-1.0.0.tgz",
				"fileCount": 15,
				"unpackedSize": 31760,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIFiduFjR2rGUqmyStikaoT/wEAf9sJ2HsySxN2N3LsePAiA/CQD25qQqPhdZ8ugf/dyWHlwC0ExaLTYH43Y9hAh9Dw=="
					}
				]
			},
			"_npmUser": {
				"name": "zhouhuafei",
				"email": "1123486116@qq.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "zhouhuafei",
					"email": "1123486116@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtoupx_1.0.0_1691575642299_0.307993947074245"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "postcss-pxtoupx",
			"description": "A CSS post-processor that converts px to upx.",
			"version": "1.0.1",
			"author": {
				"name": "zhouhuafei"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/zhouhuafei-team/postcss-pxtorem.git"
			},
			"bugs": {
				"url": "https://github.com/zhouhuafei-team/postcss-pxtorem/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^6.8.0",
				"husky": "^4.2.3",
				"jasmine-node": "^3.0.0",
				"lint-staged": "^10.0.8",
				"postcss": "^8.0.0",
				"prettier": "^1.19.1"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"gitHead": "ec2a469901d7dea15837d9ff3165adb227af9c2a",
			"homepage": "https://github.com/zhouhuafei-team/postcss-pxtorem#readme",
			"_id": "postcss-pxtoupx@1.0.1",
			"_nodeVersion": "18.17.1",
			"_npmVersion": "9.6.7",
			"dist": {
				"integrity": "sha512-k+Osfz1/v96Fh/aQQApMgLFqFGhUCsbI+RiFwIJ5VCTiLMPBG53eQYMdUKSvYpgqhJZ2M89Ud4ZaJ0U2AJ80uA==",
				"shasum": "6ea09f45530b1197a869fdccfc3cf65346735df7",
				"tarball": "https://registry.npmjs.org/postcss-pxtoupx/-/postcss-pxtoupx-1.0.1.tgz",
				"fileCount": 15,
				"unpackedSize": 31787,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIB79ga9WcX0saaxi5CDFHCv75YCjP4D0MDyslN5jiqyIAiA9btie6WF0g9kP9o7IWMjC+hIk8sBtY/1okPYPZlrsUA=="
					}
				]
			},
			"_npmUser": {
				"name": "zhouhuafei",
				"email": "1123486116@qq.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "zhouhuafei",
					"email": "1123486116@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtoupx_1.0.1_1692671789256_0.07535862156789519"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2023-08-09T10:07:22.298Z",
		"1.0.0": "2023-08-09T10:07:22.492Z",
		"modified": "2023-08-22T02:36:29.632Z",
		"1.0.1": "2023-08-22T02:36:29.474Z"
	},
	"maintainers": [
		{
			"name": "zhouhuafei",
			"email": "1123486116@qq.com"
		}
	],
	"description": "A CSS post-processor that converts px to upx.",
	"homepage": "https://github.com/zhouhuafei-team/postcss-pxtorem#readme",
	"keywords": [
		"css",
		"rem",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/zhouhuafei-team/postcss-pxtorem.git"
	},
	"author": {
		"name": "zhouhuafei"
	},
	"bugs": {
		"url": "https://github.com/zhouhuafei-team/postcss-pxtorem/issues"
	},
	"license": "MIT",
	"readme": "# 基于postcss-pxtorem改造\n* 使用 uni-cli 进行微信小程序开发时想直接使用px进行书写。\n* 所以就打算使用插件把px转换成upx。 \n* 之后uni-cli会自动再把upx转换成rpx。\n```typescript\nimport { defineConfig } from 'vite'\nimport uni from '@dcloudio/vite-plugin-uni'\nimport pxtoupx from 'postcss-pxtoupx'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  css: {\n    postcss: {\n      plugins: [\n        pxtoupx({\n          propList: ['*'],\n          rootValue: 0.5, // 375设计图时此处填写0.5 - 750设计图时此处填写1\n          unitPrecision: 5, // 转换后的数值精确到小数点后5位\n          minPixelValue: 2 // 不小于2px时才进行upx转换\n        })\n      ]\n    }\n  },\n  plugins: [uni()]\n})\n```\n\n# postcss-pxtorem [![NPM version](https://badge.fury.io/js/postcss-pxtorem.svg)](http://badge.fury.io/js/postcss-pxtorem)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rem units from pixel units.\n\n## Install\n\n```shell\n$ npm install postcss postcss-pxtorem --save-dev\n```\n\n## Usage\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625rem;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorem = require('postcss-pxtorem');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0,\n    exclude: /node_modules/i\n}\n```\n\n- `rootValue` (Number | Function) Represents the root element font size or returns the root element font size based on the [`input`](https://api.postcss.org/Input.html) parameter\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `propList` (Array) The properties that can change from px to rem.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']`\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) Replaces rules containing rems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `exclude` (String, Regexp, Function) The file path to ignore and leave as px.\n    - If value is string, it checks to see if file path contains the string.\n        - `'exclude'` will match `\\project\\postcss-pxtorem\\exclude\\path`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `/exclude/i` will match `\\project\\postcss-pxtorem\\exclude\\path`\n    - If value is function, you can use exclude function to return a true and the file will be ignored.\n        - the callback will pass the file path as  a parameter, it should returns a Boolean result.\n        - `function (file) { return file.indexOf('exclude') !== -1; }`\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorem = require('postcss-pxtorem');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` or `PX` is ignored by `postcss-pxtorem` but still accepted by browsers\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 126
}
{
	"_id": "postcss-transform-px",
	"_rev": "1-40defe764c5fa52483d0a30c847391f9",
	"name": "postcss-transform-px",
	"dist-tags": {
		"latest": "2.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-transform-px",
			"version": "1.0.0",
			"author": {
				"name": "we125182",
				"url": "https://github.com/we125182"
			},
			"devDependencies": {
				"postcss": "^8.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"description": "PostCSS plugin px 转小程序 rpx及h5 rem 单位",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"transform px"
			],
			"main": "index.js",
			"scripts": {
				"test": "jest",
				"publish": "npm publish --registry=https://registry.npmjs.org/ --access=public"
			},
			"gitHead": "df5749715666de3e03619a920b6f3aad3e534079",
			"_id": "postcss-transform-px@1.0.0",
			"_nodeVersion": "18.16.0",
			"_npmVersion": "9.5.1",
			"dist": {
				"integrity": "sha512-g+gtNEFg78THZik1KW4BWqXeR0getv598Xoo5KDwyf0/4ddGPF0PCUff4VW95OZqFySu1bTYniWdZdU+GpLNaA==",
				"shasum": "f44c8f67933b44ccce949cdf4707e7b659096292",
				"tarball": "https://registry.npmjs.org/postcss-transform-px/-/postcss-transform-px-1.0.0.tgz",
				"fileCount": 9,
				"unpackedSize": 16625,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIC2dl0HeeSaSWWpQpyBFY3S8TVsvmr5iA1E5s9DtNhnrAiEApNZv0SwGAs7HOAgvopnpDzNACN434bRuX9rTjHToGb0="
					}
				]
			},
			"_npmUser": {
				"name": "we125182",
				"email": "we1215107007@163.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "we125182",
					"email": "we1215107007@163.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-transform-px_1.0.0_1701097891958_0.5949580333882776"
			},
			"_hasShrinkwrap": false
		},
		"2.0.0": {
			"name": "postcss-transform-px",
			"version": "2.0.0",
			"author": {
				"name": "we125182",
				"url": "https://github.com/we125182"
			},
			"devDependencies": {
				"postcss": "^8.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"description": "PostCSS plugin px 转小程序 rpx及h5 rem 单位",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"transform px"
			],
			"main": "index.js",
			"scripts": {
				"test": "jest",
				"publish": "npm publish --registry=https://registry.npmjs.org/ --access=public"
			},
			"gitHead": "df5749715666de3e03619a920b6f3aad3e534079",
			"_id": "postcss-transform-px@2.0.0",
			"_nodeVersion": "18.16.0",
			"_npmVersion": "9.5.1",
			"dist": {
				"integrity": "sha512-pJTE1bVP/s4L7tJzZBv9o2tz5/FzzCpI3msInSUriAPBSaA+1+F2UQYFbOx/vCZqSeeAjV1wCW1zgGnS4qYXUg==",
				"shasum": "c5599b8b873472c517f1721e5b5616b32e6bf738",
				"tarball": "https://registry.npmjs.org/postcss-transform-px/-/postcss-transform-px-2.0.0.tgz",
				"fileCount": 9,
				"unpackedSize": 16625,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCw3UkAlrQludxoiGTt4RQT3E+Agf3WFjsKhzt4/9JGWQIgXXvd36d+5ATtakwbksQRONvLuns/Bh3krdwMcNQASXI="
					}
				]
			},
			"_npmUser": {
				"name": "we125182",
				"email": "we1215107007@163.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "we125182",
					"email": "we1215107007@163.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-transform-px_2.0.0_1701098009390_0.9123946911291643"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2023-11-27T15:11:31.892Z",
		"1.0.0": "2023-11-27T15:11:32.131Z",
		"modified": "2023-11-27T15:13:29.731Z",
		"2.0.0": "2023-11-27T15:13:29.576Z"
	},
	"maintainers": [
		{
			"name": "we125182",
			"email": "we1215107007@163.com"
		}
	],
	"description": "PostCSS plugin px 转小程序 rpx及h5 rem 单位",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"transform px"
	],
	"author": {
		"name": "we125182",
		"url": "https://github.com/we125182"
	},
	"readme": "# PostCSS Pxtransform \n\n[PostCSS](https://github.com/ai/postcss) 单位转换插件，目前已支持小程序端（px 转rpx），H5 端（px 转 rem）及 RN 端。\n\n基于 [postcss-pxtorem](https://github.com/cuth/postcss-pxtorem/)。\n\n基于[Taro postcss-pxtransform](https://github.com/NervJS/taro/blob/next/packages/postcss-pxtransform/index.js)二次开发, **新增了exclude配置**\n\n> 注意: 这只是临时解决方案; 关注Taro官方是否已支持`exclude`属性\n\n## Install\n\n```shell\n$ npm install @we125182/postcss-px-transform --save-dev\n```\n\n## Usage\n\n### 小程序\n```js\noptions = {\n    platform: 'weapp',\n    designWidth: 750,\n}\n```\n\n### H5\n```js\noptions = {\n    platform: 'h5',\n    designWidth: 750,\n}\n```\n\n### RN\n```js\noptions = {\n    platform: 'rn',\n    designWidth: 750,\n}\n```\n\n### 输入/输出\n\n默认配置下，所有的 px 都会被转换。\n\n```css\n/* input */\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n/* weapp output */\nh1 {\n    margin: 0 0 20rpx;\n    font-size: 32rpx;\n    line-height: 1.2;\n    letter-spacing: 1rpx;\n}\n\n/* h5 output */\nh1 {\n    margin: 0 0 0.5rem;\n    font-size: 1rem;\n    line-height: 1.2;\n    letter-spacing: 0.025rem;\n}\n\n/* rn output */\nh1 {\n    margin: 0 0 10px;\n    font-size: 16px;\n    line-height: 1.2;\n    letter-spacing: 0.5px;\n}\n\n```\n\n### example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorem = require('postcss-pxtransform');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n## 配置 **options** \n参数默认值如下：\n\n```js\n{\n    unitPrecision: 5,\n    propList: ['*'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0\n}\n```\n\nType: `Object | Null`\n\n###  `platform` （String）（必填）\n`weapp` 或 `h5` 或 `rn`\n\n### `designWidth`（Number）（必填）\n`640` 或 `750` 或 `828`\n\n### `unitPrecision` (Number) \nThe decimal numbers to allow the REM units to grow to.\n\n### `propList` (Array) \nThe properties that can change from px to rem.\n\n- Values need to be exact matches.\n- Use wildcard `*` to enable all properties. Example: `['*']`\n- Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n- Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n- Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']`\n \n### `selectorBlackList`\n(Array) The selectors to ignore and leave as px.\n- If value is string, it checks to see if selector contains the string.\n  - `['body']` will match `.body-class`\n- If value is regexp, it checks to see if the selector matches the regexp.\n  - `[/^body$/]` will match `body` but not `.body`\n\n### `replace` (Boolean) \nreplaces rules containing rems instead of adding fallbacks.\n\n### `mediaQuery` (Boolean) \nAllow px to be converted in media queries.\n\n### `minPixelValue` (Number) \nSet the minimum pixel value to replace.\n\n### `exclude` (Function | String | RegExp) -- 新增属性\nThe file path to ignore and leave as px.\n- If value is string, it checks to see if file path contains the string.\n        - `'exclude'` will match `\\project\\postcss-pxtorem\\exclude\\path`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `/exclude/i` will match `\\project\\postcss-pxtorem\\exclude\\path`\n    - If value is function, you can use exclude function to return a true and the file will be ignored.\n        - the callback will pass the file path as  a parameter, it should returns a Boolean result.\n        - `function (file) { return file.indexOf('exclude') !== -1; }`\n\n## 忽略\n### 属性\n当前忽略单个属性的最简单的方法，就是 px 单位使用大写字母。\n\n```css\n /*`px` is converted to `rem`*/\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n /* `Px` or `PX` is ignored by `postcss-pxtorem` but still accepted by browsers*/\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n\n### 文件\n对于头部包含注释`/*postcss-pxtransform disable*/` 的文件，插件不予处理。\n\n## 剔除\n`/*postcss-pxtransform rn eject enable*/` 与 `/*postcss-pxtransform rn eject disable*/` 中间的代码，\n在编译成 RN 端的样式的时候，会被删除。建议将 RN 不支持的但 H5 端又必不可少的样式放到这里面。如：样式重制相关的代码。\n```css\n/*postcss-pxtransform rn eject enable*/\n\n.test {\n  color: black;\n}\n\n/*postcss-pxtransform rn eject disable*/\n```",
	"readmeFilename": "README.md",
	"_downloads": 11
}
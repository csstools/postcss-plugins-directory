{
	"_id": "postcss-pxtorem-black",
	"_rev": "1-604c6e8b32c26bab9ab0add83509294a",
	"name": "postcss-pxtorem-black",
	"dist-tags": {
		"latest": "1.0.2"
	},
	"versions": {
		"1.0.2": {
			"name": "postcss-pxtorem-black",
			"description": "A CSS post-processor that converts px to rem.",
			"version": "1.0.2",
			"author": {
				"name": "riadloc"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/Riadloc/postcss-pxtorem.git"
			},
			"bugs": {
				"url": "https://github.com/Riadloc/postcss-pxtorem/issues"
			},
			"main": "index.js",
			"scripts": {
				"test": "jasmine-node spec"
			},
			"devDependencies": {
				"jasmine-node": "~1.11.0"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin",
				"exclude",
				"folder"
			],
			"dependencies": {
				"object-assign": "^4.1.0",
				"postcss": "^5.2.10"
			},
			"gitHead": "8f805e30ed2a83fd32dc203ffc05b83d72788a1a",
			"homepage": "https://github.com/Riadloc/postcss-pxtorem#readme",
			"_id": "postcss-pxtorem-black@1.0.2",
			"_nodeVersion": "10.16.0",
			"_npmVersion": "6.12.0",
			"dist": {
				"integrity": "sha512-ZOXWGqVXVmoUjoX2PweLjHlDTtxrjFGLC6M8HToS2v7txciMy6DbibuT+I3srLMPeJOPlub9VbXNvmVw/YGaxQ==",
				"shasum": "3d08e0c126374eb634054375050ec8c28fbd4068",
				"tarball": "https://registry.npmjs.org/postcss-pxtorem-black/-/postcss-pxtorem-black-1.0.2.tgz",
				"fileCount": 13,
				"unpackedSize": 31292,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd5LPzCRA9TVsSAnZWagAAWGEP/RpA6qe5UbUi4Nb1EjLX\nvsEoVd5YLs/mRUhWApkMYSUFGADXE66tLrMTrOsebrsfdNguoS0PriLLgOjO\neYv7/zhw0Br3a8uYFKPjUWwqupxh0K/wr+8TThtSOyrxMERfXtWAhihT/Nu0\nPKUrafdGT2CvILrNoBqv8lA9+2SKvAnHynGv5juLnPxNEcxdJd6EdhxCEMpb\nPth/0h0wx/jao6aJNQd6GTWL/jb3YA3G/YUfEQA0+DCB0pqgDogH7IrQB05r\nnkEyI6xplZG9CtLLdY+41682/K8gNsKsEK6WF3emV3S2FkMX/sdrcIRwFN+r\nZeAPhl0GcVtYXT3B1Gqrf3FjKQYZfwaNrU6EPCKq7dIAwtBr/nDZ042w6K6J\nY9l0kKiZFmVo2QpyzsnXqAPC3qheTpboL3QezUjniCey5d7z7CRYTJvVGUii\nHOeEZzJuPvXejLG36hG+5ezwLPLJmhgfCangiLDQId9N8qRBv4XxCDLgeRxo\nHhQBJxwdGILFuGHTT+LD5le8JCp3TzfREYXXt7Z6KF9QogcbGvVmb94uegtJ\nq+mF7NkAx4JU+OMPMIyW75OKJ0te6c/9aYD87louxEHOwbmBFMRMT0EHd7Ca\nt93XsYqQCRn08jGHPCFf8sXSfOZ6uxZ8m+psRkaqAaBBaoJvIklAHy/suLbs\nO0Fn\r\n=dgIJ\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIA19cJFBUkalElRgnl3YHCKbOXSe/HfaUl9RTzrBcDsPAiBOrkY1HUkUKmzTsm7CJjlkxEVLPWPcfW+XzwaEzWabGQ=="
					}
				]
			},
			"maintainers": [
				{
					"name": "hugoro",
					"email": "wanggle1996@qq.com"
				}
			],
			"_npmUser": {
				"name": "hugoro",
				"email": "wanggle1996@qq.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorem-black_1.0.2_1575269362747_0.599542193102329"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2019-12-02T06:49:22.747Z",
		"1.0.2": "2019-12-02T06:49:22.855Z",
		"modified": "2022-05-13T06:39:23.619Z"
	},
	"maintainers": [
		{
			"name": "hugoro",
			"email": "wanggle1996@qq.com"
		}
	],
	"description": "A CSS post-processor that converts px to rem.",
	"homepage": "https://github.com/Riadloc/postcss-pxtorem#readme",
	"keywords": [
		"css",
		"rem",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin",
		"exclude",
		"folder"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/Riadloc/postcss-pxtorem.git"
	},
	"author": {
		"name": "riadloc"
	},
	"bugs": {
		"url": "https://github.com/Riadloc/postcss-pxtorem/issues"
	},
	"license": "MIT",
	"readme": "# postcss-pxtorem [![NPM version](https://badge.fury.io/js/postcss-pxtorem.svg)](http://badge.fury.io/js/postcss-pxtorem)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rem units from pixel units. Add a new option to exclude folder be transformed.\n\n## Install\n\n```shell\n$ npm install postcss-pxtorem-black --save-dev\n```\n\n## Usage\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625rem;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorem = require('postcss-pxtorem');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    folderBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0\n}\n```\n\n- `rootValue` (Number) The root element font size.\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `propList` (Array) The properties that can change from px to rem.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']` \n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `folderBlackList` (Array) The folder name to ignore and leave as px.\n    - If value is string, it checks to see if file path contains the string.\n        - `['/PC']` will match path `/PC/index.html`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `[/PC/i]` will match path `/pc/index.html`\n- `replace` (Boolean) replaces rules containing rems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorem = require('postcss-pxtorem');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` or `PX` is ignored by `postcss-pxtorem` but still accepted by browsers\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 8
}
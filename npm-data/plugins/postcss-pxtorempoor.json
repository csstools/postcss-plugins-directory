{
	"_id": "postcss-pxtorempoor",
	"_rev": "1-42a77d10999a4eaf371a9d38537c9d22",
	"name": "postcss-pxtorempoor",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-pxtorempoor",
			"version": "1.0.0",
			"description": "PostCSS plugin pxtorempoor",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"postcss-pxtorempoor"
			],
			"author": {
				"name": "DC_LangX",
				"email": "dc_langx@hotmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/DCLangX/postcss-pxtorempoor.git"
			},
			"engines": {
				"node": ">=12.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.3.0"
			},
			"gitHead": "e6adc1fac8c800a79f6e8424e9225da8a5de3b3a",
			"bugs": {
				"url": "https://github.com/DCLangX/postcss-pxtorempoor/issues"
			},
			"homepage": "https://github.com/DCLangX/postcss-pxtorempoor#readme",
			"_id": "postcss-pxtorempoor@1.0.0",
			"_nodeVersion": "16.15.0",
			"_npmVersion": "8.5.5",
			"dist": {
				"integrity": "sha512-bA7P87gmXLUt50mFBg2+6GgQXt8EjFqwrMx1+xDQjBFnB/4cx3cUNfUiHfrcXJw9jyiTRm/vAe3JtRVqvThyrw==",
				"shasum": "347c5dff39be392845e733ad7b5c3f50c8162ad2",
				"tarball": "https://registry.npmjs.org/postcss-pxtorempoor/-/postcss-pxtorempoor-1.0.0.tgz",
				"fileCount": 11,
				"unpackedSize": 14640,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQD28xQipUJ+bf8URe2wC61M0tGBvmdpr/aBIzlyutvupQIgSjt1hVfuv7mFus7yUNo4gl/3nL8eoQuWM+hqDPb4wfc="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiilZcACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrddQ/+P4nKkVYtq48LMelAJQcFZ3PSH0KVkgfXm/2jog8lBdSZJOQq\r\nMB3yoKgLNIeCdt+0VuT2w6CHQ63v+satJ0VsCbeX1ifqUY36nAT8eajrTW2j\r\nVZLYrcrkOB2+4IvUgO3ST0+LD1H5y9GIisjgY0VRLLLRx69aJIXwHeOlfS+P\r\nGn3STUsPFnw7eMoEwXF7Vxl6iJZAxTk8XvBziEr2rRKTWBKAGrvFvjn0hrXr\r\ngLjZ3l1UtzubsnOSWS6OlhiYVPpRdPNek7UAT06W5RRK5X2YRokQztSV5IF+\r\noZ6H8XxCPyQJlRoA6Bq/doe9EuUZVDpdknMVevck/JBSH/TzxiKfUsCTaqJX\r\nhSE5XOdMmDwcFMG5gSiv2D6is5ehQUp0R3wD1OoeLzp2vvvoV1NNLvdzhK+W\r\nxDPwzOQVJxE8GQEDUnFiW0e7ZxNXPiG6O01MITYA514cyi8hqOTf4FmNVHLA\r\nONnunvgj7/i8qpfm/hU2lxxdd4YQ6KtyFtn3ynCJW7PUYGjRNzVxaGkhqGZ8\r\nbE7mQCeZfkx2HZO5Ifn8i8C5JYv/X5VxQ70nYjKZeEYV67z1wa24LLabiVZ3\r\nRjdsCxZK0E0PGH8FMh83cxmox3SMtemzOM/AsAjsSvEaTUzB64FUlvqLp2aq\r\ntsW5Az3LohiIhmSKQ+wsb+SjaSB2+hYh9C4=\r\n=NvCX\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "dclangx",
				"email": "dc_langx@hotmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "dclangx",
					"email": "dc_langx@hotmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorempoor_1.0.0_1653233244460_0.5579858724319187"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "postcss-pxtorempoor",
			"version": "1.0.1",
			"description": "PostCSS plugin pxtorempoor",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"postcss-pxtorempoor"
			],
			"author": {
				"name": "DC_LangX",
				"email": "dc_langx@hotmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/DCLangX/postcss-pxtorempoor.git"
			},
			"engines": {
				"node": ">=12.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.3.0"
			},
			"gitHead": "3bc0e7103ab1322cb73b033e0a489772b23de9b9",
			"bugs": {
				"url": "https://github.com/DCLangX/postcss-pxtorempoor/issues"
			},
			"homepage": "https://github.com/DCLangX/postcss-pxtorempoor#readme",
			"_id": "postcss-pxtorempoor@1.0.1",
			"_nodeVersion": "16.15.0",
			"_npmVersion": "8.5.5",
			"dist": {
				"integrity": "sha512-HP9h8B5gwcePQHhdDjlubO6usplLzjBdrxjFOf8oG+UVzoxJH8YKOGDxcvrmzWF0LY9ppVtJQuMupwR1wxmiPA==",
				"shasum": "54b8d6a39385cd31a404036f405d1892e1e0016a",
				"tarball": "https://registry.npmjs.org/postcss-pxtorempoor/-/postcss-pxtorempoor-1.0.1.tgz",
				"fileCount": 11,
				"unpackedSize": 14653,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIA84GV/HMkyxRMgo9Iwe8Nyf+BG6e3uy5LIjy32AZ2nsAiEA1lVvXMFtsDy+vfHTEeEEF3n06SgnxWvkC2sPEC+h1Dw="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiilgQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqSww//TBiybj+Nf0jjvrECf5bOxzTff1KB2ZxTUS57x/xtbOoZYW2A\r\ntaOuAXYbkHhS6bKBfmUPiRnNTNw7l8C00idY/ntVIYQSfggamHdhAI5EPNal\r\nZZxbrQvQxWP4Ck6w1YuFSxTKGs8aJQQZPDKvEU4VwHRGY0p/x/6FTwlW7MsG\r\nogeFZthtl33H1WMSrQpYwJDoJkuSBnheVAUKkaODpBK7g847J4ymkJBBvaDk\r\nMxj6OE5tPYza+OPgjfQ+2pt/PP04RaA6bBxc07Ea8wj8F985Gew0IbAJQmv6\r\nLMdSHgkSacxW42CyE7/8x6lS+krJbS3DpNMLQ54lN5kJ7wT7Qpc5kHg/i9Ew\r\ngKldT7eQQyzKUAgY1qmdEbY/S92sI7WqXy+AkqFGesPzlTjGVO6d8Kc8Lqhe\r\nbMFY0fSjVxn6WFaKxNa8P9cCo3U3L8LNXJTgWSic62hGuSk0dRTdJhf6XZ28\r\ndWI0AzyZZPDsiRENPhSCm8TPntzAQ1man6bEs2ZEhQWrH5Ii5RZSvpBFsTFL\r\nlCiiZvv1alm5RHrwNNN+cs6nz7wYgXGiJy+J9HCdpWFmNd2rl1YuqkFGQ2JW\r\ngO97bRl8zoTSWt4ugNe50VkVgQCOkKP2XBzLuEj/uasM2lr0X7jJx2FGyeYl\r\nCSXfnSJigy6+aazsmWLAoevMAeGd/I5JAS8=\r\n=EVDF\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "dclangx",
				"email": "dc_langx@hotmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "dclangx",
					"email": "dc_langx@hotmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorempoor_1.0.1_1653233680112_0.9165730338545124"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2022-05-22T15:27:24.460Z",
		"1.0.0": "2022-05-22T15:27:24.592Z",
		"modified": "2022-05-22T15:34:40.318Z",
		"1.0.1": "2022-05-22T15:34:40.252Z"
	},
	"maintainers": [
		{
			"name": "dclangx",
			"email": "dc_langx@hotmail.com"
		}
	],
	"description": "PostCSS plugin pxtorempoor",
	"homepage": "https://github.com/DCLangX/postcss-pxtorempoor#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"postcss-pxtorempoor"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/DCLangX/postcss-pxtorempoor.git"
	},
	"author": {
		"name": "DC_LangX",
		"email": "dc_langx@hotmail.com"
	},
	"bugs": {
		"url": "https://github.com/DCLangX/postcss-pxtorempoor/issues"
	},
	"license": "MIT",
	"readme": "# postcss-pxtorempoor [![npm version](https://badge.fury.io/js/postcss-pxtorempoor.svg)](https://badge.fury.io/js/postcss-pxtorempoor)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rem units from pixel units.\n\n本插件基于postcss-pxtorem，主要变更为添加convertPxInMediaQuery参数，避免转换media中所有的css的px值，原版的mediaQuery只能控制@media这一行中写的媒体查询的屏幕大小的px值是否转换\n\n## Install\n\n```shell\n$ npm install postcss postcss-pxtorempoor --save-dev\n```\n\n## Usage\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625rem;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorem = require('postcss-pxtorem');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    convertPxInMediaQuery: false,\n    minPixelValue: 0,\n    exclude: /node_modules/i\n}\n```\n\n- `rootValue` (Number | Function) Represents the root element font size or returns the root element font size based on the [`input`](https://api.postcss.org/Input.html) parameter\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `propList` (Array) The properties that can change from px to rem.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']`\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) Replaces rules containing rems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `exclude` (String, Regexp, Function) The file path to ignore and leave as px.\n    - If value is string, it checks to see if file path contains the string.\n        - `'exclude'` will match `\\project\\postcss-pxtorem\\exclude\\path`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `/exclude/i` will match `\\project\\postcss-pxtorem\\exclude\\path`\n    - If value is function, you can use exclude function to return a true and the file will be ignored.\n        - the callback will pass the file path as  a parameter, it should returns a Boolean result.\n        - `function (file) { return file.indexOf('exclude') !== -1; }`\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorem = require('postcss-pxtorem');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` or `PX` is ignored by `postcss-pxtorem` but still accepted by browsers\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 4
}
{
	"_id": "@tianz/postcss-px-to-viewport",
	"_rev": "2-4339769fb36c533c363d565d1cbce34e",
	"name": "@tianz/postcss-px-to-viewport",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "@tianz/postcss-px-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.0.0",
			"author": {
				"name": "Dmitry Karpunin",
				"email": "koderfunk@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/mecoepcoo/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/mecoepcoo/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/mecoepcoo/postcss-px-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"test": "jest .spec.js"
			},
			"dependencies": {
				"object-assign": ">=4.0.1"
			},
			"devDependencies": {
				"jest": "^25.4.0",
				"postcss": "^8.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"gitHead": "cd3116e3216dbb9bdb9c3d3771cde87be58c77c0",
			"_id": "@tianz/postcss-px-to-viewport@1.0.0",
			"_nodeVersion": "16.13.0",
			"_npmVersion": "8.1.3",
			"dist": {
				"integrity": "sha512-RMzcAIE5KW/JrZlatOe40kzCgwo/TToK4Sk5FN0meYY34r1bc1iIVhysVux8W0mOSFaONRS9zPR1x230HtVnyQ==",
				"shasum": "7f99018db93afc38529fcf0c0630520b8936100a",
				"tarball": "https://registry.npmjs.org/@tianz/postcss-px-to-viewport/-/postcss-px-to-viewport-1.0.0.tgz",
				"fileCount": 14,
				"unpackedSize": 162566,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhzaZICRA9TVsSAnZWagAA9O8P/0qxHpegTG1wGgJc5t8Q\nWR1YE3YeTceJD11o0sqPkur3rVM8YvnIh/COtr8EhhWL86qd7OppppicO0om\nTneaOUXypbbK2k0IptSrPpx2mGRqMrM7b3FdDzMWiTD+OxFHXIJnPxC/NL2B\nTf66bDhd6nFsby4Mxmrz892F91u46bxBId1Wb8fSfPfdhAjN2zmYtiKHvPJt\nM+By7ylRdTfOuBFdJXsw1MbqV1XRhcKSXL3KkFbHsFWKSDwGnN0LfU9J6VLl\nOqECa/NRyaz1qG7e7Rqfz9j0X+VGQ7jXKmnoks2JOtJ1Si6r7FfN6A4PV2x0\nnTxe6u0aai2PUnVQdaVIsmx3Xyxv26dUZcwh5uVevGYAvRH8P4RkFu9khNd2\nA71Vqw2a63yv8wFt37vTgFvImMzipz+oDJjfGvA2kT2/E1NfZrs01FpP8Lej\nTwiZU9E3HYAWQCdNspSP6k/esCGXkykzZqLEf/dXEs4J//NIlzNyh1nNL+1R\nJkzyJdrQ3od//JDBLa32OpHTaetTRLQH3fbUiYlQ/S9acRe4DL20fUZy/fJF\nm/WINgrMkV+rB10Cms8CHJ+2z/micG9amy4zWtFPxAmKp0Gc77Lewx4oOsm9\nXb5vpyfZZyH3z7vETuTdLXYdlTA4bQko5326UEFu1d0a/mU9D76Oqh9kKsCb\nyMuV\r\n=Bams\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIBa8n18Q7GguQx8OCygKyDlol4yodYoGRkrHEOkhCmSvAiBUSLOM5khNuWhbjn/9VihxRsMOKI9lyXH3Wz2HoOY/Zw=="
					}
				]
			},
			"_npmUser": {
				"name": "mecoepcoo",
				"email": "mecoepcoo@vip.qq.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "mecoepcoo",
					"email": "mecoepcoo@vip.qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport_1.0.0_1640867400276_0.3334541015126684"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "@tianz/postcss-px-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.0.1",
			"author": {
				"name": "Dmitry Karpunin",
				"email": "koderfunk@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/mecoepcoo/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/mecoepcoo/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/mecoepcoo/postcss-px-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"test": "jest .spec.js"
			},
			"dependencies": {
				"object-assign": ">=4.0.1"
			},
			"devDependencies": {
				"jest": "^25.4.0",
				"postcss": "^8.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"gitHead": "6c10edd7acfad02f9082d366e556e6a94720f77a",
			"_id": "@tianz/postcss-px-to-viewport@1.0.1",
			"_nodeVersion": "16.13.0",
			"_npmVersion": "8.1.3",
			"dist": {
				"integrity": "sha512-w6v9YvELkRz4mWxlmBi8yyUjEPWdStW7MzrnCn27S0b3Ell1MNvUQU6KxFxd2lumu708W28aTeGbgUNisaso2A==",
				"shasum": "808b90ddeea8ef3f6b592fe0d623128b2c6308d5",
				"tarball": "https://registry.npmjs.org/@tianz/postcss-px-to-viewport/-/postcss-px-to-viewport-1.0.1.tgz",
				"fileCount": 14,
				"unpackedSize": 163928,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCCjnpeHFNabx0ArgfMoIpUVzPGbXaknJZjATnZcScZ4QIhAJZtNCaNtKMHfUNlalMEvphIx/X9YFll3mLH0g/xsmja"
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJizSV1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr7cA//azxbLtrF3CWAvEQSgqvwBOyEBfkkFoNMHP6ke+OXxTJdhV6J\r\naN8DAKmeMfIaHVCaIlZ4kbvSDSSfD4hx5AfmE/FGwEcy4uPgTgWY7nrMtK+Q\r\nK9sYd2TZoB8YdFWFrTfww9mWdqhqGtUncx3OWIU89vviUdqgo2+nPTEVC0s5\r\nJKYJA0ly884GM8lpRfbG4qBAvd+qp4PI2aUVb3S2NFxsS5uN6LnQkYY0/l2Y\r\noU/UsLxlXGegfdkxbvU+PFLnF2lFPaqjzdwc2KdRFPgEU/XgmeZUJgc5BSn6\r\nXWuEX0gGf55gewLodhanQlcKf/5945Mgp4ecUtP2wknzo6siwauItoCnKs7+\r\nkpHBNSPXfR1Ixu7eddTXVMJgiQ/qDiCJkon8DF4qk9rZ3jsT3VZ9y4dmOQ8l\r\nDhhLJhwOqfESEnp3CehF+YKlbK40Nv5zRcQBxs7qG3u4AEdyTdPx9Thr8KKZ\r\n0s6JOyTjli6/rakSSFELbQn21a4VzDBgIu2X+v3E3EV1lCKNhMHAGI8gTkDq\r\neHLrUY+QSoMYp+XxTZN04b9kgYfOOfwxI/lIQc46c/CQ6yQqh5db2a+NYhS+\r\nud3YUbqT398JrP6icqRsxn7NliP2SWV7xev1ZeymdxMCW2PABYeXWF3r/nZm\r\nTZR4dVhW7ND8bRniMRo+Cgf5qSws5Hfceo4=\r\n=B75l\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "mecoepcoo",
				"email": "mecoepcoo@vip.qq.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "mecoepcoo",
					"email": "mecoepcoo@vip.qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport_1.0.1_1657611637563_0.46017700842749343"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2021-12-30T12:30:00.197Z",
		"1.0.0": "2021-12-30T12:30:00.424Z",
		"modified": "2022-07-12T07:40:37.893Z",
		"1.0.1": "2022-07-12T07:40:37.799Z"
	},
	"maintainers": [
		{
			"name": "mecoepcoo",
			"email": "mecoepcoo@vip.qq.com"
		}
	],
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"homepage": "https://github.com/mecoepcoo/postcss-px-to-viewport",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/mecoepcoo/postcss-px-to-viewport.git"
	},
	"author": {
		"name": "Dmitry Karpunin",
		"email": "koderfunk@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/mecoepcoo/postcss-px-to-viewport/issues"
	},
	"license": "MIT",
	"readme": "# postcss-px-to-viewport\r\n[![npm version](https://badge.fury.io/js/@tianz%2Fpostcss-px-to-viewport.svg)](https://badge.fury.io/js/@tianz%2Fpostcss-px-to-viewport)\r\n\r\nEnglish | [中文](README_CN.md) \r\n\r\nA plugin for [PostCSS](https://github.com/postcss/postcss) that generates viewport units (vw, vh, vmin, vmax) from pixel units.\r\n\r\nThis repository is a fork of the [postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport) repository.\r\n\r\n## Demo\r\n\r\nIf your project involves a fixed width, this script will help to convert pixels into viewport units.\r\n\r\n### Input\r\n\r\n```css\r\n.class {\r\n  margin: -10px .5vh;\r\n  padding: 5vmin 9.5px 1px;\r\n  border: 3px solid black;\r\n  border-bottom-width: 1px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n}\r\n\r\n.class2 {\r\n  padding-top: 10px; /* px-to-viewport-ignore */\r\n  /* px-to-viewport-ignore-next */\r\n  padding-bottom: 10px;\r\n  /* Any other comment */\r\n  border: 1px solid black;\r\n  margin-bottom: 1px;\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n}\r\n\r\n@media (min-width: 750px) {\r\n  .class3 {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n```\r\n\r\n### Output\r\n```css\r\n.class {\r\n  margin: -3.125vw .5vh;\r\n  padding: 5vmin 2.96875vw 1px;\r\n  border: 0.9375vw solid black;\r\n  border-bottom-width: 1px;\r\n  font-size: 4.375vw;\r\n  line-height: 6.25vw;\r\n}\r\n\r\n.class2 {\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  /* Any other comment */\r\n  border: 1px solid black;\r\n  margin-bottom: 1px;\r\n  font-size: 6.25vw;\r\n  line-height: 9.375vw;\r\n}\r\n\r\n@media (min-width: 750px) {\r\n  .class3 {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n```\r\n\r\n## Getting Started\r\n\r\n### Installation\r\nAdd via npm\r\n```\r\n$ npm install postcss-px-to-viewport --save-dev\r\n```\r\nor yarn\r\n```\r\n$ yarn add -D postcss-px-to-viewport\r\n```\r\n\r\n### Usage\r\n\r\nDefault Options:\r\n```js\r\n{\r\n  unitToConvert: 'px',\r\n  viewportWidth: 320,\r\n  unitPrecision: 5,\r\n  propList: ['*'],\r\n  viewportUnit: 'vw',\r\n  fontViewportUnit: 'vw',\r\n  selectorBlackList: [],\r\n  minPixelValue: 1,\r\n  mediaQuery: false,\r\n  replace: true,\r\n  exclude: undefined,\r\n  include: undefined,\r\n  landscape: false,\r\n  landscapeUnit: 'vw',\r\n  landscapeWidth: 568\r\n}\r\n```\r\n- `unitToConvert` (String) unit to convert, by default, it is px.\r\n- `viewportWidth` (Number | Function) The width of the viewport. When it is function, the arguments will be **rule.source.input**\r\n- `unitPrecision` (Number) The decimal numbers to allow the vw units to grow to.\r\n- `propList` (Array) The properties that can change from px to vw.\r\n  - Values need to be exact matches.\r\n  - Use wildcard * to enable all properties. Example: ['*']\r\n  - Use * at the start or end of a word. (['*position*'] will match background-position-y)\r\n  - Use ! to not match a property. Example: ['*', '!letter-spacing']\r\n  - Combine the \"not\" prefix with the other prefixes. Example: ['*', '!font*']\r\n- `viewportUnit` (String) Expected units.\r\n- `fontViewportUnit` (String) Expected units for font.\r\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\r\n    - If value is string, it checks to see if selector contains the string.\r\n        - `['body']` will match `.body-class`\r\n    - If value is regexp, it checks to see if the selector matches the regexp.\r\n        - `[/^body$/]` will match `body` but not `.body`\r\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\r\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\r\n- `replace` (Boolean) replaces rules containing vw instead of adding fallbacks.\r\n- `exclude` (Regexp or Array of Regexp) Ignore some files like 'node_modules'\r\n    - If value is regexp, will ignore the matches files.\r\n    - If value is array, the elements of the array are regexp.\r\n- `include` (Regexp or Array of Regexp) If `include` is set, only matching files will be converted,\r\n    for example, only files under `src/mobile/` (`include: /\\/src\\/mobile\\//`)\r\n    - If the value is regexp, the matching file will be included, otherwise it will be excluded.\r\n    - If value is array, the elements of the array are regexp.\r\n- `landscape` (Boolean) Adds `@media (min-aspect-ratio: 13/9) and (orientation: landscape)` with values converted via `landscapeWidth`.\r\n- `landscapeUnit` (String) Expected unit for `landscape` option\r\n- `landscapeWidth` (Number) Viewport width for landscape orientation.\r\n\r\n> `exclude` and `include` can be set together, and the intersection of the two rules will be taken.\r\n\r\n#### Ignoring\r\n\r\nYou can use special comments for ignore conversion of single lines:\r\n- `/* px-to-viewport-ignore-next */` — on a separate line, prevents conversion on the next line.\r\n- `/* px-to-viewport-ignore */` — after the property on the right, prevents conversion on the same line.\r\n\r\nExample:\r\n```css\r\n/* example input: */\r\n.class {\r\n  /* px-to-viewport-ignore-next */\r\n  width: 10px;\r\n  padding: 10px;\r\n  height: 10px; /* px-to-viewport-ignore */\r\n  border: solid 2px #000; /* px-to-viewport-ignore */\r\n}\r\n\r\n/* example output: */\r\n.class {\r\n  width: 10px;\r\n  padding: 3.125vw;\r\n  height: 10px;\r\n  border: solid 2px #000;\r\n}\r\n```\r\n\r\nThere are several more reasons why your pixels may not convert, the following options may affect this:\r\n`propList`, `selectorBlackList`, `minPixelValue`, `mediaQuery`, `exclude`, `include`.\r\n\r\n#### Use with PostCss configuration file\r\n\r\nadd to your `postcss.config.js`\r\n```js\r\nmodule.exports = {\r\n  plugins: {\r\n    // ...\r\n    '@tianz/postcss-px-to-viewport': {\r\n      // options\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### Use with gulp-postcss\r\n\r\nadd to your `gulpfile.js`:\r\n```js\r\nvar gulp = require('gulp');\r\nvar postcss = require('gulp-postcss');\r\nvar pxtoviewport = require('postcss-px-to-viewport');\r\n\r\ngulp.task('css', function () {\r\n\r\n    var processors = [\r\n        pxtoviewport({\r\n            viewportWidth: 320,\r\n            viewportUnit: 'vmin'\r\n        })\r\n    ];\r\n\r\n    return gulp.src(['build/css/**/*.css'])\r\n        .pipe(postcss(processors))\r\n        .pipe(gulp.dest('build/css'));\r\n});\r\n```\r\n\r\n## Contributing\r\n\r\nPlease read [Code of Conduct](CODE-OF-CONDUCT.md)\r\nand [Contributing Guidelines](CONTRIBUTING.md) for submitting pull requests to us.\r\n\r\n## Running the tests\r\n\r\nIn order to run tests, you need to install dev-packages:\r\n```\r\n$ npm install\r\n```\r\nThen run the tests via npm script:\r\n```\r\n$ npm run test\r\n```\r\n\r\n## Changelog\r\n\r\nThe changelog is [here](CHANGELOG.md).\r\n\r\n## Versioning\r\n\r\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/evrone/postcss-px-to-viewport/tags). \r\n\r\n## Authors\r\n\r\n* [Dmitry Karpunin](https://github.com/KODerFunk) - *Initial work*\r\n* [Ivan Bunin](https://github.com/chernobelenkiy)\r\n\r\nSee also the list of [contributors](https://github.com/evrone/postcss-px-to-viewport/contributors) who participated in this project.\r\n\r\n## License\r\n\r\nThis project is licensed under the [MIT License](LICENSE).\r\n\r\n## Sponsors\r\n\r\nVisit [Evrone](https://evrone.com/) website to get more information about the [projects](https://evrone.com/cases) build.\r\n\r\n<a href=\"https://evrone.com/?utm_source=postcss-px-to-viewport\">\r\n  <img src=\"https://user-images.githubusercontent.com/417688/34437029-dbfe4ee6-ecab-11e7-9d80-2b274b4149b3.png\"\r\n       alt=\"Sponsored by Evrone\" width=\"231\" />\r\n</a>\r\n\r\n## Acknowledgments\r\n\r\n* Hat tip to https://github.com/cuth/postcss-pxtorem/ for inspiring us for this project.\r\n",
	"readmeFilename": "README.md",
	"_downloads": 27
}
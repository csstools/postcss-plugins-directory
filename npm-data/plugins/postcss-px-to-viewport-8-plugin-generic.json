{
	"_id": "postcss-px-to-viewport-8-plugin-generic",
	"_rev": "11-e9c2f68d9ea4169d90d658d0ab0eee5b",
	"name": "postcss-px-to-viewport-8-plugin-generic",
	"dist-tags": {
		"latest": "1.0.2"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-px-to-viewport-8-plugin-generic",
			"version": "1.0.0",
			"keywords": [
				"postcss-px-to-viewport-8-plugin-generic",
				"viewport",
				"postcss",
				"postcss-plugin",
				"css",
				"px",
				"vw",
				"vh",
				"vmin",
				"vmax"
			],
			"author": {
				"name": "ThisIsHermanCheng"
			},
			"license": "MIT",
			"_id": "postcss-px-to-viewport-8-plugin-generic@1.0.0",
			"maintainers": [
				{
					"name": "cheng0505",
					"email": "cheng0505@outlook.com"
				}
			],
			"homepage": "https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic#readme",
			"bugs": {
				"url": "https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic/issues"
			},
			"dist": {
				"shasum": "664a0d0084379d5d87c9491a01d67a19e15db83d",
				"tarball": "https://registry.npmjs.org/postcss-px-to-viewport-8-plugin-generic/-/postcss-px-to-viewport-8-plugin-generic-1.0.0.tgz",
				"fileCount": 12,
				"integrity": "sha512-QnnJtxmcaBBpJskJy+sOIIG0M/xmVVFefsFENTVSAti767Yu7YjW9vPHjRP5U2wMlqfYqBSUbOiQ4bjnKPI1Aw==",
				"signatures": [
					{
						"sig": "MEUCIHcMXwuhI2MBZzQ2ASi0M/qZsq3u4QRIZl25XZyBPHpyAiEA+CqNOWXf9q9hPUPMWxOpuqKgvW5tg5HcQjjHrXb9dYc=",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 31135
			},
			"main": "lib/index.js",
			"module": "lib/index.js",
			"authors": {
				"name": "ThisIsHermanCheng"
			},
			"gitHead": "a2451fe9b9ec2307ff85ab9e6578a8a328177d3b",
			"scripts": {
				"test": "jest spec/*.spec.js",
				"build": "father build",
				"prettier": "prettier --write '**/*.{js,jsx,tsx,ts,less,md,json}'"
			},
			"typings": "lib/index.d.ts",
			"_npmUser": {
				"name": "cheng0505",
				"email": "cheng0505@outlook.com"
			},
			"gitHooks": {
				"pre-commit": "lint-staged"
			},
			"repository": {
				"url": "git+https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic.git",
				"type": "git"
			},
			"_npmVersion": "11.4.2",
			"description": "A generic PostCSS plugin that converts px units to viewport units (vw, vh, vmin, vmax)",
			"directories": {
				"example": "example"
			},
			"lint-staged": {
				"*.{js,jsx,less,md,json}": [
					"prettier --write",
					"git add"
				]
			},
			"_nodeVersion": "24.3.0",
			"dependencies": {
				"object-assign": "^4.1.1"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"jest": "^25.4.0",
				"father": "^4.1.3",
				"yorkie": "^2.0.0",
				"postcss": "^8.3.8",
				"ts-jest": "^29.0.5",
				"prettier": "^1.19.1",
				"@types/jest": "^25.1.3",
				"@types/node": "^13.7.7",
				"lint-staged": "^10.0.8",
				"father-build": "^1.17.2",
				"@types/object-assign": "^4.0.30"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-px-to-viewport-8-plugin-generic_1.0.0_1754808047164_0.38475533144484264",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"1.0.1": {
			"name": "postcss-px-to-viewport-8-plugin-generic",
			"version": "1.0.1",
			"keywords": [
				"postcss-px-to-viewport-8-plugin-generic",
				"viewport",
				"postcss",
				"postcss-plugin",
				"css",
				"px",
				"vw",
				"vh",
				"vmin",
				"vmax"
			],
			"author": {
				"name": "ThisIsHermanCheng"
			},
			"license": "MIT",
			"_id": "postcss-px-to-viewport-8-plugin-generic@1.0.1",
			"maintainers": [
				{
					"name": "cheng0505",
					"email": "cheng0505@outlook.com"
				}
			],
			"homepage": "https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic#readme",
			"bugs": {
				"url": "https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic/issues"
			},
			"dist": {
				"shasum": "d00a7a366feef0308750ac885a1cfa4a4f450155",
				"tarball": "https://registry.npmjs.org/postcss-px-to-viewport-8-plugin-generic/-/postcss-px-to-viewport-8-plugin-generic-1.0.1.tgz",
				"fileCount": 12,
				"integrity": "sha512-208pNVuLUjabYX0/SJTTYZLKe8Gsc2/skt0XEIciwShyv/YrAE9EPxuXa5TuDLWPCF0RQPt6Uht8jf7CfGdVlg==",
				"signatures": [
					{
						"sig": "MEYCIQC6emGtzX9QYna4AXkvsg3lBIHoa8e8dglq8HUlgzcwjgIhAIuvTuBFiApl24w8/vumkS3e8gUR+6sNx0Pm/4aQl2EZ",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 33106
			},
			"main": "lib/index.js",
			"module": "lib/index.js",
			"authors": {
				"name": "ThisIsHermanCheng"
			},
			"gitHead": "ed80f092740a4cbd0f5ce5c9ac141f4ec5a35946",
			"scripts": {
				"test": "jest spec/*.spec.js",
				"build": "father build",
				"prettier": "prettier --write '**/*.{js,jsx,tsx,ts,less,md,json}'"
			},
			"typings": "lib/index.d.ts",
			"_npmUser": {
				"name": "cheng0505",
				"email": "cheng0505@outlook.com"
			},
			"gitHooks": {
				"pre-commit": "lint-staged"
			},
			"repository": {
				"url": "git+https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic.git",
				"type": "git"
			},
			"_npmVersion": "11.4.2",
			"description": "A generic PostCSS plugin that converts px units to viewport units (vw, vh, vmin, vmax)",
			"directories": {
				"example": "example"
			},
			"lint-staged": {
				"*.{js,jsx,less,md,json}": [
					"prettier --write",
					"git add"
				]
			},
			"_nodeVersion": "24.3.0",
			"dependencies": {
				"object-assign": "^4.1.1"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"jest": "^25.4.0",
				"father": "^4.1.3",
				"yorkie": "^2.0.0",
				"postcss": "^8.3.8",
				"ts-jest": "^29.0.5",
				"prettier": "^1.19.1",
				"@types/jest": "^25.1.3",
				"@types/node": "^13.7.7",
				"lint-staged": "^10.0.8",
				"father-build": "^1.17.2",
				"@types/object-assign": "^4.0.30"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-px-to-viewport-8-plugin-generic_1.0.1_1754927648443_0.8430031985230952",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"1.0.2": {
			"name": "postcss-px-to-viewport-8-plugin-generic",
			"version": "1.0.2",
			"main": "lib/index.js",
			"module": "lib/index.js",
			"typings": "lib/index.d.ts",
			"description": "A generic PostCSS plugin that converts px units to viewport units (vw, vh, vmin, vmax)",
			"authors": {
				"name": "ThisIsHermanCheng"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic.git"
			},
			"scripts": {
				"build": "father build",
				"prettier": "prettier --write '**/*.{js,jsx,tsx,ts,less,md,json}'",
				"test": "jest spec/*.spec.js"
			},
			"lint-staged": {
				"*.{js,jsx,less,md,json}": [
					"prettier --write",
					"git add"
				]
			},
			"devDependencies": {
				"@types/jest": "^25.1.3",
				"@types/node": "^13.7.7",
				"@types/object-assign": "^4.0.30",
				"father": "^4.1.3",
				"father-build": "^1.17.2",
				"jest": "^25.4.0",
				"lint-staged": "^10.0.8",
				"postcss": "^8.3.8",
				"prettier": "^1.19.1",
				"ts-jest": "^29.0.5",
				"yorkie": "^2.0.0"
			},
			"gitHooks": {
				"pre-commit": "lint-staged"
			},
			"dependencies": {
				"object-assign": "^4.1.1"
			},
			"directories": {
				"example": "example"
			},
			"keywords": [
				"postcss-px-to-viewport-8-plugin-generic",
				"viewport",
				"postcss",
				"postcss-plugin",
				"css",
				"px",
				"vw",
				"vh",
				"vmin",
				"vmax"
			],
			"author": {
				"name": "ThisIsHermanCheng"
			},
			"license": "MIT",
			"_id": "postcss-px-to-viewport-8-plugin-generic@1.0.2",
			"gitHead": "ed80f092740a4cbd0f5ce5c9ac141f4ec5a35946",
			"bugs": {
				"url": "https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic/issues"
			},
			"homepage": "https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic#readme",
			"_nodeVersion": "24.3.0",
			"_npmVersion": "11.4.2",
			"dist": {
				"integrity": "sha512-9qMnhSvjhnjju4n68vna/EWaSXA82FUWhKfvgPRyF6GEeBFv4/vec6dnj2rJh4kezhcVnSpXTtUkwyH8STed8Q==",
				"shasum": "44131785285a3bf195b3d1d287c41169947f8ffa",
				"tarball": "https://registry.npmjs.org/postcss-px-to-viewport-8-plugin-generic/-/postcss-px-to-viewport-8-plugin-generic-1.0.2.tgz",
				"fileCount": 12,
				"unpackedSize": 35046,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIQC/vPMEXYZqzFE5Aam4rev+IlhT4ZBejLg8q62XdanJdQIgcKmUScPE2NXTGUFs6SjeHwN6yfBxIn9mscv8WK5YV6M="
					}
				]
			},
			"_npmUser": {
				"name": "cheng0505",
				"email": "cheng0505@outlook.com"
			},
			"maintainers": [
				{
					"name": "cheng0505",
					"email": "cheng0505@outlook.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-px-to-viewport-8-plugin-generic_1.0.2_1754927704360_0.6141485520727921"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-08-10T06:40:47.023Z",
		"modified": "2025-08-11T15:55:04.711Z",
		"1.2.5": "2025-08-08T17:02:37.740Z",
		"1.2.6": "2025-08-08T17:11:07.873Z",
		"1.2.7": "2025-08-08T17:13:13.760Z",
		"1.2.8": "2025-08-08T17:18:19.145Z",
		"1.2.9": "2025-08-09T03:21:42.941Z",
		"1.2.10": "2025-08-09T03:24:55.627Z",
		"1.0.0": "2025-08-10T06:40:47.346Z",
		"1.0.1": "2025-08-11T15:54:08.658Z",
		"1.0.2": "2025-08-11T15:55:04.526Z"
	},
	"bugs": {
		"url": "https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic/issues"
	},
	"author": {
		"name": "ThisIsHermanCheng"
	},
	"license": "MIT",
	"homepage": "https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic#readme",
	"keywords": [
		"postcss-px-to-viewport-8-plugin-generic",
		"viewport",
		"postcss",
		"postcss-plugin",
		"css",
		"px",
		"vw",
		"vh",
		"vmin",
		"vmax"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ThisIsHermanCheng/postcss-px-to-viewport-generic.git"
	},
	"description": "A generic PostCSS plugin that converts px units to viewport units (vw, vh, vmin, vmax)",
	"maintainers": [
		{
			"name": "cheng0505",
			"email": "cheng0505@outlook.com"
		}
	],
	"readme": "# postcss-px-to-viewport-8-plugin-generic\n\nA [PostCSS](https://github.com/postcss/postcss) plugin that converts px units to viewport units (vw, vh, vmin, vmax).\n\n## Problem\n\nWhen using [postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport), the console shows the following warning:\n\n```js\npostcss-px-to-viewport: postcss.plugin was deprecated. Migration guide: https://evilmartians.com/chronicles/postcss-8-plugin-migration\n\n```\n\n## Solution\n\nReplace `postcss-px-to-viewport` with `postcss-px-to-viewport-8-plugin-generic`\n\nNote the corresponding library versions:\n\n```js\n  \"postcss\": \"^8.3.8\", // Version 8.0.0 will not convert units\n  \"postcss-loader\": \"^6.1.1\",\n```\n\n## Introduction\n\nIf your styles need to adjust width based on viewport size, this script can convert px units in your CSS to vw units, where 1vw equals 1/100 of the viewport width.\n\n## Input\n\n```css\n.class {\n  margin: -10px 0.5vh;\n  padding: 5vmin 9.5px 1px;\n  border: 3px solid black;\n  border-bottom-width: 1px;\n  font-size: 14px;\n  line-height: 20px;\n}\n\n.class2 {\n  padding-top: 10px; /* px-to-viewport-ignore */\n  /* px-to-viewport-ignore-next */\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 20px;\n  line-height: 30px;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n## Output\n\n```css\n.class {\n  margin: -3.125vw 0.5vh;\n  padding: 5vmin 2.96875vw 1px;\n  border: 0.9375vw solid black;\n  border-bottom-width: 1px;\n  font-size: 4.375vw;\n  line-height: 6.25vw;\n}\n\n.class2 {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 6.25vw;\n  line-height: 9.375vw;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n## Installation\n\n```js\n\nnpm install postcss-px-to-viewport-8-plugin-generic -D\nor\nyarn add postcss-px-to-viewport-8-plugin-generic -D\n```\n\n## Configuration parameters are consistent with [postcss-px-to-viewport](https://www.npmjs.com/package/postcss-px-to-viewport)\n\n**Default options:**\n\n```\n{\n  unitToConvert: 'px',\n  viewportWidth: 1920,\n  unitPrecision: 5,\n  propList: ['*'],\n  viewportUnit: 'vw',\n  fontViewportUnit: 'vw',\n  selectorBlackList: [],\n  minPixelValue: 1,\n  mediaQuery: false,\n  replace: true,\n  exclude: [],\n  except: [],\n  landscape: false,\n  landscapeUnit: 'vw',\n  landscapeWidth: 568,\n  minViewportWidth:1900\n}\n```\n\n## API Description\n\n| Parameter | Description | Type | Default |\n| :-- | --- | --- | --- |\n| `unitToConvert` | Unit to convert, default is px | `string` | px |\n| `viewportWidth` | Design viewport width. If a function is passed, the function parameter is the file path being processed. Function returns `undefined` to skip conversion | `number \\| Function` | 320 |\n| `unitPrecision` | Precision retained after unit conversion | `number` | 5 |\n| `propList` | List of properties that can be converted to vw | `string[]` | ['*'] |\n| `viewportUnit` | Viewport unit to use | `string` | vw |\n| `fontViewportUnit` | Viewport unit used for fonts | `string` | vw |\n| `selectorBlackList` | CSS selectors to ignore, will not be converted to viewport units, using original px units | `string[]` | [] |\n| `minPixelValue` | Minimum conversion value. If set to 1, only values greater than 1 will be converted | `number` | 1 |\n| `mediaQuery` | Whether units in media queries need to be converted | `boolean` | false |\n| `replace` | Whether to directly replace property values instead of adding fallback properties | `boolean` | true |\n| `landscape` | Whether to add media query condition `@media (orientation: landscape)` based on `landscapeWidth` | `boolean` | false |\n| `landscapeUnit` | Unit used in landscape mode | `string` | vw |\n| `landscapeWidth` | Viewport width used in landscape mode. If a function is passed, the function parameter is the file path being processed. Function returns `undefined` to skip conversion | `number` | 568 |\n| `exclude` | Ignore files in certain folders or specific files, such as files under node_modules. If the value is a regular expression, files matching this regex will be ignored. If an array is passed, the array values must be regular expressions | `Regexp` | undefined |\n| `except` | Exception patterns for exclude. Files matching these patterns will be processed even if they match exclude patterns. Works in conjunction with exclude option to provide more granular control. If the value is a regular expression, files matching this regex will be processed despite matching exclude. If an array is passed, the array values must be regular expressions | `Regexp` | undefined |\n| `include` | Files to convert, such as only converting files under 'src/mobile' (`include: /\\/src\\/mobile\\//`). If the value is a regular expression, matching files will be included, otherwise the file will be excluded. If an array is passed, the array values must be regular expressions | `Regexp` | undefined |\n| `minViewportWidth` | Minimum viewport width threshold. Only convert to viewport units when viewport width is greater than this value. When this option is set, media queries will be generated. Original px values are used for widths smaller than this, viewport units for widths larger than this | `number` | undefined |\n\n## Additional Notes\n\n- `propList` (Array) List of properties that can be converted to vw\n  - Pass specific CSS properties;\n  - You can pass wildcard \"*\" to match all properties, for example: ['*'];\n  - Add \"*\" before or after the property to match specific properties. (e.g. ['*position*'] will match background-position-y)\n  - Add \"!\" before specific properties to not convert units of that property. For example: ['*', '!letter-spacing'], will not convert letter-spacing\n  - \"!\" and \"*\" can be used together. For example: ['*', '!font*'], will not convert font-size and font-weight properties\n- `selectorBlackList` (Array) CSS selectors to ignore, will not be converted to viewport units, using original px units.\n\n  - If the passed value is a string, as long as the selector contains the passed value, it will be matched\n    - For example, if `selectorBlackList` is `['body']`, then `.body-class` will be ignored\n  - If the passed value is a regular expression, it will be based on whether the CSS selector matches the regex\n    - For example, if `selectorBlackList` is `[/^body$/]`, then `body` will be ignored, but `.body` will not\n\n- You can use special comments to ignore conversion on single lines:\n\n  - `/* px-to-viewport-ignore-next */` — on a separate line, prevents conversion on the next line.\n  - `/* px-to-viewport-ignore */` — after the property on the right, prevents conversion on the same line.\n\nExample:\n\n```css\n/* example input: */\n.class {\n  /* px-to-viewport-ignore-next */\n  width: 10px;\n  padding: 10px;\n  height: 10px; /* px-to-viewport-ignore */\n  border: solid 2px #000; /* px-to-viewport-ignore */\n}\n\n/* example output: */\n.class {\n  width: 10px;\n  padding: 3.125vw;\n  height: 10px;\n  border: solid 2px #000;\n}\n```\n\nThere are several more reasons why your pixels may not convert, the following options may affect this: `propList`, `selectorBlackList`, `minPixelValue`, `mediaQuery`, `exclude`, `except`, `include`.\n\n## Except API\n\nThe `except` option works in conjunction with the `exclude` option to provide more granular control over file processing. When both options are used together:\n\n1. Files matching `exclude` patterns are normally excluded from processing\n2. Files matching `except` patterns are processed even if they match `exclude` patterns\n3. This allows you to exclude broad categories of files while making exceptions for specific files or folders\n\n### Examples\n\n**Exclude all node_modules except specific libraries:**\n```js\n{\n  exclude: /\\/node_modules\\//,\n  except: [/\\/node_modules\\/important-lib\\//, /\\/node_modules\\/critical-lib\\//]\n}\n```\n\n**Exclude dist folder except specific subdirectories:**\n```js\n{\n  exclude: /\\/dist\\//,\n  except: /\\/dist\\/components\\//\n}\n```\n\n**Exclude test files except integration tests:**\n```js\n{\n  exclude: [/\\.test\\./, /\\.spec\\./],\n  except: /integration\\.test\\./\n}\n```\n\n### Use Cases\n\n- **Library Management**: Exclude all third-party libraries except those you want to customize\n- **Build Optimization**: Exclude generated files except specific components that need processing\n- **Development Workflow**: Exclude test files except specific test suites that need viewport conversion\n- **Multi-environment Setup**: Exclude environment-specific files except the current target environment\n\n## Usage with PostCSS Configuration File\n\n**Add the following configuration to `postcss.config.js` file**\n\n```js\nmodule.exports = {\n  plugins: {\n    ...\n    'postcss-px-to-viewport-8-plugin-generic': {\n      viewportWidth: 1920,\n      exclude: [/node_modules/],\n      except: [/node_modules\\/important-lib\\//], // Process this library even though it's in node_modules\n      unitToConvert: 'px',\n      ...\n    }\n  }\n}\n```\n\n## Vite Usage\n\n**Add the following configuration to `vite.config.ts` file**\n\n```ts\nimport { defineConfig } from 'vite';\nimport postcsspxtoviewport8plugin from 'postcss-px-to-viewport-8-plugin-generic';\n\nexport default defineConfig({\n  css: {\n    postcss: {\n      plugins: [\n        postcsspxtoviewport8plugin({\n          unitToConvert: 'px',\n          viewportWidth: file => {\n            let num = 1920;\n            if (file.indexOf('m_') !== -1) {\n              num = 375;\n            }\n            return num;\n          },\n          unitPrecision: 5, // Precision retained after unit conversion\n          propList: ['*'], // List of properties that can be converted to vw\n          viewportUnit: 'vw', // Viewport unit to use\n          fontViewportUnit: 'vw', // Viewport unit used for fonts\n          selectorBlackList: [], // CSS selectors to ignore, will not be converted to viewport units, using original px units.\n          minPixelValue: 1, // Minimum conversion value. If set to 1, only values greater than 1 will be converted\n          mediaQuery: true, // Whether units in media queries need to be converted\n          replace: true, // Whether to directly replace property values instead of adding fallback properties\n          exclude: [/node_modules\\/ant-design-vue/], // Ignore files in certain folders or specific files, such as files under 'node_modules'\n          except: [/node_modules\\/important-ui-lib/], // Process these files even if they match exclude patterns\n          include: [], // If include is set, only matching files will be converted\n          landscape: false, // Whether to add media query condition @media (orientation: landscape) based on landscapeWidth\n          landscapeUnit: 'vw', // Unit used in landscape mode\n          landscapeWidth: 1024, // Viewport width used in landscape mode\n          minViewportWidth: 768, // Minimum viewport width threshold. Only convert to viewport units when viewport width is greater than this value\n        }),\n      ],\n    },\n  },\n});\n```\n\n## minViewportWidth Feature Example\n\nWhen the `minViewportWidth` option is set, the plugin generates responsive CSS that only uses viewport units when the viewport width is greater than the specified threshold.\n\n### Input\n\n```css\n.container {\n  width: 750px;\n  height: 400px;\n  font-size: 16px;\n}\n```\n\n### Configuration\n\n```js\n{\n  viewportWidth: 750,\n  minViewportWidth: 768\n}\n```\n\n### Output\n\n```css\n.container {\n  width: 750px;\n  height: 400px;\n  font-size: 16px;\n}\n\n@media (min-width: 768px) {\n  .container {\n    width: 100vw;\n    height: 53.33333vw;\n    font-size: 2.13333vw;\n  }\n}\n```\n\nThis way, devices smaller than 768px will use the original px values, while devices larger than 768px will use responsive viewport units.\n\n### Use Cases\n\n`minViewportWidth` is particularly suitable for the following scenarios:\n\n1. **Mobile-first design**: Maintain pixel precision on small screen devices, use responsive layout on large screen devices\n2. **Progressive responsive**: Provide finer control for different screen sizes\n3. **Performance optimization**: Avoid unnecessary viewport unit calculations on small screen devices\n\n### Configuration Examples\n\n```js\n// Mobile-first configuration\n{\n  viewportWidth: 375,      // Based on mobile device design\n  minViewportWidth: 768,   // Tablet and above devices use responsive\n  unitPrecision: 3,\n  viewportUnit: 'vw'\n}\n\n// Desktop-first configuration\n{\n  viewportWidth: 1920,     // Based on desktop design\n  minViewportWidth: 1024,  // Desktop devices use responsive\n  unitPrecision: 3,\n  viewportUnit: 'vw'\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 698
}
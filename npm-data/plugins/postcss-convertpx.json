{
	"_id": "postcss-convertpx",
	"_rev": "1-65f1ba6ec61fce6a09620398ecc24f3a",
	"name": "postcss-convertpx",
	"dist-tags": {
		"latest": "0.1.1"
	},
	"versions": {
		"0.1.1": {
			"name": "postcss-convertpx",
			"version": "0.1.1",
			"description": "convert px to viewport unit",
			"main": "src/index.js",
			"types": "types/index.d.ts",
			"typings": "types/index.d.ts",
			"scripts": {
				"lint": "eslint src test",
				"format": "prettier --config .prettierrc.js --write src/**/*.js test/**/*.js",
				"inspect": "jsinspect src",
				"test": "nyc ava -v",
				"coverage": "nyc report --reporter=text-lcov > coverage.lcov && codecov",
				"report": "nyc report --reporter=html"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/ta7sudan/postcss-convertpx.git"
			},
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"convert",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"author": {
				"name": "ta7sudan"
			},
			"license": "MIT",
			"bugs": {
				"url": "https://github.com/ta7sudan/postcss-convertpx/issues"
			},
			"lint-staged": {
				"*.js": [
					"eslint"
				]
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"ava": {
				"cache": true,
				"babel": false
			},
			"nyc": {
				"cache": true,
				"include": [
					"src/**/*.js"
				]
			},
			"homepage": "https://github.com/ta7sudan/postcss-convertpx#readme",
			"devDependencies": {
				"ava": "1.0.0-rc.1",
				"codecov": "^3.1.0",
				"eslint": "^5.7.0",
				"eslint-plugin-prettier": "^3.0.0",
				"husky": "^1.1.2",
				"jsinspect": "^0.12.7",
				"lint-staged": "^7.3.0",
				"nyc": "^13.1.0",
				"postcss": "^7.0.5",
				"prettier": "^1.14.3"
			},
			"gitHead": "5fdb4ca5823fd2a7bd7e9a86669e40955d5fbcec",
			"_id": "postcss-convertpx@0.1.1",
			"_npmVersion": "6.4.1",
			"_nodeVersion": "11.0.0",
			"_npmUser": {
				"name": "ta7sudan",
				"email": "ta7sudan@gmail.com"
			},
			"dist": {
				"integrity": "sha512-Hvl+1/KcqGzo4mL3hGLCGF9P1GMTTfMxR1a2u8mVlEWxs3IBIHeeQEEWCI3gCcBL7sw9NsheK614lcK9+/vhJw==",
				"shasum": "c6f09391e8df24b8a8e54bd5cd2f97e18fac9177",
				"tarball": "https://registry.npmjs.org/postcss-convertpx/-/postcss-convertpx-0.1.1.tgz",
				"fileCount": 7,
				"unpackedSize": 10801,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6oOYCRA9TVsSAnZWagAAUAcQAJz7/i7RwWRJqtztN8fJ\nQBjKdytcNLYQYt219Gg+u6XKdsVF8AyTOVnEv+hmNbrS+nanGgjntgJXD5Wc\nazK9J4m/t/acXXDFcdWXFqxXUHgV4zRQgJfy+LooXNyZoZ03YiJpZoqPsbrZ\nmZMdW8ql4aJvLLNbrwkk1raava0wFDbSKgJkb7qKT3CrHSse+Osy0+cFgDCF\nw464xqY3aJE8kknnIALl/nerfx6k1d/1HkyU/FnpkhABmil9fb4NhD9mLDcg\nbije+zuYHRuO6SHVPd6n29G18MmzMXlguYYcwrzuPCZKETJMt/8xFdv8H2c+\nXG/7dq+f5/ruqF5pNHbNVDPvx4nR+S+o3vB2K6BiCDW1pU2lZG6YAWLdk0Wy\n73Z0ZWYWes95KfBJoVwvGKsbMDJlsXByGEkSOVkjDRky4/b9aquY887dad2d\n8tZ9x0X91GonASXBg9prM2X4KLXDtKB10v6FUNYNPuVMFbpN4WlOMfByrITv\nWjxPSiqWMSWurNgzToM+NAoBybPc8IqdpB4119jsMR6AN1yu/Gr7C8L9OYcq\nQo8dN71uEy7yaJKLKl+t4IYjvJSUm+g3SJQny9+2glrzhqX5NTUpYIB+/NFM\nS+zxXCxWdXA6IBV787Ata3FYH879Z2+BqhD9mdnFcxHuvPvMbgZyGiwOK8w9\npVrE\r\n=YyRl\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDkOzyD2J1CM0MvlHa8RWGOkJT0CjAy2Z/sblAMxINAFgIhAJllt8DqlJr9mHTCW242lD6wXm279J8idUyg6jMGjKGl"
					}
				]
			},
			"maintainers": [
				{
					"name": "ta7sudan",
					"email": "ta7sudan@gmail.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-convertpx_0.1.1_1542095767246_0.9594040659522838"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2018-11-13T07:56:07.245Z",
		"0.1.1": "2018-11-13T07:56:07.417Z",
		"modified": "2022-05-13T06:10:29.601Z"
	},
	"maintainers": [
		{
			"name": "ta7sudan",
			"email": "ta7sudan@gmail.com"
		}
	],
	"description": "convert px to viewport unit",
	"homepage": "https://github.com/ta7sudan/postcss-convertpx#readme",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"convert",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ta7sudan/postcss-convertpx.git"
	},
	"author": {
		"name": "ta7sudan"
	},
	"bugs": {
		"url": "https://github.com/ta7sudan/postcss-convertpx/issues"
	},
	"license": "MIT",
	"readme": "# postcss-convertpx\n\n<!-- [START badges] -->\n![Travis (.com) branch](https://img.shields.io/travis/com/ta7sudan/postcss-convertpx/master.svg) [![codecov](https://codecov.io/gh/ta7sudan/postcss-convertpx/branch/master/graph/badge.svg)](https://codecov.io/gh/ta7sudan/postcss-convertpx) ![GitHub](https://img.shields.io/github/license/mashape/apistatus.svg) ![npm (tag)](https://img.shields.io/npm/v/postcss-convertpx/latest.svg)\n\n<!-- [END badges] -->\n\nforked from [postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport).\n\n\n\n## requirement\n\nMust set this plugin after [postcss-nested](https://github.com/postcss/postcss-nested).\n\n\n\n## Usage\n\nIf your project involves a fixed width, this script will help to convert pixels into viewport units.\n\n### Input/Output\n\n```css\n// input\n\ndiv {\n\twidth: 20px;\n\theight: 30px;\n\tcolor: red;\n\tfont-size: 18px;\n\tfont: bold 75px/7.5px;\n\tline-height: 20px;\n\tborder: 1px solid #000;\n}\ndiv::before {\n\tcontent: \"75px\";\n}\n@media (max-width: 320px) {\n\tdiv {\n\t\twidth: 40px;\n\t\tfont-size: 20px;\n\t\tcolor: blue;\n\t}\n}\n\n// output\n\ndiv {\n\twidth: 2.66667vw;\n\theight: 4vw;\n\tcolor: red;\n\tfont-size: 18px;\n\tfont: bold 75px/1vw;\n\tline-height: 2.66667vw;\n\tborder: 1px solid #000;\n}\ndiv::before {\n\tcontent: \"75px\";\n}\n@media (max-width: 320px) {\n\tdiv {\n\t\twidth: 5.33333vw;\n\t\tfont-size: 20px;\n\t\tcolor: blue;\n\t}\n}\n```\n\n### Example\n\n```js\n'use strict';\nconst postcss = require('postcss');\nconst p2v = require('postcss-convertpx');\nconst fs = require('fs');\n\nconst css = fs.readFileSync('./example/demo.css', 'utf8');\n\npostcss(p2v({\n    exclude(file) {\n\t\treturn /node_modules/.test(file);\n    }\n})).process(css, {\n\tfrom: './example/demo.css'\n}).then(rst => {\n\tconsole.log(rst.css);\n});\n\n```\n\n### Options\n\nDefault:\n```js\n{\n\tviewportWidth: 750,\n\tunitPrecision: 5,\n\tviewportUnit: 'vw',\n\tconvertFont: false,\n\tminPixelValue: 1,\n\tmediaQuery: false,\n\tconvertLineHeight: true,\n\tdeclarationBlackList: undefined,\n\tscale: undefined,\n\texclude: undefined\n}\n```\n- `viewportWidth` (Number) The width of the viewport.\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `viewportUnit` (String) Expected units.\n- `convertFont` (Boolean) Allow px to be converted in `font`/`font-size`.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `convertLineHeight` (Boolean) Allow px to be converted in `font`/`line-height`.\n- `declarationBlackList` (string[]) The declarations to ignore and leave as px. Note, if use short-hand like `font` will only ignore `font` not `font-size`, so if you want ignore `font` and `font-size`, you should specify both like this `declarationBlackList: ['font', 'font-size']`.\n- `scale` (Number) for `vw` will calculate automatic according to `viewportWidth`. for other unit such as `rem`, you can specify `scale` like `scale: 75`, then `1rem = 75px`.\n- `exclude(filepath)` (Function) You can exclude some file by specify this option, which returns a boolean, if `true` will be excluded.\n\n### \n\n## Skip a declaration\n\ninput\n\n```css\ndiv {\n\twidth: 20px;/* skip-p2v */\n\theight: 30px;\n\tcolor: red;\n\tfont-size: 18px;\n\tline-height: 20px;\n}\n@media (max-width: 320px) {\n\tdiv {\n\t\twidth: 40px;\n\t\tfont-size: 20px;\n\t\tcolor: blue;\n\t}\n}\n```\n\noutput\n\n```css\ndiv {\n\twidth: 20px;/* skip-p2v */\n\theight: 4vw;\n\tcolor: red;\n\tfont-size: 18px;\n\tline-height: 2.66667vw;\n}\n@media (max-width: 320px) {\n\tdiv {\n\t\twidth: 5.33333vw;\n\t\tfont-size: 20px;\n\t\tcolor: blue;\n\t}\n}\n```\n\n`width` will be ignored.\n\n\n\n## Skip a rule\n\ninput\n\n```css\n/* skip-p2v */\ndiv {\n\twidth: 20px;\n\theight: 30px;\n\tcolor: red;\n\tfont-size: 18px;\n\tline-height: 20px;\n}\n@media (max-width: 320px) {\n\tdiv {\n\t\twidth: 40px;\n\t\tfont-size: 20px;\n\t\tcolor: blue;\n\t}\n}\n```\n\noutput\n\n```css\n/* skip-p2v */\ndiv {\n\twidth: 20px;\n\theight: 30px;\n\tcolor: red;\n\tfont-size: 18px;\n\tline-height: 20px;\n}\n@media (max-width: 320px) {\n\tdiv {\n\t\twidth: 5.33333vw;\n\t\tfont-size: 20px;\n\t\tcolor: blue;\n\t}\n}\n```\n\nThe rule `div` will be ignored.\n\n\n\n## Skip a media query condition\n\ninput\n\n```css\ndiv {\n\twidth: 20px;\n\theight: 30px;\n\tcolor: red;\n\tfont-size: 18px;\n\tline-height: 20px;\n}\n/* skip-p2v */\n@media (max-width: 320px) {\n\tdiv {\n\t\twidth: 40px;\n\t\tfont-size: 20px;\n\t\tcolor: blue;\n\t}\n}\n```\n\noutput\n\n```css\ndiv {\n\twidth: 2.66667vw;\n\theight: 4vw;\n\tcolor: red;\n\tfont-size: 18px;\n\tline-height: 2.66667vw;\n}\n/* skip-p2v */\n@media (max-width: 320px) {\n\tdiv {\n\t\twidth: 5.33333vw;\n\t\tfont-size: 20px;\n\t\tcolor: blue;\n\t}\n}\n```\n\nBy default, will not convert media query condition, but if you specify `mediaQuery: true`, this comment would be useful.",
	"readmeFilename": "README.md",
	"_downloads": 5
}
{
	"_id": "postcss-tidy-columns",
	"_rev": "22-19d41b0d2061246548cfc566e54deece",
	"name": "postcss-tidy-columns",
	"dist-tags": {
		"latest": "0.4.0",
		"beta": "1.0.0-beta-3"
	},
	"versions": {
		"0.1.1": {
			"name": "postcss-tidy-columns",
			"version": "0.1.1",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"eslint-plugin-import": "^2.12.0",
				"object-assign": "^4.1.1",
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.5.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"eslintConfig": {
				"extends": "eslint-config-airbnb-base",
				"env": {
					"jest": true
				},
				"rules": {
					"yoda": [
						"error",
						"always",
						{
							"onlyEquality": true
						}
					]
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "2ec1235e177a2344400a11747413a7cfa0a6e49f",
			"_id": "postcss-tidy-columns@0.1.1",
			"_npmVersion": "6.1.0",
			"_nodeVersion": "10.4.1",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-NH7pFKOq37UED4KRbShRYA9MDHJ+V0OR+vDVFEFi5ffheUZNAUDclP3MghOWufM3NssHCodxBSFkyq1c4c912w==",
				"shasum": "72960dd7a94f27c78fcf68946024bb98c5fc0f4a",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.1.1.tgz",
				"fileCount": 74,
				"unpackedSize": 75193,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbczMZCRA9TVsSAnZWagAAjkAP/2cnFtFFwaVElIAsjMXF\nNtVmtNS+X2NNB1xGekPZSNIggQkcHzP3b5t1F900EiOioQNFlU5ACXXooknl\n+lcm0QE4mjaRRYs0DYtNNuI20h3xnurVMS4PRah129wbuuJIxpaZ2xE+CJrd\nWsLDBWbhbN8kRzGO28c72gxv9RZy97HkMOLMzYhf/rB43K1Ii69T5j3fewtk\nfGHvunmegIDEFlgdvwUzRoJ/mA/wNzUYMMQY0hdCcVvFVK7qOmHAKoZc8mKi\nFk6WdKO3NxdYfrPxKHJDaJLFk5TqhZHnTHzVM85plKDhavkAQOhBwsioGbQx\nEqfFCuED8nsKQS1e/g4+V0BWLNTF+hg6ErF9ohjp57yLu+4BBDgN3dw0ScP1\naUm9YKPEJkebYQDQCZX77gZ9w1GZKzw3ODXNBGbeIlYEtMVwn48njbLMhPgB\naOELWQrFPpciqkxO/QQgvYN1VcSUo99K/f1SGwr00gTSa+OQ36cYcuaZfSaE\nwfuqWqQToG5DeOQc08zUf6K0Ok+H8FGgBWLuHpRZHLy5h3vPvEYI+aEXePc1\nWBoMHlc5UMiZA2PvCQF61ssk+74FcEUgOXXIDChrnjHOCwRxlo8x0THX+MnT\n1X+3GP8Ek9edZQqQTopXlx/VY4FONmYbp7SxPdI/Pc/XelejOWE8yGoGqUe1\nbbEc\r\n=+c/q\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDN9nFy23zZvip4AuIa2zluLuaig3VgkLo+m1aVdGmIBQIhAIHOByo54UPkIRUQWSVTaOEPgFMiyRH0vFETIcqU37bm"
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.1.1_1534276377303_0.3303180820791156"
			},
			"_hasShrinkwrap": false
		},
		"0.2.0": {
			"name": "postcss-tidy-columns",
			"version": "0.2.0",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"eslint-plugin-import": "^2.12.0",
				"object-assign": "^4.1.1",
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.5.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"eslintConfig": {
				"extends": "eslint-config-airbnb-base",
				"env": {
					"jest": true
				},
				"rules": {
					"yoda": [
						"error",
						"always",
						{
							"onlyEquality": true
						}
					]
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "a6542299161cfafb1a21d909263708d4d81ea2a1",
			"_id": "postcss-tidy-columns@0.2.0",
			"_npmVersion": "6.1.0",
			"_nodeVersion": "10.4.1",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-jMSzjWscZ8676qRjOlj980TUUddTIutEghDfaN+nhfPG4ULQnGmmM8ELZMcmv4JhVjJRTZyvBafVe2zOyuLUbw==",
				"shasum": "56fe65b42cddd8d0807582198c49e94b6e4f5db1",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.2.0.tgz",
				"fileCount": 76,
				"unpackedSize": 79427,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbjNpgCRA9TVsSAnZWagAA0rYP/0zsJBHjEMeOkny9T8GG\neqd0zaQP5wl5Xrw6qvt4Zk1zH+/Lffbsh/LIHDS75GnqyEPobhbDAYntDog0\nha4BjUrXWmX6G5xUCsmR562rN/vep0ZE+DeyL30Pfw+sdevpoVRunMzBCk76\nHNGiZX4YEPXBaS4cPu29elyt9B2D3LdHJTJ9icQLBSnTIr6rSXc7UfyDjKkr\nQrQ0q6hIHQb2dYf5Zeej1zZOScUTsEFsMeAvQgQu3x15SH9eCojdG0z8xwrk\n8CENH8aWjd918iIsoSwcdZ/jX/lKznkpPsTjL3rc56gFUK1obSptW5wHwsdp\ng+A/yOH9NAME1JoIBZPICiXgs4U94tICrbicpi9p8tfjHXHQkErnzRUsGxB1\n3QbOT380MPWB+YKXP6033ODF55qlCm0TFGQ5raehv8uiWCxstwFJJucmHdJR\neF75cHak+ml8bCtBJpmMgmVj+B9Z8a8eSAJKpylziHwWJg3hTfGViq9hascv\n+VcYZ0xXQxCpd79OEBBrCFymn5bPy2DaQjOWrnL3yenGdHE1MaVF1+9OLHsR\n4OqbFXqoqPDQMmvQYu8Kut03lxW4VQ0LTkNfBs2pVHzHlK8CWI08k9c/pZXT\nCIiauX3vYWLLeq1krI3fY30PlZVP54vIzKIrdHlG+/e9Ay9ale3vJm8v12xO\nM/eR\r\n=FFaC\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDmceXZtRSWRtKaacoNoCcedKZGNxLcoQNJ0pv4WCvFnAIgKmdNIqwdHG1ZXt9ODYrN1UySYgqCWdzQJCyqViMs7c4="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.2.0_1535957599830_0.8656496776305385"
			},
			"_hasShrinkwrap": false
		},
		"0.2.1": {
			"name": "postcss-tidy-columns",
			"version": "0.2.1",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.5.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"eslintConfig": {
				"extends": "eslint-config-airbnb-base",
				"env": {
					"jest": true
				},
				"rules": {
					"yoda": [
						"error",
						"always",
						{
							"onlyEquality": true
						}
					]
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "648013a8d803e45c12366c2aa35d6ec599412579",
			"_id": "postcss-tidy-columns@0.2.1",
			"_npmVersion": "6.1.0",
			"_nodeVersion": "10.4.1",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-GpoT5N35lrL0khwAv588KRfcj9wSFmEoEdveNFYI6QJD54m1M2t134aqaWhVbLGgV25k/4fuvjoWgOwY1JvFjw==",
				"shasum": "ebfb49ddf6fec7e4a6e62b0ee931c2bc499cac39",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.2.1.tgz",
				"fileCount": 76,
				"unpackedSize": 79747,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbjOV7CRA9TVsSAnZWagAAT4oP/1OXy1n256JYcjz8Iea4\nlnSDBlremRkZsVL8cJl8XIBhDPZFDSsybnRGphCAy1asiudNNU67yUGAtwPL\nUPtMKHTNr0HLtXB9Kt299CnZmYQZ/A7uGLE9jtCPOcVrJjwOFsnu6NcmWvFi\n9W4hR9rt2R+umtS+XYpp/vtpRk70P39OpzKvX8GWZqLjfJWhpr7UZ74QVysB\nFqIjw7pEOlsCGkgDE5mC6o7FBSTFRmYX4H9ukAUCoVrdS7SFiCpnpW1o7+ae\nVSfzYEfBRMNE65u8viYI2CGBaDnIjNXt7kwP2julUDV/1fN8pHzlIW+4xew5\nl/VDytVG2v+WSOK2BUhPVX9yAuYXiG0426azXsq0kxE/zuMUE81RnAaxb16k\nwwl0Vp6r2mKK2PjtY4ppSRJbNJEze5NBDgma/nxt96qRLY8jIcDAaPVZOYpi\ntMOkOkmLgGH3qnMkk0NsgMrJN2EuuKGFM+CNwGRowh/e+JSzJ4ea26VM6bsk\nq8wklhWzV5mEC5weg1CjmzSH8od/jNG/Wd7je1U0z0q/VXuGh1aLFdTN+CJN\nisa3CU3C04q0Mre37rTEMGZhP/sB/oZwu8FDPl015yvg+5MmcjGPAe7OyzIh\ns6khDL5ZCtEomNduHHeSBHGVrpl9if1PoiKb6KfGFKFR0tmKQ4VI90AdhgL5\nCZev\r\n=98Po\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDNdikmeyltC6pl2kbudWYl9PHDHVyvw+ruiMHblBKOIAIgGOl/HxLLxIEDvbnxxFVPZmJLIRRPvAOUys1bYqMl/6A="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.2.1_1535960442607_0.3226855435681415"
			},
			"_hasShrinkwrap": false
		},
		"0.2.2": {
			"name": "postcss-tidy-columns",
			"version": "0.2.2",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.5.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"eslintConfig": {
				"extends": "eslint-config-airbnb-base",
				"env": {
					"jest": true
				},
				"rules": {
					"yoda": [
						"error",
						"always",
						{
							"onlyEquality": true
						}
					]
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "54136af0c1e85ac7fc63131f42b1cb678bf697dd",
			"_id": "postcss-tidy-columns@0.2.2",
			"_npmVersion": "6.1.0",
			"_nodeVersion": "10.4.1",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-UA0qGjcqy563rBZx37QVcAIs9zVOewenHASvIXTH84Vy8pMMqA9UTW1tzc25h2W2cixiG+fMKLG64UKVIpLJFA==",
				"shasum": "38b599878542c672272d995cb6bf985399598bb2",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.2.2.tgz",
				"fileCount": 79,
				"unpackedSize": 89860,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbj0OaCRA9TVsSAnZWagAA1oQQAJMtcxKmJJJjCypJVFTk\nh51SeB/HCg78nsMUVjI7dn7XqpWwqUFP93Hc0PByN81muRVTzYVcXR1JQ4ML\nDE6rt0/zs3U2vK5v5bMGUaBaBXBN6QDro9E5lzEV7S7IN4IZhQ/HtriS36jS\nUdWf+m+gMeywQimlYu0feQENTneL9eWA/yxrqMmFycSz5Ss1rjrfA3/8raDs\njVzQ734JoyT+xT/fhiuDBUkU6zMXEt9AknAqH6TcSrEO/jmF7QYllwmCqHNs\njaa8XtDeJYJdgjeZ4ZC+tUqgI6nZs54MV/mhDg7te91ZmZmDDOpjV7XWPnbP\nWCmhGS9HUJc/m46AOSFvmynepFQMzHvzBwpzPicJowBUzGyKHggRE6qX8P1P\nNAkgcPj0x5OFIGyMUejHAKBaOmjLTElWD9FvAakKTQ4mcrxA/CY0ftTKJQ1c\nCPbLiBB+IU7S+93Il34gQXrKEMEH53dbYLM+Jy/zskUD9+CpDVjccbbv16B1\nMerZQdWuTdu4Ych1oXdR2YjxgZ4pLP0mA5PDczz7Q/7lSSmeNmcLcL1IVmQY\ns79KkY61Kwt7l2BjzcmgRGCYTogM6TS3vkKbeQxyp0CePffJcwvvHnwuhn+R\ngnKbnTJ1G/KU9H91ycE5DQBoly6CSwQkgkB3qCSKRNZNzuyiizMR4SPp5bF0\nhqs8\r\n=YKXi\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCiR7Q4FRhXKCmH8kzrUmkNklJ6q3Lmxa8V11RxRmmd6QIgBEFnctKTV3DxCVB9AnLCQwVIJwqY5PrOpppoMVL9/r8="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.2.2_1536115609471_0.47257582511934126"
			},
			"_hasShrinkwrap": false
		},
		"0.2.3": {
			"name": "postcss-tidy-columns",
			"version": "0.2.3",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.5.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"eslintConfig": {
				"extends": "eslint-config-airbnb-base",
				"env": {
					"jest": true
				},
				"rules": {
					"yoda": [
						"error",
						"always",
						{
							"onlyEquality": true
						}
					]
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "42f5a7b39f15b411471b24fe2e6b9ff7100b1133",
			"_id": "postcss-tidy-columns@0.2.3",
			"_npmVersion": "6.1.0",
			"_nodeVersion": "10.4.1",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-Eem1Q3VolZ2qaxVyX1+HRiOVrAVcMdHdn4xYUEvGZ1X5J4s3tc4Wj59c9OjguwloQk93SsHvtegqJHg2h8qbrQ==",
				"shasum": "77ade0db49c410859c9bcf962bcbef5b7e812e19",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.2.3.tgz",
				"fileCount": 91,
				"unpackedSize": 107423,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbk26LCRA9TVsSAnZWagAAiVEP/1ZUzaCO+jcR39bh2QSu\nIzdN7LmXZzNSaluKE8DH6H14PEB7Dz69gqYPbsDTpNTy53Z7PEEfoXszfPf5\nL4sJqItOH0wu+S+JiXjZkc3Kg269NkjktsfDkSSnvQjUEERhdFIZax1YakaY\nb5WgPY2eIFlFHbC4BnugEKi4sW3TMhOa/VVJ5cB1Y17zIZANm4Y2pmKUk7gI\nq1StgrtMyhJlJO9YzDKp5YMF1YAKMdu+DI00aadKuBm2PPt+V4hVYPZFEupW\nHsuhlyhR3fbbVYq2UqorCTXxlTPTUI80Xu+L8bV/l1L3si0Rb464VpB+rIgH\n3uD3TK+NSUX6OufQpnTMFBePTGmoPv2BZEESYEwOmHDGAP7v7aquMon4PoyD\nyR2ilFVhxp0QxDbx4FMvEomt5gZHw98o9tYLI3eghZSLxyLa0fPyOuinn3IA\njEle+dVCpbYWj4Yv5mITWGR50Ou9MNcvUF7XqqRZc9gfuwXPhQ0sg/hL7dxM\nlLElS8DxigbFbMKJOAtV1IvpGPluzB6xixrXVZC/EKjAI5vIqFtHFQVylxcw\nOb/8Z3NApCbcmMrEJrp92S4X3blcxchDdfotpRfx17BHMLz+3uk+WPH3wJpy\nOjfgJPqFgooNDaD+CTmYxrYz63w/G43zZuAqRr/Q3oi82XQ26HQdQo8aNK5R\nO+NJ\r\n=aAeR\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCICW0DpA7N8l8biWW/uzgipcob6HzdaTtdPOf830K1Q7mAiAvoSqO4XfAPId42A6d6A09+mHpYvyAogynQ27pnGnuWg=="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.2.3_1536388746382_0.40654399049443835"
			},
			"_hasShrinkwrap": false
		},
		"0.3.0": {
			"name": "postcss-tidy-columns",
			"version": "0.3.0",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.5.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"eslintConfig": {
				"extends": "eslint-config-airbnb-base",
				"env": {
					"jest": true
				},
				"rules": {
					"yoda": [
						"error",
						"always",
						{
							"onlyEquality": true
						}
					]
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "7d23e4710c67a179f094c4e2407e52576a7ec193",
			"_id": "postcss-tidy-columns@0.3.0",
			"_npmVersion": "6.1.0",
			"_nodeVersion": "10.4.1",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-FR3Vzk+cSveufYDNQ6lYXV3OUro48jESoyWHuiMOUqeH036MFHSYzhn0sXK4HmDFLjFiQ10KKEw8RTC0Tz3xlw==",
				"shasum": "a3bfec20a92546087a2b59492bedaa20a4ede4e5",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.3.0.tgz",
				"fileCount": 91,
				"unpackedSize": 107085,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbk3z4CRA9TVsSAnZWagAAX7kP+QBTQ/TgramOvQbBkVlM\nBf3pIi4+gfUDQy1pxUDLZB+yGOebL2J1EdBhzFi9jIjl6lQDHaZeMn0zyFAj\nmQVxpnjlxgLQYbIwltY7j4GrsntNik6nMDvHcnkELVLHIx9j+lLG50869Abn\nn58YbdceUkUFnF/BgmyzkXi3wWlEtAUor55/Awnod02vKg2qDAzqznC+ILtR\nLk7NeICX/Eqte1DV50da4yulxKIuGtf2MJLfBb3GJ+h2oLX5rgScax4H23jT\nLixUpqJpG/7EqF0vVxtZV1z4UQDKs2431BvTQgMTBEISfcuslWGs1S9oMGUH\n21oT/yqrsfv9LShhvMMU0ro5eBHG5i0MqivmWFK+sElwSk4+/WP7cFVEKlAj\n3HgKQCK7GgoJqH0RdDmaStXQL/OsvgWUJksXFwFhBPk+bsPXQbUhcisqA2nX\nV4V8RsvwTqqxu6nDilfgFF+BnXh1uRaLyUZA3d2zKzqQgvgoW90LpjUHzuh5\ndILKI20FswsiEOKOsAuYOr+06FoVor9CCuzlHNiAF8fJw63lwHQTQlrplTUB\n2NCMXyHkgcu4MV97CmUcmdPUbvA1ZXjT7oYEUmcojIwVHVlFNsPgg+VZ2ip0\nnY0oCYYfWrW4HuD7wlF9kOO9/0tGP5auVLV12ekVesSyb2arq0wheuyCLotV\nbz55\r\n=utDS\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIG+IOWbSvGaKlzmGez5TS+ZfYf3R/4C8uEKNbtsBX2vrAiAPwwig7WWSy4heFifNXV75j6NmvsVuKmErRTItxeLWxg=="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.3.0_1536392439605_0.8520398434070386"
			},
			"_hasShrinkwrap": false
		},
		"0.3.1": {
			"name": "postcss-tidy-columns",
			"version": "0.3.1",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.5.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"eslintConfig": {
				"extends": "eslint-config-airbnb-base",
				"env": {
					"jest": true
				},
				"rules": {
					"yoda": [
						"error",
						"always",
						{
							"onlyEquality": true
						}
					],
					"max-len": [
						"error",
						100,
						2,
						{
							"ignoreComments": true
						}
					]
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "519aadf168ca4394d419e2cc0877d8eeca3b1ec1",
			"_id": "postcss-tidy-columns@0.3.1",
			"_npmVersion": "6.1.0",
			"_nodeVersion": "10.4.1",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-QcosyfBFZUFjjyniBehFTIynijpPEx0DtYiiMZzcbSI8jjlDS95+gIwDuFXRSkao0Wo57LhmP3XkNVyux92faQ==",
				"shasum": "9b1716dfcd80ceb14f4af543a2eb47e40d5bd7d4",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.3.1.tgz",
				"fileCount": 31,
				"unpackedSize": 60358,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJblfwoCRA9TVsSAnZWagAAn+4QAIZTMpe4TwaPlgRFcBWY\n6LTNl0dbKNVXyhnSlYi7nkR89sfyUdUPjEyi66vCx3mUrNlo2Fz+hAx5m2Bf\nbIsvUYEqK3oP6IkPTnpwYBhezEOKNdAwXaYDR4HHO17X5LXQLGndqDZ2fj6r\n3foyUt40HMC/suSMtSIWl2465ul9JbZAHq4Jkzm3OL7EFjbYbpiLj3CVnWH+\n9wyLQeeRk15f5GLIxBmdEG2mi+pc8vPEPYd7KYbKlrobVD3GoSroSA1hnyPq\nzjzUdF3itSJJAMl3hcTyxPIV6RjLmNZNDHKsPC60d8uywJw3zxn3lzOTb5hv\nKRBIRhEc8LfSnJ+Uxwy65GFSlQiqy/+Pkb8Jj5LyTBp12+64n4rIccsPGgPO\n6/QzmgWG27pxspY/vQhIfFKITp4T58FrS3OY84vp8JGde/9+bJ2lQ9BQdbOa\nfH5OIVqJJ1BzL5VZMxPfADJbhg1eWXwO1DY19XOz/Ig1z8nIwVXYde2ns1k9\nnDuqbf+VuBGzbVaVhXLRj9SBpknIMH74rEEkgTAQeVI6O+hFx/Nvb78oUxmV\nDz+CwZi0AvGeQUQ/k7NGKZWUl0yz3DflBo24Z5jH9ocCDVw7Q8jPOGEtX6x6\nuaeCnoag4diuWyVMnZLMKbqRAbbLkQ48QVH6qr+RaSp7VxLhc6KzPkfHuB6D\n2tvW\r\n=EunY\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIGTCLuktWIejZJOlbPPDevv85AtrtHPu18Wi8/yJgiKXAiEAqQXuajHAT58tzcop+d4KV7ZDHLVwz4kQlIkMUkyae+o="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.3.1_1536556071462_0.39988281619797217"
			},
			"_hasShrinkwrap": false
		},
		"0.3.2": {
			"name": "postcss-tidy-columns",
			"version": "0.3.2",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.5.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"eslintConfig": {
				"extends": "eslint-config-airbnb-base",
				"env": {
					"jest": true
				},
				"rules": {
					"yoda": [
						"error",
						"always",
						{
							"onlyEquality": true
						}
					],
					"max-len": [
						"error",
						100,
						2,
						{
							"ignoreComments": true
						}
					]
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "4ef9e82b3be9d5498f362383c6807a6160c82d16",
			"_id": "postcss-tidy-columns@0.3.2",
			"_npmVersion": "6.1.0",
			"_nodeVersion": "10.4.1",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-4TEcTqH4t5rlzbqCdK24qm6Cy3gwUG14tDDmv6B3CkeE14oW0NNaPomfBU2hjc4owL1F2dEyxScjZ6wjD22qEA==",
				"shasum": "83e63fcdd88f87306ad5601ab1511929f8fa1569",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.3.2.tgz",
				"fileCount": 31,
				"unpackedSize": 60608,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbnKvICRA9TVsSAnZWagAAS2MP/2g3QEqobDihrKszc9C2\neZvNiZOPJSWJR97fMLP9PGSD/i5nLtQ6G1qsuECrPUUIg32QwcMzRxUmkGAV\nSss5Hvw+B/toGWyj11E9S3L6ACJrN1UrIug/voMQDejxKjEWC16lOBw7t3a0\nM7FOSgRYzY8eZrqBRfcUZH/MK655h64g/5815X5qX5lXUKOEXAGs7A8Gh+88\nFN6v2G3OxhHvWG7CG2fiJhOzJzfbzX/fLPFTZME/uEUZ+YQtbMOmrGtJj6XX\nR0kuvvnqzkfUuaO5trT4sKjPQDEq/MQ6UI5OU5UN1Xy4HxXqjwLnRq6n1TtI\nbWJbp+iysQCBSH5XCr7r7oMwIqxYt7qnplY5YOQMpHhcxjTJ9ChmOiOKS0bJ\nWzM1uI4wrh1X8MvDQN6LOGgI81a7SwnurslYrL7Sl80j2JpAM6V1Eg+hj2b8\njKAKMGIQkZq/upXQZNKPrLn2Qp7vJEhqAjH24YT+fPVPqarIWit6Mabzb5+S\n5nlUMe3vlLMlmCKzgbfzi4L9TEy5ZJ1uIXNTIHyRIR+3mp0K+CHornrUhnwQ\na+j6k6AukgOdsaQ94IiV6PL+rzfX7wJZspKs7VUkd6Fqm2ce0cz5Ez0BZ7xU\n7eVY76JXQrBs9NbO0LH+LHKbLd59yegT4wiHqbzdnHtBChg8vTxGkM9jZX+V\nMUaO\r\n=yp0H\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDI35vnbLops3+llz0GwpHbQjyH9lrSqId0FDCvTukcrwIhALWIH3dyeD+CAEueXJFByFK59kzK/ewhG0qWupTRMfYQ"
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.3.2_1536994247958_0.11561357084230184"
			},
			"_hasShrinkwrap": false
		},
		"0.3.3": {
			"name": "postcss-tidy-columns",
			"version": "0.3.3",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.5.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"eslintConfig": {
				"extends": "eslint-config-airbnb-base",
				"env": {
					"jest": true
				},
				"rules": {
					"yoda": [
						"error",
						"always",
						{
							"onlyEquality": true
						}
					],
					"max-len": [
						"error",
						100,
						2,
						{
							"ignoreComments": true
						}
					]
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "9f655d6c342d82f5eaafd9b05185902195c5bc1b",
			"_id": "postcss-tidy-columns@0.3.3",
			"_npmVersion": "6.4.1",
			"_nodeVersion": "8.11.3",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-x7jPSlT7nblk84NYgtgm+zHpZTV3RBjKriqb1/btqc4Zq9nFQxhK6dNbqAGRPuul0R29SeuPItJWqBm2uGeBIw==",
				"shasum": "13dc95643a84759b21b8437cbf61ec80b0359bbb",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.3.3.tgz",
				"fileCount": 34,
				"unpackedSize": 91866,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0VMACRA9TVsSAnZWagAAHbgQAI+KRaVBjGcjBdI/dSIU\n9nHdgZBqB508CTycCqhmpJst5ZJmLURMjkIhFAJBum+f/gtj8t0edGefnGmZ\nHJCqYuw57PxGB1OadmvaR5wPuctlB4Ck+VtJR2tytLrwLShkZvPSOX1ddBIr\nO5sMVkMn6R3ATCgDp2HHVaw3nm/ikciVCxnA5ui3o8/iM2bYZEE/gb9/HpYa\nGth5fZ+z6QxsE748YpM9XeYnNFGlOHgNBz3chBBKnzuTMuuk6MnFr1Fm2Tus\nxGsarzBh8bXOMqaqy+s8PmlwKzSysL4iNV2QDssy1Q/Q4HaF037Ho1tbbgyO\nSvNMhDTyLLNd+56xLOitkS5QO+UKzRQSFwjdli0sJaHjbUnBHoiCDwOtV0FF\nQDGEEqCwijMXbPTBSp+kUE2CqB9Lv4RKk4i1FoUzjKAULVgb5z3GKxWI95LJ\n6Q8RVdWDelI5bHmQ6//Pw0oUPlSLDBtajkuwcyoAUwQG4WxBuGMxxoFGwGp5\nJH6EpNrHegG8zlHpVcN/uLDffFKCCElzpeQTfJZvrKHVjZwSMVB7KraBvPZO\nDtOvacnzYcca9wKLiBu7YA26QlgTRvn4IA23gXdFxxBOeEvxLzEPv3rmMnY3\nJ+VvFWZURh/lk4Ne/6xhV2GjPYZrJqpkgOQIF4NMDjvoCq7AL3FH1w0KyEKm\nuWCd\r\n=7eQp\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIGRhQc0oqHQo16dfSu+qfFNRV5aRQ8F3kgWXqj0QA9A8AiEA1QK6J/cUz05OaaRyFAQQF5m/Csr6YpuqL08PNgo1V18="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.3.3_1540444927315_0.01235219916388397"
			},
			"_hasShrinkwrap": false
		},
		"0.4.0-beta1": {
			"name": "postcss-tidy-columns",
			"version": "0.4.0-beta1",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.6.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# PostCSS Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nPostCSS Tidy Columns sets an element's width based on a user-defined grid of columns and gaps using calculations based on `vw` units, which allows for easy vertical alignment of elements.\n\n**PostCSS Tidy Columns does not set layout. Positioning elements is *your* job**.\n\n## Install\n\n```shell\nnpm install postcss-tidy-columns\n```\n\n## Example\n\n```js\nrequire('postcss-tidy-columns')({\n\tcolumns: 12,\n\tgap: '1.25rem',\n\tedge: '2rem',\n\tsiteMax: '90rem',\n});\n```\n\n```css\n/* Input example, using the above plugins options */\ndiv {\n\ttidy-span: 3;\n\ttidy-offset-left: 2;\n}\n```\n\n```css\n/* Output example */\ndiv {\n\twidth: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n\tmax-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n\tmargin-left: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n}\n\n@media (min-width: 90rem) {\n\tdiv {\n\t\tmargin-left: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n\t}\n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n## Contents\n\n* [Tidy Properties](#tidy-properties)\n* [Tidy Functions](#tidy-functions)\n* [Options](#options)\n* [Options Cascade](#options-cascade)\n* [Using CSS Custom Properties in setting values](#using-css-custom-properties-in-setting-values)\n\nSee the [Wiki][wiki] for additional documentation and tips.\n\n## Tidy Properties\n\n### Span\n\nThe `tidy-span` property specifies the number of columns and adjacent column gaps the element should span. Supports positive and decimal values.\n\n> #### Syntax\n>\n> ```\n> tidy-span: <number>;\n> ```\n\n### Offsets\n\nThe `tidy-offset-left` and `tidy-offset-right` properties specify the number of columns and adjacent column gaps the element's margin should span. Supports positive, negative, and decimal values\n\nOffsets use a [`siteMax`](#sitemax) breakpoint, since there's no `max-margin` CSS property.\n\n> #### Syntax\n>\n> ```\n> tidy-offset-left: <number>;\n> tidy-offset-right: <number>;\n> ```\n\n### Column Shorthand  \n\n`tidy-column` is a shorthand property for setting `tidy-offset-left`, `tidy-span`, and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value.\n\n> #### Syntax\n>\n> ```\n> /* [ <number> | none ] / span && <number> [ / <number> ]? */\n>\n> tidy-column: 3 / span 2 / 4;\n> tidy-column: none / span 4 / 1;\n> tidy-column: 1 / span 4;\n> ```\n\n### Offset Shorthand  \n\n`tidy-offset` is a shorthand property for setting `tidy-offset-left` and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value.\n\n> #### Syntax\n>\n> ```\n> /* [ <number> | none ] [ / <number> ]? */\n>\n> tidy-offset: 3 / 4;\n> tidy-offset: none / 1;\n> tidy-offset: 1; /* 1 / none */\n> ```\n\n## Tidy Functions\n\nThese functions are provided for incorporating the `tidy-` properties' output without using the properties. These can be used on their own or nested inside a `calc()` function, and allow for more control over the declarations added by the plugin.\n\nWhen using these functions, **the `siteMax`-based static value will not be output**. Use the `tidy-span-full()` and `tidy-offset-full()` functions to set the static `span` and `offset` widths, respectively.\n\n### Span Function\n\n`tidy-span()` and `tidy-span-full()` functions return the `span` property's `calc()` declaration for use in assigning widths.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-span(number) */\n> /* property: calc(tidy-span(number) expression) */\n>\n> div {\n> \twidth: calc(tidy-span(3) + 4rem);\n> }\n>\n> @media (min-width: 75rem) {\n> \tdiv {\n> \t\twidth: calc(tidy-span-full(3) + 4rem);\n> \t}\n> }\n> ```\n\n### Offset Function\n\n`tidy-offset()` and `tidy-offset-full()` functions return the `offset` property's `calc()` declaration for use in positioning.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-offset(number) */\n> /* property: calc(tidy-offset(number) expression) */\n>\n> div {\n> \tleft: calc(tidy-offset(1) + 2rem);\n> }\n>\n> @media (min-width: 75rem) {\n> \tdiv {\n> \t\tleft: calc(tidy-offset-full(1) + 2rem);\n> \t}\n> }\n> ```\n\n## Options\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`columns`](#columns)|`{Number}`|`12`|The number of grid columns.|\n|[`gap`](#gap)|`{String}`|`undefined`|The width of grid column gaps.|\n|[`siteMax`](#siteMax)|`{String}`|`undefined`|The max-width of the site.|\n|[`edge`](#edge)|`{String}`|`undefined`|The value of the site's edge padding.|\n|[`addGap`](#addGap)|`{Boolean}`|`false`|Add a right `gap` margin to column declarations.|\n|[`breakpoints`](#breakpoints)|`{Array}`|`[]`|An array of breakpoint-specific configuration objects.|\n\n_As an alternative to the [PostCSS] JavaScript API, options may also be passed via stylesheet `@tidy` at-rules._\n\n### `columns`\n\nDeclares the number of columns in your design. Supports any positive integer.\n\n> #### CSS Syntax\n>\n> ```\n> @tidy columns <number>;\n> ```\n\n### `gap`\n\nDeclares the width of the gap between each column. Supports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy gap <length> [ / <boolean> ]?;\n> ```\n\nSee [`addGap`](#addgap) for more about the CSS syntax.\n\n### `siteMax`\n\nDeclares the max-width of the site, at which point the site transitions from fluid width to static width. Setting a `siteMax` value ensures the column and margin widths are correct once the site width is static.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy site-max <length>;\n>\n> /* Alternatively use the camelCased JavaScript property */\n> @tidy siteMax <length>;\n> ```\n\n### `edge`\n\nSet `edge` to the non-cumulative value of the space between the content and the edge of the page.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy edge <length>;\n> ```\n\n### `addGap`\n\nDeclares whether or not to add a gap-wide `margin-right` to the columns.\n\nWhen this is set to `true`, a `:last-of-type` rule will be added to reset the `margin-right` to `0` for the last item.\n\n> #### CSS Syntax\n>\n> ```\n> /**\n>  * Declared as a boolean value after the `gap` value.\n>  * Must be preceeded by a slash.\n>  */\n> @tidy gap <length> / <boolean>;\n> ```\n\n### `breakpoints`\n\nUse the `breakpoints` array to configure a grid spec that changes for certain breakpoints.\n\n1. Define the small-screen grid in the root object.\n2. Define breakpoints at which the grid spec changes, and any configuration options that will change.\n\nEach breakpoint configuration object must contain a `breakpoint` (singular) property defining the `min-width` breakpoint at which the configuration becomes active. There is no CSS syntax for this config option.\n\nThe root configuration will cascade through the breakpoints, with each breakpoint's config overriding any changed options. Each breakpoint config will also cascade through to the next larger breakpoint config.\n\nWhich means, given the following options...\n\n```js\n{\n\tcolumns: 9,\n\tedge: '1rem',\n\tgap: '0.625rem',\n\taddGap: true,\n\tbreakpoints: [\n\t\t{\n\t\t\tbreakpoint: '48rem',\n\t\t\tcolumns: 12,\n\t\t\tgap: '1rem'\n\t\t},\n\t\t{\n\t\t\tbreakpoint: '64rem',\n\t\t\tedge: '1.25rem',\n\t\t\taddGap: false,\n\t\t\tsiteMax: '90rem'\n\t\t}\n\t]\n};\n```\n\n... each breakpoint object will essentially end up like this:\n\n```js\n{\n\tbreakpoints: [\n\t\t{ // small screens\n\t\t\tcolumns: 9,\n\t\t\tedge: '1rem',\n\t\t\tgap: '0.625rem',\n\t\t\taddGap: true,\n\t\t},\n\t\t{ // min-width: 48rem\n\t\t\tbreakpoint: '48rem',\n\t\t\tcolumns: 12,\n\t\t\tgap: '1rem'\n\t\t\tedge: '1rem',\n\t\t\taddGap: true,\n\t\t},\n\t\t{ // min-width: 64rem\n\t\t\tbreakpoint: '64rem',\n\t\t\tedge: '1.25rem',\n\t\t\taddGap: false,\n\t\t\tsiteMax: '90rem'\n\t\t\tcolumns: 12,\n\t\t\tgap: '1rem'\n\t\t}\n\t]\n};\n```\n\n**Caveats**\n\n- The `breakpoint` value must be based on a `min-width` media query.\n- `breakpoint` values must be in the same units as the media query it's responding to or it will be ignored and use the root config.\n- All `breakpoints` must also be in the same units or it will be ignored and use the root config.\n- A media query spanning more than one breakpoint config will be ignored and use the root config.\n\t- In the above configuration example, a media query with `(min-width: 48rem) and (max-width: 90rem)` would match two breakpoint configs and thus use the root config as a fallback.\n\n## Options Cascade\n\n### Plugin options\n\nOptions passed directly to the plugin via the PostCSS JavaScript API.\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any selector blocks. Values declared here take precedence over those passed via the plugin options.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a selector block and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n## Using CSS Custom Properties in setting values\n\n[CSS Custom Proprties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) are \nsupported in `@tidy` rules, with the following caveats:\n\n1. Due to the nature of CSS Custom Properties, particularly the inability to use them in media query parmeters, a CSS Custom Property used as the `@tidy site-max` value will throw an error.\n2. The `@tidy gap` custom property value must only contain its length, and not its boolean `addGap` portion of the [gap shorthand](#addgap).\n\nSee the [Tips and Tricks](../../wiki/Tips-and-Tricks) Wiki page for more.\n\n<!-- links -->\n[wiki]: ../../wiki/\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n",
			"readmeFilename": "README.md",
			"gitHead": "d64059f35fe0551c621967b7bac5ac50acba5fd6",
			"_id": "postcss-tidy-columns@0.4.0-beta1",
			"_npmVersion": "6.4.1",
			"_nodeVersion": "8.14.0",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-sGobLjuIfrZCf7paeqYxf2K8hmsAashoxxAu7XKoqn019i9mS9A0e5xi5hpV+LS54GyM76RLTOzkE+73VK+Eow==",
				"shasum": "41a6e5805522cf71535278e84f7dcd85930bfa1f",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.4.0-beta1.tgz",
				"fileCount": 43,
				"unpackedSize": 102065,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcFJWLCRA9TVsSAnZWagAAejUQAIaEXlJ5Y/3KvP+KYLpq\nXl09SIvVmpNBWTFeb4rHrEUYFy7dsb7iK3GuE02wuDUIoWBTV0+xcHgnz15d\n6MrxVpj9GTynaxN2fYZZdO9y18/uPJMC7/GrrytbQyaHSY1bX+0QpuvenAVx\nT9KHRHGuMZegUryh9156oRRSA+HVwm6B0u2VcwsTZVFtpgdFe1kwdlCXxr7T\nhFwkIn4MuJwlTtP42ni0PYfKWtB2PrsXbGrs5vjjUUTMeRU+3ktDHCB1ssrx\ndYZ9L/o+jqfoA0lN187LjCNMCCZwj6klM+TcgnwbylMb3itPCSDydxJuXp5R\n860xZtkYxMna/A7D5cQ7/BYin/PjFlNvbygo6hTuj/Cs/g5nC3rrLZTN5X7s\n9jwuZfHUN9vD/it8LBL2IA8i1KD6orXbqK3b6/4Hga5t0UvsYfNi9hv4e2Et\n34pOd8nPOEG7yGkS8FciJsXjb9JcTKLRRBovbVkEeI9EMOODZukVuzD7yXIW\nHegVKA/HuQOsXP48GCyrMIal+pu7b9eWf0dKaEhoH1ablEYCNil4eAQWzbUJ\nsMcqKkwok5bc7NzWaUVVL5XEV8q07ahEvlao+60kRPWe1TybnE0KX6CQCRo6\nUmqEcQocgHSKozCpZ3t+ImvKzSY+CbGR4wFbDtgzlAJRwF+7TrvoH5duK4mE\nFDZB\r\n=NoEL\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIEspbeX9ztEhJUl94kgr2GxxKslZh7Nd4cpkV+FldQXNAiAyuQsimQVy9dk+NVrK+ewTXr0pxmw9v0k5fxqlADou6w=="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.4.0-beta1_1544852874858_0.9964409476228686"
			},
			"_hasShrinkwrap": false
		},
		"0.3.4": {
			"name": "postcss-tidy-columns",
			"version": "0.3.4",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^4.19.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^23.0.1",
				"jest-cli": "^23.6.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"eslintConfig": {
				"extends": "eslint-config-airbnb-base",
				"env": {
					"jest": true
				},
				"rules": {
					"yoda": [
						"error",
						"always",
						{
							"onlyEquality": true
						}
					],
					"max-len": [
						"error",
						100,
						2,
						{
							"ignoreComments": true
						}
					]
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "61007cc333df2145c7816cad6a21c812ad7fe0c3",
			"_id": "postcss-tidy-columns@0.3.4",
			"_npmVersion": "6.4.1",
			"_nodeVersion": "8.14.0",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-D17ySUhRaXdSsR/qhPB6tTZGgnvJhgjs41+Dv2ugeQegLDUuG91l34F214W3hvEXIga3rtZOtyflHoCEqVY8hw==",
				"shasum": "f5efd0474c8c61b40789933263b524b3ee931df6",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.3.4.tgz",
				"fileCount": 34,
				"unpackedSize": 91869,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcQqsLCRA9TVsSAnZWagAAUFcP/1DG8bogKcQ4JfdcgTfg\nHnIgHW5O7vp9mYTEQ42XOQhgjcE4LJnH7GQlSqwc1i0/osWk4hKqfWe2VD4I\nNQoauxYmfHTrkuyG1tskJdKfoRWEnap/YbgTV3ArdGbG+hriH0EbOfmBZMaZ\nd575BUmG331posaNRlgjySSwv0g1wBX/y43z+4P7daHNNFxkYEFzD8vj75Nh\nb2CLeCjNstq+O6l0UEjYKxIdg6/ruMWS0nb39Iuld139bP8k2Jgw4L732mlt\n46kSzh+k13vD6sAAXWdtfrjT4E+8uYv5gt31hqeIVTMcwS83lxObNGH6PpUC\nPLOx0BS5qheggTR9ToM8Ddy/7tQ8jrrS5d8s6AGXKmW1tizxSRs+A0akPdL+\nwbGu0tn2pAqPOSltdLAzP8Qohv0yN/npc1D7iUg9asMtxAesMdGXUnsF74WI\nxxUscWkWmE9gvWkpPUrMjxUoeomm1chCALEe7cAV4UrAbCOZKNNoNK6yo7LP\nz497nbXIpQn0c0/CnnXQEqONvR8n2CCOoFzC5FNr3aOjgc2oRn64pQpxWCMc\ncETkM9GCVcbquFprjHY+fCvrFxxtG47EzmPepOxqSdTBO24YhH6bMpxgv9bw\njewuPXtTohwmOQJ6orHK5sPhSGngosZ/UoK5+7y1fDfgZYQt8mWl/suYv2rU\nLKb1\r\n=7K5t\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDRLSBT5vct6p6tsOkqwEISQiIud+1oZVjJB02CfDeRjQIgVYeX+kF1IMlmpA7Pii105sngje/pQ8NqbsTuu+iNGMM="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.3.4_1547873034472_0.9298955804155615"
			},
			"_hasShrinkwrap": false
		},
		"0.4.0-beta2": {
			"name": "postcss-tidy-columns",
			"version": "0.4.0-beta2",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^5.14.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^24.1.0",
				"jest-cli": "^24.1.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll --verbose"
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# PostCSS Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nPostCSS Tidy Columns sets an element's width based on a user-defined grid of columns and gaps using calculations based on `vw` units, which allows for easy vertical alignment of elements.\n\n**PostCSS Tidy Columns does not set layout. Positioning elements is *your* job**.\n\n## Install\n\n```shell\nnpm install postcss-tidy-columns\n```\n\n## Example\n\n```js\nrequire('postcss-tidy-columns')({\n\tcolumns: 12,\n\tgap: '1.25rem',\n\tedge: '2rem',\n\tsiteMax: '90rem',\n});\n```\n\n```css\n/* Input example, using the above plugins options */\ndiv {\n\ttidy-span: 3;\n\ttidy-offset-left: 2;\n}\n```\n\n```css\n/* Output example */\ndiv {\n\twidth: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n\tmax-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n\tmargin-left: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n}\n\n@media (min-width: 90rem) {\n\tdiv {\n\t\tmargin-left: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n\t}\n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n## Contents\n\n* [Tidy Properties](#tidy-properties)\n* [Tidy Functions](#tidy-functions)\n* [Options](#options)\n* [Options Cascade](#options-cascade)\n* [Using CSS Custom Properties in setting values](#using-css-custom-properties-in-setting-values)\n\nSee the [Wiki][wiki] for additional documentation and tips.\n\n## Tidy Properties\n\n### Span\n\nThe `tidy-span` property specifies the number of columns and adjacent column gaps the element should span. Supports positive and decimal values.\n\n> #### Syntax\n>\n> ```\n> tidy-span: <number>;\n> ```\n\n### Offsets\n\nThe `tidy-offset-left` and `tidy-offset-right` properties specify the number of columns and adjacent column gaps the element's margin should span. Supports positive, negative, and decimal values\n\nOffsets use a [`siteMax`](#sitemax) breakpoint, since there's no `max-margin` CSS property.\n\n> #### Syntax\n>\n> ```\n> tidy-offset-left: <number>;\n> tidy-offset-right: <number>;\n> ```\n\n### Column Shorthand  \n\n`tidy-column` is a shorthand property for setting `tidy-offset-left`, `tidy-span`, and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single offset value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n> [ <number> | none ] / span && <number> [ / <number> ]?\n> ```\n>\n> ```\n> tidy-column: 3 / span 2 / 4;\n> tidy-column: none / span 4 / 1;\n> tidy-column: 1 / span 4;\n> ```\n\n### Offset Shorthand  \n\n`tidy-offset` is a shorthand property for setting `tidy-offset-left` and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n>  [ <number> | none ] [ / <number> ]? */\n> ```\n>\n> ```\n> tidy-offset: 3 / 4;\n> tidy-offset: none / 1;\n> tidy-offset: 1;\n> ```\n\n## Tidy Functions\n\nThese functions are provided for incorporating the `tidy-` properties' output without using the properties. These can be used on their own or nested inside a `calc()` function, and allow for more control over the declarations added by the plugin.\n\nWhen using these functions, **the `siteMax`-based static value will not be output**. Use the `tidy-span-full()` and `tidy-offset-full()` functions to set the static `span` and `offset` widths, respectively.\n\n### Span Function\n\n`tidy-span()` and `tidy-span-full()` functions return the `span` property's `calc()` declaration for use in assigning widths.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-span(number) */\n> /* property: calc(tidy-span(number) expression) */\n>\n> div {\n> \twidth: calc(tidy-span(3) + 4rem);\n> }\n>\n> @media (min-width: 75rem) {\n> \tdiv {\n> \t\twidth: calc(tidy-span-full(3) + 4rem);\n> \t}\n> }\n> ```\n\n### Offset Function\n\n`tidy-offset()` and `tidy-offset-full()` functions return the `offset` property's `calc()` declaration for use in positioning.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-offset(number) */\n> /* property: calc(tidy-offset(number) expression) */\n>\n> div {\n> \tleft: calc(tidy-offset(1) + 2rem);\n> }\n>\n> @media (min-width: 75rem) {\n> \tdiv {\n> \t\tleft: calc(tidy-offset-full(1) + 2rem);\n> \t}\n> }\n> ```\n\n## Options\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`columns`](#columns)|`{Number}`|`12`|The number of grid columns.|\n|[`gap`](#gap)|`{String}`|`undefined`|The width of grid column gaps.|\n|[`siteMax`](#siteMax)|`{String}`|`undefined`|The max-width of the site.|\n|[`edge`](#edge)|`{String}`|`undefined`|The value of the site's edge padding.|\n|[`breakpoints`](#breakpoints)|`{Array}`|`[]`|An array of breakpoint-specific configuration objects.|\n\n_As an alternative to the [PostCSS] JavaScript API, options may also be passed via stylesheet `@tidy` at-rules._\n\n### `columns`\n\nDeclares the number of columns in your design. Supports any positive integer.\n\n> #### CSS Syntax\n>\n> ```\n> @tidy columns <number>;\n> ```\n\n### `gap`\n\nDeclares the width of the gap between each column. Supports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy gap <length>;\n> ```\n\n### `siteMax`\n\nDeclares the max-width of the site, at which point the site transitions from fluid width to static width. Setting a `siteMax` value ensures the column and margin widths are correct once the site width is static.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy site-max <length>;\n> ```\n> \n> Alternatively, use the camelCased JavaScript property.\n> ```\n> @tidy siteMax <length>;\n> ```\n\n### `edge`\n\nSet `edge` to the non-cumulative value of the space between the content and the edge of the page.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy edge <length>;\n> ```\n\n### `breakpoints`\n\nUse the `breakpoints` array to configure a grid spec that changes across breakpoints.\n\n1. Define the small-screen grid in the root object.\n2. Define `min-width` breakpoints at which the grid spec changes, and any configuration options that will change.\n3. The configuration settings cascade up from the root to the largest `breakpoint`.\n\n```js\nrequire('postcss-tidy-columns')({\n\tcolumns: 9,\n\tedge: '1rem',\n\tgap: '0.625rem',\n\tbreakpoints: [\n\t\t{\n\t\t\tbreakpoint: '48rem',\n\t\t\tcolumns: 12,\n\t\t\tgap: '1rem'\n\t\t},\n\t\t{\n\t\t\tbreakpoint: '64rem',\n\t\t\tedge: '1.25rem',\n\t\t\tsiteMax: '90rem'\n\t\t}\n\t]\n});\n```\n\nSee the [Scoped Settings](../../wiki/Scoped-Settings) Wiki page for more.\n\n## Options Cascade\n\n### Plugin options\n\nOptions passed directly to the plugin via the PostCSS JavaScript API.\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any selector blocks. Values declared here take precedence over those passed via the plugin options.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a selector block and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n## Using CSS Custom Properties in setting values\n\n[CSS Custom Proprties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) are \nsupported in `@tidy` rules, with the following caveats:\n\n1. Due to the nature of CSS Custom Properties, particularly the inability to use them in media query parmeters, a CSS Custom Property used as the `@tidy site-max` value will throw an error.\n\nSee the [Tips and Tricks](../../wiki/Tips-and-Tricks) Wiki page for more.\n\n<!-- links -->\n[wiki]: ../../wiki/\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n",
			"readmeFilename": "README.md",
			"gitHead": "b0d8dba5944b3078b8cccf40d4776ea22c1ee569",
			"_id": "postcss-tidy-columns@0.4.0-beta2",
			"_npmVersion": "6.4.1",
			"_nodeVersion": "8.14.0",
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"dist": {
				"integrity": "sha512-mlDNs8fLOXY1I2szLBfkveiTbpPj+KohjmYsi5L5McgKfhWOLBL3+6UqPW7s2QHkp83RKlMqv8pODPpvTeAEAg==",
				"shasum": "cc9ad055b6a1e6615e56f1c98bfe3fa156fa2270",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.4.0-beta2.tgz",
				"fileCount": 43,
				"unpackedSize": 99155,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcc1DtCRA9TVsSAnZWagAAofYP/jkExNx1UPedyJEVg+Xs\n3BgDXv+dNnijUk2uK8vdviOmWUqXxpr2ONZvVJBzkVcPM+4du/Bkx9Lb9GlI\nuc5K+MA1O9nLa4alKqF+IEehBjFgrYIA0EfSrQZLqlgWgrOGI46ftA3m+zng\nB1RcZub29OKuFbFhAib7sUIuH+pFBMeUEbcXLcE4S6YJ3XqzxWy4sr6zJouY\n147qIY+QL5Qthbrd7PYmsBGCx5pKZjuL86JyBjhk1syKOmjc55bB1IpCbp8n\nrud4iH3fUDSiai4P6TdieNYTQe1x3PN46Bpb3O/Gj9vzgO75eCteEbMlMy3/\nJL1fBgq+R7/DiUq4mqSZu3ynZlES1vRxH9r3ylYYz5pWf0d+KfKjbC50aaj0\nFhwnmT/X541cl9Bd8OW775OCrFA1UMccEmH5QNuCmXFWRFsNjaA+puxmXUzh\ngXThZffCzfzGZ6LTHCNMy2k8+ZWqsFH4/A9MWt2zNGaHQh5wsy7RpIJMhoz8\nc1UY7D5P0JQBi7mpvLs1XYKjAQasjl9MxyL87TO8zaDZtvnFt0AU7wMjwKqW\nIigzg6UH6nX4SlLDucmThXCaG4Xzye9wVFYk83yY0AnA3CrwYsupI2xnfmAA\nHgvRAbp+eprF3/6S/ZjxaGV7798pDSoRST0SJkpEMAnhTQa2OoYPLWgq+ttv\nxfRH\r\n=n3Q8\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCID9PVwZyLo9Aiw4DVSX8g7LU3xsRR89bNPpYDl6PZvVoAiEAoUHeH4xd8JslZvEiinIi7A1wMMdi/BtMwz6GlU+uPGE="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.4.0-beta2_1551061229008_0.07102100276567613"
			},
			"_hasShrinkwrap": false
		},
		"0.4.0-beta3": {
			"name": "postcss-tidy-columns",
			"version": "0.4.0-beta3",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^5.14.1",
				"eslint-config-airbnb-base": "^12.1.0",
				"eslint-plugin-import": "^2.12.0",
				"jest": "^24.1.0",
				"jest-cli": "^24.1.0"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll",
				"watch:verbose": "jest --watchAll  --verbose"
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# PostCSS Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nPostCSS Tidy Columns sets an element's width based on a user-defined grid of columns and gaps using calculations based on `vw` units, which allows for easy vertical alignment of elements.\n\n**PostCSS Tidy Columns does not set layout. Positioning elements is *your* job**.\n\n## Install\n\n```shell\nnpm install postcss-tidy-columns\n```\n\n## Example\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 12,\n  gap: '1.25rem',\n  edge: '2rem',\n  siteMax: '90rem',\n});\n```\n\n```css\n/* Input example, using the above plugins options */\ndiv {\n  tidy-span: 3;\n  tidy-offset-left: 2;\n}\n```\n\n```css\n/* Output example */\ndiv {\n  width: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  max-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  margin-left: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n}\n\n@media (min-width: 90rem) {\n  div {\n    margin-left: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n  }\n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n## Contents\n\n* [Tidy Properties](#tidy-properties)\n* [Tidy Functions](#tidy-functions)\n* [Options](#options)\n* [Options Cascade](#options-cascade)\n* [Using CSS Custom Properties in setting values](#using-css-custom-properties-in-setting-values)\n\nSee the [Wiki][wiki] for additional documentation and tips.\n\n## Tidy Properties\n\n### Span\n\nThe `tidy-span` property specifies the number of columns and adjacent column gaps the element should span. Supports positive and decimal values.\n\n> #### Syntax\n>\n> ```\n> tidy-span: <number>;\n> ```\n\n### Offsets\n\nThe `tidy-offset-left` and `tidy-offset-right` properties specify the number of columns and adjacent column gaps the element's margin should span. Supports positive, negative, and decimal values\n\nOffsets use a [`siteMax`](#sitemax) breakpoint, since there's no `max-margin` CSS property.\n\n> #### Syntax\n>\n> ```\n> tidy-offset-left: <number>;\n> tidy-offset-right: <number>;\n> ```\n\n### Column Shorthand  \n\n`tidy-column` is a shorthand property for setting `tidy-offset-left`, `tidy-span`, and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single offset value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n> [ <number> | none ] / span && <number> [ / <number> ]?\n> ```\n>\n> ```\n> tidy-column: 3 / span 2 / 4;\n> tidy-column: none / span 4 / 1;\n> tidy-column: 1 / span 4;\n> ```\n\n### Offset Shorthand  \n\n`tidy-offset` is a shorthand property for setting `tidy-offset-left` and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n>  [ <number> | none ] [ / <number> ]? */\n> ```\n>\n> ```\n> tidy-offset: 3 / 4;\n> tidy-offset: none / 1;\n> tidy-offset: 1;\n> ```\n\n## Tidy Functions\n\nThese functions are provided for incorporating the `tidy-` properties' output without using the properties. These can be used on their own or nested inside a `calc()` function, and allow for more control over the declarations added by the plugin.\n\nWhen using these functions, **the `siteMax`-based static value will not be output**. Use the `tidy-span-full()` and `tidy-offset-full()` functions to set the static `span` and `offset` widths, respectively.\n\n### Span Function\n\n`tidy-span()` and `tidy-span-full()` functions return the `span` property's `calc()` declaration for use in assigning widths.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-span(number) */\n> /* property: calc(tidy-span(number) expression) */\n>\n> div {\n>   width: calc(tidy-span(3) + 4rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     width: calc(tidy-span-full(3) + 4rem);\n>   }\n> }\n> ```\n\n### Offset Function\n\n`tidy-offset()` and `tidy-offset-full()` functions return the `offset` property's `calc()` declaration for use in positioning.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-offset(number) */\n> /* property: calc(tidy-offset(number) expression) */\n>\n> div {\n>   left: calc(tidy-offset(1) + 2rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     left: calc(tidy-offset-full(1) + 2rem);\n>   }\n> }\n> ```\n\n### Var Function\n\n`tidy-var()` function returns the specified option value.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-var(string) */\n>\n> div {\n>   margin-left: tidy-var(gap);\n>   width: calc(tidy-var(siteMax) + tidy-var(edge) * 2);\n> }\n> ```\n\n## Options\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`columns`](#columns)|`{Number}`|`12`|The number of grid columns.|\n|[`gap`](#gap)|`{String}`|`undefined`|The width of grid column gaps.|\n|[`siteMax`](#siteMax)|`{String}`|`undefined`|The max-width of the site.|\n|[`edge`](#edge)|`{String}`|`undefined`|The value of the site's edge padding.|\n|[`breakpoints`](#breakpoints)|`{Object}`|`{}`|Breakpoint-specific configuration options.|\n\n_As an alternative to the [PostCSS] JavaScript API, options may also be passed via stylesheet `@tidy` at-rules._\n\n### `columns`\n\nDeclares the number of columns in your design. Supports any positive integer.\n\n> #### CSS Syntax\n>\n> ```\n> @tidy columns <number>;\n> ```\n\n### `gap`\n\nDeclares the width of the gap between each column. Supports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy gap <length>;\n> ```\n\n### `siteMax`\n\nDeclares the max-width of the site, at which point the site transitions from fluid width to static width. Setting a `siteMax` value ensures the column and margin widths are correct once the site width is static.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy site-max <length>;\n> ```\n> \n> Alternatively, use the camelCased JavaScript property.\n> ```\n> @tidy siteMax <length>;\n> ```\n\n### `edge`\n\nSet `edge` to the non-cumulative value of the space between the content and the edge of the page.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy edge <length>;\n> ```\n\n### `breakpoints`\n\nUse the `breakpoints` object to define a grid configuration that will change based on screen size.\n\n1. Define the small-screen grid in the root object.\n2. Define one or more `min-width` breakpoints at which the grid spec will change, and any configuration options that will change.\n4. The configuration settings cascade up from the root to the largest `breakpoint`.\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 9,\n  edge: '1rem',\n  gap: '0.625rem',\n  breakpoints: {\n    '48rem': {\n      columns: 12,\n      gap: '1rem'\n    },\n    '64rem': {\n      edge: '1.25rem',\n      siteMax: '90rem'\n    }\n  },\n});\n```\n\nSee the [Scoped Settings](../../wiki/Scoped-Settings) Wiki page for more.\n\n## Options Cascade\n\n### Plugin options\n\nOptions passed directly to the plugin via the PostCSS JavaScript API.\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any selector blocks. Values declared here take precedence over those passed via the plugin options.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a selector block and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n## Using CSS Custom Properties in setting values\n\n[CSS Custom Proprties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) are \nsupported in `@tidy` rules, with the following caveats:\n\n1. Due to the nature of CSS Custom Properties, particularly the inability to use them in media query parmeters, a CSS Custom Property used as the `@tidy site-max` value will throw an error.\n\nSee the [Tips and Tricks](../../wiki/Tips-and-Tricks) Wiki page for more.\n\n<!-- links -->\n[wiki]: ../../wiki/\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n",
			"readmeFilename": "README.md",
			"gitHead": "84af525c0c3dd057ed3dca0c9ff26c88b2e699cb",
			"_id": "postcss-tidy-columns@0.4.0-beta3",
			"_nodeVersion": "8.14.0",
			"_npmVersion": "6.9.0",
			"dist": {
				"integrity": "sha512-jOKRIHnhNU5YC7YhhdIGdUkjBFUxTdOtbDHnf/xsjdNp+WpKCHhgII6K9WBrVcXaePPe812XWwCbRDfzNjnmCw==",
				"shasum": "4980e62954175a4ae7a44eb4e46ad1cb5aa49fde",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.4.0-beta3.tgz",
				"fileCount": 46,
				"unpackedSize": 111732,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcupOyCRA9TVsSAnZWagAAfP4P/0/sApA0fnyrc6d+MYFw\nZq0P5QphLV1fW6Y9CuIBdIBICmpNDykulCcRGFXQUn5rsvjVJSmflk4Y98H7\n/ROZQLm0iEIETOyYJE5vqPwO3YuT4psCYLftL5UD7OeVCLdxzBerf3FWdmCw\nEEUBQkYwt+bV7Qt5KVnHvTtmbS8Y+y+7L/4KWy6ObjoMnsXtPxMjuLi+WdhM\nXakAsluNke65MxAn1W20r/oUuvDzkmsZIEKGADWsfIVNzh6qKjJN9DG1vFzo\ne9d/jnB51leqe/O+Zjmtcg8zbWMSTdlsL0cPTaZgyQ7YZU+8MQavrH/B76eH\n8L8I5uE2O6HvW6I3vbAI8AjCdXgZOq2vkbFsupJUruwmeXgpHbPrWQjCrBI0\nI7156luLJ5WiRwLRz095HVOOJsj+85BuTMqxZpdwJvxXgYt56+haXFqym01A\nabIXxGoGCEFBOc+74QOrMzdJhHXDs3QzSnoZJdVLapzSfGlBvo5YIq6bl2N4\nCayy1df/RMKcZ85Qs+yTji74DJjtFOHA12mc48foFV8UMOyXR5veB0lrnfc6\n+7iCSC4PDDvDsUbzpWdCcgoJrjYKTNqdnA4jRKN2W8O9e/a1/o0rAHfKy04q\nLkEX7B5Y1vhe54vKxcPjSPOnkXyteGgvoR6iChU0NZy7X9cAMaTwR1YKBS8R\njayc\r\n=gyID\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIA3rBGTiNncvX3iQ870lNak6163t1IDZj4RPozHYM/4HAiAw1TElNmYBlvOZHAgbOxoBq83CBl8Thj4u5OdqWt3PpA=="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.4.0-beta3_1555731377270_0.805324470921198"
			},
			"_hasShrinkwrap": false
		},
		"0.4.0-beta4": {
			"name": "postcss-tidy-columns",
			"version": "0.4.0-beta4",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^5.16.0",
				"eslint-config-airbnb-base": "^13.1.0",
				"eslint-plugin-import": "^2.17.0",
				"jest": "^24.7.1",
				"jest-cli": "^24.7.1"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll",
				"watch:verbose": "jest --watchAll  --verbose"
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# PostCSS Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nPostCSS Tidy Columns sets an element's width based on a user-defined grid of columns and gaps using calculations based on `vw` units, which allows for easy vertical alignment of elements.\n\n**PostCSS Tidy Columns does not set layout. Positioning elements is *your* job**.\n\n## Install\n\n```shell\nnpm install postcss-tidy-columns\n```\n\n## Example\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 12,\n  gap: '1.25rem',\n  edge: '2rem',\n  siteMax: '90rem',\n});\n```\n\n```css\n/* Input example, using the above plugins options */\ndiv {\n  tidy-span: 3;\n  tidy-offset-left: 2;\n}\n```\n\n```css\n/* Output example */\ndiv {\n  width: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  max-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  margin-left: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n}\n\n@media (min-width: 90rem) {\n  div {\n    margin-left: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n  }\n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n## Contents\n\n* [Tidy Properties](#tidy-properties)\n* [Tidy Functions](#tidy-functions)\n* [Options](#options)\n* [Options Cascade](#options-cascade)\n* [Using CSS Custom Properties in setting values](#using-css-custom-properties-in-setting-values)\n\nSee the [Wiki][wiki] for additional documentation and tips.\n\n## Tidy Properties\n\n### Span\n\nThe `tidy-span` property specifies the number of columns and adjacent column gaps the element should span. Supports positive and decimal values.\n\n> #### Syntax\n>\n> ```\n> tidy-span: <number>;\n> ```\n\n### Offsets\n\nThe `tidy-offset-left` and `tidy-offset-right` properties specify the number of columns and adjacent column gaps the element's margin should span. Supports positive, negative, and decimal values\n\nOffsets use a [`siteMax`](#sitemax) breakpoint, since there's no `max-margin` CSS property.\n\n> #### Syntax\n>\n> ```\n> tidy-offset-left: <number>;\n> tidy-offset-right: <number>;\n> ```\n\n### Column Shorthand  \n\n`tidy-column` is a shorthand property for setting `tidy-offset-left`, `tidy-span`, and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single offset value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n> [ <number> | none ] / span && <number> [ / <number> ]?\n> ```\n>\n> ```\n> tidy-column: 3 / span 2 / 4;\n> tidy-column: none / span 4 / 1;\n> tidy-column: 1 / span 4;\n> ```\n\n### Offset Shorthand  \n\n`tidy-offset` is a shorthand property for setting `tidy-offset-left` and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n>  [ <number> | none ] [ / <number> ]? */\n> ```\n>\n> ```\n> tidy-offset: 3 / 4;\n> tidy-offset: none / 1;\n> tidy-offset: 1;\n> ```\n\n## Tidy Functions\n\nThese functions are provided for incorporating the `tidy-` properties' output without using the properties. These can be used on their own or nested inside a `calc()` function, and allow for more control over the declarations added by the plugin.\n\nWhen using these functions, **the `siteMax`-based static value will not be output**. Use the `tidy-span-full()` and `tidy-offset-full()` functions to set the static `span` and `offset` widths, respectively.\n\n### Span Function\n\n`tidy-span()` and `tidy-span-full()` functions return the `span` property's `calc()` declaration for use in assigning widths.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-span(number) */\n> /* property: calc(tidy-span(number) expression) */\n>\n> div {\n>   width: calc(tidy-span(3) + 4rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     width: calc(tidy-span-full(3) + 4rem);\n>   }\n> }\n> ```\n\n### Offset Function\n\n`tidy-offset()` and `tidy-offset-full()` functions return the `offset` property's `calc()` declaration for use in positioning.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-offset(number) */\n> /* property: calc(tidy-offset(number) expression) */\n>\n> div {\n>   left: calc(tidy-offset(1) + 2rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     left: calc(tidy-offset-full(1) + 2rem);\n>   }\n> }\n> ```\n\n### Var Function\n\n`tidy-var()` function returns the specified option value.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-var(string) */\n>\n> div {\n>   margin-left: tidy-var(gap);\n>   width: calc(tidy-var(siteMax) + tidy-var(edge) * 2);\n> }\n> ```\n\n## Options\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`columns`](#columns)|`{Number}`|`12`|The number of grid columns.|\n|[`gap`](#gap)|`{String}`|`undefined`|The width of grid column gaps.|\n|[`siteMax`](#siteMax)|`{String}`|`undefined`|The max-width of the site.|\n|[`edge`](#edge)|`{String}`|`undefined`|The value of the site's edge padding.|\n|[`breakpoints`](#breakpoints)|`{Object}`|`{}`|Breakpoint-specific configuration options.|\n\n_As an alternative to the [PostCSS] JavaScript API, options may also be passed via stylesheet `@tidy` at-rules._\n\n### `columns`\n\nDeclares the number of columns in your design. Supports any positive integer.\n\n> #### CSS Syntax\n>\n> ```\n> @tidy columns <number>;\n> ```\n\n### `gap`\n\nDeclares the width of the gap between each column. Supports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy gap <length>;\n> ```\n\n### `siteMax`\n\nDeclares the max-width of the site, at which point the site transitions from fluid width to static width. Setting a `siteMax` value ensures the column and margin widths are correct once the site width is static.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy site-max <length>;\n> ```\n> \n> Alternatively, use the camelCased JavaScript property.\n> ```\n> @tidy siteMax <length>;\n> ```\n\n### `edge`\n\nSet `edge` to the non-cumulative value of the space between the content and the edge of the page.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy edge <length>;\n> ```\n\n### `breakpoints`\n\nUse the `breakpoints` object to define a grid configuration that will change based on screen size.\n\n1. Define the small-screen grid in the root object.\n2. Define one or more `min-width` breakpoints at which the grid spec will change, and any configuration options that will change.\n4. The configuration settings cascade up from the root to the largest `breakpoint`.\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 9,\n  edge: '1rem',\n  gap: '0.625rem',\n  breakpoints: {\n    '48rem': {\n      columns: 12,\n      gap: '1rem'\n    },\n    '64rem': {\n      edge: '1.25rem',\n      siteMax: '90rem'\n    }\n  },\n});\n```\n\nSee the [Scoped Settings](../../wiki/Scoped-Settings) Wiki page for more.\n\n## Options Cascade\n\n### Plugin options\n\nOptions passed directly to the plugin via the PostCSS JavaScript API.\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any selector blocks. Values declared here take precedence over those passed via the plugin options.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a selector block and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n## Using CSS Custom Properties in setting values\n\n[CSS Custom Proprties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) are \nsupported in `@tidy` rules, with the following caveats:\n\n1. Due to the nature of CSS Custom Properties, particularly the inability to use them in media query parmeters, a CSS Custom Property used as the `@tidy site-max` value will throw an error.\n\nSee the [Tips and Tricks](../../wiki/Tips-and-Tricks) Wiki page for more.\n\n<!-- links -->\n[wiki]: ../../wiki/\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n",
			"readmeFilename": "README.md",
			"gitHead": "1912b6a0e8bf959a830e580708685a136d4c9481",
			"_id": "postcss-tidy-columns@0.4.0-beta4",
			"_nodeVersion": "8.14.0",
			"_npmVersion": "6.9.0",
			"dist": {
				"integrity": "sha512-nAgGB/qYrGADWzm0faf8xS84HGDcTy3WGVh7pO7OETmzUm2M/rdwHYkHu38AY7miyL8cLZhw1i76ZfThddGCUA==",
				"shasum": "7302c9b4102ccc6cfb46fe1378bb15f8ef518626",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.4.0-beta4.tgz",
				"fileCount": 46,
				"unpackedSize": 108677,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc7GsnCRA9TVsSAnZWagAAMkIQAKG2aSDCLXEw7w64Pnlu\n/GquoKli+cTmFYgjjzoE855s8cWMV96EwNZayiPzsaRWv9VNnBvN8+dbCVMe\n3EpKLASbnHpT2cZyax+Hf7ESklEQmvnzA4mLQOcR1/ZKdfcssExEgsPqVlB2\n6nj0f919JaNRaKJ/em56D+0j8+SuNZZ9TlpFnGOaJRptwOpWGa3esWf87NcH\n3BczWhzPfhfLadfpGv7sidFAe1UR0X343HKiwL0GnHyKjTx8a4btaz83tuD7\no2CmFpxwtohKQ8BP8kF4iLAu12n1gfimvCTcuitjgLrhhFGsCHoyIiJ9/Iu5\nXjfkZKaLdceuI0TnWGK6VVjEQFC4ZfmZ2ctwdAeNEIkENp2k83AT6x90xLGS\nqlLet8b/4rZeIc7T4xF1zLjeFxfurtYduI+UQnK3Uqn1Tkb+myV0v73bXv1O\nmgbODUxQz1NmIu6v286t1Lh6tFAUWV9rAdhE1NeozAcKNohiFxoRf6nzXEz1\nic25ekbZm6U3TI6Cy7Azhy0F3zpKoNSe+oeMvv5QNATYPkXVgYPCNV/lYivj\nacO47sP3mvcMeMxRPWhslNog6wg4D3fS8L21fyK/TAuh55bvXc7f/gDez6gz\nl6/Au1ZLvteyzoaU+Hx2h0cNEAoRHvEAr9mfO/6c6gcNOT5a5S4Wl2Ccmw4S\n2T72\r\n=Lp+K\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDhds3ramL6NxG0GwcuHyP/e+e0AKT5hwBKtTLtSklhbQIhANbXA1maxcT59KkrezioMOgLfbzduOSRfMwMifSTJHBP"
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.4.0-beta4_1558997798735_0.4810725346188851"
			},
			"_hasShrinkwrap": false
		},
		"0.4.0-beta5": {
			"name": "postcss-tidy-columns",
			"version": "0.4.0-beta5",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^5.16.0",
				"eslint-config-airbnb-base": "^13.1.0",
				"eslint-plugin-import": "^2.17.0",
				"jest": "^24.7.1",
				"jest-cli": "^24.7.1"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll",
				"watch:verbose": "jest --watchAll  --verbose"
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# PostCSS Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nPostCSS Tidy Columns sets an element's width based on a user-defined grid of columns and gaps using calculations based on `vw` units, which allows for easy vertical alignment of elements.\n\n**PostCSS Tidy Columns does not set layout. Positioning elements is *your* job**.\n\n## Install\n\n```shell\nnpm install postcss-tidy-columns\n```\n\n## Example\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 12,\n  gap: '1.25rem',\n  edge: '2rem',\n  siteMax: '90rem',\n});\n```\n\n```css\n/* Input example, using the above plugins options */\ndiv {\n  tidy-span: 3;\n  tidy-offset-left: 2;\n}\n```\n\n```css\n/* Output example */\ndiv {\n  width: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  max-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  margin-left: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n}\n\n@media (min-width: 90rem) {\n  div {\n    margin-left: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n  }\n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n## Contents\n\n* [Tidy Properties](#tidy-properties)\n* [Tidy Functions](#tidy-functions)\n* [Options](#options)\n* [Options Cascade](#options-cascade)\n* [Using CSS Custom Properties in setting values](#using-css-custom-properties-in-setting-values)\n\nSee the [Wiki][wiki] for additional documentation and tips.\n\n## Tidy Properties\n\n### Span\n\nThe `tidy-span` property specifies the number of columns and adjacent column gaps the element should span. Supports positive and decimal values.\n\n> #### Syntax\n>\n> ```\n> tidy-span: <number>;\n> ```\n\n### Offsets\n\nThe `tidy-offset-left` and `tidy-offset-right` properties specify the number of columns and adjacent column gaps the element's margin should span. Supports positive, negative, and decimal values\n\nOffsets use a [`siteMax`](#sitemax) breakpoint, since there's no `max-margin` CSS property.\n\n> #### Syntax\n>\n> ```\n> tidy-offset-left: <number>;\n> tidy-offset-right: <number>;\n> ```\n\n### Column Shorthand  \n\n`tidy-column` is a shorthand property for setting `tidy-offset-left`, `tidy-span`, and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single offset value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n> [ <number> | none ] / span && <number> [ / <number> ]?\n> ```\n>\n> ```\n> tidy-column: 3 / span 2 / 4;\n> tidy-column: none / span 4 / 1;\n> tidy-column: 1 / span 4;\n> ```\n\n### Offset Shorthand  \n\n`tidy-offset` is a shorthand property for setting `tidy-offset-left` and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n>  [ <number> | none ] [ / <number> ]? */\n> ```\n>\n> ```\n> tidy-offset: 3 / 4;\n> tidy-offset: none / 1;\n> tidy-offset: 1;\n> ```\n\n## Tidy Functions\n\nThese functions are provided for incorporating the `tidy-` properties' output without using the properties. These can be used on their own or nested inside a `calc()` function, and allow for more control over the declarations added by the plugin.\n\nWhen using these functions, **the `siteMax`-based static value will not be output**. Use the `tidy-span-full()` and `tidy-offset-full()` functions to set the static `span` and `offset` widths, respectively.\n\n### Span Function\n\n`tidy-span()` and `tidy-span-full()` functions return the `span` property's `calc()` declaration for use in assigning widths.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-span(number) */\n> /* property: calc(tidy-span(number) expression) */\n>\n> div {\n>   width: calc(tidy-span(3) + 4rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     width: calc(tidy-span-full(3) + 4rem);\n>   }\n> }\n> ```\n\n### Offset Function\n\n`tidy-offset()` and `tidy-offset-full()` functions return the `offset` property's `calc()` declaration for use in positioning.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-offset(number) */\n> /* property: calc(tidy-offset(number) expression) */\n>\n> div {\n>   left: calc(tidy-offset(1) + 2rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     left: calc(tidy-offset-full(1) + 2rem);\n>   }\n> }\n> ```\n\n### Var Function\n\n`tidy-var()` function returns the specified option value.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-var(string) */\n>\n> div {\n>   margin-left: tidy-var(gap);\n>   width: calc(tidy-var(siteMax) + tidy-var(edge) * 2);\n> }\n> ```\n\n## Options\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`columns`](#columns)|`{Number}`|`12`|The number of grid columns.|\n|[`gap`](#gap)|`{String}`|`undefined`|The width of grid column gaps.|\n|[`siteMax`](#siteMax)|`{String}`|`undefined`|The max-width of the site.|\n|[`edge`](#edge)|`{String}`|`undefined`|The value of the site's edge padding.|\n|[`debug`](#debug)|`{Boolean}`|`false`|Add debug comments.|\n|[`breakpoints`](#breakpoints)|`{Object}`|`{}`|Breakpoint-specific configuration options.|\n\n_As an alternative to the [PostCSS] JavaScript API, some options may also be passed via stylesheet `@tidy` at-rules._\n\n### `columns`\n\nDeclares the number of columns in your design. Supports any positive integer.\n\n> #### CSS Syntax\n>\n> ```\n> @tidy columns <number>;\n> ```\n\n### `gap`\n\nDeclares the width of the gap between each column. Supports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy gap <length>;\n> ```\n\n### `siteMax`\n\nDeclares the max-width of the site, at which point the site transitions from fluid width to static width. Setting a `siteMax` value ensures the column and margin widths are correct once the site width is static.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy site-max <length>;\n> ```\n> \n> Alternatively, use the camelCased JavaScript property.\n> ```\n> @tidy siteMax <length>;\n> ```\n\n### `edge`\n\nSet `edge` to the non-cumulative value of the space between the content and the edge of the page.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy edge <length>;\n> ```\n\n### `debug`\n\nSet `debug` to `true` to maintain the pre-processed CSS declaration as a comment.\n\n```css\ndiv {\n  /* tidy-span: 3 */\n  width: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  max-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n}\n```\n\n> #### CSS Syntax\n>\n> ```\n> @tidy debug <boolean>;\n> ```\n\n### `breakpoints`\n\nUse the `breakpoints` object to define a grid configuration that will change based on screen size.\n\n1. Define the small-screen grid in the root object.\n2. Define one or more `min-width` breakpoints at which the grid spec will change, and any configuration options that will change.\n4. The configuration settings cascade up from the root to the largest `breakpoint`.\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 9,\n  edge: '1rem',\n  gap: '0.625rem',\n  breakpoints: {\n    '48rem': {\n      columns: 12,\n      gap: '1rem'\n    },\n    '64rem': {\n      edge: '1.25rem',\n      siteMax: '90rem'\n    }\n  },\n});\n```\n\nSee the [Scoped Settings](../../wiki/Scoped-Settings) Wiki page for more.\n\n## Options Cascade\n\n### Plugin options\n\nOptions passed directly to the plugin via the PostCSS JavaScript API.\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any selector blocks. Values declared here take precedence over those passed via the plugin options.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a selector block and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n## Using CSS Custom Properties in setting values\n\n[CSS Custom Proprties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) are \nsupported in `@tidy` rules, with the following caveats:\n\n1. Due to the nature of CSS Custom Properties, particularly the inability to use them in media query parmeters, a CSS Custom Property used as the `@tidy site-max` value will throw an error.\n\nSee the [Tips and Tricks](../../wiki/Tips-and-Tricks) Wiki page for more.\n\n<!-- links -->\n[wiki]: ../../wiki/\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n",
			"readmeFilename": "README.md",
			"gitHead": "a99c7be12cbd8c615d66a05162cd106351aa3a16",
			"_id": "postcss-tidy-columns@0.4.0-beta5",
			"_nodeVersion": "8.14.0",
			"_npmVersion": "6.9.0",
			"dist": {
				"integrity": "sha512-E8RvEJfpsycy0+rIpS7S+3UuUL60fMgNgsXqYferNoFLiVAswNG4Xp/QK+MxHa4lShV4HKmzBfbajHbIRyDq0g==",
				"shasum": "b498caff8d14a5edc8a3e11e2110355d29139845",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.4.0-beta5.tgz",
				"fileCount": 46,
				"unpackedSize": 104401,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc7XIwCRA9TVsSAnZWagAAtkkQAJCoYareoZdrITF4IIUQ\nSFIaQ6qSIpwXECVJ0cgUpHGBE5s8mfZIf4qwOLDBT52KdBC88U4GkPW+7IkX\nLqfN2h4u98lgR4NiJmrJ6xnwXCNLl4I1POnCyeVmSZgPCAq8/sWu2ZU5Z00B\nyHL0DtCztWBNkCPEoHsiDYjePqayJPDDt9Wu+hPRNf3z+k/6suI8cbdGqrmQ\n4+1971iyaGClsnTHQwAS8QMtLzjJ2uuoQZJDMB5Csgakg6Rj7igDs0IR6Dl2\nAD4XO5HQYIu4e6z4RY0PxilU+JOeQ587PLMGLQvLmh9LTRQH7gQaSNecmElj\nzLzEuoQkd+OSkcuqQtdb36HkEYjAxO+/TtiBfsARhmfUNNGy/7Lv1X4JOF7I\nZdLwOik2ckC46c8d+sX/nkjflLeLjRktHM1mgwRE5y6NP4yOjlU95DSKy/6a\nLVDI9wOl87KFJo1Dn1HWV/UA5A/OKlUgun+C9QEahZ4XhIcakPPXyYpMGUNl\nwDU5uCS0AALZUMxfSY+Qqizhs47yFDGmDQEMJp8syKEZhGqfWL86HKSCfK0b\n2e1bLYC1NK3xfxDbQylYjySIAIbk7o2md0hh4fnWzYE4deHzSyKHcxNR4xz2\nJxdraMjmyPheFn4VdE3oVKAQAyltXebt8v9qDsHbfWaLFvdOZHrfPUEvpTWx\nQbun\r\n=yrH4\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDQdVKTQQpbPrk6r7oCfKDy290272s9egqoQ7XAileb2wIgXzE1c+hPnKysdNHtsrOiepYLKaUXp374ffVZbZW5eIw="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.4.0-beta5_1559065135566_0.6771775630337931"
			},
			"_hasShrinkwrap": false
		},
		"0.4.0-beta6": {
			"name": "postcss-tidy-columns",
			"version": "0.4.0-beta6",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"eslint": "^5.16.0",
				"eslint-config-airbnb-base": "^13.1.0",
				"eslint-plugin-import": "^2.17.0",
				"jest": "^24.7.1",
				"jest-cli": "^24.7.1"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll",
				"watch:verbose": "jest --watchAll  --verbose"
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# PostCSS Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nPostCSS Tidy Columns sets an element's width based on a user-defined grid of columns and gaps using calculations based on `vw` units, which allows for easy vertical alignment of elements.\n\n**PostCSS Tidy Columns does not set layout. Positioning elements is *your* job**.\n\n## Install\n\n```shell\nnpm install postcss-tidy-columns\n```\n\n## Example\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 12,\n  gap: '1.25rem',\n  edge: '2rem',\n  siteMax: '90rem',\n});\n```\n\n```css\n/* Input example, using the above plugins options */\ndiv {\n  tidy-span: 3;\n  tidy-offset-left: 2;\n}\n```\n\n```css\n/* Output example */\ndiv {\n  width: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  max-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  margin-left: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n}\n\n@media (min-width: 90rem) {\n  div {\n    margin-left: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n  }\n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n## Contents\n\n* [Tidy Properties](#tidy-properties)\n* [Tidy Functions](#tidy-functions)\n* [Options](#options)\n* [Options Cascade](#options-cascade)\n* [Using CSS Custom Properties in setting values](#using-css-custom-properties-in-setting-values)\n\nSee the [Wiki][wiki] for additional documentation and tips.\n\n## Tidy Properties\n\n### Span\n\nThe `tidy-span` property specifies the number of columns and adjacent column gaps the element should span. Supports positive and decimal values.\n\n> #### Syntax\n>\n> ```\n> tidy-span: <number>;\n> ```\n\n### Offsets\n\nThe `tidy-offset-left` and `tidy-offset-right` properties specify the number of columns and adjacent column gaps the element's margin should span. Supports positive, negative, and decimal values\n\nOffsets use a [`siteMax`](#sitemax) breakpoint, since there's no `max-margin` CSS property.\n\n> #### Syntax\n>\n> ```\n> tidy-offset-left: <number>;\n> tidy-offset-right: <number>;\n> ```\n\n### Column Shorthand  \n\n`tidy-column` is a shorthand property for setting `tidy-offset-left`, `tidy-span`, and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single offset value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n> [ <number> | none ] / span && <number> [ / <number> ]?\n> ```\n>\n> ```\n> tidy-column: 3 / span 2 / 4;\n> tidy-column: none / span 4 / 1;\n> tidy-column: 1 / span 4;\n> ```\n\n### Offset Shorthand  \n\n`tidy-offset` is a shorthand property for setting `tidy-offset-left` and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n>  [ <number> | none ] [ / <number> ]? */\n> ```\n>\n> ```\n> tidy-offset: 3 / 4;\n> tidy-offset: none / 1;\n> tidy-offset: 1;\n> ```\n\n## Tidy Functions\n\nThese functions are provided for incorporating the `tidy-` properties' output without using the properties. These can be used on their own or nested inside a `calc()` function, and allow for more control over the declarations added by the plugin.\n\nWhen using these functions, **the `siteMax`-based static value will not be output**. Use the `tidy-span-full()` and `tidy-offset-full()` functions to set the static `span` and `offset` widths, respectively.\n\n### Span Function\n\n`tidy-span()` and `tidy-span-full()` functions return the `span` property's `calc()` declaration for use in assigning widths.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-span(number) */\n> /* property: calc(tidy-span(number) expression) */\n>\n> div {\n>   width: calc(tidy-span(3) + 4rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     width: calc(tidy-span-full(3) + 4rem);\n>   }\n> }\n> ```\n\n### Offset Function\n\n`tidy-offset()` and `tidy-offset-full()` functions return the `offset` property's `calc()` declaration for use in positioning.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-offset(number) */\n> /* property: calc(tidy-offset(number) expression) */\n>\n> div {\n>   left: calc(tidy-offset(1) + 2rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     left: calc(tidy-offset-full(1) + 2rem);\n>   }\n> }\n> ```\n\n### Var Function\n\n`tidy-var()` function returns the specified option value.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-var(string) */\n>\n> div {\n>   margin-left: tidy-var(gap);\n>   width: calc(tidy-var(siteMax) + tidy-var(edge) * 2);\n> }\n> ```\n\n## Options\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`columns`](#columns)|`{Number}`|`12`|The number of grid columns.|\n|[`gap`](#gap)|`{String}`|`undefined`|The width of grid column gaps.|\n|[`siteMax`](#siteMax)|`{String}`|`undefined`|The max-width of the site.|\n|[`edge`](#edge)|`{String}`|`undefined`|The value of the site's edge padding.|\n|[`debug`](#debug)|`{Boolean}`|`false`|Add debug comments.|\n|[`breakpoints`](#breakpoints)|`{Object}`|`{}`|Breakpoint-specific configuration options.|\n\n_As an alternative to the [PostCSS] JavaScript API, some options may also be passed via stylesheet `@tidy` at-rules._\n\n### `columns`\n\nDeclares the number of columns in your design. Supports any positive integer.\n\n> #### CSS Syntax\n>\n> ```\n> @tidy columns <number>;\n> ```\n\n### `gap`\n\nDeclares the width of the gap between each column. Supports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy gap <length>;\n> ```\n\n### `siteMax`\n\nDeclares the max-width of the site, at which point the site transitions from fluid width to static width. Setting a `siteMax` value ensures the column and margin widths are correct once the site width is static.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy site-max <length>;\n> ```\n> \n> Alternatively, use the camelCased JavaScript property.\n> ```\n> @tidy siteMax <length>;\n> ```\n\n### `edge`\n\nSet `edge` to the non-cumulative value of the space between the content and the edge of the page.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy edge <length>;\n> ```\n\n### `debug`\n\nSet `debug` to `true` to maintain the pre-processed CSS declaration as a comment.\n\n```css\ndiv {\n  /* tidy-span: 3 */\n  width: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  max-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n}\n```\n\n> #### CSS Syntax\n>\n> ```\n> @tidy debug <boolean>;\n> ```\n\n### `breakpoints`\n\nUse the `breakpoints` object to define a grid configuration that will change based on screen size.\n\n1. Define the small-screen grid in the root object.\n2. Define one or more `min-width` breakpoints at which the grid spec will change, and any configuration options that will change.\n4. The configuration settings cascade up from the root to the largest `breakpoint`.\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 9,\n  edge: '1rem',\n  gap: '0.625rem',\n  breakpoints: {\n    '48rem': {\n      columns: 12,\n      gap: '1rem'\n    },\n    '64rem': {\n      edge: '1.25rem',\n      siteMax: '90rem'\n    }\n  },\n});\n```\n\nSee the [Scoped Settings](../../wiki/Scoped-Settings) Wiki page for more.\n\n## Options Cascade\n\n### Plugin options\n\nOptions passed directly to the plugin via the PostCSS JavaScript API.\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any selector blocks. Values declared here take precedence over those passed via the plugin options.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a selector block and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n## Using CSS Custom Properties in setting values\n\n[CSS Custom Proprties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) are \nsupported in `@tidy` rules, with the following caveats:\n\n1. Due to the nature of CSS Custom Properties, particularly the inability to use them in media query parmeters, a CSS Custom Property used as the `@tidy site-max` value will throw an error.\n\nSee the [Tips and Tricks](../../wiki/Tips-and-Tricks) Wiki page for more.\n\n<!-- links -->\n[wiki]: ../../wiki/\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n",
			"readmeFilename": "README.md",
			"gitHead": "76d255563e43b9681a96875aaf2c16107ab7532b",
			"_id": "postcss-tidy-columns@0.4.0-beta6",
			"_nodeVersion": "8.14.0",
			"_npmVersion": "6.9.0",
			"dist": {
				"integrity": "sha512-31B/k8aaz42OIATA+r+ec3gJU1Islb7+fJoba7MzojIU3rjV8rYHHIzW6jIcpe04yEqhVGnpRrcB+NcA+pDung==",
				"shasum": "21d2967689baf970b413e0383ee69f16dfcaf16d",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.4.0-beta6.tgz",
				"fileCount": 47,
				"unpackedSize": 105466,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc8K+4CRA9TVsSAnZWagAAShUP/1H3gF8g8cpo+JnAEudu\nGZQeLg+zbl2YLOnBcTPLk/xZNCnuLBbk6yqYxwBuBgL4LTOGi8sPFSRT2QvQ\nHo+dhF5AS1mG01476+9hUtLa5AurUlU9/u8jcMhwj1SduQHeKeOHv9lztk5R\nxirh84/aNZJmlea/XLfwdKpQ241rfcB8cKXsHtVGlORBg4vhmhhINUZ9o42M\n6dg45IUxyEH/dEAZI+kbOiiJDEcjKDDcIdL9b7J8vvAiaoa78UzGhF7fa3kR\nW8MH0FF8AY02hX80XPfvqtWnXDJYWW2HCCA898zzWeuF3mgAxwumlnLNlbDp\nFLEuWwxMkp3AauK8KxsL2NZ6n+cUh+oI/STg9vUtm/PC8KdT6pCxY8KYlpUr\nOZNO0iIGdzgyJ//2ZXJNBfhqqqUB5Smo4QUOu3EH0AhKXP7D4B9ieCuK835L\nl79lC3l2Ut4xtxnCVKq7muTQ8HAqqdu8v7IwilnwTeZ8jZi1+k2SwvPYYob5\n5U+Z1PWcypHpqRWdSelFaiwCWQnw+VSb/yymU8G2ACxWCUNYxSEu9Nswy7md\nKuFpGPoF3KJvzpz1MDEPi9vgppOFf0gajtKdpiO8WMhws9V4nG7iMRyCw5BM\nacq2/2nhNGTyMTCdXgfZyMowGEjlapwL7jEhbga9CnhvpP25hBIhNXLHxZ0L\nCb48\r\n=ODmI\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCICx+xP2lNB8SNNbm2dmJQAH4FNMziUuDeMyON2mRQPiIAiBRfpZCCP1v6JQntquCGbsnx2zvWnuUntITYM3jtQSqpg=="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.4.0-beta6_1559277495837_0.6512528779907845"
			},
			"_hasShrinkwrap": false
		},
		"0.4.0-beta7": {
			"name": "postcss-tidy-columns",
			"version": "0.4.0-beta7",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"autoprefixer": "^9.5.1",
				"node-sass": "^4.12.0",
				"nodemon": "^1.19.1",
				"postcss": "^6.0.22",
				"postcss-units": "^1.2.1"
			},
			"devDependencies": {
				"eslint": "^5.16.0",
				"eslint-config-airbnb-base": "^13.1.0",
				"eslint-plugin-import": "^2.17.0",
				"jest": "^24.7.1",
				"jest-cli": "^24.7.1"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll",
				"watch:verbose": "jest --watchAll  --verbose",
				"build:css": "npm test && node docs/_bin/build.js",
				"watch:css": "nodemon -e scss -x node docs/_bin/build.js"
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# PostCSS Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nPostCSS Tidy Columns sets an element's width based on a user-defined grid of columns and gaps using calculations based on `vw` units, which allows for easy vertical alignment of elements.\n\n**PostCSS Tidy Columns does not set layout. Positioning elements is *your* job**.\n\n## Install\n\n```shell\nnpm install postcss-tidy-columns\n```\n\n## Example\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 12,\n  gap: '1.25rem',\n  edge: '2rem',\n  siteMax: '90rem',\n});\n```\n\n```css\n/* Input example, using the above plugins options */\ndiv {\n  tidy-span: 3;\n  tidy-offset-left: 2;\n}\n```\n\n```css\n/* Output example */\ndiv {\n  width: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  max-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  margin-left: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n}\n\n@media (min-width: 90rem) {\n  div {\n    margin-left: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n  }\n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n## Contents\n\n* [Tidy Properties](#tidy-properties)\n* [Tidy Functions](#tidy-functions)\n* [Options](#options)\n* [Options Cascade](#options-cascade)\n* [Using CSS Custom Properties in setting values](#using-css-custom-properties-in-setting-values)\n\nSee the [Wiki][wiki] for additional documentation and tips.\n\n## Tidy Properties\n\n### Span\n\nThe `tidy-span` property specifies the number of columns and adjacent column gaps the element should span. Supports positive and decimal values.\n\n> #### Syntax\n>\n> ```\n> tidy-span: <number>;\n> ```\n\n### Offsets\n\nThe `tidy-offset-left` and `tidy-offset-right` properties specify the number of columns and adjacent column gaps the element's margin should span. Supports positive, negative, and decimal values\n\nOffsets use a [`siteMax`](#sitemax) breakpoint, since there's no `max-margin` CSS property.\n\n> #### Syntax\n>\n> ```\n> tidy-offset-left: <number>;\n> tidy-offset-right: <number>;\n> ```\n\n### Column Shorthand  \n\n`tidy-column` is a shorthand property for setting `tidy-offset-left`, `tidy-span`, and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single offset value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n> [ <number> | none ] / span && <number> [ / <number> ]?\n> ```\n>\n> ```\n> tidy-column: 3 / span 2 / 4;\n> tidy-column: none / span 4 / 1;\n> tidy-column: 1 / span 4;\n> ```\n\n### Offset Shorthand  \n\n`tidy-offset` is a shorthand property for setting `tidy-offset-left` and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n>  [ <number> | none ] [ / <number> ]? */\n> ```\n>\n> ```\n> tidy-offset: 3 / 4;\n> tidy-offset: none / 1;\n> tidy-offset: 1;\n> ```\n\n## Tidy Functions\n\nThese functions are provided for incorporating the `tidy-` properties' output without using the properties. These can be used on their own or nested inside a `calc()` function, and allow for more control over the declarations added by the plugin.\n\nWhen using these functions, **the `siteMax`-based static value will not be output**. Use the `tidy-span-full()` and `tidy-offset-full()` functions to set the static `span` and `offset` widths, respectively.\n\n### Span Function\n\n`tidy-span()` and `tidy-span-full()` functions return the `span` property's `calc()` declaration for use in assigning widths.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-span(number) */\n> /* property: calc(tidy-span(number) expression) */\n>\n> div {\n>   width: calc(tidy-span(3) + 4rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     width: calc(tidy-span-full(3) + 4rem);\n>   }\n> }\n> ```\n\n### Offset Function\n\n`tidy-offset()` and `tidy-offset-full()` functions return the `offset` property's `calc()` declaration for use in positioning.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-offset(number) */\n> /* property: calc(tidy-offset(number) expression) */\n>\n> div {\n>   left: calc(tidy-offset(1) + 2rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     left: calc(tidy-offset-full(1) + 2rem);\n>   }\n> }\n> ```\n\n### Var Function\n\n`tidy-var()` function returns the specified option value.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-var(string) */\n>\n> div {\n>   margin-left: tidy-var(gap);\n>   width: calc(tidy-var(siteMax) + tidy-var(edge) * 2);\n> }\n> ```\n\n## Options\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`columns`](#columns)|`{Number}`|`12`|The number of grid columns.|\n|[`gap`](#gap)|`{String}`|`undefined`|The width of grid column gaps.|\n|[`siteMax`](#siteMax)|`{String}`|`undefined`|The max-width of the site.|\n|[`edge`](#edge)|`{String}`|`undefined`|The value of the site's edge padding.|\n|[`debug`](#debug)|`{Boolean}`|`false`|Add debug comments.|\n|[`breakpoints`](#breakpoints)|`{Object}`|`{}`|Breakpoint-specific configuration options.|\n\n_As an alternative to the [PostCSS] JavaScript API, some options may also be passed via stylesheet `@tidy` at-rules._\n\n### `columns`\n\nDeclares the number of columns in your design. Supports any positive integer.\n\n> #### CSS Syntax\n>\n> ```\n> @tidy columns <number>;\n> ```\n\n### `gap`\n\nDeclares the width of the gap between each column. Supports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy gap <length>;\n> ```\n\n### `siteMax`\n\nDeclares the max-width of the site, at which point the site transitions from fluid width to static width. Setting a `siteMax` value ensures the column and margin widths are correct once the site width is static.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy site-max <length>;\n> ```\n> \n> Alternatively, use the camelCased JavaScript property.\n> ```\n> @tidy siteMax <length>;\n> ```\n\n### `edge`\n\nSet `edge` to the non-cumulative value of the space between the content and the edge of the page.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy edge <length>;\n> ```\n\n### `debug`\n\nSet `debug` to `true` to maintain the pre-processed CSS declaration as a comment.\n\n```css\ndiv {\n  /* tidy-span: 3 */\n  width: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  max-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n}\n```\n\n> #### CSS Syntax\n>\n> ```\n> @tidy debug <boolean>;\n> ```\n\n### `breakpoints`\n\nUse the `breakpoints` object to define a grid configuration that will change based on screen size.\n\n1. Define the small-screen grid in the root object.\n2. Define one or more `min-width` breakpoints at which the grid spec will change, and any configuration options that will change.\n4. The configuration settings cascade up from the root to the largest `breakpoint`.\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 9,\n  edge: '1rem',\n  gap: '0.625rem',\n  breakpoints: {\n    '48rem': {\n      columns: 12,\n      gap: '1rem'\n    },\n    '64rem': {\n      edge: '1.25rem',\n      siteMax: '90rem'\n    }\n  },\n});\n```\n\nSee the [Scoped Settings](../../wiki/Scoped-Settings) Wiki page for more.\n\n## Options Cascade\n\n### Plugin options\n\nOptions passed directly to the plugin via the PostCSS JavaScript API.\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any selector blocks. Values declared here take precedence over those passed via the plugin options.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a selector block and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n## Using CSS Custom Properties in setting values\n\n[CSS Custom Proprties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) are \nsupported in `@tidy` rules, with the following caveats:\n\n1. Due to the nature of CSS Custom Properties, particularly the inability to use them in media query parmeters, a CSS Custom Property used as the `@tidy site-max` value will throw an error.\n\nSee the [Tips and Tricks](../../wiki/Tips-and-Tricks) Wiki page for more.\n\n<!-- links -->\n[wiki]: ../../wiki/\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n",
			"readmeFilename": "README.md",
			"gitHead": "9e7969ace3d263b10e740f15953075b30942855b",
			"_id": "postcss-tidy-columns@0.4.0-beta7",
			"_nodeVersion": "8.14.0",
			"_npmVersion": "6.9.0",
			"dist": {
				"integrity": "sha512-jVyRO2v5Mz8WP0C2gg/uFzJPidwOe8Vo0dKhhnc2ML6WLla4q+3r220ogjj8ylEXftcVobk/ksaHhNi6N274IA==",
				"shasum": "d967807dbdc4648ef0d5219d56db394b9408bbd4",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.4.0-beta7.tgz",
				"fileCount": 28,
				"unpackedSize": 52687,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdECVtCRA9TVsSAnZWagAACLwP/jfCGbUd3vuUQk1t2iNk\nDm8z76vHapxBTzMZzYFKmBWkNSxPtK4+sZcEVXeqNtgTak+qmNZrZaiyqrXE\n833EvNVJWXRHrKD2F4BTm1qL/pQjYCZ5hZ9w8IeMSnMOHjmnAFCRbgb7HVDu\nAyNdBJNUCADFrYeSHKyi3uNacF55FnImvZBFfbxQgvqzP6blk+2b9a1PHug9\nNzi+sKLU9Dp+JNg6aRS//HtZ2rskrMgKV38IHXlUvUQv7Nk1i5xgS+bqBtRd\nvzkGXytvjFUJGH45ADvJjem4/XgQBgmj5QV+9fxBAvFoPM7LQn2XMU8o9BpB\nXn9H+3N18xC+jOCSzI/7asMX1r37AEQ0cg5WTSCvVOSXu8byZZ7451hsEcCr\nTRnw/H7/7fy6O0+4YOvIf7LvI85/cdW0gLZgL3TFvj4pk17BhQIGgjiDIM2T\nDlTd1I/5ZGg8+UDqy/76gjAreBjivNxxTC+cwd69U2vLRUw5k5GPRAEeg/ha\nD8RqfJIs2EcMJ2Tp96wsJ2vBXXfChIANjlCVadpUA6e5aIiJ+2nqa783jzXI\nQ+WAnA7PXvWHgUb2sp4d8J5FqNc7O7kq14O9oecBOrJiWvkf/CrxnRAfZ6tW\nCHcUsKixy1LNwrse8YnXLBUGtIXWWijjm1B2Z2BwI2l3JL0Aw/wr1ibDF0sW\ntAOB\r\n=pfrS\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCUBsJNvhEOq5DPCd3a62WCYipybPxrXWP1ZBYR6ve4DAIhAObi8HOpdEWnLOpycZBX4RIr3FcfZbkBoyFF5GTDydM8"
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.4.0-beta7_1561339245056_0.40719535004768503"
			},
			"_hasShrinkwrap": false
		},
		"0.4.0": {
			"name": "postcss-tidy-columns",
			"version": "0.4.0",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"autoprefixer": "^9.5.1",
				"node-sass": "^4.12.0",
				"nodemon": "^1.19.1",
				"postcss": "^6.0.22",
				"postcss-units": "^1.2.1"
			},
			"devDependencies": {
				"eslint": "^5.16.0",
				"eslint-config-airbnb-base": "^13.1.0",
				"eslint-plugin-import": "^2.17.0",
				"jest": "^24.7.1",
				"jest-cli": "^24.7.1"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll",
				"watch:verbose": "jest --watchAll  --verbose",
				"build:css": "npm test && node docs/_bin/build.js",
				"watch:css": "nodemon -e scss -x node docs/_bin/build.js"
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "152ea617054af3be59d245ff8e29585e76c4e7d5",
			"_id": "postcss-tidy-columns@0.4.0",
			"_nodeVersion": "8.14.0",
			"_npmVersion": "6.9.0",
			"dist": {
				"integrity": "sha512-E8OU/rqqG5KVxw2zvPzwRN05ufkfHq9/B6KJCBn3NnKdbWomjAvbqKGXljmgzlEHof3156Cp3UQcbsNjW6D77A==",
				"shasum": "d46c955acebf9e6bf88519a5ea5d6627dea89b7a",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.4.0.tgz",
				"fileCount": 28,
				"unpackedSize": 52932,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdEsLjCRA9TVsSAnZWagAArGwP/3SueHWrond+zeS5wyyL\n5BADAnNOnkkMMqqOXaCV5BlEaVypSznw7b9z0PvGdi5i6gBCF3YIXtB0jgrr\nGJR7fUMqf+ZZEosDmA+B3DpDR4IA7AnRuOEq5jLochZ6Tv+IR3EB/L9+Acvs\n/MP0FySeakAhZagLkpa2TbT5mgocQ+akvsMf37Ya6BHGp3dQQ9ipD0MoVhwX\nbpf/LBYgNnT+Hx4uXhZCyZx8Cz16i2eGHOFQZEU1P87SfcazX13bbDs9kz10\nEaC1ouOdr1R/OmkUVcjdrRI+w47DTLVAyBwRSvldeY5thXOXC7tkCQXvoyu2\nj/d1YMgoheOk7XrtJhW1Fc/2GXOAhDuw788Tfl+NzXmYu1YHY/ZVm0sviSez\nYJxGlbxKVfbVMX38UfgP7WYEKWiYFzR8Thq3NYmAZ2NYh4ox0vZaTlQN0H6C\ntMncnJYNFN5TXSoSKU4kzr7iAWZ+XnURFv1f4vy6KXXMsKnJI/saJnrpzE+y\nkgARQxpg1BivkAVuBfVbhdxoXGVTOalgk2QB9Mm6mPP2h+UjWvd3VNwFYxBd\nXibCTc0n83adx+6eG9xqVka7nvMcDL3navbf5OSPIZwWxaxbDahuWBLX7m/t\njbhlWKmTCkTRtJ44ZytzXs7LffbScFLW/OUGipqHmS5/+bZ6yu0FS7+tfmQk\n0Ulw\r\n=hQBR\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDTTxNJi5HcHruKG+ZHKMLnctpLAdSrq7+LF1Lks2fbOgIhAN6zPnX86yS2HEFp2y4+wiO5q82Gf8Vju2lR8ApRbAXj"
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.4.0_1561510626605_0.7057686913211667"
			},
			"_hasShrinkwrap": false
		},
		"0.4.1-beta-1": {
			"name": "postcss-tidy-columns",
			"version": "0.4.1-beta-1",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
			"dependencies": {
				"postcss": "^6.0.22"
			},
			"devDependencies": {
				"autoprefixer": "^9.5.1",
				"node-sass": "^4.12.0",
				"nodemon": "^1.19.1",
				"eslint": "^5.16.0",
				"eslint-config-airbnb-base": "^13.1.0",
				"eslint-plugin-import": "^2.17.0",
				"jest": "^24.7.1",
				"jest-cli": "^24.7.1",
				"postcss-units": "^1.2.1"
			},
			"scripts": {
				"test": "jest",
				"watch": "jest --watchAll",
				"watch:verbose": "jest --watchAll  --verbose",
				"build:css": "npm test && node docs/_bin/build.js",
				"watch:css": "nodemon -e scss -x node docs/_bin/build.js"
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nTidy Columns sets widths and margins, based on a user-defined configuration, with the goal that any elements along the vertical axis that should be aligned, are. \n\n**This plugin will not set layout for you. Layout is *your* job**.\n\nSee the [demo page][demo] to see it in action, and check out the [Wiki][wiki] for more about configuring the plugin.\n\n## Install\n\n```shell\nnpm install postcss-tidy-columns\n```\n\n## Example\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 12,\n  gap: '1.25rem',\n  edge: '2rem',\n  siteMax: '90rem',\n});\n```\n\n```css\n/* Input example, using the above plugins options */\ndiv {\n  tidy-span: 3;\n  tidy-offset-left: 2;\n}\n```\n\n```css\n/* Output example */\ndiv {\n  width: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  max-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  margin-left: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n}\n\n@media (min-width: 90rem) {\n  div {\n    margin-left: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 2) + 1.25rem * 2);\n  }\n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n## Contents\n\n* [Tidy Properties](#tidy-properties)\n* [Tidy Functions](#tidy-functions)\n* [!tidy Rule](#tidy-rule)\n* [Options](#options)\n* [Options Cascade](#options-cascade)\n* [Using CSS Custom Properties in setting values](#using-css-custom-properties-in-setting-values)\n\nSee the [Wiki][wiki] for additional documentation and tips.\n\n## Tidy Properties\n\n### Span\n\nThe `tidy-span` property specifies the number of columns and adjacent column gaps the element should span. Supports positive integer and decimal values.\n\n> #### Syntax\n>\n> ```\n> tidy-span: <number>;\n> ```\n\n### Offsets\n\nThe `tidy-offset-left` and `tidy-offset-right` properties specify the number of columns and adjacent column gaps the element's margin should span. Supports positive and negative integer and decimal values\n\nOffsets use a [`siteMax`](#sitemax) breakpoint, since there's no `max-margin` CSS property.\n\n> #### Syntax\n>\n> ```\n> tidy-offset-left: <number>;\n> tidy-offset-right: <number>;\n> ```\n\n### Column Shorthand  \n\n`tidy-column` is a shorthand property for setting `tidy-offset-left`, `tidy-span`, and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single offset value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n> [ <number> | none ] / span && <number> [ / <number> ]?\n> ```\n>\n> ```\n> tidy-column: 3 / span 2 / 4;\n> tidy-column: none / span 4 / 1;\n> tidy-column: 1 / span 4;\n> ```\n\n### Offset Shorthand  \n\n`tidy-offset` is a shorthand property for setting `tidy-offset-left` and `tidy-offset-right` in one declaration.\n\nUse `none` to bypass a required value. A single value applies to both `left` and `right`.\n\n> #### Syntax\n>\n> ```\n>  [ <number> | none ] [ / <number> ]? */\n> ```\n>\n> ```\n> tidy-offset: 3 / 4;\n> tidy-offset: none / 1;\n> tidy-offset: 1;\n> ```\n\n## Tidy Functions\n\nThese functions are provided for incorporating the `tidy-` properties' output without using the properties themselves. These can be used on their own or nested inside a `calc()` function, and allow for more control over the declarations added by the plugin.\n\n**Unlike the above _properties_, these functions only output one value:**\n* `tidy-[offset|span]()` outputs the fluid value\n* `tidy-[offset|span]-full()` outputs the static value, based on the `siteMax` in the configuration.\n\nBe sure to use the function most appropriate for your use-case. Typically, this means redeclaring the the `-full` version of the function in the breakpoint at which the site becomes static width. \n\n**TIP:** For any function declarations that should stay the same across breakpoint configurations, or simply to redclare the `-full` version of a function, append the declaration with `!tidy` to signal to the plugin to handle duplicating the declaration.\n\n### Span Function\n\n`tidy-span()` and `tidy-span-full()` functions return the `span` property's `calc()` declaration for use in assigning widths.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-span(number) */\n> /* property: calc(tidy-span(number) expression) */\n>\n> div {\n>   width: calc(tidy-span(3) + 4rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     width: calc(tidy-span-full(3) + 4rem);\n>   }\n> }\n> ```\n\n### Offset Function\n\n`tidy-offset()` and `tidy-offset-full()` functions return the `offset` property's `calc()` declaration for use in positioning.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-offset(number) */\n> /* property: calc(tidy-offset(number) expression) */\n>\n> div {\n>   left: calc(tidy-offset(1) + 2rem);\n> }\n>\n> @media (min-width: 75rem) {\n>   div {\n>     left: calc(tidy-offset-full(1) + 2rem);\n>   }\n> }\n> ```\n\n### Var Function\n\n`tidy-var()` function returns the specified option value.\n\n> #### Syntax\n>\n> ```css\n> /* property: tidy-var(string) */\n>\n> div {\n>   margin-left: tidy-var(gap);\n>   width: calc(tidy-var(siteMax) + tidy-var(edge) * 2);\n> }\n> ```\n\n## `!tidy` Rule\n\n`!tidy` signifies that a declaration should cascade through configured \nbreakpoint changes.\n\n> #### Example\n>\n> Assuming one '64rem' breakpoint change configured...\n>\n> ```css\n>\n> /* Input: */\n> div {\n>   tidy-span: 3 !tidy;\n> }\n>\n> /* Output: */\n> div {\n>   tidy-span: 3;\n> }\n>\n> @media (min-width: 64rem) {\n>   div {\n>     tidy-span: 3;\n>   }\n> }\n> ```\n\n## Options\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`columns`](#columns)|`{Number}`|`undefined`|The number of columns.|\n|[`gap`](#gap)|`{String}`|`undefined`|The width of column gaps.|\n|[`siteMax`](#siteMax)|`{String}`|`undefined`|The max-width of the site.|\n|[`edge`](#edge)|`{String}`|`undefined`|The value of the site's edge padding.|\n|[`debug`](#debug)|`{Boolean}`|`false`|Add debug comments.|\n|[`breakpoints`](#breakpoints)|`{Object}`|`{}`|Breakpoint-specific configuration options.|\n\n_As an alternative to the [PostCSS] JavaScript API, some options may also be passed via stylesheet `@tidy` at-rules._\n\n### `columns`\n\nDeclares the number of columns in your design. Supports any positive integer.\n\n> #### CSS Syntax\n>\n> ```\n> @tidy columns <number>;\n> ```\n\n### `gap`\n\nDeclares the width of the gap between each column. Supports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy gap <length>;\n> ```\n\n### `siteMax`\n\nDeclares the max-width of the site, at which point the site transitions from fluid width to static width. Setting a `siteMax` value ensures the column and margin widths are correct once the site width is static.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy site-max <length>;\n> ```\n> \n> Alternatively, use the camelCased JavaScript property.\n> ```\n> @tidy siteMax <length>;\n> ```\n\n### `edge`\n\nSet `edge` to the non-cumulative value of the space between the content and the edge of the page.\n\nSupports any positive integer of unit [`px`|`em`|`rem`].\n\n> #### CSS Syntax\n>\n> ```\n> @tidy edge <length>;\n> ```\n\n### `debug`\n\nSet `debug` to `true` to maintain the pre-processed CSS declaration as a comment.\n\n```css\ndiv {\n  /* tidy-span: 3 */\n  width: calc((((100vw - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n  max-width: calc((((90rem - 2rem * 2) / 12 - 1.1458rem) * 3) + 1.25rem * 2);\n}\n```\n\n> #### CSS Syntax\n>\n> ```\n> @tidy debug <boolean>;\n> ```\n\n### `breakpoints`\n\nUse the `breakpoints` object to define a columns configuration that will change based on screen size.\n\n1. Define the small-screen columns configuration in the root object.\n2. Define one or more `min-width` breakpoints at which the columns configuration will change, and any configuration options that will change.\n4. The configuration settings cascade up from the root to the largest `breakpoint`.\n\n```js\nrequire('postcss-tidy-columns')({\n  columns: 9,\n  edge: '1rem',\n  gap: '0.625rem',\n  breakpoints: {\n    '48rem': {\n      columns: 12,\n      gap: '1rem'\n    },\n    '64rem': {\n      edge: '1.25rem',\n      siteMax: '90rem'\n    }\n  },\n});\n```\n\nSee the [Gotchas](https://github.com/goodguyry/postcss-tidy-columns/wiki/Gotchas#configuration-breakpoints-caveats) Wiki page for more.\n\n## Options Cascade\n\n### Plugin options\n\nOptions passed directly to the plugin via the PostCSS JavaScript API.\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any selector blocks. Values declared here take precedence over those passed via the plugin options.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a selector block and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n## Using CSS Custom Properties\n\n[CSS Custom Proprties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) are \nsupported in `@tidy` rules, with the following caveat:\n\n1. Due to the nature of CSS Custom Properties, particularly the inability to use them in media query parmeters, a CSS Custom Property used as the `@tidy site-max` value will throw an error.\n\nSee the [Tips and Tricks](https://github.com/goodguyry/postcss-tidy-columns/wiki/Tips-and-Tricks) Wiki page for more.\n\n<!-- links -->\n[wiki]: https://github.com/goodguyry/postcss-tidy-columns/wiki\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n[demo]: https://goodguyry.github.io/postcss-tidy-columns/\n",
			"readmeFilename": "README.md",
			"gitHead": "8e368b5d4781def27b388d5ff6f900dc24579ba1",
			"_id": "postcss-tidy-columns@0.4.1-beta-1",
			"_nodeVersion": "8.14.0",
			"_npmVersion": "6.11.3",
			"dist": {
				"integrity": "sha512-0R7eJSgTphDZS/ShsPJZfafyXIO4WbighPbBFoJRuADz/hfqJVp6pEPQ6oE7SgfTySM9C+p4nViJUKHkP5rTOg==",
				"shasum": "cac6469bf44a0f2adcbc1a02b08ba5861f7d8835",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-0.4.1-beta-1.tgz",
				"fileCount": 29,
				"unpackedSize": 59130,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdjv+qCRA9TVsSAnZWagAAXs0QAJwPYk3M+0giU0d8mSYw\nDZcO/ym2yWSsnSiJalJ3OtiGAL6bcX96+YtDaiohcf+vbXlev1U0ckTYuNKd\ncorfMIxIaXCZXUkJbD0u1/9amM5V/klQlVtpYBCIi+o4/Axn6ACwXz2cEGww\nDz1EHaduygmObLUVn4RykIh7tGDcirs/Mjt/hhox3m0i32xvil0Of1ztsV/o\nkhRHh4eRqE6RHId0J0B0Nu6pzP9Mkp7MAi2ZmqdGJJV1MWVdjn5qRiLzvJN0\njrWHaz7F+ZQ74/c6keXU6Ge8Bf9Pz1aMNCzQJ5uoHDqQUKEMGZ/SpbMpmPSb\nlo+fWX6Szx+sBoS5MJf1qKwAIF7RwP1oxKL8mwV2IMMWg/08ye+rVGTvG7dC\nqmbeAnM8mFg8W7P7YJMjEZq4qAIffB8V5by4q+kEZ1H5JD/UtOWRlLsL5LKQ\nqyShVAc4L5SIVCZB7j17pzy2u2M7BTlNQuynFFMnm2m8PRr6RQwv6pkcOhKk\nh/kb+WfkYSLBPVaGVHcR3/WHBpkUNO35s32sfDBM5g3GlIYmrkFisTNkwrUG\nGd8jLCmqLJdqasNSoubvXWKM7+jE5ucGY2xtPp1Biqg8IWZ6vjnjslUUaXkK\nq48kgFYkwQ+Bx7l4fKkDK/UtB/VChLXDDro5DJJuqt+2++Qq8XO9BO+L6ow/\ns48R\r\n=acFz\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCjLG4MIE899uKjBngu+xb4DMBkKBtrRWqdbzJ5wOF3qwIgBcfjBCliQm8MDlQIipWplQ1g++PfJBhpsAJT/Rc3kuE="
					}
				]
			},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_0.4.1-beta-1_1569652649677_0.8158663554040027"
			},
			"_hasShrinkwrap": false
		},
		"1.0.0-beta-1": {
			"name": "postcss-tidy-columns",
			"version": "1.0.0-beta-1",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://goodguyry.github.io/postcss-tidy-columns/",
			"dependencies": {
				"postcss-calc": "^8.2.4",
				"postcss-value-parser": "^4.1.0",
				"schema-utils": "^4.0.0"
			},
			"devDependencies": {
				"eslint": "^8.10.0",
				"eslint-config-airbnb-base": "^15.0.0",
				"eslint-plugin-import": "^2.25.4",
				"jest": "^27.5.1",
				"jest-cli": "^27.5.1",
				"postcss": "^8.4.7"
			},
			"peerDependencies": {
				"postcss": "^8.4.7"
			},
			"scripts": {
				"test": "npm run lint && jest",
				"watch": "jest --watchAll",
				"watch:verbose": "jest --watchAll  --verbose --detectOpenHandles",
				"build": "npm run build --prefix docs",
				"lint": "eslint ."
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nTidy Columns creates a global grid, allowing authors to set widths and margins while maintaining alignment along the y-axis.\n\n## Get Started\n\nSee the [demo page][demo] to see it in action.\n\n### Install\n\n```shell\nnpm install --save-dev postcss postcss-tidy-columns\n```\n\n### Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n### Example\n\n```scss\n/* Input example */\n@tidy columns var(--site-columns);\n@tidy gap 1.25rem;\n@tidy edge var(--site-edge);\n@tidy max 80rem;\n\n:root {\n  --site-columns: 6;\n  --site-edge: 1.25rem;\n}\n\n@media (min-width: 48rem) {\n  :root {\n    --site-columns: 12;\n    --site-edge: 1.875rem;\n  }\n}\n\ndiv {\n  width: tidy-span(3);\n  margin-left: tidy-offset(2);\n}\n```\n\n```scss\n/* Output example */\ndiv {\n  width: calc((((min(100vw, 80rem) - var(--site-edge) * 2) / var(--site-columns) - (1.25rem / var(--site-columns) * (var(--site-columns) - 1))) * 3) + 2.5rem);\n  margin-left: calc((((min(100vw, 80rem) - var(--site-edge) * 2) / var(--site-columns) - (1.25rem / var(--site-columns) * (var(--site-columns) - 1))) * 2) + 2.5rem);\n}\n```\n\n## API\n\nThese functions can be used anywhere a `calc()` or `min()` function can.\n\n### Span Function\n\nThe `tidy-span()` function returns a `calc()` declaration for use in assigning widths.\n\n> **Supports**: positive integer and decimal values.\n>\n> #### Syntax\n>\n> ```scss\n> tidy-span(<number>)\n> ```\n\n### Offset Function\n\nThe `tidy-offset()` function returns a `calc()` declaration for use in positioning.\n\n> **Supports**: positive and negative integer and decimal values\n>\n> #### Syntax\n>\n> ```scss\n> tidy-offset(<number>)\n> ```\n\n### Var Function\n\n`tidy-var()` functions are replaced by the specified option's value.\n\n> #### Syntax\n>\n> ```scss\n> tidy-var(<string>)\n> ```\n>\n> #### Examples\n>\n> ```scss\n> tidy-var(max)  // => 80rem\n> tidy-var(edge) // => var(--site-edge)\n> ```\n\nSee the [Examples Wiki page](https://github.com/goodguyry/postcss-tidy-columns/wiki/Examples) for more.\n\n## Options\n\nTidy Columns uses `@tidy` at-rules to configure grid options. These options can be set to either a static value or a `var()` function.\n\n**Static Values** will reduce the size of the output, but should only be used if the option's value **does not** change.\n\n**CSS Custom Properties** offer much more flexibility, as they'll dynamically update during runtime.\n\nOverride an option by redeclaring it in a rule; disable it altogether with `@tidy <option> false`.\n\nSee the [Wiki][wiki] for more about configuring the plugin.\n\n### `columns`\n\nThe number of grid columns in the design.\n\n> #### 🔺 _Required_\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy columns [<number>|<var-function>];\n> ```\n\n### `gap`\n\nThe width of the gap between each column.\n\n> **Default**: `undefined`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy gap [<length>|<var-function>];\n> ```\n\n### `edge`\n\nThe minimum width of the flexible space between the content and the edge of the page.\n\n> **Default**: `undefined`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy edge [<length>|<var-function>];\n> ```\n\n### `max`\n\nThe max-width of the site, including [`edge`](#edge) spacing; the point at which the site transitions from fluid width to static width. Setting a `max` value ensures the column and margin widths are correct once the site width is static.\n\n> **Default**: `undefined`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy max [<length>|<var-function>];\n> ```\n\n### `base`\n\nThe units – either `vw` or `%` – used in the fluid base for calculations. This value is always appended to `100`.\n\n> **Default**: `vw`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy base [vw|%];\n> ```\n> \n> #### Example Output\n>\n> Set to vw, fluid grid based on viewport\n>\n> ```scss\n> min(100vw, var(--site-max))\n> ```\n>\n> Set to %, fluid grid based on parent element\n> \n> ```scss\n> min(100%, var(--site-max))\n> ```\n\n### `reduce`\n\nSet `reduce` to `true` to reduce the `calc()` output using [`postcss-calc`](https://www.npmjs.com/package/postcss-calc).\n\n> ```js\n> require('postcss-tidy-columns')({ \n>   reduce: true,\n> });\n> ```\n> \n> #### Example Output\n>\n> ```scss\n> div {\n>   width: min(25vw - 1.8749rem, 18.1251rem);\n> }\n> ```\n\n### `debug`\n\nSet `debug` to `true` print the pre-processed CSS declaration as a warning.\n\n> ```js\n> require('postcss-tidy-columns')({ \n>   debug: true,\n> });\n> ```\n\n## Options Cascade\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any rule, in the stylesheet root.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a rule and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n<!-- links -->\n[wiki]: https://github.com/goodguyry/postcss-tidy-columns/wiki\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n[demo]: https://goodguyry.github.io/postcss-tidy-columns/\n",
			"readmeFilename": "README.md",
			"gitHead": "5e0ff623e6ff125dabc25b43d41d834d43b94c79",
			"_id": "postcss-tidy-columns@1.0.0-beta-1",
			"_nodeVersion": "14.17.0",
			"_npmVersion": "8.2.0",
			"dist": {
				"integrity": "sha512-IKabiViHWp9ySPWZxsthgcnqKlc+D6dbrUq1r3HHxoqLoWQZJmX5iH8nXvQ74SJ02xD+NomCSIw+8Q1Ww51JDQ==",
				"shasum": "cc0ee423926e4bb834be8cd3a4e9a1ab35432403",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-1.0.0-beta-1.tgz",
				"fileCount": 9,
				"unpackedSize": 29939,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiLVkvACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpKAxAAm5Vbf4XlUo4XDrYpzVKW0Fmp99Tsuc8LVcVZqi4oHhsgGt73\r\n9+hg7wqGTU0/sSYWd9YVZjM1JwytcP7bnITykggnHfs+ErzYp5r+OGhaiVvB\r\n3VjI7f7l9D1ctfJr4BLXJ3x7abhPWBy/xTW/6fmyxe9b6hb4lIpcouPS353n\r\nzZIBxd2ilyjDxHMqfqtXzQL8/INRaR+a7vgycBpcDB7iPEolMlcmHFYCy3DC\r\n3i2nJjxKpedfJstl5g9IaJVxUSN32dLMz+6SV7pjET8J0BMQk9DrBmPGLIjA\r\nCL1ukmdbnnbX5xhvecIRfBdWIqXCASb/yiAFJagFhQKUt8XWBec2Mbn/7YdY\r\nxFy3/Cm7BWROvph0Hk3Q+UajodeL2IB3y2JCA5xGcSSKFnLFcwimjXWYvoxn\r\nBLReB/2F0ts3C6L2jfvWmMj116jm1BFd7GE4qR0G57SkC2p1lX52NmwZ9vgA\r\nO4c9oxWroWogM3JDhtqH64Ibs3mP9PAhrw661YKGGL1ZbLqJnFU7Uzu11tJa\r\nYVIZC5KJOsxoxtX0kuihO1akG6RKVuyvcYYWjg2jhr4zFyaLmlUMxm+5I+nn\r\nHdQYrcKLvyYloVOUDkxfKn7CGTaQ1feeAPvW0JNkT53Fa1khBmo4KH2Ps8HO\r\nqppBhZsr3DJuZDsZvJ8uAgj5AUB79M83v2I=\r\n=o+ne\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDR0cti0f4cMEPszYfcAeBKtI4fbihUnjNp34GMiK8bGwIgaE6zCeRTJ4e7sfYA+mHkpicdh+zU4kP4mAsXKuMbw0o="
					}
				]
			},
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_1.0.0-beta-1_1647139119194_0.04892676140999308"
			},
			"_hasShrinkwrap": false
		},
		"1.0.0-beta-2": {
			"name": "postcss-tidy-columns",
			"version": "1.0.0-beta-2",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://goodguyry.github.io/postcss-tidy-columns/",
			"dependencies": {
				"postcss-calc": "^8.2.4",
				"postcss-value-parser": "^4.1.0",
				"schema-utils": "^4.0.0"
			},
			"devDependencies": {
				"eslint": "^8.10.0",
				"eslint-config-airbnb-base": "^15.0.0",
				"eslint-plugin-import": "^2.25.4",
				"jest": "^27.5.1",
				"jest-cli": "^27.5.1",
				"postcss": "^8.4.7"
			},
			"peerDependencies": {
				"postcss": "^8.4.7"
			},
			"scripts": {
				"test": "npm run lint && jest",
				"watch": "jest --watchAll",
				"watch:verbose": "jest --watchAll  --verbose --detectOpenHandles",
				"build": "npm run build --prefix docs",
				"lint": "eslint ."
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nTidy Columns creates a global grid, allowing authors to set widths and margins while maintaining alignment along the y-axis.\n\n## Get Started\n\nSee the [demo page][demo] to see it in action.\n\n### Install\n\n```shell\nnpm install --save-dev postcss postcss-tidy-columns\n```\n\n### Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n### Example\n\n```scss\n/* Input example */\n@tidy columns var(--site-columns);\n@tidy gap 1.25rem;\n@tidy edge var(--site-edge);\n@tidy max 80rem;\n\n:root {\n  --site-columns: 6;\n  --site-edge: 1.25rem;\n}\n\n@media (min-width: 48rem) {\n  :root {\n    --site-columns: 12;\n    --site-edge: 1.875rem;\n  }\n}\n\ndiv {\n  width: tidy-span(3);\n  margin-left: tidy-offset(2);\n}\n```\n\n```scss\n/* Output example */\ndiv {\n  width: calc((((min(100vw, 80rem) - var(--site-edge) * 2) / var(--site-columns) - (1.25rem / var(--site-columns) * (var(--site-columns) - 1))) * 3) + 2.5rem);\n  margin-left: calc((((min(100vw, 80rem) - var(--site-edge) * 2) / var(--site-columns) - (1.25rem / var(--site-columns) * (var(--site-columns) - 1))) * 2) + 2.5rem);\n}\n```\n\n## API\n\nThese functions can be used anywhere a `calc()` or `min()` function can.\n\n### Span Function\n\nThe `tidy-span()` function returns a `calc()` declaration for use in assigning widths.\n\n> **Supports**: positive integer and decimal values.\n>\n> #### Syntax\n>\n> ```scss\n> tidy-span(<number>)\n> ```\n\n### Offset Function\n\nThe `tidy-offset()` function returns a `calc()` declaration for use in positioning.\n\n> **Supports**: positive and negative integer and decimal values\n>\n> #### Syntax\n>\n> ```scss\n> tidy-offset(<number>)\n> ```\n\n### Var Function\n\n`tidy-var()` functions are replaced by the specified option's value.\n\n> #### Syntax\n>\n> ```scss\n> tidy-var(<string>)\n> ```\n>\n> #### Examples\n>\n> ```scss\n> tidy-var(max)  // => 80rem\n> tidy-var(edge) // => var(--site-edge)\n> ```\n\nSee the [Examples Wiki page](https://github.com/goodguyry/postcss-tidy-columns/wiki/Examples) for more.\n\n## Options\n\nTidy Columns uses `@tidy` at-rules to configure grid options. These options can be set to either a static value or a `var()` function.\n\n**Static Values** will reduce the size of the output, but should only be used if the option's value **does not** change.\n\n**CSS Custom Properties** offer much more flexibility, as they'll dynamically update during runtime.\n\nOverride an option by redeclaring it in a rule; disable it altogether with `@tidy <option> false`.\n\nSee the [Wiki][wiki] for more about configuring the plugin.\n\n### `columns`\n\nThe number of grid columns in the design.\n\n> #### 🔺 _Required_\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy columns [<number>|<var-function>];\n> ```\n\n### `gap`\n\nThe width of the gap between each column.\n\n> **Default**: `undefined`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy gap [<length>|<var-function>];\n> ```\n\n### `edge`\n\nThe minimum width of the flexible space between the content and the edge of the page.\n\n> **Default**: `undefined`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy edge [<length>|<var-function>];\n> ```\n\n### `max`\n\nThe max-width of the site, including [`edge`](#edge) spacing; the point at which the site transitions from fluid width to static width. Setting a `max` value ensures the column and margin widths are correct once the site width is static.\n\n> **Default**: `undefined`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy max [<length>|<var-function>];\n> ```\n\n### `base`\n\nThe units – either `vw` or `%` – used in the fluid base for calculations. This value is always appended to `100`.\n\n> **Default**: `vw`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy base [vw|%];\n> ```\n> \n> #### Example Output\n>\n> Set to vw, fluid grid based on viewport\n>\n> ```scss\n> min(100vw, var(--site-max))\n> ```\n>\n> Set to %, fluid grid based on parent element\n> \n> ```scss\n> min(100%, var(--site-max))\n> ```\n\n### `reduce`\n\nSet `reduce` to `true` to reduce the `calc()` output using [`postcss-calc`](https://www.npmjs.com/package/postcss-calc).\n\n> ```js\n> require('postcss-tidy-columns')({ \n>   reduce: true,\n> });\n> ```\n> \n> #### Example Output\n>\n> ```scss\n> div {\n>   width: min(25vw - 1.8749rem, 18.1251rem);\n> }\n> ```\n\n### `debug`\n\nSet `debug` to `true` print the pre-processed CSS declaration as a warning.\n\n> ```js\n> require('postcss-tidy-columns')({ \n>   debug: true,\n> });\n> ```\n\n## Options Cascade\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any rule, in the stylesheet root.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a rule and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n<!-- links -->\n[wiki]: https://github.com/goodguyry/postcss-tidy-columns/wiki\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n[demo]: https://goodguyry.github.io/postcss-tidy-columns/\n",
			"readmeFilename": "README.md",
			"gitHead": "5e0ff623e6ff125dabc25b43d41d834d43b94c79",
			"_id": "postcss-tidy-columns@1.0.0-beta-2",
			"_nodeVersion": "14.17.0",
			"_npmVersion": "8.2.0",
			"dist": {
				"integrity": "sha512-IQKPGsYRIg8QBF23sLwRHiHR1+A0AC6WUsXuoEScsftktlQB4c5H9h3y7chDlc2HlT+Rgeg66X8Lo3AQSIgRmA==",
				"shasum": "9f79eeab304069c096378a46a93c817e3305c5a7",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-1.0.0-beta-2.tgz",
				"fileCount": 12,
				"unpackedSize": 35256,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiLVo8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmruKQ/6AsF00NpclbgGelWC6EA+8i6su/lzQ8DHrJuMp0ZKzokwW944\r\n1aqXDE4AmVdqg482P8gN9i0wUwkpvVnX1orJ3hxRNmzFkE4Cw8Q9dVJsBqgv\r\nTp2zFEymXUQKgiab2DMn8Yuy5OQen5uyUXniJQQ5DwTI80mFfJybwfhUnfZP\r\nel8Fk11JSb7FdqdpFAI18JQf5qnskC6F95xv+YWm3/ti09yiBeNM/ohNzmC3\r\nwjXw1p8LRxfHZJeFKBFyufHf4dDFnB4izgpji5sDCRPFqhK++eB39qZFl7RG\r\nui8VhOiiafJTaoHnMoiv5bMpuXF/0mZVV4YUSg0tXnT/xd69BkFNVFZjn3LN\r\nseXE8yTO/HqeUBUEFlGvw8RuyfL/jOLKte39pNChR4vcIPXGItt0yBnZcUKT\r\no5ZQNg+/QLEsgHH9lGpCEQJWg3rCxPAxk3vQCUiZb2upNBeZXvxGrxhna09e\r\nJaprgHbpJx3KaOTGmexprXKsOFJwonbtGp4mvkEzBeAHHnWSyHtNtKIGwHFH\r\nKtB04loXYg63yzE3aE9K1iPURh4grA3pPm5EgFK5EPxKpStk/Eif6rFSFBMK\r\nN8sKkY31Xi1gRD/VFEIFzZwpicnSH7FskrwDtl6+9vLFJ85stItSYyFEEmxQ\r\nJXmDBSF1D7vy8B43Z7lmOFZLUxYrTSr2U58=\r\n=xTbx\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIDfwTikgZ45+yTm2pye8LhsKcXPXUuGGmMf8zB3KWrDNAiEA8PUDcSPPEKQzH4ALD4/HZwHAmL71rs3HEs83Ws8W5TQ="
					}
				]
			},
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_1.0.0-beta-2_1647139387833_0.9359867161191051"
			},
			"_hasShrinkwrap": false
		},
		"1.0.0-beta-3": {
			"name": "postcss-tidy-columns",
			"version": "1.0.0-beta-3",
			"description": "PostCSS plugin to manage column and margin alignment.",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"columns",
				"grid",
				"flexbox"
			],
			"author": {
				"name": "Ryan Domingue",
				"email": "ryan@ryandomingue.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
			},
			"bugs": {
				"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
			},
			"homepage": "https://goodguyry.github.io/postcss-tidy-columns/",
			"dependencies": {
				"postcss-calc": "^8.2.4",
				"postcss-value-parser": "^4.1.0",
				"schema-utils": "^4.0.0"
			},
			"devDependencies": {
				"eslint": "^8.10.0",
				"eslint-config-airbnb-base": "^15.0.0",
				"eslint-plugin-import": "^2.25.4",
				"jest": "^27.5.1",
				"jest-cli": "^27.5.1",
				"postcss": "^8.4.7"
			},
			"peerDependencies": {
				"postcss": "^8.4.7"
			},
			"scripts": {
				"test": "npm run lint && jest",
				"watch": "jest --watchAll",
				"watch:verbose": "jest --watchAll  --verbose --detectOpenHandles",
				"build": "npm run build --prefix docs",
				"lint": "eslint ."
			},
			"jest": {
				"testEnvironment": "node"
			},
			"readme": "# Tidy Columns [![Build Status][ci-img]][ci] [![npm version][npmjs-img]][npmjs]\n\n[PostCSS] plugin to manage column alignment.\n\nTidy Columns creates a global grid, allowing authors to set widths and margins while maintaining alignment along the y-axis.\n\n## Get Started\n\nSee the [demo page][demo] to see it in action.\n\n### Install\n\n```shell\nnpm install --save-dev postcss postcss-tidy-columns\n```\n\n### Usage\n\n```js\npostcss([ require('postcss-tidy-columns') ]);\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n### Example\n\n```scss\n/* Input example */\n@tidy columns var(--site-columns);\n@tidy gap 1.25rem;\n@tidy edge var(--site-edge);\n@tidy max 80rem;\n\n:root {\n  --site-columns: 6;\n  --site-edge: 1.25rem;\n}\n\n@media (min-width: 48rem) {\n  :root {\n    --site-columns: 12;\n    --site-edge: 1.875rem;\n  }\n}\n\ndiv {\n  width: tidy-span(3);\n  margin-left: tidy-offset(2);\n}\n```\n\n```scss\n/* Output example */\ndiv {\n  width: calc((((min(100vw, 80rem) - var(--site-edge) * 2) / var(--site-columns) - (1.25rem / var(--site-columns) * (var(--site-columns) - 1))) * 3) + 2.5rem);\n  margin-left: calc((((min(100vw, 80rem) - var(--site-edge) * 2) / var(--site-columns) - (1.25rem / var(--site-columns) * (var(--site-columns) - 1))) * 2) + 2.5rem);\n}\n```\n\n## API\n\nThese functions output `calc()` and `min()` functions, so can be used anywhere those functions can be used.\n\n### Span Function\n\nThe `tidy-span()` function returns a `calc()` declaration for use in assigning widths.\n\n> **Supports**: positive integer and decimal values.\n>\n> #### Syntax\n>\n> ```scss\n> tidy-span(<number>)\n> ```\n\n### Offset Function\n\nThe `tidy-offset()` function returns a `calc()` declaration for use in positioning.\n\n> **Supports**: positive and negative integer and decimal values\n>\n> #### Syntax\n>\n> ```scss\n> tidy-offset(<number>)\n> ```\n\n### Var Function\n\n`tidy-var()` functions are replaced by the specified option's value.\n\n> #### Syntax\n>\n> ```scss\n> tidy-var(<string>)\n> ```\n>\n> #### Examples\n>\n> ```scss\n> tidy-var(max)  // => 80rem\n> tidy-var(edge) // => var(--site-edge)\n> ```\n\nSee the [Examples Wiki page](https://github.com/goodguyry/postcss-tidy-columns/wiki/Examples) for more.\n\n## Options\n\nTidy Columns uses `@tidy` at-rules to configure grid options. These options can be set to either a static value or a `var()` function.\n\n**Static Values** will reduce the size of the output, but should only be used if the option's value **does not** change.\n\n**CSS Custom Properties** offer much more flexibility, as they'll dynamically update during runtime.\n\nOverride an option by redeclaring it in a rule; disable it altogether with `@tidy <option> false`.\n\nSee the [Wiki][wiki] for more about configuring the plugin.\n\n### `columns`\n\nThe number of grid columns in the design.\n\n> #### 🔺 _Required_\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy columns [<number>|<var-function>];\n> ```\n\n### `gap`\n\nThe width of the gap between each column.\n\n> **Default**: `undefined`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy gap [<length>|<var-function>];\n> ```\n\n### `edge`\n\nThe minimum width of the flexible space between the edge of the content and the viewport.\n\n> **Default**: `undefined`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy edge [<length>|<var-function>];\n> ```\n\n### `max`\n\nThe max-width of the site, including [`edge`](#edge) spacing; the point at which the site transitions from fluid width to static width. Setting a `max` value ensures the column and margin widths are correct once the site width is static.\n\n> **Default**: `undefined`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy max [<length>|<var-function>];\n> ```\n\n### `base`\n\nThe units – either `vw` or `%` – used in the fluid base for calculations. This value is always appended to `100`.\n\n> **Default**: `vw`\n>\n> #### CSS Syntax\n>\n> ```\n> @tidy base [vw|%];\n> ```\n> \n> #### Example Output\n>\n> Set to vw, fluid grid based on viewport\n>\n> ```scss\n> min(100vw, var(--site-max))\n> ```\n>\n> Set to %, fluid grid based on parent element\n> \n> ```scss\n> min(100%, var(--site-max))\n> ```\n\n### `reduce`\n\nSet `reduce` to `true` to reduce the `calc()` output using [`postcss-calc`](https://www.npmjs.com/package/postcss-calc).\n\n> ```js\n> require('postcss-tidy-columns')({ \n>   reduce: true,\n> });\n> ```\n> \n> #### Example Output\n>\n> ```scss\n> div {\n>   width: min(25vw - 1.8749rem, 18.1251rem);\n> }\n> ```\n\n### `debug`\n\nSet `debug` to `true` print the pre-processed CSS declaration as a warning.\n\n> ```js\n> require('postcss-tidy-columns')({ \n>   debug: true,\n> });\n> ```\n\n## Options Cascade\n\n### Global at-rules\n\nGlobal options are defined via `@tidy` at-rules _outside_ of any rule, in the stylesheet root.\n\n### Local at-rules\n\nLocal options are defined via `@tidy` at-rules _inside_ a rule and are scoped to that rule block. Values declared here take precedence over the global at-rules.\n\n<!-- links -->\n[wiki]: https://github.com/goodguyry/postcss-tidy-columns/wiki\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.com/goodguyry/postcss-tidy-columns.svg?branch=master\n[ci]:      https://travis-ci.org/goodguyry/postcss-tidy-columns\n[npmjs-img]: https://badge.fury.io/js/postcss-tidy-columns.svg\n[npmjs]: https://badge.fury.io/js/postcss-tidy-columns\n[demo]: https://goodguyry.github.io/postcss-tidy-columns/\n",
			"readmeFilename": "README.md",
			"gitHead": "09e947cb3d7d5090f062e8c19f84969bf59df5bb",
			"_id": "postcss-tidy-columns@1.0.0-beta-3",
			"_nodeVersion": "16.15.0",
			"_npmVersion": "8.11.0",
			"dist": {
				"integrity": "sha512-YxULfc2w5bCI3sF2Yqi1Mj+q+v6XlQJLQUdhNgBgL3CZCHZX/q7PSOYWqQBvUbwWE+5RdbHHqNMKxvTPE14O7Q==",
				"shasum": "cffa9085634a21f4608fc9ad915bd25162e3fe9a",
				"tarball": "https://registry.npmjs.org/postcss-tidy-columns/-/postcss-tidy-columns-1.0.0-beta-3.tgz",
				"fileCount": 13,
				"unpackedSize": 37977,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIAg3w3PvikKwa57OjJVhLDVuvMSQqSt/uaJP8/khvil2AiA7Ml0AY8//ftpIwgvUiqg+SHQJngrHL3j3jy3Zsqv17w=="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjTfaOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqMSxAAkJv+0q3tWFNj9peYGXVwdi8j3iTYmCfiBxvlYxSxoWGTCz2M\r\nhmLY+1h3ABC2ZzzK595WKtLVpL+nrRjin15DzyKSEacf5730TLUiTEL5LUT5\r\nQXQAHnckxXINz4sTHwIb07gR4/EuACUEsDbcT+n5DfxT4PwfqmmUug/VFpJ7\r\nImJPKHzLo28xYGgPP/PlZkThPbMiOq5211Cs2iV/Cf2zirIpdLCPYrEF/gU/\r\n6TzRQHskiI5YX5S4PxhkqaKneDlbbEGTrayCFFyJk0lo1PC4e3YH9K2raZVj\r\nMoAYJ591TzFbK9I0QHbIRmtgaP1fypC9rdLDjNrN+QvWKyJclktlIUkeiWa1\r\nCX14pOtHD7XehEqnzCFqy1la9F6KmkVOAIye4tbijvilJVE+nLbC620fNWvh\r\n2evaax5pC3BIWAfjWypL+uWRjJk+z7jgBoA4KBmjTGiJrQDf/EmlYICcufXo\r\nJwnolrXR0sJ0t1/PQfm8ZxpDuBjteoZs+ilOBEC/Yb1SIKB6yPLNJD6lTUxm\r\nqv81Uxm9J8IqPam2TcN4RhCW4JsusBnW6RidXy2Tf6i+ExnDvWwwz/DabwRh\r\n7KqyB5LU/jw96QjoKiEOMtbxZt9VgnW0Q3oEGWehaj2rxVSJYACbLFgzmvEB\r\nZUWz8Ia1dMDsX3bp5a0N+xqLTJeiAFVRv+8=\r\n=iYJ/\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "goodguyry",
				"email": "ryan@ryandomingue.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "goodguyry",
					"email": "ryan@ryandomingue.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-tidy-columns_1.0.0-beta-3_1666053773911_0.8087685143502577"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2018-08-14T19:52:57.303Z",
		"0.1.1": "2018-08-14T19:52:57.467Z",
		"modified": "2022-10-18T00:42:54.235Z",
		"0.2.0": "2018-09-03T06:53:19.991Z",
		"0.2.1": "2018-09-03T07:40:42.794Z",
		"0.2.2": "2018-09-05T02:46:49.617Z",
		"0.2.3": "2018-09-08T06:39:06.553Z",
		"0.3.0": "2018-09-08T07:40:39.812Z",
		"0.3.1": "2018-09-10T05:07:51.719Z",
		"0.3.2": "2018-09-15T06:50:48.189Z",
		"0.3.3": "2018-10-25T05:22:07.489Z",
		"0.4.0-beta1": "2018-12-15T05:47:55.042Z",
		"0.3.4": "2019-01-19T04:43:54.719Z",
		"0.4.0-beta2": "2019-02-25T02:20:29.235Z",
		"0.4.0-beta3": "2019-04-20T03:36:17.488Z",
		"0.4.0-beta4": "2019-05-27T22:56:38.905Z",
		"0.4.0-beta5": "2019-05-28T17:38:55.719Z",
		"0.4.0-beta6": "2019-05-31T04:38:15.986Z",
		"0.4.0-beta7": "2019-06-24T01:20:45.203Z",
		"0.4.0": "2019-06-26T00:57:06.797Z",
		"0.4.1-beta-1": "2019-09-28T06:37:29.823Z",
		"1.0.0-beta-1": "2022-03-13T02:38:39.383Z",
		"1.0.0-beta-2": "2022-03-13T02:43:08.026Z",
		"1.0.0-beta-3": "2022-10-18T00:42:54.139Z"
	},
	"maintainers": [
		{
			"name": "goodguyry",
			"email": "ryan@ryandomingue.com"
		}
	],
	"description": "PostCSS plugin to manage column and margin alignment.",
	"homepage": "https://github.com/goodguyry/postcss-tidy-columns",
	"keywords": [
		"postcss",
		"postcss-plugin",
		"css",
		"columns",
		"grid",
		"flexbox"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/goodguyry/postcss-tidy-columns.git"
	},
	"author": {
		"name": "Ryan Domingue",
		"email": "ryan@ryandomingue.com"
	},
	"bugs": {
		"url": "https://github.com/goodguyry/postcss-tidy-columns/issues"
	},
	"license": "MIT",
	"readme": "",
	"readmeFilename": "",
	"_downloads": 943
}
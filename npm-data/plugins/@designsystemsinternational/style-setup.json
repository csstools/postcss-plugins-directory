{
	"_id": "@designsystemsinternational/style-setup",
	"name": "@designsystemsinternational/style-setup",
	"dist-tags": {
		"latest": "0.0.1"
	},
	"versions": {
		"0.0.1": {
			"name": "@designsystemsinternational/style-setup",
			"version": "0.0.1",
			"description": "PostCSS plugin to easily get started without re-inventing the wheel everytime",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"postcss-css-setup",
				"fluid scales"
			],
			"author": {
				"name": "Lucas Nolte",
				"email": "lucas@designsystems.international"
			},
			"license": "MIT",
			"engines": {
				"node": ">=12.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.3.0"
			},
			"devDependencies": {
				"postcss": "^8.3.11",
				"eslint": "^8.22.0",
				"eslint-config-prettier": "^8.5.0",
				"prettier": "2.7.1"
			},
			"scripts": {
				"lint": "eslint .",
				"prettier:fix": "prettier --write ."
			},
			"gitHead": "06a206c1d03368d1eea7037532a8d39507eb56e7",
			"_id": "@designsystemsinternational/style-setup@0.0.1",
			"_nodeVersion": "16.19.0",
			"_npmVersion": "8.19.3",
			"dist": {
				"integrity": "sha512-+fepwJxXRA7nNLaXdlmWT4xxNb54RbxKfDe8C2nZ8/664+3XoZnhmMFx49HEnzpAUDwZ6X0DBfgOlQmlQ6IJ3A==",
				"shasum": "b64a9356a83fc90dbfd9e3c10190331d7cece9d6",
				"tarball": "https://registry.npmjs.org/@designsystemsinternational/style-setup/-/style-setup-0.0.1.tgz",
				"fileCount": 18,
				"unpackedSize": 17907,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIEuX3zV5ySrnuexIEKjmDGEY53hJdAE/rvAc+LBiW44iAiEAhSWh14zk4CRzkJcW0IxT4jI0lfbUJxkr3ukAwt3TnJU="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkEgSbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrYCRAAmOeBk7o+NKFwtoqmS3OmQ0bV8CSBb5AlFqNfCe0GJ7M4ubCN\r\nTNgNHEpmrBP5MlgMz4QE3uzUjqfz3xHOzvb0n3FrbBlzlPK8f3meHC3gGTpz\r\n27ejS5oF/zh0KvlsxSNPBT8L/0Viu4F/64tRWK2seZ8Y9TMTspSXHFozg4/x\r\ncd85U8Hwb5izQGY6KIEAPdPHD5I9yBF4zqlM/if1NaFJ0yOmkt+MDlHTQ9Rb\r\nny5v0bSxmTMl2qfFkE+Kiax5hixV3yYFeapW8I7AzqxUf4YvZJbesU/AKHgS\r\nA3X0w2RA+9NHUOS4qz3om0smJ2qaXenO4r6+I/Ye727YGuTuivYGBI/wEZZL\r\nl5WxoGulzeWrQiBtf0uKIvUJgC6Z9bZFutPU5Srh5OYCkU6hjOw3p4MZ1dNH\r\ngMMpgxDJpJvfnBbjWKrFPMvGw1TBnP454pdCshgMf3R6bt4O4aejYoB0CIbb\r\nVVH4pxecwt1Y7QDw399WGHILlgFMt1L0z+emnp9PQhsyhIEZSEGJSQD842gY\r\njGvdMlHEjwAyllVGXvm6JtHuORCo09r0c5hvIal+cNC+Van4Sp6W6ZagfPi1\r\n0ICxzpDXiCkQ3vSorebBjwI3sN3GlzeQImpoIm2gd4wUow+pU0p1P/L8+d9Y\r\nLKnVpf+oee58aaDnQzhPPfslFkfVSo5nmlY=\r\n=brM6\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "lnolte",
				"email": "hello@lucas-nolte.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "lnolte",
					"email": "hello@lucas-nolte.com"
				},
				{
					"name": "runemadsen",
					"email": "rune@runemadsen.com"
				},
				{
					"name": "bravomartin",
					"email": "bravomartin@gmail.com"
				},
				{
					"name": "ejsandoval",
					"email": "ejsandoval@uc.cl"
				},
				{
					"name": "fdoflorenzano",
					"email": "f.florenzano94@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/style-setup_0.0.1_1678902427478_0.9404719208995609"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2023-03-15T17:47:07.390Z",
		"0.0.1": "2023-03-15T17:47:07.626Z",
		"modified": "2023-03-15T17:47:07.860Z"
	},
	"maintainers": [
		{
			"name": "lnolte",
			"email": "hello@lucas-nolte.com"
		},
		{
			"name": "runemadsen",
			"email": "rune@runemadsen.com"
		},
		{
			"name": "bravomartin",
			"email": "bravomartin@gmail.com"
		},
		{
			"name": "ejsandoval",
			"email": "ejsandoval@uc.cl"
		},
		{
			"name": "fdoflorenzano",
			"email": "f.florenzano94@gmail.com"
		}
	],
	"description": "PostCSS plugin to easily get started without re-inventing the wheel everytime",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"postcss-css-setup",
		"fluid scales"
	],
	"author": {
		"name": "Lucas Nolte",
		"email": "lucas@designsystems.international"
	},
	"license": "MIT",
	"readme": "# Style Setup\n\nPostCSS plugin to provide some basic structure to set up tokens, help with\nfluid scales and optionally generating utility classes.\n\n- Generate Custom Properties from tokens\n- Easily create fluid type and space scales using `fluid`\n- Optional utility class generator\n\n## Usage\n\n**Step 1:** Install plugin:\n\n```sh\nnpm install --save-dev postcss @designsystemsinternational/style-setup\n```\n\n**Step 2:** Check you project for existed PostCSS config: `postcss.config.js`\nin the project root, `\"postcss\"` section in `package.json`\nor `postcss` in bundle config.\n\nIf you do not use PostCSS, add it according to [official docs]\nand set this plugin in settings.\n\n**Step 3:** Add the plugin to plugins list:\n\n```diff\nmodule.exports = {\n  plugins: [\n+   require('@designsystemsinternational/style-setup')(config),\n    require('postcss-preset-env')\n  ]\n}\n```\n\n**Step 4:** Add configuration, either inline or import it and pass it to the\nfunction.\n\n```js\nmodule.exports = {\n  colors: {\n    black: '#000000',\n    white: '#ffffff',\n  },\n\n  // In your config you can use the fluid function to define your font sizes and\n  // spaces. It expects you to pass unitless px values for lower and upper\n  // bound. It will be turned into a fluid clamp statement following the\n  // calculation of utopia.fyi\n  //\n  // See: https://utopia.fyi/ for more information on this approach.\n  fontSize: {\n    s: 'fluid(14, 18)',\n    m: 'fluid(16, 28)',\n    l: 'fluid(22, 36)',\n  },\n\n  // If you don't want to use fluid scales you can also pass in any valid CSS\n  // size unit here.\n  space: {\n    s: '4px',\n    m: '8px',\n    l: '12px',\n  },\n  fonts: {\n    base: '\"AkzidenzGrotesk\", sans-serif',\n  },\n  breakpoints: {\n    small: '640px',\n    medium: '1024px',\n    large: '1440px',\n    xlarge: '1920px',\n    max: '9999px',\n  },\n  // You can also add arbitray key value entries, that you need to be turned\n  // into custom properties\n  greetings: {\n    hello: 12,\n  },\n};\n```\n\n**Step 5:** Add `@custom-properties;` to your main.css file to serve as the\nentry point for the plugin.\n\n```css\n/* In your main.css */\n@custom-properties;\n```\n\nThe above config will replace `@custom-properties` with the following CSS.\n\n```css\n@custom-media --bp-small (max-width: 640px);\n@custom-media --bp-medium (max-width: 1024px);\n@custom-media --bp-large (max-width: 1440px);\n@custom-media --bp-xlarge (max-width: 1920px);\n@custom-media --bp-max (max-width: 9999px);\n\n:root {\n  --color-black: #000000;\n  --color-white: #ffffff;\n  --text-s: clamp(0.875rem, 0.792rem + 0.333vw, 1.125rem);\n  --text-m: clamp(1rem, 0.75rem + 1vw, 1.75rem);\n  --text-l: clamp(1.375rem, 1.083rem + 1.167vw, 2.25rem);\n  --space-s: 4px;\n  --space-m: 8px;\n  --space-l: 12px;\n  --font-base: 'AkzidenzGrotesk', sans-serif;\n  --greetings-hello: 12;\n}\n```\n\n## Recommended plugins\n\nThis plugin uses `custom-media` for media queries, so it's recommended to use a\npostcss plugin for this. We recommend just going with [postcss-preset-env](https://github.com/csstools/postcss-plugins/tree/main/plugin-packs/postcss-preset-env).\n\n## Configuration in depth\n\n### Responsive Custom Property Overwrites\n\nTo responsively overwrite the value of a custom property you can add it to the\n`responsive` config key.\n\n```js\n...\nresponsive: {\n  small: { // name of the breakpoint\n    space: {\n      s: 2px,\n    }\n  },\n},\n...\n```\n\nThis will generate the following CSS.\n\n```css\n@media (--bp-small) {\n  :root {\n    --space-s: 2px;\n  }\n}\n```\n\n### Providing viewport information\n\nThe `fluid` function needs to know the viewport bounds of your design to\ncorrectly calculate the clamp statement. The plugin assumes some sensible\ndefaults that you can overwrite in the config you pass.\n\n```js\n...\n  // Typically your lowest breakpoint value\n  viewportMin: 400,\n\n  // Typically your biggest breakpoint value\n  viewportMax: 1600,\n\n  // Needed for px to rem conversion. You'll likely don't need\n  // to provide this value if you go with one of the popular\n  // reset/preflight stylesheets.\n  baseFontSize: 16,\n...\n```\n\n### Generating Utility Classes\n\nTo generate utility classes you need to tell your config which utility classes\nyou want.\n\n```js\n...\n  utilities: {\n    bg: { // This will become the classname\n      items: {\n        // The variants you want to generate\n        'black', '#000000',\n        'white': '#ffffff',\n      },\n      property: 'background-color',\n    },\n    // The above will generate the following CSS\n    //\n    // .bg-black { background-color: #000000; }\n    // .bg-white { background-color: #ffffff; }\n\n    m: {\n      items: {\n        xl: '100px',\n      },\n      property: 'margin',\n      responsive: true, // will generate responsive variants of the utility class\n    },\n    // The above will generate the following CSS\n    //\n    // .m-xl { margin: 100px; }\n    // @media (--bp-small) {\n    //  .small\\:m-xl { margin: 100px; }\n    // }\n    // ...\n  }\n...\n```\n\nNext add `@utility-classes` to the CSS file you want to render the utility\nclasses to.\n\n**Heads up!** When generating a lot of utility classes make sure to include something like\n[PurgeCSS](https://purgecss.com/) in your build step.\n",
	"readmeFilename": "README.md",
	"_downloads": 7
}
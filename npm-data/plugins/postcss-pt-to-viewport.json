{
	"_id": "postcss-pt-to-viewport",
	"_rev": "1-ef6482cf019484f71b02b2daeff0b8f6",
	"name": "postcss-pt-to-viewport",
	"dist-tags": {
		"latest": "1.1.0"
	},
	"versions": {
		"1.1.0": {
			"name": "postcss-pt-to-viewport",
			"description": "[Fork from postcss-px-to-viewport] A CSS post-processor that converts pt to viewport units (vw, vh, vmin, vmax).",
			"version": "1.1.0",
			"author": {
				"name": "CJY0208",
				"email": "fanluan058@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/evrone/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/evrone/postcss-px-to-viewport",
			"main": "index.js",
			"scripts": {
				"test": "jasmine-node spec"
			},
			"devDependencies": {
				"jasmine-node": "~1.11.0"
			},
			"keywords": [
				"css",
				"units",
				"pixel",
				"point",
				"px",
				"pt",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": ">=4.0.1",
				"postcss": ">=5.0.2"
			},
			"gitHead": "892bc6d1ac784d0d4f03854b1143e3b466148196",
			"_id": "postcss-pt-to-viewport@1.1.0",
			"_npmVersion": "6.4.1",
			"_nodeVersion": "9.2.0",
			"_npmUser": {
				"name": "cjy0208",
				"email": "fanluan058@gmail.com"
			},
			"dist": {
				"integrity": "sha512-PAZqOfactWzZTdsKvKkmczX7u9Am9FQq1n0b24GC43Ozw84ZNJm0YFuftfHuliyLDutriIQnH1WsisIVO9Q0Fw==",
				"shasum": "cf5496fef8968f940c1a479dfb79813fea547abc",
				"tarball": "https://registry.npmjs.org/postcss-pt-to-viewport/-/postcss-pt-to-viewport-1.1.0.tgz",
				"fileCount": 14,
				"unpackedSize": 34438,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcyBeECRA9TVsSAnZWagAAsWYP/0AjD0txmZDNOWPIY72B\n1nmh5YfID2Gn4P+12PrCApaaoIhpjDlFCSqqOShQ5PzpZqOMOp+LpgMfPJsK\n9d27At5gDrZaTHG5RC6CGBBQN+Gm6Hko5CdbhsRY4MD4Zv0ScR1NV4ZHzodR\nnCWhxp4I3epXVWjLFmQBPazXa9EaTnwX1Vx7w+5TVH/ttd+fJo5fTFndzL7y\ncN0Yv272BwmLedw9lgk08qJh/pstJmF6VTV2DUy29SBOsQ7SlbE6hjbWJCa8\nyL3YNQrH2GHXTlCMyQhx4nfxNsdlJZVEhhXGQmZxd9h8ZKE9kAK3D0V0FGwk\nzFgbc1N+6luU2NltavQih6FScro/XUfjoj2Cn8UY2tMXR1mTRXHNxyn3dJpo\nERT+5aqeUn0xwnqIXeGO/U2lRsMwfniHR1N0apqP0yT2f4+30B8p0FclC7WT\n+ngh8zlL8r8wlTtwmjewfBM9ASD3XGEMb6FcUdn4eUT4VUFd5JKXeNiGihTf\nK6h1iHkPMAUjTfCA6dUAFEXPMzPNPEtsTbXZFEVC1Akov4zCaJRrYkCfOHVf\npgwN9GulNzf0QQEm3V2W+clZk3pavZyj7R6hAX95z71i7GahzCScgc1PVG7N\n0Sa6gjZ89hxQaiSupz6aDQhCZG7Hs6oFxvXVRmQ6XutEsm3YjG5Po4OsZR9L\ns+QI\r\n=t7mN\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIFl4TqSSuYU0tZ7eZEmcBpXLH+naJm5JSWgx3+2aHlusAiEAmpKMITJQzdy3kCgQNGcncEh2JLzdTrnPEyJEhTaOu9E="
					}
				]
			},
			"maintainers": [
				{
					"name": "cjy0208",
					"email": "fanluan058@gmail.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pt-to-viewport_1.1.0_1556617091904_0.08039634932249329"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2019-04-30T09:38:11.904Z",
		"1.1.0": "2019-04-30T09:38:12.081Z",
		"modified": "2022-05-13T06:36:22.957Z"
	},
	"maintainers": [
		{
			"name": "cjy0208",
			"email": "fanluan058@gmail.com"
		}
	],
	"description": "[Fork from postcss-px-to-viewport] A CSS post-processor that converts pt to viewport units (vw, vh, vmin, vmax).",
	"homepage": "https://github.com/evrone/postcss-px-to-viewport",
	"keywords": [
		"css",
		"units",
		"pixel",
		"point",
		"px",
		"pt",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/evrone/postcss-px-to-viewport.git"
	},
	"author": {
		"name": "CJY0208",
		"email": "fanluan058@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
	},
	"license": "MIT",
	"readme": "# postcss-pt-to-viewport (Forked from postcss-px-to-viewport)\r\n\r\nEnglish | [中文](README_CN.md) \r\n\r\nA plugin for [PostCSS](https://github.com/postcss/postcss) that generates viewport units (vw, vh, vmin, vmax) from point units.\r\n\r\n<a href=\"https://evrone.com/?utm_source=postcss-pt-to-viewport\">\r\n  <img src=\"https://user-images.githubusercontent.com/417688/34437029-dbfe4ee6-ecab-11e7-9d80-2b274b4149b3.png\"\r\n       alt=\"Sponsored by Evrone\" width=\"231\">\r\n</a>\r\n\r\n## Demo\r\n\r\nIf your project involves a fixed width, this script will help to convert points into viewport units.\r\n\r\n### Input\r\n\r\n```css\r\n.class {\r\n  margin: -10pt .5vh;\r\n  padding: 5vmin 9.5pt 1pt;\r\n  border: 3pt solid black;\r\n  border-bottom-width: 1pt;\r\n  font-size: 14pt;\r\n  line-height: 20pt;\r\n}\r\n\r\n.class2 {\r\n  border: 1pt solid black;\r\n  margin-bottom: 1pt;\r\n  font-size: 20pt;\r\n  line-height: 30pt;\r\n}\r\n\r\n@media (min-width: 750pt) {\r\n  .class3 {\r\n    font-size: 16pt;\r\n    line-height: 22pt;\r\n  }\r\n}\r\n```\r\n\r\n### Output\r\n```css\r\n.class {\r\n  margin: -3.125vw .5vh;\r\n  padding: 5vmin 2.96875vw 1pt;\r\n  border: 0.9375vw solid black;\r\n  border-bottom-width: 1pt;\r\n  font-size: 4.375vw;\r\n  line-height: 6.25vw;\r\n}\r\n\r\n.class2 {\r\n  border: 1pt solid black;\r\n  margin-bottom: 1pt;\r\n  font-size: 6.25vw;\r\n  line-height: 9.375vw;\r\n}\r\n\r\n@media (min-width: 750pt) {\r\n  .class3 {\r\n    font-size: 16pt;\r\n    line-height: 22pt;\r\n  }\r\n}\r\n```\r\n\r\n## Getting Started\r\n\r\n### Installation\r\nAdd via npm\r\n```\r\n$ npm install postcss-pt-to-viewport --save-dev\r\n```\r\nor yarn\r\n```\r\n$ yarn add -D postcss-pt-to-viewport\r\n```\r\n\r\n### Usage\r\n\r\nDefault Options:\r\n```js\r\n{\r\n  unitToConvert: 'pt',\r\n  viewportWidth: 320,\r\n  unitPrecision: 5,\r\n  propList: ['*'],\r\n  viewportUnit: 'vw',\r\n  fontViewportUnit: 'vw',\r\n  selectorBlackList: [],\r\n  minPointValue: 1,\r\n  mediaQuery: false,\r\n  replace: true,\r\n  exclude: [],\r\n  landscape: false,\r\n  landscapeUnit: 'vw',\r\n  landscapeWidth: 568\r\n}\r\n```\r\n- `unitToConvert` (String) unit to convert, by default, it is pt.\r\n- `viewportWidth` (Number) The width of the viewport.\r\n- `unitPrecision` (Number) The decimal numbers to allow the vw units to grow to.\r\n- `propList` (Array) The properties that can change from pt to vw.\r\n  - Values need to be exact matches.\r\n  - Use wildcard * to enable all properties. Example: ['*']\r\n  - Use * at the start or end of a word. (['*position*'] will match background-position-y)\r\n  - Use ! to not match a property. Example: ['*', '!letter-spacing']\r\n  - Combine the \"not\" prefix with the other prefixes. Example: ['*', '!font*']\r\n- `viewportUnit` (String) Expected units.\r\n- `fontViewportUnit` (String) Expected units for font.\r\n- `selectorBlackList` (Array) The selectors to ignore and leave as pt.\r\n    - If value is string, it checks to see if selector contains the string.\r\n        - `['body']` will match `.body-class`\r\n    - If value is regexp, it checks to see if the selector matches the regexp.\r\n        - `[/^body$/]` will match `body` but not `.body`\r\n- `minPointValue` (Number) Set the minimum point value to replace.\r\n- `mediaQuery` (Boolean) Allow pt to be converted in media queries.\r\n- `replace` (Boolean) replaces rules containing vw instead of adding fallbacks.\r\n- `exclude` (Array or Regexp) Ignore some files like 'node_modules'\r\n    - If value is regexp, will ignore the matches files.\r\n    - If value is array, the elements of the array are regexp.\r\n- `landscape` (Boolean) Adds `@media (orientation: landscape)` with values converted via `landscapeWidth`.\r\n- `landscapeUnit` (String) Expected unit for `landscape` option\r\n- `landscapeWidth` (Number) Viewport width for landscape orientation.\r\n\r\n#### Use with gulp-postcss\r\n\r\nadd to your `gulpfile.js`:\r\n```js\r\nvar gulp = require('gulp');\r\nvar postcss = require('gulp-postcss');\r\nvar pttoviewport = require('postcss-pt-to-viewport');\r\n\r\ngulp.task('css', function () {\r\n\r\n    var processors = [\r\n        pttoviewport({\r\n            viewportWidth: 320,\r\n            viewportUnit: 'vmin'\r\n        })\r\n    ];\r\n\r\n    return gulp.src(['build/css/**/*.css'])\r\n        .pipe(postcss(processors))\r\n        .pipe(gulp.dest('build/css'));\r\n});\r\n```\r\n\r\n#### Use with PostCss configuration file\r\n\r\nadd to your `postcss.config.js`\r\n```js\r\nmodule.exports = {\r\n  plugins: {\r\n    ...\r\n    'postcss-pt-to-viewport': {\r\n      // options\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n## Running the tests\r\n\r\nIn order to run tests, you need to install `jasmine-node` globally:\r\n```\r\n$ npm install jasmine-node -g\r\n```\r\nThen run the tests via npm script:\r\n```\r\n$ npm run test\r\n```\r\n\r\n## Contributing\r\n\r\nPlease read [Code of Conduct](CODE-OF-CONDUCT.md) and [Contributing Guidelines](CONTRIBUTING.md) for submitting pull requests to us.\r\n\r\n## Versioning\r\n\r\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/evrone/postcss-pt-to-viewport/tags). \r\n\r\n## Changelog\r\n\r\nThe changelog is [here](CHANGELOG.md).\r\n\r\n## Authors\r\n\r\n* [Dmitry Karpunin](https://github.com/KODerFunk) - *Initial work*\r\n* [Ivan Bunin](https://github.com/chernobelenkiy)\r\n\r\nSee also the list of [contributors](https://github.com/evrone/postcss-pt-to-viewport/contributors) who participated in this project.\r\n\r\n## License\r\n\r\nThis project is licensed under the [MIT License](LICENSE).\r\n\r\n## Acknowledgments\r\n\r\n* Hat tip to https://github.com/cuth/postcss-pttorem/ for inspiring us for this project.\r\n",
	"readmeFilename": "README.md",
	"_downloads": 11
}
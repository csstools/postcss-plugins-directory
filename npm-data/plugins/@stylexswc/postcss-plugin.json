{
	"_id": "@stylexswc/postcss-plugin",
	"name": "@stylexswc/postcss-plugin",
	"dist-tags": {
		"next": "0.6.0-rc.1",
		"latest": "0.6.0-rc.1"
	},
	"versions": {
		"0.6.0-rc.1": {
			"name": "@stylexswc/postcss-plugin",
			"description": "StyleX PostCSS plugin with NAPI-RS compiler",
			"version": "0.6.0-rc.1",
			"config": {
				"scripty": {
					"path": "../../scripts/packages"
				}
			},
			"dependencies": {
				"@stylexjs/babel-plugin": "^0.9.3",
				"fast-glob": "^3.3.2",
				"glob-parent": "^6.0.2",
				"is-glob": "^4.0.3",
				"postcss": "^8.4.49"
			},
			"devDependencies": {
				"@babel/types": "^7.23.9",
				"@stylexswc/eslint-config": "0.6.0-rc.1",
				"@stylexswc/rs-compiler": "0.6.0-rc.1",
				"@stylexswc/typescript-config": "0.6.0-rc.1",
				"@types/babel__core": "^7.20.5",
				"@types/glob-parent": "^5.1.3",
				"@types/is-glob": "^4.0.4",
				"@types/loader-utils": "^2.0.6",
				"@types/node": "^22.5.1"
			},
			"keywords": [
				"postcss",
				"postcss-plugin",
				"stylex",
				"swc"
			],
			"license": "MIT",
			"main": "dist/index.js",
			"private": false,
			"publishConfig": {
				"registry": "https://registry.npmjs.org/",
				"access": "public"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/Dwlad90/stylex-swc-plugin.git"
			},
			"sideEffects": false,
			"scripts": {
				"build": "scripty --ts",
				"clean": "del-cli dist",
				"precommit": "lint-staged",
				"prepush": "lint-prepush",
				"test": "echo \"Error: no test specified\" && exit 0"
			},
			"_id": "@stylexswc/postcss-plugin@0.6.0-rc.1",
			"types": "./dist/index.d.ts",
			"bugs": {
				"url": "https://github.com/Dwlad90/stylex-swc-plugin/issues"
			},
			"homepage": "https://github.com/Dwlad90/stylex-swc-plugin#readme",
			"_integrity": "sha512-rIeaJayfLc9ALkzfZEIS8ZjfjT8LE1oiNTzx87Vgxy0ZkIs/P81a8Nc+8mdHu4SWIggfB07aY3BV2nSCleo5LQ==",
			"_resolved": "/tmp/04ed7f3675fbb42fb225cfd28c2d9924/stylexswc-postcss-plugin-0.6.0-rc.1.tgz",
			"_from": "file:stylexswc-postcss-plugin-0.6.0-rc.1.tgz",
			"_nodeVersion": "20.17.0",
			"_npmVersion": "10.8.2",
			"dist": {
				"integrity": "sha512-rIeaJayfLc9ALkzfZEIS8ZjfjT8LE1oiNTzx87Vgxy0ZkIs/P81a8Nc+8mdHu4SWIggfB07aY3BV2nSCleo5LQ==",
				"shasum": "418f89838ad86ca3ecbab025918eeb0c03c73100",
				"tarball": "https://registry.npmjs.org/@stylexswc/postcss-plugin/-/postcss-plugin-0.6.0-rc.1.tgz",
				"fileCount": 15,
				"unpackedSize": 20549,
				"attestations": {
					"url": "https://registry.npmjs.org/-/npm/v1/attestations/@stylexswc%2fpostcss-plugin@0.6.0-rc.1",
					"provenance": {
						"predicateType": "https://slsa.dev/provenance/v1"
					}
				},
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCKCHsgI5etPtfBE1+ORkPb79iW0onDgJu3V7VBdQBCbwIgHjBoZELR/1HrIZQ5ZhXZ2mIc+bf1FS+G6tv2q7NN8rY="
					}
				]
			},
			"_npmUser": {
				"name": "dwlad",
				"email": "dwlad90@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "dwlad",
					"email": "dwlad90@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-plugin_0.6.0-rc.1_1736198566135_0.5627344082750576"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-01-06T21:22:46.008Z",
		"0.6.0-rc.1": "2025-01-06T21:22:46.344Z",
		"modified": "2025-01-06T21:22:46.891Z"
	},
	"maintainers": [
		{
			"name": "dwlad",
			"email": "dwlad90@gmail.com"
		}
	],
	"description": "StyleX PostCSS plugin with NAPI-RS compiler",
	"homepage": "https://github.com/Dwlad90/stylex-swc-plugin#readme",
	"keywords": [
		"postcss",
		"postcss-plugin",
		"stylex",
		"swc"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/Dwlad90/stylex-swc-plugin.git"
	},
	"bugs": {
		"url": "https://github.com/Dwlad90/stylex-swc-plugin/issues"
	},
	"license": "MIT",
	"readme": "# PostCSS plugin with NAPI-RS StyleX compiler integration\n\n`PostCSS plugin` for an unofficial\n[`napi-rs`](https://github.com/dwlad90/stylex-swc-plugin/tree/develop/crates/stylex-rs-compiler)\ncompiler that includes the StyleX SWC code transformation under the hood.\n\n## Installation\n\nTo install the package, run the following command:\n\n```bash\nnpm install --save-dev @stylexswc/postcss-plugin\n```\n\n## Usage\n\nModify `postcss.config.js`. For example:\n\n```js\nmodule.exports = {\n  plugins: {\n    '@stylexjs/postcss-plugin': {\n      include: ['src/**/*.{js,jsx,ts,tsx}'],\n    },\n    autoprefixer: {},\n  },\n};\n```\n\nUse on of the plugins to process JS/TS files with StyleX code. For example:\n\n```js\n/// next.config.js\nconst path = require('path');\nconst stylexPlugin = require('@stylexswc/nextjs-plugin');\nconst rootDir = __dirname;\n\nmodule.exports = stylexPlugin({\n  // Add any StyleX options here\n  rsOptions: {\n    aliases: {\n      '@/*': [path.join(rootDir, '*')],\n    },\n    unstable_moduleResolution: {\n      type: 'commonJS',\n    },\n  },\n  // It's important to prevent creating a new CSS file with StyleX classes twice\n  extractCSS: false,\n})({\n  transpilePackages: ['@stylexjs/open-props'],\n  // Optionally, add any other Next.js config below\n});\n```\n\n> [!WARNING]\n> Each plugin of `@stylexswc` namespace accepts an `extractCSS` option to control CSS\n> extraction. When using the `postcss` plugin, this option should be set to\n> `false` to avoid double generation of CSS files with StyleX styles.\n\n> [!NOTE]\n> This approach requires transpiling JS/TS files with StyleX code twice:\n> first the source code and then using the PostCSS plugin. To avoid this\n> behavior when using `NextJS`, use the regular `@stylexswc/nextjs-plugin`\n> passing the `transformCss` parameter to transform the generated CSS if it's\n> possible, for example:\n>\n> ```js\n> /// next.config.js\n>\n> //...other code\n> transformCss: async css => {\n>   const postcss = require('postcss');\n>   const result = await postcss([require('autoprefixer')]).process(css);\n>   return result.css;\n> },\n> //...other code\n> ```\n\nAdd the following CSS file to your project:\n\n```css\n/*[fileName].css*/\n\n/**\n * The @stylex directive is used by the @stylexjs/postcss-plugin.\n * It is automatically replaced with generated CSS during builds.\n */\n@stylex;\n```\n\nAnd import it in your JS/TS files:\n\n```js\nimport '[fileName].css';\n```\n\n## Plugin Options\n\nThe plugin accepts the following configuration options:\n\n### `rsOptions`\n\n- Type: `StyleXOptions`\n- Optional\n- Default: `{}`\n- Description: StyleX compiler options passed to the StyleX compiler\n\n### `useCSSLayers`\n\n- Type: `boolean`\n- Optional\n- Default: `false`\n- Description: Whether to use CSS layers for better style isolation\n\n### `exclude`\n\n- Type: `string[]`\n- Optional\n- Description: Array of glob patterns to exclude from processing\n\n### `include`\n\n- Type: `string[]`\n- Optional\n- Description: Array of glob patterns to include for processing\n\n### `cwd`\n\n- Type: `string`\n- Optional\n- Default: `process.cwd()`\n- Description: Current working directory for resolving files\n\n### `isDev`\n\n- Type: `boolean`\n- Optional\n- Description: Whether the plugin is running in development mode\n",
	"readmeFilename": "README.md",
	"_downloads": 0
}
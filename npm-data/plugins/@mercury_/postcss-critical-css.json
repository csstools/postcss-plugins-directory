{
	"_id": "@mercury_/postcss-critical-css",
	"_rev": "2-ff934f08e1b788a26288901caaf0c5ab",
	"name": "@mercury_/postcss-critical-css",
	"dist-tags": {
		"latest": "3.0.10"
	},
	"versions": {
		"3.0.10": {
			"name": "@mercury_/postcss-critical-css",
			"version": "3.0.10",
			"description": "Generate critical CSS using PostCSS",
			"main": "index.js",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/AleCiotto/postcss-critical-css.git"
			},
			"keywords": [
				"postcss-plugin",
				"postcss plugin",
				"postcss",
				"critical-css",
				"critical",
				"css",
				"critical css"
			],
			"author": {
				"name": "Zach Green"
			},
			"license": "MIT",
			"devDependencies": {
				"@commitlint/cli": "^8.3.5",
				"@commitlint/config-conventional": "^8.3.4",
				"babel-cli": "^6.26.0",
				"babel-eslint": "^7.2.3",
				"babel-plugin-transform-flow-strip-types": "^6.8.0",
				"babel-plugin-transform-object-rest-spread": "^6.26.0",
				"babel-preset-es2015": "^6.13.2",
				"eslint": "^3.3.1",
				"eslint-config-prettier": "^6.15.0",
				"eslint-config-standard": "^10.2.1",
				"eslint-plugin-flowtype": "^2.50.3",
				"eslint-plugin-import": "^2.25.2",
				"eslint-plugin-node": "^4.2.3",
				"eslint-plugin-prettier": "^3.4.1",
				"eslint-plugin-promise": "^3.8.0",
				"eslint-plugin-standard": "^3.1.0",
				"flow-bin": "^0.100.0",
				"husky": "^3.1.0",
				"lint-staged": "^9.5.0",
				"minimist": "^1.2.5",
				"prettier": "1.19.1",
				"standard-version": "^7.1.0",
				"tape": "^4.14.0"
			},
			"scripts": {
				"build": "eslint src/** && babel src --out-dir dist",
				"example": "babel-node example/example.js",
				"flow": "flow; test $? -eq 0 -o $? -eq 2",
				"eslint": "eslint test/**/*.js && eslint src/**",
				"format": "prettier --write \"**/*.{js,md,yml,.babelrc,.eslintrc}\"",
				"prerelease": "npm run build && npm test",
				"pretest": "babel-node test/preTest.js",
				"release": "standard-version",
				"test": "npm run test-default && npm run test-no-preserve && npm run test-output-path && npm run test-output-dest && npm run test-no-args && npm run test-no-minify",
				"test-no-args": "npm run pretest -- --noArgs && tape test --noArgs --test=default",
				"test-no-minify": "npm run pretest -- --minify=false --fixtures-dir=fixtures-no-minify && tape test --fixtures-dir=fixtures-no-minify --test=default,this",
				"test-output-dest": "npm run pretest -- --outputDest='custom.css' --fixtures-dir=fixtures-output-dest && tape test --outputDest='custom.css' --fixtures-dir=fixtures-output-dest --test=default",
				"test-default": "npm run pretest && tape test",
				"test-no-preserve": "npm run pretest -- --fixtures-dir=fixtures-no-preserve --preserve=false && tape test --fixtures-dir=fixtures-no-preserve --preserve=false",
				"test-output-path": "npm run pretest -- --outputPath=test/fixtures-output-path && tape test --outputPath=test/fixtures-output-path --test=default"
			},
			"dependencies": {
				"chalk": "^1.1.3",
				"cssnano": "^4.1.11",
				"fs-extra": "^8.1.0",
				"postcss": "^7.0.36"
			},
			"husky": {
				"hooks": {
					"commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint -- --fix",
					"git add"
				]
			},
			"bugs": {
				"url": "https://github.com/zgreen/postcss-critical-css/issues"
			},
			"homepage": "https://github.com/zgreen/postcss-critical-css#readme",
			"directories": {
				"example": "example",
				"test": "test"
			},
			"gitHead": "93a6528e21c09b8f0964f2756ebf363329a97b53",
			"_id": "@mercury_/postcss-critical-css@3.0.10",
			"_nodeVersion": "14.18.1",
			"_npmVersion": "8.1.0",
			"dist": {
				"integrity": "sha512-cWLVMtWFnd44D74ZPH0eOJsn/Qerad1/cSaGEX3C85e7TXN/AJM8UDBmreo8mtnP3gbXk0N2Vi0UC8T4BvpK2A==",
				"shasum": "45ad82a9aee6e921a59557219e2f365c8463c351",
				"tarball": "https://registry.npmjs.org/@mercury_/postcss-critical-css/-/postcss-critical-css-3.0.10.tgz",
				"fileCount": 12,
				"unpackedSize": 26445,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2RSgCRA9TVsSAnZWagAAD4EP+wcvU9tbm+9fRLBMuGc9\nvbL2ARgDvZMVRiEyhqVFwq2B/AoHT6Lq4I5z9pwKFKpGhy490URuJ+6Ow2mu\nnxyKHwmsO/HZ1sDho35njcve9NdGUZx5AnemgN6RGKuwaN7BvZwO3vwINtrn\nsZJrmXq9T+PT+KtLlirxB+R/JM+6OfA0R3e5OHDR5LznX+6sWPgPCeNU2PVa\nOHYdEvUjMC9jy1YV/7K3lBoysoqrQzVlbVE3MElKG7xNssI3FQWmNzgTCLXC\n+GcVcu09S6hgxFixE6YaRNZTbQ5ck2wL99OKO4l+/ChCmJ/oqZTvZhMqFK0H\nB2m/DwnJhqaeU91/G1dJPRlBYFfXZnX9mIlM93+8rTiWe5UvQlrscMNPsi53\nVHvPTEdqu+6Z+N2XP4Bv7jijenHnUKqN/C4EUdG5eUJsTmCaTwGyunKudZOk\nTMTvoUMlsEoOuPiu0/qin0phoCLdn9sFJE2IKcmy7fb2SRBJffNvGCrd/TYx\ndVpjtjU2GYLcGqIALg+5/izuGghWYbcuKTR097214wF2HvQIsi0TqtyUQ41D\ncrnUZJnaNV5YwODXFyxQIhR05ElP9VyEQjG1oRKvx4XuOF/rivmkrUrV8W/5\nmWQgdmnRIPFM9j7sKzzHrORWqn0O9SxRNAcxhFxggTvU1pNTh2HS6TlXEp4R\nI/zI\r\n=2paN\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIH1UYwsRFIe7LbKk9fl+juGAHDlEGUm8UHheNh1dJrKvAiB54VpSnCbucJMaCfN3xQz5ZyXkQoqDhTmH/bIDabwEzw=="
					}
				]
			},
			"_npmUser": {
				"name": "mercury_",
				"email": "9ciotto1@gmail.com"
			},
			"maintainers": [
				{
					"name": "mercury_",
					"email": "9ciotto1@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-critical-css_3.0.10_1634642021440_0.31186940047835177"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2021-10-19T11:13:41.388Z",
		"3.0.10": "2021-10-19T11:13:41.578Z",
		"modified": "2022-04-06T05:05:14.952Z"
	},
	"maintainers": [
		{
			"name": "mercury_",
			"email": "9ciotto1@gmail.com"
		}
	],
	"description": "Generate critical CSS using PostCSS",
	"homepage": "https://github.com/zgreen/postcss-critical-css#readme",
	"keywords": [
		"postcss-plugin",
		"postcss plugin",
		"postcss",
		"critical-css",
		"critical",
		"css",
		"critical css"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/AleCiotto/postcss-critical-css.git"
	},
	"author": {
		"name": "Zach Green"
	},
	"bugs": {
		"url": "https://github.com/zgreen/postcss-critical-css/issues"
	},
	"license": "MIT",
	"readme": "# PostCSS Critical CSS\r\n\r\nThis plugin allows the user to define and output critical CSS using custom atRules, and/or custom CSS properties. Critical CSS may be output to one or more files, as defined within the [plugin options](#plugin-options) and/or within the CSS. Depending on the plugin options used, processed CSS may be left unchanged, or critical CSS may be removed from it.\r\n\r\n## Install\r\n\r\n`npm install postcss-critical-css --save`\r\n\r\n## Examples\r\n\r\nAn example is available in this repo. See the `/example` directory, and use the command `npm run example` to test it out.\r\n\r\n## Usage examples\r\n\r\nAll examples given below show the input CSS and the critical CSS that is output from it. Note that the input CSS will remain unchanged, unless `preserve` is set to `false` in the [plugin options](#plugin-options). Use `npm run example` to see how this works.\r\n\r\n### Using the `@critical` atRule\r\n\r\n```css\r\n/* In foo.css */\r\n@critical;\r\n\r\n.foo {\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n```\r\n\r\nWill output:\r\n\r\n```css\r\n/* In critical.css */\r\n.foo {\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n```\r\n\r\n### Using the `@critical` atRule with a custom file path\r\n\r\n```css\r\n/* In foo.css */\r\n@critical bar.css;\r\n\r\n.foo {\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n```\r\n\r\nWill output:\r\n\r\n```css\r\n/* In bar.css */\r\n.foo {\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n```\r\n\r\n### Using the `@critical` atRule with a subset of styles\r\n\r\n```css\r\n/* In foo.css */\r\n.foo {\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n\r\n@critical {\r\n  .bar {\r\n    border: 10px solid gold;\r\n    color: gold;\r\n  }\r\n}\r\n```\r\n\r\nWill output:\r\n\r\n```css\r\n/* In critical.css */\r\n.bar {\r\n  border: 10px solid gold;\r\n  color: gold;\r\n}\r\n```\r\n\r\n### Using the custom property, `critical-selector`\r\n\r\n```css\r\n/* In foo.css */\r\n.foo {\r\n  critical-selector: this;\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n```\r\n\r\nWill output:\r\n\r\n```css\r\n/* In critical.css */\r\n.foo {\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n```\r\n\r\n### Using the custom property, `critical-selector`, with a custom selector.\r\n\r\n```css\r\n/* In foo.css */\r\n.foo {\r\n  critical-selector: .bar;\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n```\r\n\r\nWill output:\r\n\r\n```css\r\n/* In critical.css */\r\n.bar {\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n```\r\n\r\n### Using the custom property, `critical-filename`\r\n\r\n```css\r\n/* in foo.css */\r\n.foo {\r\n  critical-selector: this;\r\n  critical-filename: secondary-critical.css;\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n```\r\n\r\nWill output:\r\n\r\n```css\r\n/* In secondary-critical.css */\r\n.foo {\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n```\r\n\r\n### Using the custom property, `critical-selector`, with value `scope`\r\n\r\nThis allows the user to output the entire scope of a module, including children.\r\n\r\n```css\r\n/* in foo.css */\r\n.foo {\r\n  critical-selector: scope;\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n\r\n.foo a {\r\n  color: blue;\r\n  text-decoration: none;\r\n}\r\n```\r\n\r\nWill output:\r\n\r\n```css\r\n/* In critical.css */\r\n.foo {\r\n  border: 3px solid gray;\r\n  display: flex;\r\n  padding: 1em;\r\n}\r\n\r\n.foo a {\r\n  color: blue;\r\n  text-decoration: none;\r\n}\r\n```\r\n\r\n## Plugin options\r\n\r\nThe plugin takes a single object as its only parameter. The following properties are valid:\r\n\r\n| Arg          | Type      | Description                                                                                                                                                                           | Default                   |\r\n| ------------ | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------- |\r\n| `outputPath` | `string`  | Path to which critical CSS should be output                                                                                                                                           | Current working directory |\r\n| `outputDest` | `string`  | Default critical CSS file name                                                                                                                                                        | `\"critical.css\"`          |\r\n| `preserve`   | `boolean` | Whether or not to remove selectors from primary CSS document once they've been marked as critical. This should prevent duplication of selectors across critical and non-critical CSS. | `true`                    |\r\n| `minify`     | `boolean` | Minify output CSS?                                                                                                                                                                    | `true`                    |\r\n",
	"readmeFilename": "README.md",
	"_downloads": 10
}
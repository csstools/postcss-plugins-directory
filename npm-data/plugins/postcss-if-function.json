{
	"_id": "postcss-if-function",
	"_rev": "3-25aee7241672a8189d71647e1334c79d",
	"name": "postcss-if-function",
	"dist-tags": {
		"latest": "0.1.2"
	},
	"versions": {
		"0.0.0": {
			"name": "postcss-if-function",
			"version": "0.0.0",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"if",
				"media-query",
				"supports",
				"transform"
			],
			"license": "MIT",
			"_id": "postcss-if-function@0.0.0",
			"maintainers": [
				{
					"name": "mfranzke",
					"email": "npmjs.com-20200319-mfr@nzke.net"
				}
			],
			"dist": {
				"shasum": "e4c3df3839b1ae1da36e0eb412f4e53826253abc",
				"tarball": "https://registry.npmjs.org/postcss-if-function/-/postcss-if-function-0.0.0.tgz",
				"fileCount": 13,
				"integrity": "sha512-aU+/Uqy2mPXcvXqc1GWBByKduojlEfyImZXr/X9dMwaee1GGfqTclRxV3DYG8WsuiL4vmi4wHlNJJrzM7nOIPg==",
				"signatures": [
					{
						"sig": "MEUCIQD/4IlPvUr23AtsVQH1BNMHDg+rLk9/csiK7fn7qLAk1gIgXp7lZL7MySbuqvjWh+JrJT4awEb1A3inkns5UBa7L9I=",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 32286
			},
			"main": "dist/index.cjs",
			"type": "module",
			"types": "dist/index.d.ts",
			"module": "dist/index.modern.js",
			"source": "src/index.js",
			"exports": {
				".": {
					"import": {
						"types": "./dist/index.d.ts",
						"default": "./dist/index.modern.js"
					},
					"require": {
						"types": "./dist/index.d.cts",
						"default": "./dist/index.cjs"
					}
				}
			},
			"gitHead": "3a3c955a4e5f1b49a8528ab1307b6dd4c921619b",
			"scripts": {
				"dev": "microbundle watch",
				"test": "npm-run-all --sequential test:*",
				"build": "microbundle",
				"postbuild": "cp dist/index.d.ts dist/index.d.cts",
				"test:vitest": "vitest run",
				"prepublishOnly": "npm run build",
				"pretest:vitest": "npm run build",
				"test:vitest:watch": "vitest"
			},
			"_npmUser": {
				"name": "mfranzke",
				"email": "npmjs.com-20200319-mfr@nzke.net"
			},
			"umd:main": "dist/index.umd.js",
			"_npmVersion": "11.4.2",
			"description": "PostCSS plugin for transforming CSS if() functions to native CSS",
			"directories": {},
			"_nodeVersion": "24.3.0",
			"dependencies": {
				"css-if-polyfill": "0.1.0"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"xo": "^1.1.1",
				"vitest": "^3.2.4",
				"postcss": "^8.4.0",
				"microbundle": "^0.15.1"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-if-function_0.0.0_1753027100814_0.7434576412707572",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.1.1": {
			"name": "postcss-if-function",
			"version": "0.1.1",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"if",
				"media-query",
				"supports",
				"transform"
			],
			"license": "MIT",
			"_id": "postcss-if-function@0.1.1",
			"maintainers": [
				{
					"name": "mfranzke",
					"email": "npmjs.com-20200319-mfr@nzke.net"
				}
			],
			"homepage": "https://github.com/mfranzke/css-if-polyfill#readme",
			"bugs": {
				"url": "https://github.com/mfranzke/css-if-polyfill/issues"
			},
			"dist": {
				"shasum": "7cd159b8c65232026a136958e173a47d04edd605",
				"tarball": "https://registry.npmjs.org/postcss-if-function/-/postcss-if-function-0.1.1.tgz",
				"fileCount": 13,
				"integrity": "sha512-T6OJP1jcIJVudFXBMP6bfYB/uBaIAol+90GVntETdhLadXWPzRVq8UY9+lPLQFWFDi4tHryQqOsJunYs9KiPsQ==",
				"signatures": [
					{
						"sig": "MEYCIQD4X9Gggtl2BZpPCls52jzKNOvqpszEYODs3SnPOV3OMAIhAJ6ryslHpTPS8AEJY6U76WtOTss2KYxdK5JxLLMum/0o",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"attestations": {
					"url": "https://registry.npmjs.org/-/npm/v1/attestations/postcss-if-function@0.1.1",
					"provenance": {
						"predicateType": "https://slsa.dev/provenance/v1"
					}
				},
				"unpackedSize": 32474
			},
			"main": "dist/index.cjs",
			"type": "module",
			"types": "dist/index.d.ts",
			"module": "dist/index.modern.js",
			"source": "src/index.js",
			"exports": {
				".": {
					"import": {
						"types": "./dist/index.d.ts",
						"default": "./dist/index.modern.js"
					},
					"require": {
						"types": "./dist/index.d.cts",
						"default": "./dist/index.cjs"
					}
				}
			},
			"gitHead": "55f5f0e1d58ddffcbd7865a12c219115c3cd75ff",
			"scripts": {
				"dev": "microbundle watch",
				"test": "npm-run-all --sequential test:*",
				"build": "microbundle",
				"postbuild": "cp dist/index.d.ts dist/index.d.cts",
				"test:vitest": "vitest run",
				"prepublishOnly": "npm run build",
				"pretest:vitest": "npm run build",
				"test:vitest:watch": "vitest"
			},
			"_npmUser": {
				"name": "mfranzke",
				"email": "npmjs.com-20200319-mfr@nzke.net"
			},
			"umd:main": "dist/index.umd.js",
			"repository": {
				"url": "git+https://github.com/mfranzke/css-if-polyfill.git",
				"type": "git"
			},
			"_npmVersion": "11.4.2",
			"description": "PostCSS plugin for transforming CSS if() functions to native CSS",
			"directories": {},
			"_nodeVersion": "24.4.1",
			"dependencies": {
				"css-if-polyfill": "0.1.2"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"xo": "^1.1.1",
				"vitest": "^3.2.4",
				"postcss": "^8.4.0",
				"microbundle": "^0.15.1"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-if-function_0.1.1_1753036182960_0.19211364104362372",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.1.2": {
			"name": "postcss-if-function",
			"version": "0.1.2",
			"type": "module",
			"description": "PostCSS plugin for transforming CSS if() functions to native CSS",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/mfranzke/css-if-polyfill.git"
			},
			"bugs": {
				"url": "https://github.com/mfranzke/css-if-polyfill/issues"
			},
			"license": "MIT",
			"main": "dist/index.cjs",
			"types": "dist/index.d.ts",
			"module": "dist/index.modern.js",
			"exports": {
				".": {
					"require": {
						"types": "./dist/index.d.cts",
						"default": "./dist/index.cjs"
					},
					"import": {
						"types": "./dist/index.d.ts",
						"default": "./dist/index.modern.js"
					}
				}
			},
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"if",
				"media-query",
				"supports",
				"transform"
			],
			"scripts": {
				"build": "microbundle",
				"dev": "microbundle watch",
				"postbuild": "cp dist/index.d.ts dist/index.d.cts",
				"prepublishOnly": "npm run build",
				"pretest:vitest": "npm run build",
				"test": "npm-run-all --sequential test:*",
				"test:vitest": "vitest run",
				"test:vitest:watch": "vitest"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"dependencies": {
				"css-if-polyfill": "0.1.3"
			},
			"devDependencies": {
				"microbundle": "^0.15.1",
				"postcss": "^8.4.0",
				"vitest": "^3.2.4",
				"xo": "^1.1.1"
			},
			"source": "src/index.js",
			"umd:main": "dist/index.umd.js",
			"_id": "postcss-if-function@0.1.2",
			"gitHead": "790004881ede34f36ec8a04bc62af01376f91c6e",
			"homepage": "https://github.com/mfranzke/css-if-polyfill#readme",
			"_nodeVersion": "24.4.1",
			"_npmVersion": "11.4.2",
			"dist": {
				"integrity": "sha512-n0cczvRYywREZ0qpXxz+DE0a0sGWf8Y+3bW9L9pMOB0kW/psNOkigGKH1ajD9OzZPXIhiE8h+zfp7NNWHzICBg==",
				"shasum": "5df0784e25062a2cc9ba75eb23df0193ac98e9ff",
				"tarball": "https://registry.npmjs.org/postcss-if-function/-/postcss-if-function-0.1.2.tgz",
				"fileCount": 13,
				"unpackedSize": 32569,
				"attestations": {
					"url": "https://registry.npmjs.org/-/npm/v1/attestations/postcss-if-function@0.1.2",
					"provenance": {
						"predicateType": "https://slsa.dev/provenance/v1"
					}
				},
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEYCIQCHZXpGyZA8cerPgc3syub5SC2X+Wj2+bV4tj5oYZKpNgIhANq0rWBZdixl70UgztOCLENBJZlOEyiFh1/3tthQXJ84"
					}
				]
			},
			"_npmUser": {
				"name": "mfranzke",
				"email": "npmjs.com-20200319-mfr@nzke.net"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "mfranzke",
					"email": "npmjs.com-20200319-mfr@nzke.net"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-if-function_0.1.2_1753043234253_0.4990034341204892"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-07-20T15:58:20.813Z",
		"modified": "2025-07-20T20:27:14.844Z",
		"0.0.0": "2025-07-20T15:58:21.025Z",
		"0.1.1": "2025-07-20T18:29:43.155Z",
		"0.1.2": "2025-07-20T20:27:14.443Z"
	},
	"bugs": {
		"url": "https://github.com/mfranzke/css-if-polyfill/issues"
	},
	"license": "MIT",
	"homepage": "https://github.com/mfranzke/css-if-polyfill#readme",
	"keywords": [
		"postcss",
		"postcss-plugin",
		"css",
		"if",
		"media-query",
		"supports",
		"transform"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/mfranzke/css-if-polyfill.git"
	},
	"description": "PostCSS plugin for transforming CSS if() functions to native CSS",
	"maintainers": [
		{
			"name": "mfranzke",
			"email": "npmjs.com-20200319-mfr@nzke.net"
		}
	],
	"readme": "# postcss-if-function\n\n[![Default CI/CD Pipeline](https://github.com/mfranzke/css-if-polyfill/actions/workflows/default.yml/badge.svg)](https://github.com/mfranzke/css-if-polyfill/actions/workflows/default.yml)\n[![npm version](https://badge.fury.io/js/postcss-if-function.svg)](https://badge.fury.io/js/postcss-if-function)\n[![Build Status](https://github.com/mfranzke/css-if-polyfill/workflows/CI/badge.svg)](https://github.com/mfranzke/css-if-polyfill/actions)\n\nA [PostCSS](https://postcss.org/) plugin for transforming CSS `if()` functions into native CSS `@media` and `@supports` rules at build time.\n\nThis plugin is part of the [css-if-polyfill](https://github.com/mfranzke/css-if-polyfill/tree/main/packages/css-if-polyfill/) project and provides build-time transformation of conditional CSS, eliminating the need for runtime JavaScript processing when using only `media()` and `supports()` functions.\n\n## Installation\n\n```bash\nnpm install postcss-if-function postcss\n```\n\n## Usage\n\n### Basic Usage\n\n```js\nimport postcss from \"postcss\";\nimport { postcssIfFunction } from \"postcss-if-function\";\n\nconst css = `\n.example {\n  color: if(media(max-width: 768px): blue; else: red);\n  font-size: if(supports(display: grid): 1.2rem; else: 1rem);\n}\n`;\n\nconst result = await postcss([postcssIfFunction()]).process(css, {\n\tfrom: undefined\n});\n\nconsole.log(result.css);\n```\n\n**Output:**\n\n```css\n.example {\n\tcolor: red;\n}\n@media (max-width: 768px) {\n\t.example {\n\t\tcolor: blue;\n\t}\n}\n.example {\n\tfont-size: 1rem;\n}\n@supports (display: grid) {\n\t.example {\n\t\tfont-size: 1.2rem;\n\t}\n}\n```\n\n### With Options\n\n```js\nconst result = await postcss([\n\tpostcssIfFunction({\n\t\tlogTransformations: true,\n\t\tpreserveOriginal: false,\n\t\tskipSelectors: [\".no-transform\"]\n\t})\n]).process(css, { from: undefined });\n```\n\n### With Popular PostCSS Tools\n\n#### Vite\n\n```js\n// vite.config.js\nimport { defineConfig } from \"vite\";\nimport { postcssIfFunction } from \"postcss-if-function\";\n\nexport default defineConfig({\n\tcss: {\n\t\tpostcss: {\n\t\t\tplugins: [\n\t\t\t\tpostcssIfFunction({\n\t\t\t\t\tlogTransformations: process.env.NODE_ENV === \"development\"\n\t\t\t\t})\n\t\t\t]\n\t\t}\n\t}\n});\n```\n\n#### Webpack\n\n```js\n// webpack.config.js\nmodule.exports = {\n\tmodule: {\n\t\trules: [\n\t\t\t{\n\t\t\t\ttest: /\\.css$/,\n\t\t\t\tuse: [\n\t\t\t\t\t\"style-loader\",\n\t\t\t\t\t\"css-loader\",\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: \"postcss-loader\",\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tpostcssOptions: {\n\t\t\t\t\t\t\t\tplugins: [\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\"postcss-if-function\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlogTransformations: true\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n};\n```\n\n#### Next.js\n\n```js\n// next.config.js\nmodule.exports = {\n\texperimental: {\n\t\tpostcss: {\n\t\t\tplugins: {\n\t\t\t\t\"postcss-if-function\": {\n\t\t\t\t\tlogTransformations: process.env.NODE_ENV === \"development\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n```\n\n## Options\n\n| Option               | Type       | Default | Description                                                                |\n| -------------------- | ---------- | ------- | -------------------------------------------------------------------------- |\n| `preserveOriginal`   | `boolean`  | `false` | Whether to preserve original CSS alongside transformations (for debugging) |\n| `logTransformations` | `boolean`  | `false` | Whether to log transformation statistics to console                        |\n| `skipSelectors`      | `string[]` | `[]`    | Array of selectors to skip transformation for                              |\n\n## Supported Transformations\n\n### Media Queries\n\n```css\n/* Input */\n.responsive {\n\twidth: if(media(max-width: 768px): 100%; else: 50%);\n}\n\n/* Output */\n.responsive {\n\twidth: 50%;\n}\n@media (max-width: 768px) {\n\t.responsive {\n\t\twidth: 100%;\n\t}\n}\n```\n\n### Feature Support Queries\n\n```css\n/* Input */\n.grid {\n\tdisplay: if(supports(display: grid): grid; else: block);\n}\n\n/* Output */\n.grid {\n\tdisplay: block;\n}\n@supports (display: grid) {\n\t.grid {\n\t\tdisplay: grid;\n\t}\n}\n```\n\n### Multiple Conditions\n\n```css\n/* Input */\n.responsive {\n\tpadding: if(\n\t\tmedia(width >= 1200px): 40px; media(width >= 768px): 30px;\n\t\t\tmedia(width >= 480px): 20px; else: 15px\n\t);\n}\n\n/* Output */\n.responsive {\n\tpadding: 15px;\n}\n\n@media (width >= 480px) {\n\t.responsive {\n\t\tpadding: 20px;\n\t}\n}\n\n@media (width >= 768px) {\n\t.responsive {\n\t\tpadding: 30px;\n\t}\n}\n\n@media (width >= 1200px) {\n\t.responsive {\n\t\tpadding: 40px;\n\t}\n}\n```\n\n## Limitations\n\n- **Style Functions Not Supported**: This plugin only transforms `media()` and `supports()` functions. For `style()` functions (which depend on runtime DOM state), use the [css-if-polyfill](https://github.com/mfranzke/css-if-polyfill/tree/main/packages/css-if-polyfill/) runtime (browser) library\n- **Static Analysis Only**: The plugin performs static analysis and cannot handle dynamically generated CSS\n- **PostCSS Compatibility**: Requires PostCSS 8.0.0 or higher\n\n## Integration with Runtime Polyfill\n\nFor complete CSS `if()` support including `style()` functions, combine this plugin with the runtime polyfill:\n\n1. Use this PostCSS plugin for build-time transformation of `media()` and `supports()`\n2. Use [css-if-polyfill](https://github.com/mfranzke/css-if-polyfill/tree/main/packages/css-if-polyfill/) runtime for `style()` functions\n\n```html\n<!-- For style() functions only -->\n<script src=\"https://cdn.jsdelivr.net/npm/css-if-polyfill/dist/index.modern.js\"></script>\n```\n\n## Performance Considerations\n\nThis plugin is designed for optimal build-time performance, transforming CSS if() functions to native CSS without runtime overhead. However, there are some architectural considerations:\n\n### Current Implementation\n\n- **Double Parsing**: The plugin currently parses CSS twice - once by PostCSS and once by the transformation engine\n- **String-based Transformation**: The transformation engine outputs CSS strings that are re-parsed into PostCSS AST nodes\n\n### Future Optimization Opportunities\n\n- **Direct AST Transformation**: The transformation engine could be modified to output PostCSS AST nodes directly, eliminating the double parsing overhead\n- **Streaming Processing**: For very large CSS files, streaming transformation could reduce memory usage\n\nFor most typical usage scenarios, the current performance is excellent and the double parsing overhead is negligible compared to the benefits of build-time transformation.\n\n## Contributing\n\nSee the main [Contributing Guide](https://github.com/mfranzke/css-if-polyfill/blob/main/CONTRIBUTING.md) for details on how to contribute to this project.\n\n## License\n\nMIT © [Maximilian Franzke](https://github.com/mfranzke)\n\n## Related\n\n- [css-if-polyfill](https://github.com/mfranzke/css-if-polyfill/tree/main/packages/css-if-polyfill/) - Runtime polyfill for CSS if() functions\n- [PostCSS](https://postcss.org/) - Tool for transforming CSS with JavaScript\n- [CSS Conditional Rules](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_conditional_rules) - MDN documentation for @media and @supports\n",
	"readmeFilename": "README.md",
	"_downloads": 0
}
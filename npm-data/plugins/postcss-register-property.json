{
	"_id": "postcss-register-property",
	"_rev": "1-15b62c7330b89bc420547ddd6ab56906",
	"name": "postcss-register-property",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-register-property",
			"version": "1.0.0",
			"description": "Register properties in CSS",
			"author": {
				"name": "Jonathan Neal",
				"email": "jonathantneal@hotmail.com"
			},
			"license": "CC0-1.0",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/jonathantneal/postcss-register-property.git"
			},
			"homepage": "https://github.com/jonathantneal/postcss-register-property#readme",
			"bugs": {
				"url": "https://github.com/jonathantneal/postcss-register-property/issues"
			},
			"main": "index.cjs.js",
			"module": "index.es.mjs",
			"scripts": {
				"prepublishOnly": "npm test",
				"pretest": "rollup -c .rollup.js --silent",
				"test": "npm run test:js && npm run test:tape",
				"test:js": "eslint *.js --cache --ignore-path .gitignore --quiet",
				"test:tape": "postcss-tape"
			},
			"engines": {
				"node": ">=6.0.0"
			},
			"dependencies": {
				"postcss": "^7.0.5"
			},
			"devDependencies": {
				"@babel/core": "^7.1.2",
				"@babel/plugin-syntax-dynamic-import": "^7.0.0",
				"@babel/preset-env": "^7.1.0",
				"babel-eslint": "^10.0.1",
				"eslint": "^5.7.0",
				"eslint-config-dev": "^2.0.0",
				"postcss-tape": "^2.2.0",
				"pre-commit": "^1.2.2",
				"rollup": "^0.66.6",
				"rollup-plugin-babel": "^4.0.3"
			},
			"eslintConfig": {
				"extends": "dev",
				"parser": "babel-eslint"
			},
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"property",
				"properties",
				"register",
				"houdini",
				"declarative",
				"animation",
				"animate",
				"javascript",
				"js"
			],
			"gitHead": "0ae4d1ea7cb6cbaa4eb5a03bec9823862b28021c",
			"_id": "postcss-register-property@1.0.0",
			"_npmVersion": "6.4.1",
			"_nodeVersion": "11.0.0",
			"_npmUser": {
				"name": "jonathantneal",
				"email": "jonathantneal@hotmail.com"
			},
			"dist": {
				"integrity": "sha512-4CS2YLAd8VrHnCyhyVRtgrtayMil/5Tl7PYNu0Q09u1yQL+MugpdAMAkQX18t6SIYaLIgvgRIdfs3QNPMb2dwg==",
				"shasum": "6071058bf93f049f4972af20477b0a6ce8356b91",
				"tarball": "https://registry.npmjs.org/postcss-register-property/-/postcss-register-property-1.0.0.tgz",
				"fileCount": 8,
				"unpackedSize": 56756,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0cf/CRA9TVsSAnZWagAAMHUP/jmcJZppudef5lNC4W+K\nwKsQlDmeaHNMSUZx6IqWKsRQUkOUF+ybzh/7ERnFqEOenuUzPv7YHNejtKD1\ncXsyzr/kkVscrYGAd/0ijc6QWSALtUgVRyxqbYcWMLueVxN1VUpe5pSqeyjB\nQlLUwFBfJ1D8cAgqu/A1ZTQcT2+dVE8azoYEuf3ERUHl5KGZo/AvEZDlCEn4\ntaXEIFva8N5JobUyxtqDgzGuyD9S3zQUWR7eW4uEIy9Ktvk7pdnMhztmYBCQ\npARFh0UOODWCqjLJxS9kJnNa2p7AX6V4Yybs5jV8oEVKwED4utPJ/vk1/X8j\n3uQpUp86FU8L19U8Q3XllBUmk0eFXsCpUqxX/mG4qUHPtYmewH9q8LQfhUe3\n9YfZWRRgUf3o2jEwMtfdkmiHZ+lTpGdhaxwNnUbOJGDlZw0lSziRm+7KlNpB\n2MqF+744CrtRgf7kpmOBwoETYBtUJhZ5DzVSWU1Q8zKyvQPE2dbZM7x8yo9r\njWJJFABDeBg38NmfJVJVPCTiC8ajYII5+WMVkhkfRLHUX2NCQoAqGpRW9iVw\nkbqfZXAwPr8utKG4011oGP21hx+4epJogFBMyGFlj0RjC4Nw4geEoEfC+zL0\nc0dDRgJAU54stgVncBZ2PqOlWab9NkUm1wsfhJJ5P7pc02gqXwpjmm++CaF5\nBkhl\r\n=iWRa\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCQhqe8nGEfKrTwlDtI5CJmJNCdf/110Et6EaEyF0saXAIhAPXO97CHpDqk8mQgurPoZ/1jmC0Sh9TgtP6ARRXo5ZAA"
					}
				]
			},
			"maintainers": [
				{
					"name": "jonathantneal",
					"email": "jonathantneal@hotmail.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-register-property_1.0.0_1540474878337_0.37399109654710117"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2018-10-25T13:41:18.336Z",
		"1.0.0": "2018-10-25T13:41:18.481Z",
		"modified": "2022-05-13T06:41:01.399Z"
	},
	"maintainers": [
		{
			"name": "jonathantneal",
			"email": "jonathantneal@hotmail.com"
		}
	],
	"description": "Register properties in CSS",
	"homepage": "https://github.com/jonathantneal/postcss-register-property#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"property",
		"properties",
		"register",
		"houdini",
		"declarative",
		"animation",
		"animate",
		"javascript",
		"js"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/jonathantneal/postcss-register-property.git"
	},
	"author": {
		"name": "Jonathan Neal",
		"email": "jonathantneal@hotmail.com"
	},
	"bugs": {
		"url": "https://github.com/jonathantneal/postcss-register-property/issues"
	},
	"license": "CC0-1.0",
	"readme": "# PostCSS Register Property [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS\" width=\"90\" height=\"90\" align=\"right\">][postcss]\n\n[![NPM Version][npm-img]][npm-url]\n[![Build Status][cli-img]][cli-url]\n[![Support Chat][git-img]][git-url]\n\n[PostCSS Register Property] lets you register properties in CSS.\n\n```pcss\n@property --highlight-color {\n  inherits: true;\n  initial-value: red;\n  syntax: \"<color>\";\n}\n\n@property --gap-spacing {\n  inherits: false;\n  initial-value: 1em;\n  syntax: \"<length-percentage>\";\n}\n```\n\nThese properties are transformed into JSON.\n\n```json\n[\n  {\n    \"name\": \"--highlight-color\",\n    \"inherits\": true,\n    \"initialValue\": \"red\",\n    \"syntax\": \"<color>\"\n  },\n  {\n    \"name\": \"--gap-spacing\",\n    \"initialValue\": \"1em\",\n    \"syntax\": \"<length-percentage>\"\n  }\n]\n```\n\nThese properties can be imported and registered in a browser.\n\n```js\nimport properties from './styles.css.properties.json';\n\nif (window.CSS && CSS.registerProperty) {\n  for (const descriptor of properties) {\n    CSS.registerProperty(descriptor);\n  }\n}\n```\n\nOptionally, you can even detect registrations from custom properties:\n\n```pcss\n:root {\n  --some-border: 5px solid rebeccapurple;\n  --some-image: url(\"image.webp\");\n  --some-transform: scale(1.25, 1.25);\n}\n```\n\n```json\n[\n  {\n    \"name\": \"--some-border\",\n    \"syntax\": \"<length> <custom-ident> <color>\"\n  },\n  {\n    \"name\": \"--some-image\",\n    \"syntax\": \"<image>\"\n  },\n  {\n    \"name\": \"--some-transform\",\n    \"syntax\": \"<transform-function>\"\n  }\n]\n```\n\n## Usage\n\nAdd [PostCSS Register Property] to your project:\n\n```bash\nnpm install postcss-register-property --save-dev\n```\n\nUse [PostCSS Register Property] to process your CSS:\n\n```js\nconst postcssRegisterProperty = require('postcss-register-property');\n\npostcssRegisterProperty.process(YOUR_CSS /*, processOptions, pluginOptions */);\n```\n\nOr use it as a [PostCSS] plugin:\n\n```js\nconst postcss = require('postcss');\nconst postcssRegisterProperty = require('postcss-register-property');\n\npostcss([\n  postcssRegisterProperty(/* pluginOptions */)\n]).process(YOUR_CSS /*, processOptions */);\n```\n\n[PostCSS Register Property] runs in all Node environments, with special instructions for:\n\n| [Node](INSTALL.md#node) | [PostCSS CLI](INSTALL.md#postcss-cli) | [Webpack](INSTALL.md#webpack) | [Create React App](INSTALL.md#create-react-app) | [Gulp](INSTALL.md#gulp) | [Grunt](INSTALL.md#grunt) |\n| --- | --- | --- | --- | --- | --- |\n\n## Options\n\n### detect\n\nThe `detect` option determines whether registrations will be detected from\nCustom Properties. By default, they are not detected.\n\n```js\npostcssRegisterProperty({ detect: true }) // detect custom property registrations\n```\n\n### getJSON\n\nThe `getJSON` option defines the function that handles all of the collected\nproperties from CSS. If not specified, these properties will be written as JSON\nto a file determined by the `to` option.\n\nIf specified, the `getJSON` function is passed 3 arguments; the path to the\nsource CSS, an object of all the collected properties, and the path to the\ndestination JSON. Asynchronous functions should return promise-like values.\n\n```js\npostcssRegisterProperty({\n  getJSON(cssFileName, properties, jsonFileName) {\n    /* do something with cssFileName, properties, and jsonFileName */\n  }\n)\n```\n\n### to\n\nThe `to` option determines the destination path where the properties will be\nwritten to as JSON. If not specified, the destination will be the input source\nfilename appended with `.properties.json`.\n\n[cli-img]: https://img.shields.io/travis/jonathantneal/postcss-register-property.svg\n[cli-url]: https://travis-ci.org/jonathantneal/postcss-register-property\n[git-img]: https://img.shields.io/badge/support-chat-blue.svg\n[git-url]: https://gitter.im/postcss/postcss\n[npm-img]: https://img.shields.io/npm/v/postcss-register-property.svg\n[npm-url]: https://www.npmjs.com/package/postcss-register-property\n\n[PostCSS]: https://github.com/postcss/postcss\n[PostCSS Register Property]: https://github.com/jonathantneal/postcss-register-property\n",
	"readmeFilename": "README.md",
	"_downloads": 6
}
{
	"_id": "postcss-rem-multiplier",
	"_rev": "3-c67a5bc0412906caebbfa97f0f8e633f",
	"time": {
		"1.0.0": "2020-11-03T04:29:19.873Z",
		"created": "2020-11-10T08:42:41.180Z",
		"4.1.2": "2020-11-10T08:42:41.293Z",
		"modified": "2022-05-13T06:41:12.599Z"
	},
	"name": "postcss-rem-multiplier",
	"dist-tags": {
		"latest": "4.1.2"
	},
	"versions": {
		"4.1.2": {
			"name": "postcss-rem-multiplier",
			"description": "Multiply rem by 1.6",
			"version": "4.1.2",
			"author": {
				"name": "finalight"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/finalight/postcss-rem-multiplier.git"
			},
			"bugs": {
				"url": "https://github.com/finalight/postcss-rem-multiplierissues"
			},
			"main": "index.js",
			"scripts": {
				"test": "jasmine-node spec"
			},
			"devDependencies": {
				"jasmine-node": "~1.11.0",
				"postcss-pxtorem": "^4.0.1"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": "^4.1.0",
				"postcss": "^5.2.10"
			},
			"gitHead": "58d5ff6372524d4b26aa668f21d0d0c2c6d7258d",
			"homepage": "https://github.com/finalight/postcss-rem-multiplier#readme",
			"_id": "postcss-rem-multiplier@4.1.2",
			"_nodeVersion": "14.13.0",
			"_npmVersion": "6.14.8",
			"dist": {
				"integrity": "sha512-mYMtyc2SqRXDk0f7dqt6iddvt3Ta6KMtcT1F+oKYGa3bTJBhYQlhvtCLMjV2VJ0DrhEOfJwYkqmlHYpPkLjaKA==",
				"shasum": "190228c25c13973f7e9d3f5a802e675949fbabf6",
				"tarball": "https://registry.npmjs.org/postcss-rem-multiplier/-/postcss-rem-multiplier-4.1.2.tgz",
				"fileCount": 15,
				"unpackedSize": 27047,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfqlKBCRA9TVsSAnZWagAA9twP/2a4VyNJMXG+RjhSQWvc\ntC+3c7q+2+9Hj6Pnqy2QPVnogTQe/eMxhhijwx8N4adSEyXAM2BRpzz8Xg9Q\n9Yr+Qn9RGxynQazMh2g9Hh+LkMydxs5qStYLXlS2ziGklCDbFk8f3HQuI7TQ\nnAGjqQckGBbz/3457lYnttmddAqp9g/hU2bFbFMe1F5oOqABOpOoU2+mry67\nCprJoMsGzpbaOBG9zBko7ZmO2zkyASDChK/42/YL9tJUusjBRCHVw14sFb+0\nfvtFmmwnIEVQUJrLL3pghq8CGAN0mBDcUjR88983aBtOrVBHiN8+0z3akKUL\nmdszvEWSC8bO1YCJ/C4tosgJjF5FDQPZyh04QpQuxldYCa5do1wvzquXZ1Pl\nqkOloCzG2o6SsDshYbCIoOVxojUviiemKrtejr9b/oZwQk8A4lEVzxV4JJWW\nEM9EAQZdD5k1r0jX/4d7ZVOTdkI5tE0sK1AlKY61nYp9+ldD5Y8EO/XOpi6B\nm3HRNEy8dFmB6did/fxD051BKIRGZ0P7tqkqR1Cy5i42BzXW6cbNdppTVmk5\nh3gYBo+zh8fEGgUoyZdOdR4forRCrcnkb2PihFHm6kvc38tdQwLtyTw2QHfS\n4HEWG7liyyA56Jxqpr0uCcZJ+wkGa+EDnttrcaht+AIuQTVOXHA6Z9NnjddH\n458k\r\n=aYKj\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQC2nnJzZECblvPvb6JhJUQZzWgwjpx0VwnKp1BgmFI1swIgCijM7ngI1FYL87uirmeoo1iWG9CU7ORgpOIfp70dwKM="
					}
				]
			},
			"_npmUser": {
				"name": "finalight",
				"email": "finalight@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "finalight",
					"email": "finalight@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-rem-multiplier_4.1.2_1604997761180_0.2940441200747148"
			},
			"_hasShrinkwrap": false
		}
	},
	"maintainers": [
		{
			"name": "finalight",
			"email": "finalight@gmail.com"
		}
	],
	"description": "Multiply rem by 1.6",
	"homepage": "https://github.com/finalight/postcss-rem-multiplier#readme",
	"keywords": [
		"css",
		"rem",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/finalight/postcss-rem-multiplier.git"
	},
	"author": {
		"name": "finalight"
	},
	"bugs": {
		"url": "https://github.com/finalight/postcss-rem-multiplierissues"
	},
	"license": "MIT",
	"readme": "# postcss-rem-to-pixel [![NPM version](https://badge.fury.io/js/postcss-rem-to-pixel.svg)](http://badge.fury.io/js/postcss-rem-to-pixel)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates px units from rem units.\n\n## Install\n\n```shell\n$ npm install postcss-rem-to-pixel --save-dev\n```\n\n## Usage\n\nSometimes you need to include a third-party css file that uses rems.  Great pracitice!  Unless you can't afford to change your body font-size just for some vendor.  This script converts every rem value to a px value from the properties you choose using a default font size of 16px.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625rem;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar remToPx = require('postcss-rem-to-pixel');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(remToPx(options)).process(css).css;\n\nfs.writeFile('main-px.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minRemValue: 0\n}\n```\n\n- `rootValue` (Number) The root element font size.\n- `unitPrecision` (Number) The decimal precision px units are allowed to use, floored (rounding down on half).\n- `propList` (Array) The properties that can change from rem to px.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']` \n- `selectorBlackList` (Array) The selectors to ignore and leave as rem.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) replaces rules containing rems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow rem to be converted in media queries.\n- `minRemValue` (Number) Set the minimum rem value to replace.\n\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar remToPx = require('postcss-rem-to-pixel');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        remToPx({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the rem unit declaration.\n\n```css\n// `rem` is converted to `px`\n.convert {\n    font-size: 1rem; // converted to 16px\n}\n\n// `Rem` or `REM` is ignored by `postcss-rem-to-pixel` but still accepted by browsers\n.ignore {\n    border: 1Rem solid; // ignored\n    border-width: 2REM; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 3
}
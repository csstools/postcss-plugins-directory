{
	"_id": "@zccm/postcss-px-to-viewport",
	"_rev": "2-79c7438a66a6668eaf27fb430087c304",
	"name": "@zccm/postcss-px-to-viewport",
	"dist-tags": {
		"latest": "1.0.2"
	},
	"versions": {
		"1.0.0": {
			"name": "@zccm/postcss-px-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.0.0",
			"author": {
				"name": "lrr"
			},
			"license": "MIT",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"test": "jest spec/*.spec.js"
			},
			"dependencies": {
				"object-assign": ">=4.0.1"
			},
			"devDependencies": {
				"jest": "^25.4.0",
				"postcss": ">=5.0.2"
			},
			"peerDependencies": {
				"postcss": ">=5.0.2"
			},
			"publishConfig": {
				"access": "public"
			},
			"_id": "@zccm/postcss-px-to-viewport@1.0.0",
			"_nodeVersion": "14.18.1",
			"_npmVersion": "7.21.0",
			"dist": {
				"integrity": "sha512-0m0uKSY7qeaEySbHGsGqAwCRAPc2F/pc0b2i72h56utkhIm7pvIJzfoKnM5xEy6zf5//SswhrCGHKA78VGMROA==",
				"shasum": "16233fc6c3ed276d59bf4ba2ce4b7cd4e66526a6",
				"tarball": "https://registry.npmjs.org/@zccm/postcss-px-to-viewport/-/postcss-px-to-viewport-1.0.0.tgz",
				"fileCount": 14,
				"unpackedSize": 162620,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQC576a929jWH2NqZ9cmTCOPp95ak6Ah8SrqkxtqhrMm2gIhAOhq07k798BPl6qd0xNQo3FtsOg6Xcz3+49RgYDKz6xK"
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjfuXPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq4ghAAgkYRqxwi8LFMRP0tm/eG898l9cwFNcMnsWdqfzmpOHTMnzo5\r\nPLU4OxSCxg9CUDuzMCCBp2crMHusj21AyKoue1YyuAVprau9mQkXNlS40oId\r\nekPYuZfch/R8GZVBISlc2uOl23wewqOMU0GQk4VnYfHsrx9n/H9e28K3VGv/\r\ntVnrmJOaGq3ZC9Wy6Jzs9ncTawWF5+MuS1MJsfSvuUxSQoRf1HAkxMCY//Xb\r\nhI/583NExQiYDIXID4GxdW7uqMDmQVmn7ABr6itx54JRJ4SL9zNftVC+jlvY\r\nBh61xIQnuwESivEtQn9/lHdZVGMFHnW/uvOGZSXNYo310geBcht6I1m6M7T3\r\npaZv4mxar1YBubnj7ypM6Ah81VIHStLiu+d2u0B/OQDjgfzQSnTviCnwAmvP\r\n+1inO9hojOj3uwoiv1wHlFvw3tj/h96z7NBCfk9rAFducFC8I/n/HXcnAY2L\r\n/xnbxP4uibr41efEi3cnSheiVpmynHH5Ap3nSI/BsPm4kuYOMsoyM0/LgM4C\r\ner4FhDXgbtUIIRxvMBz80QPL3MgWEa+yDwra5C7vFI4IZHP3FfHfjdFLBzaN\r\nNB0zSTEeTVxXuAi0tA2+W1UDbkf7W/xjCRmyRCPlSdGN0pYX1IXiHxr7oI95\r\nU70vfzWbajFbjwsBa/8PT55797tk0xgjRrk=\r\n=tyF+\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "ls-better",
				"email": "lrw156804437@outlook.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "ls-better",
					"email": "lrw156804437@outlook.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport_1.0.0_1669260751494_0.0013926402835962026"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "@zccm/postcss-px-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.0.1",
			"author": {
				"name": "lrr"
			},
			"license": "MIT",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"build": "father-build",
				"release": "npm run build && npm publish"
			},
			"dependencies": {
				"object-assign": "^4.1.1"
			},
			"devDependencies": {
				"father-build": "^1.17.2",
				"postcss": "^8.3.8"
			},
			"publishConfig": {
				"access": "public"
			},
			"gitHead": "ae792ff80c9df771dc55643aff7a4ef152d442ee",
			"_id": "@zccm/postcss-px-to-viewport@1.0.1",
			"_nodeVersion": "14.18.1",
			"_npmVersion": "7.21.0",
			"dist": {
				"integrity": "sha512-v25M39ZucJzvwPMkK6hAmlu9bVNM3Rbz+jO6Nc6uVtSj4zGc4ytBoHG/axj2kgqhZVN5eLlG/px8a68zhE+S3g==",
				"shasum": "8ed73038f2618ddfd8647bda8e9969659159b894",
				"tarball": "https://registry.npmjs.org/@zccm/postcss-px-to-viewport/-/postcss-px-to-viewport-1.0.1.tgz",
				"fileCount": 6,
				"unpackedSize": 16738,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIFCvn0xBHDiK/m/VvDbW+d5ipOmHJ6hrTgLoAbpzjchxAiBI1dYGuvlS0hP9leNLBrkke8yQTdG8tkL9cYVBt2YdPg=="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjfvlwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmppXA/+OA0N6VJ/vvlVMhSzxHn0fans3IP/0cUdoOmi6SHR8mKsX2hy\r\nF+EgaHWkRGF9GPeNvpAVdgzs1SMeU6DDknyh99OOB5gt7TluBqzoMQBSzJcf\r\nUbeao8YoEeNt1cRUQQv2m92TZgkp9UXnFz2vJj2sOF/X40BOm1yy5qDxJbMP\r\nmBrhaXpnOl8skpKiQiv56M3qFOVAFVlGZiwwiSO8h6mE417iVqhLink2/sny\r\nr08r08PR9ka67HRFQGZnur8uR3gjqj1kAb4N1YmLpN+OoKxe2P4+Kx1HZx1I\r\nxLxlecvDHR5lv2X0qkM0pXCn94Qe4Njq9rX6r3jNBsYL+ZWxiTtsBqBBT6DX\r\nvGGaEBPuWQFN8ahPPZiDAusvhPBZU2nBQDkwrD9gHC3HWpkWm5Ms0lTu3g4q\r\nFPyQqBTKH4wdK3GIJaGfD+5PvwIse2INcFtXOtfKeI4MNnZ34dIuFp3cV1y6\r\nMYVFRSta7MYHtitnlrZ1VmR1VJrb78eSPhE/MSMk+4uYOksdlxksR9fg8i2j\r\nPhcQKjeEvAYZNCvcl2/4EcSkND+HV8NAqy6BOVCDfO/USlPaDth+q8poIpXc\r\nvlsaCYpN7mrslJgkzhCdYHX0mIKR22PU8R21gUKJDy7tlOY/Ub+5medIX2/Q\r\n600DhxQDEDRnpO6i3cgFZpPigJFJJlbYjZM=\r\n=/Ri6\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "ls-better",
				"email": "lrw156804437@outlook.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "ls-better",
					"email": "lrw156804437@outlook.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport_1.0.1_1669265776731_0.2848476287466766"
			},
			"_hasShrinkwrap": false
		},
		"1.0.2": {
			"name": "@zccm/postcss-px-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.0.2",
			"author": {
				"name": "lrr"
			},
			"license": "MIT",
			"main": "lib/index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"build": "father-build",
				"release": "npm run build && npm publish"
			},
			"dependencies": {
				"object-assign": "^4.1.1"
			},
			"devDependencies": {
				"father-build": "^1.17.2",
				"postcss": "^8.3.8"
			},
			"publishConfig": {
				"access": "public"
			},
			"gitHead": "ae792ff80c9df771dc55643aff7a4ef152d442ee",
			"_id": "@zccm/postcss-px-to-viewport@1.0.2",
			"_nodeVersion": "14.18.1",
			"_npmVersion": "7.21.0",
			"dist": {
				"integrity": "sha512-ZoTPQAvuS/H3ovVHppQhE83UHgSvFMd8FyOky8X1sjfw1uYhXbdTdGRJdUJeUnKzA8jmZFoktpyJln3ZAVtAMg==",
				"shasum": "cfedaff629055c4f6610c2a3407f028741d33d68",
				"tarball": "https://registry.npmjs.org/@zccm/postcss-px-to-viewport/-/postcss-px-to-viewport-1.0.2.tgz",
				"fileCount": 6,
				"unpackedSize": 13928,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDHO2AzkE0Fg7g2JdCD8JLmYdgvyC92xMgl5yjFK38hmQIhAPLvi5U9XSfCTb89CGmGnEynxn0riPvEEPtI01+FTzIh"
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjfvrBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrZtBAAgerSsmk7dJBFwMKisrylsZ+tHS6W1iD9qpWLR6tqvRQx7aex\r\nv0mC5LwJXNyGi6WbJI0bQV5pamKNyoN8qtwjqmObYMdIYktvwxJzJg8zWXIX\r\nYyqfkHoS9nHV0cwYFKE3lvuytUgKGKPBVTUEN7IoV/XIP4FkTiuj+oBjC004\r\nTbWcQPcu8L5pc4IdEholXorXqcO8sCcF12z13ExGQPtN+mppVBLGWNw6wbHq\r\nRAgwoBtEUUu7b6fX7XdyPzFatiR8J2bF7nX9fJ0A7XXMpeqmdbNdAtYuvpFa\r\nrWA5/dZAC7S2PcZ1knPSBSYqr83TTT3oNgNTGMRg4DwdEkewm8Rfwu+cuUHX\r\nTT/lr9GKPq62yzu26iAKvdmxx6P5geH8msiO+d3qthk+CwNuJnZ+CDd0srcG\r\nvdLU6/wmvjIYHYIm8FCm8YCtort/0Z2NbD53gAmSL+fgXpcgcMEIDYw/bXXO\r\n/j24IRMh/KGXVWQMRCTTpo8NVu6k54nFsSXI8MVKyDNmoeCwsjvVOgBpCiH0\r\nV1zmYsOHcLntNvuCHEwlAIUDCUTzfUncXujHVjQFsnADVh9+w/xR4rAd1nrY\r\nB5FpYM6RaHRSAYH2EsRGInzjI6z1mPIhPvrDYeQGi+qfbTtFaF59KAHbGeUl\r\nI4Io0kdqUODvK93GtEqurClV9RryFOQnVc4=\r\n=lq8r\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "ls-better",
				"email": "lrw156804437@outlook.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "ls-better",
					"email": "lrw156804437@outlook.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport_1.0.2_1669266113232_0.049971582433442574"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2022-11-24T03:32:31.416Z",
		"1.0.0": "2022-11-24T03:32:31.779Z",
		"modified": "2022-11-24T05:01:53.498Z",
		"1.0.1": "2022-11-24T04:56:16.908Z",
		"1.0.2": "2022-11-24T05:01:53.423Z"
	},
	"maintainers": [
		{
			"name": "ls-better",
			"email": "lrw156804437@outlook.com"
		}
	],
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"author": {
		"name": "lrr"
	},
	"license": "MIT",
	"readme": "## Getting Started\n\n### Installation\n```\n$ pnpm add -D @zccm/postcss-px-to-viewport\n```\n\n### Usage\n\nDefault Options:\n```js\n{\n  unitToConvert: 'px',\n  viewportWidth: 320,\n  unitPrecision: 5,\n  propList: ['*'],\n  viewportUnit: 'vw',\n  fontViewportUnit: 'vw',\n  selectorBlackList: [],\n  minPixelValue: 1,\n  mediaQuery: false,\n  replace: true,\n  exclude: undefined,\n  include: undefined,\n  landscape: false,\n  landscapeUnit: 'vw',\n  landscapeWidth: 568\n}\n```\n- `unitToConvert` (String) unit to convert, by default, it is px.\n- `viewportWidth` (Number) The width of the viewport | (fileName: string) => number.\n- `unitPrecision` (Number) The decimal numbers to allow the vw units to grow to.\n- `propList` (Array) The properties that can change from px to vw.\n  - Values need to be exact matches.\n  - Use wildcard * to enable all properties. Example: ['*']\n  - Use * at the start or end of a word. (['*position*'] will match background-position-y)\n  - Use ! to not match a property. Example: ['*', '!letter-spacing']\n  - Combine the \"not\" prefix with the other prefixes. Example: ['*', '!font*']\n- `viewportUnit` (String) Expected units.\n- `fontViewportUnit` (String) Expected units for font.\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `replace` (Boolean) replaces rules containing vw instead of adding fallbacks.\n- `exclude` (Regexp or Array of Regexp) Ignore some files like 'node_modules'\n    - If value is regexp, will ignore the matches files.\n    - If value is array, the elements of the array are regexp.\n- `include` (Regexp or Array of Regexp) If `include` is set, only matching files will be converted,\n    for example, only files under `src/mobile/` (`include: /\\/src\\/mobile\\//`)\n    - If the value is regexp, the matching file will be included, otherwise it will be excluded.\n    - If value is array, the elements of the array are regexp.\n- `landscape` (Boolean) Adds `@media (orientation: landscape)` with values converted via `landscapeWidth`.\n- `landscapeUnit` (String) Expected unit for `landscape` option\n- `landscapeWidth` (Number) Viewport width for landscape orientation.\n\n> `exclude` and `include` can be set together, and the intersection of the two rules will be taken.\n\n#### Ignoring\n\nYou can use special comments for ignore conversion of single lines:\n- `/* px-to-viewport-ignore-next */` — on a separate line, prevents conversion on the next line.\n- `/* px-to-viewport-ignore */` — after the property on the right, prevents conversion on the same line.\n\nExample:\n```css\n/* example input: */\n.class {\n  /* px-to-viewport-ignore-next */\n  width: 10px;\n  padding: 10px;\n  height: 10px; /* px-to-viewport-ignore */\n  border: solid 2px #000; /* px-to-viewport-ignore */\n}\n\n/* example output: */\n.class {\n  width: 10px;\n  padding: 3.125vw;\n  height: 10px;\n  border: solid 2px #000;\n}\n```\n\nThere are several more reasons why your pixels may not convert, the following options may affect this:\n`propList`, `selectorBlackList`, `minPixelValue`, `mediaQuery`, `exclude`, `include`.\n\n#### Use with PostCss configuration file\n\nadd to your `postcss.config.js`\n```js\nmodule.exports = {\n  plugins: {\n    // ...\n    '@zccm/postcss-px-to-viewport': {\n      // options\n    }\n  }\n}\n```\n\n#### Use with gulp-postcss\n\nadd to your `gulpfile.js`:\n```js\nconst gulp = require('gulp');\nconst postcss = require('gulp-postcss');\nconst pxtoviewport = require('postcss-px-to-viewport');\n\ngulp.task('css', function () {\n\n  const processors = [\n    pxtoviewport({\n      viewportWidth: 320,\n      viewportUnit: 'vmin'\n    })\n  ];\n\n  return gulp.src(['build/css/**/*.css'])\n    .pipe(postcss(processors))\n    .pipe(gulp.dest('build/css'));\n});\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 5
}
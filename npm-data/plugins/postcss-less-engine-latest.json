{
	"_id": "postcss-less-engine-latest",
	"_rev": "2-122891210f37117fa42734eecc4d74b6",
	"name": "postcss-less-engine-latest",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-less-engine-latest",
			"version": "1.0.0",
			"description": "PostCSS plugin for integrating the popular Less CSS pre-processor into your PostCSS workflow",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"less",
				"less-plugin"
			],
			"author": {
				"name": "Matthew Dean",
				"email": "hello@getcrunch.co"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/Crunch/postcss-less.git"
			},
			"bugs": {
				"url": "https://github.com/Crunch/postcss-less/issues"
			},
			"homepage": "https://github.com/Crunch/postcss-less",
			"dependencies": {},
			"devDependencies": {
				"autoprefixer": "^6.3.6",
				"ava": "^0.4.2",
				"chai": "^3.5.0",
				"eslint": "^1.9.0",
				"gulp": "^3.9.0",
				"gulp-mocha": "^2.2.0",
				"gulp-postcss": "^6.1.1",
				"gulp-util": "^3.0.7",
				"less": "^3.9.0",
				"less-plugin-future-compat": "^1.0.0",
				"postcss": "^5.0.10",
				"postcss-clean": "^1.0.2",
				"postcss-reporter": "^1.4.1"
			},
			"scripts": {
				"test": "gulp test"
			},
			"gitHead": "3f543f3fd3b123adfee484fc85d10e376e4abda8",
			"_id": "postcss-less-engine-latest@1.0.0",
			"_npmVersion": "5.7.1",
			"_nodeVersion": "9.8.0",
			"_npmUser": {
				"name": "shaoyudong",
				"email": "shaoyudong33@gmail.com"
			},
			"dist": {
				"integrity": "sha512-Gto39dYF+pZ1CLTJltnDHA5auocG2QEZMA4pZaeGaMAv6WtgZsoUJtl+z6zD6DrS1f6Tq2wZGpqEdVEQJL8XeA==",
				"shasum": "79c1a9bc0aef8ee4923c8c21a73a72d4565fd171",
				"tarball": "https://registry.npmjs.org/postcss-less-engine-latest/-/postcss-less-engine-latest-1.0.0.tgz",
				"fileCount": 10,
				"unpackedSize": 22476,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPUyuCRA9TVsSAnZWagAAC4oP/i6w0kPTsXGSZmG78l60\nM91E49ZLU0VUhmCBakqfMbrQxD9dpCkjVaVGsXEkKV6Fy5kyJmHur0efdg47\nq99v52jQxgzma5gr3TanuWA5SbSdG8NwJc+KOFK5+CqU7LFepXqbIGRqrOuJ\niKbJ0twEoQOZ2aBwvUj2X2b90ljX7TPLLhCt5IP8gKSB+3WzCrgzpMSqz+XA\n9Fe4viyJ80kSQOMw++Cphh3vZPSuhk7ZAFZAqgFOCfyFXLqSLrtGKpDNG2eb\nI74D7HSwXkxGWh/eOQU0L9zT78RRT72S52DTyBZWbEzmKPYJ4bx3rdYDW99w\no8eFZrZHnDGy49RQoJRnX29DcPWtzvzU5FXe2PkWiRSmb6gzntC9jnjTYm1h\n3n1fe+Vkt4/Nva8pBzfU3kCU1XxmYT8Lt1k0Ofmr95uLAAFs/QzK8f3kEfU+\nhsBoeTD9oH2Y1phgIJqKLKttM2hMr5c8elRk9um7QPiq7Uw/hRfU5kFquBbZ\n5bIpL5KXpMpMeXRF/m5QmTCvc8o8EiPF51X/hM7FkFwUtV45M79lQBJ/w9l7\nul/NYqwP4g81cLny6ac78bJ//wg9+icdd4HwTXxXEDopSzovc+VEt6NeM+Su\nd1G60pKg4N6bT/8L+WJbfXmMruWd9NdrC383ciD+r5lM5iJKmcujvV0EB3U0\naHel\r\n=biAj\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQD/ip5EtR2IBPqp75SK9kxZdFzkdUsaAoc/zZ8VBbuBjwIgQoaCUvHUBcgI7t70f3eFs2R5ol5qXUouPgmRITXEv/I="
					}
				]
			},
			"maintainers": [
				{
					"name": "shaoyudong",
					"email": "shaoyudong33@gmail.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-less-engine-latest_1.0.0_1547521197813_0.7550737834716386"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "postcss-less-engine-latest",
			"version": "1.0.1",
			"description": "PostCSS plugin for integrating the popular Less CSS pre-processor into your PostCSS workflow",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"less",
				"less-plugin"
			],
			"author": {
				"name": "Matthew Dean",
				"email": "hello@getcrunch.co"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/Crunch/postcss-less.git"
			},
			"bugs": {
				"url": "https://github.com/Crunch/postcss-less/issues"
			},
			"homepage": "https://github.com/Crunch/postcss-less",
			"dependencies": {
				"postcss": "^5.0.10",
				"less": "^3.9.0"
			},
			"devDependencies": {
				"autoprefixer": "^6.3.6",
				"ava": "^0.4.2",
				"chai": "^3.5.0",
				"eslint": "^1.9.0",
				"gulp": "^3.9.0",
				"gulp-mocha": "^2.2.0",
				"gulp-postcss": "^6.1.1",
				"gulp-util": "^3.0.7",
				"less-plugin-future-compat": "^1.0.0",
				"postcss-clean": "^1.0.2",
				"postcss-reporter": "^1.4.1"
			},
			"scripts": {
				"test": "gulp test"
			},
			"gitHead": "4bf2851ceb0e99479d7292bbd9abbb8c4ed1e172",
			"_id": "postcss-less-engine-latest@1.0.1",
			"_npmVersion": "5.7.1",
			"_nodeVersion": "9.8.0",
			"_npmUser": {
				"name": "shaoyudong",
				"email": "shaoyudong33@gmail.com"
			},
			"dist": {
				"integrity": "sha512-L1Q9LL2mGJC5L72jjlonkrJgNMjU2UoOPuyqjn6swGKVKwo49bMAUziAAkB0LM8b3j+qZQ+FSz1LoPkKc4hy0A==",
				"shasum": "72e989a89ec200e44732281d9ff382d4424610cb",
				"tarball": "https://registry.npmjs.org/postcss-less-engine-latest/-/postcss-less-engine-latest-1.0.1.tgz",
				"fileCount": 10,
				"unpackedSize": 22547,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcQBeJCRA9TVsSAnZWagAAY0IP/3uOopTEpjt+EoKah675\nAitR79bIrbSnHlwcnwDoo7cT5xumVDvZX1uQy6eG6uPeXAbF60EA+86PMfkW\nMm1uGw8uu0BpSUC311C4TKoeXS6zjQ1xWGxB4JTEq0zik5fHvUC/EtofqHZC\n6v1VL6sfub5sLbOlW0oeCsNmSYOvX0XbQD+olBZO6/xQ+I5xoBjeusy35ouX\naUd4f1p3wIqgeD/k/YR3Vo4BqcsAB2IL6flJ8BAW1lryT4Y4nxnP/wo1fKP9\nrvMp15DK2z2znfTbm0ysI3hWu3LB5oh3TxMJ4nXBP4+ppKoeSopGTk9fBDCz\ng73H2ElPGF52AFmxfEjXDIo7/jBmmsHf/3PK8l7uEUdfMDtohabV5dfkplD6\naYJd+NjCS5Ii0Ai6XZmg3yOoQNpKgHij1z9KydT3iqzF6NkQXSEGNyl1XmhC\nh/gMCrXZIKQmg4q+5+4redH2mVku/4T1sfvOuf6MgPgBeptwdmi/g6Av8lrU\npYgI2mAUv2EfgQlbfuXJTZVvA/9Smlz/PeLo2mH1anKeO+F/1i/gacoGVv+D\nFKbTBiPFGDcKHgWlbOHxpzQ2i8phJuRdyvCDlQs3edf8CaBerqgwekxsIIf8\nMdkjOQHPcnSYq+VSQuw3tJm5Q68ClRIVWxSxWwJrXwELe0PGLqAokgnNgl3D\ngxUc\r\n=ZV3p\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCn8vwfSMNBjIAIebaQc8Is1ZBye2SDb8/I3p/borS7jAIhAMyq8XUL+jqPtb80zdK/q+C3ErXS4lEWcYXGzLyoQS46"
					}
				]
			},
			"maintainers": [
				{
					"name": "shaoyudong",
					"email": "shaoyudong33@gmail.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-less-engine-latest_1.0.1_1547704200493_0.9043422656681757"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2019-01-15T02:59:57.812Z",
		"1.0.0": "2019-01-15T02:59:57.929Z",
		"modified": "2022-05-13T06:24:55.705Z",
		"1.0.1": "2019-01-17T05:50:00.695Z"
	},
	"maintainers": [
		{
			"name": "shaoyudong",
			"email": "shaoyudong33@gmail.com"
		}
	],
	"description": "PostCSS plugin for integrating the popular Less CSS pre-processor into your PostCSS workflow",
	"homepage": "https://github.com/Crunch/postcss-less",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"less",
		"less-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/Crunch/postcss-less.git"
	},
	"author": {
		"name": "Matthew Dean",
		"email": "hello@getcrunch.co"
	},
	"bugs": {
		"url": "https://github.com/Crunch/postcss-less/issues"
	},
	"license": "MIT",
	"readme": "# A Complete Compile-LESS-to-CSS PostCSS plugin\n\n_Note: this plugin was mostly a proof-of-concept of converting ASTs and not something I'm actively maintaining. The best way to do this is probably just to use a tool like Gulp and pipe through [gulp-less] and then [gulp-postcss]._\n\nThis is a [PostCSS] custom parser plugin for integrating the popular [Less.js] CSS pre-processor into your PostCSS workflow! It integrates the entire Less engine, evaluates your `.less`, and exports a PostCSS AST that you can use to attach multiple subsequent PostCSS plugins.\n\n\n## Note\n\n* Because this uses the [Less.js] parser and not the default PostCSS processor, some parsing will be different. PostCSS accepts \"broken\" CSS, whereas Less doubles as a de facto CSS linter, and will return errors if your Less / CSS is poorly structured.\n* PostCSS will also sometimes \"fix\" CSS that uses property hacks, which Less preserves as the property name. As well, PostCSS will remove comments from within values, which are also kept in the value by Less (in most cases).\n* Less.js does not save \"raws\" when parsing. It also only preserves the start line / column of your source, which is still fine for Source Maps.\n* **Important:** The `less()` plugin **needs to be the first PostCSS plugin called**.\n\n[less-plugin-autoprefix]: https://github.com/less/less-plugin-autoprefix\n[PostCSS]: https://github.com/postcss/postcss\n[Less.js]: https://github.com/less/less.js\n[gulp-less]: https://github.com/plus3network/gulp-less\n[gulp-postcss]: https://github.com/postcss/gulp-postcss\n[ci-img]:  https://travis-ci.org/Crunch/postcss-less.svg\n[ci]:      https://travis-ci.org/Crunch/postcss-less\n[postcss-less-engine]: https://github.com/Crunch/postcss-less\n[Gulp PostCSS]: https://github.com/postcss/gulp-postcss\n[Grunt PostCSS]: https://github.com/nDmitry/grunt-postcss\n\n## Example\n\n### Input `example.less` file\n\n```less\n.add-bg-size(@size) {\n\t-webkit-background-size+: @size;\n\tbackground-size+: @size;\n}\n\n@default-size: 20px;\n\n.box {\n\t.add-bg-size(@default-size (@default-size / 2));\n\t.add-bg-size(cover);\n\twidth: calc(100% - 50px);\n}\n```\n\n### JavaScript\n```js\nvar less = require('postcss-less-engine');\nvar autoprefixer = require('autoprefixer');\nvar clean = require('postcss-clean');\n\nvar exampleLess = fs.readFileSync(path.join(__dirname, 'example.less'), 'utf8');\n\npostcss([\n    less({ strictMath: true }), \n    autoprefixer(), \n    clean()\n  ])\n  .process(exampleLess, { parser: less.parser, from: 'example.less' })\n  .then(function (result) {\n    console.log(result.css);\n  }, function(err) {});\n```\n\n### Output\n\n```css\n.box{background-size:20px 10px,cover;width:calc(100% - 50px)}\n```\n\n## Usage\n\nFollow these simple steps to use [postcss-less-engine].\n\nAdd [postcss-less-engine] to your build tool. (You must have Less.js and PostCSS installed as prerequisites.)\n\n```bash\nnpm install postcss-less-engine --save-dev\n```\n\n#### Node\n\n```js\nvar less = require('postcss-less-engine');\nless({ /* Less.js options */ }).process(YOUR_CSS, { parser: less.parser });\n```\n\nLoad [postcss-less-engine] as a PostCSS plugin:\n\n```js\nvar less = require('postcss-less-engine');\npostcss([\n    less({ /* Less.js options */ })\n]).process(YOUR_CSS, { parser: less.parser }).then(function (result) {\n\t// do something with result.css\n});\n```\n\n#### Gulp\n\nAdd [Gulp PostCSS] to your build tool:\n\n```bash\nnpm install gulp-postcss --save-dev\n```\n\nEnable [postcss-less-engine] within your Gulpfile:\n\n```js\nvar postcss = require('gulp-postcss');\nvar less = require('postcss-less-engine');\n\ngulp.task('less', function () {\n    return gulp.src('./css/src/style.less').pipe(\n        postcss([\n            less({ /* Less.js options */ })\n        ], { parser: less.parser })\n    ).pipe(\n        gulp.dest('./css')\n    );\n});\n```\n\n#### Grunt\n\nAdd [Grunt PostCSS] to your build tool:\n\n```sh\nnpm install postcss-less-engine --save-dev\n```\n\nEnable [postcss-less-engine] within your Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-postcss');\n\ngrunt.initConfig({\n\tpostcss: {\n\t\toptions: {\n\t\t\tparser: require('postcss-less-engine').parser,\n\t\t\tprocessors: [\n\t\t\t\trequire('postcss-less-engine')({ /* Less.js options */ })\n\t\t\t]\n\t\t},\n\t\tdist: {\n\t\t\tsrc: 'css/*.css'\n\t\t}\n\t}\n});\n```\n\n#### Misc\n\nSimilarly to `postcss-import`, the list of imported files can be viewed by\nassigning a function to the `onImport` key among the options:\n\n```javascript\nless({\n\t/* other Less.js options */\n\tonImport: function(sources){\n\t\tconsole.log(sources)\n\t}\n})\n```\n\nThe received sources will be an array of strings, containing the absolute path\nto the files, which were imported, including the source file.\n",
	"readmeFilename": "README.md",
	"_downloads": 1209
}
{
	"_id": "@jonny1994/postcss-px-to-viewport",
	"_rev": "2-3ba0990db390e1cf3d02fb73c1090977",
	"name": "@jonny1994/postcss-px-to-viewport",
	"dist-tags": {
		"latest": "1.1.0"
	},
	"versions": {
		"1.0.0": {
			"name": "@jonny1994/postcss-px-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.0.0",
			"author": {
				"name": "Jonny Chen",
				"email": "c1043870470@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/Jonny-china/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/Jonny-china/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/Jonny-china/postcss-px-to-viewport",
			"main": "./dist/index.js",
			"types": "./types/index.d.ts",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss8",
				"postcss-plugin"
			],
			"scripts": {
				"dev": "tsc -w",
				"prebuild": "rimraf dist types",
				"build": "tsc -b",
				"test": "jest spec/*.spec.ts",
				"prepublishOnly": "pnpm install && npm run test && npm run build"
			},
			"publishConfig": {
				"registry": "https://registry.npmjs.org/"
			},
			"devDependencies": {
				"@types/jest": "^27.4.1",
				"jest": "^27.5.1",
				"postcss": ">=8.0.0",
				"rimraf": "^3.0.2",
				"ts-jest": "^27.1.3",
				"typescript": "^4.6.2"
			},
			"peerDependencies": {
				"postcss": ">=8.0.0"
			},
			"_id": "@jonny1994/postcss-px-to-viewport@1.0.0",
			"_nodeVersion": "16.13.1",
			"_npmVersion": "8.1.2",
			"dist": {
				"integrity": "sha512-90+QZrMBSwqO7++W93948lUZUOywa4cgmEyO4tj4NZ/5Vrl6qO2LS9qt3TupT23RY0D6CZvXriZcLkCx5q3MAw==",
				"shasum": "d38750e8585e66dc9c35a9dc151c3ccae1dd821d",
				"tarball": "https://registry.npmjs.org/@jonny1994/postcss-px-to-viewport/-/postcss-px-to-viewport-1.0.0.tgz",
				"fileCount": 13,
				"unpackedSize": 33986,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiOK4bACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq/kw//Y6FWUrM1iLMC+QOyJmaYmXVK2jzfOcQAZwaN1LtytTv1tQpk\r\nILrCh6q/yCzzBTKssbANKqFcV9EgOZYLQA3fiey1maGvOHbpMUhwdgp9RTL3\r\nIa+ju9kyP0wDBirB8IfjsnTRztphhkpa3SGhppf8d7mS+zE4V4gvjSZZ8BN5\r\ntWJmAriswSvG1fL3BnLLPNMI6umKUaVBMa1TRCq9MfG7X48JCnYGfRPg42ig\r\n1tLcj2v/noTc/jziocOsb+eJ7B69vzozcygql7OEKeP5hcaYqjJk0FFdOeBs\r\nlZzL29ZBRp/J545lvb2EgWc9ejGY+H33Xl4UYgeaP2QUnBolMW6Uvz2+gsbD\r\nGxwyC/fMNCUm0t17fYwroucI5C/SlYxqV6YSw3X0slnWJilv78g+ZVZiPAau\r\n4I27B+//bH6SiaU7fSQTpp1j6yO86f42Y8f3qLsW4ZFYr1Mc6YWpd5QPQANw\r\nX7XgZJDZjjtsO/RjWodbOlLyROqkZy6nOgWcKrSDnM3d9+83cbdCAEbJed1X\r\njTfASo5hu9Y8WdY0jLGIxYEKgS7TjGlT8mSZK7+3SmmUEZ58qUtdct7nliQM\r\npiZW1LNB05+hMFRk4uBqmxLS7CbOQL//yR3Ld/zACrvFjZ1irCBFeyXXDbNZ\r\n2xKX6eUQRXI2tN5YsqvcHntR96Z3SZ/zXLw=\r\n=maaR\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIECU8ubtJu+jxBey5OsBLhEWTFMl1J6sbkj7pInyStZHAiBhgXD5fPr0cf3HKk48obswfhfB6Q7cCStsDMY0FGNtIw=="
					}
				]
			},
			"_npmUser": {
				"name": "jonny1994",
				"email": "c1043870470@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "jonny1994",
					"email": "c1043870470@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport_1.0.0_1647881754944_0.4674072488230583"
			},
			"_hasShrinkwrap": false
		},
		"1.1.0": {
			"name": "@jonny1994/postcss-px-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.1.0",
			"author": {
				"name": "Jonny Chen",
				"email": "c1043870470@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/Jonny-china/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/Jonny-china/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/Jonny-china/postcss-px-to-viewport",
			"main": "./dist/index.js",
			"types": "./types/index.d.ts",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss8",
				"postcss-plugin"
			],
			"scripts": {
				"dev": "tsc -w",
				"prebuild": "rimraf dist types",
				"build": "tsc -b",
				"test": "jest spec/*.spec.ts",
				"prepublishOnly": "pnpm install && npm run test && npm run build"
			},
			"publishConfig": {
				"registry": "https://registry.npmjs.org/"
			},
			"devDependencies": {
				"@types/jest": "^27.4.1",
				"jest": "^27.5.1",
				"postcss": ">=8.0.0",
				"rimraf": "^3.0.2",
				"ts-jest": "^27.1.3",
				"typescript": "^4.6.2"
			},
			"peerDependencies": {
				"postcss": ">=8.0.0"
			},
			"gitHead": "63042aa0e150d63b159f64374f9152922b224ae8",
			"_id": "@jonny1994/postcss-px-to-viewport@1.1.0",
			"_nodeVersion": "16.13.1",
			"_npmVersion": "8.1.2",
			"dist": {
				"integrity": "sha512-fPyZlv+fgb3AEj7+nSg7Sh85OunrX+167MFlNe1WFh0KU1i6RXlEI0qnQ1RSxv2Of9ytB1vGTiPpwUV5rAiQ9A==",
				"shasum": "167b9b505b3e3f83ce9301b7fe8cef02e323b1a5",
				"tarball": "https://registry.npmjs.org/@jonny1994/postcss-px-to-viewport/-/postcss-px-to-viewport-1.1.0.tgz",
				"fileCount": 14,
				"unpackedSize": 37130,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPKl1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq+gxAAk0Qjxx5kQFw88bnry+E9Al3yOog5pAt1FPu8vrXTVWb3MpaW\r\n/r7tjFLsQwCwKwc60tGymdztYfknBLU7MI+4wRIa8VvPdNeR+tdWtrCHUWWD\r\n7C4ZERAGFc+Gop1oh8F9bpEbodrTz4fyq6tNtmcZX3TMRf4u97131oLuFHae\r\nI/PjLJ1jVT1WmADY9QFLMb6lOFSKXV3cbIVqVr5H2Z2b5WGC02QK5DWWFEca\r\nYgcKB0lkUbFwUS+qMkWiAVgNEKu8Srwoo97R1YfTZ73aC0DE9Er76w/r5WuX\r\nmnQ0DbpZRR921w03oWE5olbMtzaYRWdmqph6ONVbjgl166TaM0EQAsInMAHl\r\nVi2UB2e9WqfLLxjh40C1y8qk8aQiaAd9an/J7pYjwq65VlGABCsRPhuuHSnz\r\n4iUFAfhfVOzC2mxIUFPaVXfU5ygY43TYxwkRCJkFxt1K3lJUARMVqFBSYgCw\r\n9lwiGROfMMrflj3JXEjIhQzZQxfzPxivdWUJ729w3X3OxacLuah3PMamNKPj\r\nYXsGNhZXK653+MQMpAs62EPPGkeSZH6Ab7l1W7+j7dOwKf1NYKNcL7OjmH6+\r\n2ElTT5GzcDXvlcmAhcFiqgr3Le4RPCb250hSQp1WOYKn4/GipaFF/6uSrl58\r\nUNybLiRlDF6XK76XcnQ76EgyBMr9TfeQvIk=\r\n=WEcf\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDTg/wM4f4bIp76ggUp2cwvER5/a91VF6hidaRmzYBc5wIgbr8MOl20TyF9neBAZkmlu5HwwmTt1CoQ1dXDOjW6vIc="
					}
				]
			},
			"_npmUser": {
				"name": "jonny1994",
				"email": "c1043870470@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "jonny1994",
					"email": "c1043870470@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport_1.1.0_1648142709052_0.7402467741226193"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2022-03-21T16:55:54.878Z",
		"1.0.0": "2022-03-21T16:55:55.140Z",
		"modified": "2022-04-05T22:17:22.028Z",
		"1.1.0": "2022-03-24T17:25:09.180Z"
	},
	"maintainers": [
		{
			"name": "jonny1994",
			"email": "c1043870470@gmail.com"
		}
	],
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"homepage": "https://github.com/Jonny-china/postcss-px-to-viewport",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss8",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/Jonny-china/postcss-px-to-viewport.git"
	},
	"author": {
		"name": "Jonny Chen",
		"email": "c1043870470@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/Jonny-china/postcss-px-to-viewport/issues"
	},
	"license": "MIT",
	"readme": "# postcss-px-to-viewport\n\n[![npm version](https://badge.fury.io/js/@jonny1994%2Fpostcss-px-to-viewport.svg)](https://badge.fury.io/js/@jonny1994%2Fpostcss-px-to-viewport)\n\nEnglish | [中文](README_CN.md)\n\n> Based on the [evrone/postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport) project, refactored using Typescript and PostCss8\n\n**Note: Because PostCss 8 is refactored, it is not supported below v8. If you use PostCss versions below v8, please use [evrone/postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport).**\n\nA plugin for [PostCSS](https://github.com/postcss/postcss) that generates viewport units (vw, vh, vmin, vmax) from pixel units.\n\n## Demo\n\nIf your project involves a fixed width, this script will help to convert pixels into viewport units.\n\n### Input\n\n```css\n.class {\n  margin: -10px 0.5vh;\n  padding: 5vmin 9.5px 1px;\n  border: 3px solid black;\n  border-bottom-width: 1px;\n  font-size: 14px;\n  line-height: 20px;\n}\n\n.class2 {\n  padding-top: 10px; /* px-to-viewport-ignore */\n  /* px-to-viewport-ignore-next */\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 20px;\n  line-height: 30px;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n### Output\n\n```css\n.class {\n  margin: -3.125vw 0.5vh;\n  padding: 5vmin 2.96875vw 1px;\n  border: 0.9375vw solid black;\n  border-bottom-width: 1px;\n  font-size: 4.375vw;\n  line-height: 6.25vw;\n}\n\n.class2 {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 6.25vw;\n  line-height: 9.375vw;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n## Getting Started\n\n### Installation\n\nAdd via npm\n\n```\n$ npm install @jonny1994/postcss-px-to-viewport --save-dev\n```\n\nor yarn\n\n```\n$ yarn add -D @jonny1994/postcss-px-to-viewport\n```\n\nor pnpm\n\n```\n$ pnpm add -D @jonny1994/postcss-px-to-viewport\n```\n\n### Usage\n\nDefault Options:\n\n```js\n{\n  unitToConvert: 'px',\n  viewportWidth: 320,\n  unitPrecision: 5,\n  propList: ['*'],\n  viewportUnit: 'vw',\n  fontViewportUnit: 'vw',\n  selectorBlackList: [],\n  minPixelValue: 1,\n  mediaQuery: false,\n  replace: true,\n  exclude: undefined,\n  include: undefined,\n  landscape: false,\n  landscapeUnit: 'vw',\n  landscapeWidth: 568,\n  rules: []\n}\n```\n\n- `unitToConvert` (String) unit to convert, by default, it is px.\n- `viewportWidth` (Number) The width of the viewport.\n- `unitPrecision` (Number) The decimal numbers to allow the vw units to grow to.\n- `propList` (Array) The properties that can change from px to vw.\n  - Values need to be exact matches.\n  - Use wildcard _ to enable all properties. Example: ['_']\n  - Use * at the start or end of a word. (['*position\\*'] will match background-position-y)\n  - Use ! to not match a property. Example: ['*', '!letter-spacing']\n  - Combine the \"not\" prefix with the other prefixes. Example: ['*', '!font*']\n- `viewportUnit` (String) Expected units.\n- `fontViewportUnit` (String) Expected units for font.\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n  - If value is string, it checks to see if selector contains the string.\n    - `['body']` will match `.body-class`\n  - If value is regexp, it checks to see if the selector matches the regexp.\n    - `[/^body$/]` will match `body` but not `.body`\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `mediaQuery` (Boolean or Regexp or Array of Regexp) Allow px to be converted in media queries.\n  - If value is regexp, the matches media queries params will be converted.\n  - If value is array, the elements of the array are regexp.\n- `replace` (Boolean) replaces rules containing vw instead of adding fallbacks.\n- `exclude` (Regexp or Array of Regexp) Ignore some files like 'node_modules'\n  - If value is regexp, will ignore the matches files.\n  - If value is array, the elements of the array are regexp.\n- `include` (Regexp or Array of Regexp) If `include` is set, only matching files will be converted,\n  for example, only files under `src/mobile/` (`include: /\\/src\\/mobile\\//`)\n  - If the value is regexp, the matching file will be included, otherwise it will be excluded.\n  - If value is array, the elements of the array are regexp.\n- `landscape` (Boolean) Adds `@media (orientation: landscape)` with values converted via `landscapeWidth`.\n- `landscapeUnit` (String) Expected unit for `landscape` option\n- `landscapeWidth` (Number) Viewport width for landscape orientation.\n- `rules` (Array) Custom path rules.\n\n> `exclude` and `include` can be set together, and the intersection of the two rules will be taken.\n\n#### `rules` option\n\nCustomize rule overrides based on paths\nExample:\n\n```js\nmodule.exports = {\n  plugins: {\n    // ...\n    '@jonny1994/postcss-px-to-viewport': {\n      // ...otherOptions\n      rules: [\n        [\n          /\\/node_modules\\/vant\\//, // The regex or string of the path\n          (pixels, parsedVal, prop) => {\n            if (prop.includes('font')) {\n              return parsedval * 2 + 'vmin'\n            }\n            return parsedval * 2 + 'vw'\n          }\n        ]\n      ]\n    }\n  }\n}\n```\n\n#### `mediaQuery` option\n\nTranslate only rules filtered by the mediaQuery option.\nExample:\n\n```js\nmodule.exports = {\n  plugins: {\n    // ...\n    '@jonny1994/postcss-px-to-viewport': {\n      // ...otherOptions\n      mediaQuery: /min\\-width/, // or\n      mediaQuery: [/min\\-width/, /max\\-width/]\n    }\n  }\n}\n```\n\n#### Ignoring\n\nYou can use special comments for ignore conversion of single lines:\n\n- `/* px-to-viewport-ignore-next */` — on a separate line, prevents conversion on the next line.\n- `/* px-to-viewport-ignore */` — after the property on the right, prevents conversion on the same line.\n\nExample:\n\n```css\n/* example input: */\n.class {\n  /* px-to-viewport-ignore-next */\n  width: 10px;\n  padding: 10px;\n  height: 10px; /* px-to-viewport-ignore */\n  border: solid 2px #000; /* px-to-viewport-ignore */\n}\n\n/* example output: */\n.class {\n  width: 10px;\n  padding: 3.125vw;\n  height: 10px;\n  border: solid 2px #000;\n}\n```\n\nThere are several more reasons why your pixels may not convert, the following options may affect this:\n`propList`, `selectorBlackList`, `minPixelValue`, `mediaQuery`, `exclude`, `include`, `rules`.\n\n#### Use with PostCss configuration file\n\nadd to your `postcss.config.js`\n\n```js\nmodule.exports = {\n  plugins: {\n    // ...\n    '@jonny1994/postcss-px-to-viewport': {\n      // options\n    }\n  }\n}\n```\n\n#### Use with gulp-postcss\n\nadd to your `gulpfile.js`:\n\n```js\nvar gulp = require('gulp')\nvar postcss = require('gulp-postcss')\nvar pxtoviewport = require('@jonny1994/postcss-px-to-viewport')\n\ngulp.task('css', function () {\n  var processors = [\n    pxtoviewport({\n      viewportWidth: 320,\n      viewportUnit: 'vmin'\n    })\n  ]\n\n  return gulp\n    .src(['build/css/**/*.css'])\n    .pipe(postcss(processors))\n    .pipe(gulp.dest('build/css'))\n})\n```\n\n## Running the tests\n\nIn order to run tests, you need to install dev-packages:\n\n```\n$ npm install\n```\n\nThen run the tests via npm script:\n\n```\n$ npm run test\n```\n\n## Changelog\n\nThe changelog is [here](CHANGELOG.md).\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/Jonny-china/postcss-px-to-viewport/tags).\n\n## License\n\nThis project is licensed under the [MIT License](LICENSE).\n\n## Acknowledgments\n\n- [evrone/postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport)\n",
	"readmeFilename": "README.md",
	"_downloads": 33
}
{
	"_id": "tz-postcss-px-to-viewport",
	"name": "tz-postcss-px-to-viewport",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "tz-postcss-px-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.0.0",
			"author": {
				"name": "tz"
			},
			"license": "MIT",
			"scripts": {
				"test": "jasmine-node spec"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/cnjm/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/cnjm/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/cnjm/postcss-px-to-viewport",
			"devDependencies": {
				"jasmine-node": "~1.11.0",
				"postcss": "^8.4.14"
			},
			"peerDependencies": {
				"postcss": "^8.4.14"
			},
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": ">=4.0.1"
			},
			"directories": {
				"example": "example"
			},
			"_id": "tz-postcss-px-to-viewport@1.0.0",
			"_nodeVersion": "16.18.0",
			"_npmVersion": "8.19.2",
			"dist": {
				"integrity": "sha512-4zawZhQGzgq3eAGu4MjHPwvBVZ5PYJPpHI+PZKYHcOHt3StkQ6O70R5g8I3m/Zb1zOZcsIQf7OEkzxJGUCv5GQ==",
				"shasum": "33561f6d02d9c5e67e4f1787482ffb143a548849",
				"tarball": "https://registry.npmjs.org/tz-postcss-px-to-viewport/-/tz-postcss-px-to-viewport-1.0.0.tgz",
				"fileCount": 9,
				"unpackedSize": 21791,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIDjaTbYlRXI/9cOiE5PdVpq+mkuGIGqtTgC55HOJAFGkAiEArjOu1RfpdBNXD5VVxi2Kpsgc/pcFWWgf+w3pbZm547o="
					}
				]
			},
			"_npmUser": {
				"name": "cx1874",
				"email": "562712646@qq.com"
			},
			"maintainers": [
				{
					"name": "cx1874",
					"email": "562712646@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/tz-postcss-px-to-viewport_1.0.0_1693969084871_0.2813303065074666"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2023-09-06T02:58:04.870Z",
		"1.0.0": "2023-09-06T02:58:05.066Z",
		"modified": "2023-09-06T02:58:05.366Z"
	},
	"maintainers": [
		{
			"name": "cx1874",
			"email": "562712646@qq.com"
		}
	],
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"homepage": "https://github.com/cnjm/postcss-px-to-viewport",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/cnjm/postcss-px-to-viewport.git"
	},
	"author": {
		"name": "tz"
	},
	"bugs": {
		"url": "https://github.com/cnjm/postcss-px-to-viewport/issues"
	},
	"license": "MIT",
	"readme": "# tz-postcss-px-to-viewport\r\n[基于postcss-px-to-viewport插件稍加改造的](https://github.com/evrone/postcss-px-to-viewport)\r\n和使用postcss-px-to-viewport 是基本一样的，只是多处理了vant等375尺寸问题，你也可以选择克隆到自己仓库中使用，也可以直接使用笔者改的\r\n\r\n顺便把插件升级了postcss到v8+,规避了postcss.plugin was deprecated. Migration guide:  的警告，\r\n\r\n```bash\r\nnpm i tz-postcss-px-to-viewport\r\n锁死v0.0.2,则为不更新postcss版本\r\n```\r\n\r\n## 简介（为什么有）\r\n\r\n一直希望在**vite** 中 使用 postcss-px-to-viewport 时可以设置不同的设计尺寸，比如**vant**是375设计的\r\n\r\n而我们可能是750或其他尺寸，一直找了好久都没有合适的解决方案（有个webpack的，不过vite的貌似不行），如果有知道其他好的解决方法的，麻烦告知一下，感激不尽！\r\n\r\n干脆就稍加改了一下postcss-px-to-viewport的代码\r\n\r\n其实就是在src/index.js中加入了以下代码，把当前文件路径暴露出去，接收一个新的viewportWidth并赋值给opts\r\n\r\n具体可以看下源代码\r\n```js\r\nif(opts.customFun){\r\n  opts.viewportWidth = opts.customFun({file:rule.source.input.file});\r\n}\r\n```\r\n\r\n配置时使用tz-postcss-px-to-viewport\r\n\r\n```js\r\nconst path = require(\"path\");\r\nmodule.exports = () => {\r\n  return {\r\n    plugins: {\r\n      autoprefixer: {\r\n        overrideBrowserslist: [\"Android 4.1\", \"iOS 7.1\", \"Chrome > 31\", \"ff > 31\", \"ie >= 8\"],\r\n      },\r\n      // 修改插件名称\r\n      \"tz-postcss-px-to-viewport\": {\r\n        unitToConvert: \"px\", // 要转化的单位\r\n        viewportWidth: 750, // UI设计稿的宽度\r\n        unitPrecision: 6, // 转换后的精度，即小数点位数\r\n        propList: [\"*\"], // 指定转换的css属性的单位，*代表全部css属性的单位都进行转换\r\n        viewportUnit: \"vw\", // 指定需要转换成的视窗单位，默认vw\r\n        fontViewportUnit: \"vw\", // 指定字体需要转换成的视窗单位，默认vw\r\n        selectorBlackList: [\"ignore\"], // 指定不转换为视窗单位的类名，\r\n        minPixelValue: 1, // 默认值1，小于或等于1px则不进行转换\r\n        mediaQuery: true, // 是否在媒体查询的css代码中也进行转换，默认false\r\n        replace: true, // 是否转换后直接更换属性值\r\n        exclude: [], // 设置忽略文件，用正则做目录名匹配\r\n        landscape: false, // 是否处理横屏情况\r\n        // 如果没有使用其他的尺寸来设计，下面这个方法可以不需要，比如vant是375的\r\n        customFun: ({ file }) => {\r\n          // 这个自定义的方法是针对处理vant组件下的设计稿为375问题\r\n          const designWidth = path.join(file).includes(path.join(\"node_modules\", \"vant\")) ? 375 : 750;\r\n          return designWidth;\r\n        },\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\n```\r\n\r\n\r\nhttps://github.com/vitejs/vite/issues/4653  多个配置,这将导致插件处理两次，**优点缺点都很明显，具体怎么用，见人见智了**\r\n\r\n```typescript\r\nconst px2viewport = require(\"postcss-px-to-viewport\");\r\nconst autoprefixer = require(\"autoprefixer\");\r\nmodule.exports = () => {\r\n  return {\r\n    plugins: [\r\n      autoprefixer({\r\n        overrideBrowserslist: [\"Android 4.1\", \"iOS 7.1\", \"Chrome > 31\", \"ff > 31\", \"ie >= 8\"],\r\n      }),\r\n      px2viewport({\r\n        unitToConvert: \"px\", // 要转化的单位\r\n        viewportWidth: 375, // UI设计稿的宽度\r\n        unitPrecision: 6, // 转换后的精度，即小数点位数\r\n        propList: [\"*\"], // 指定转换的css属性的单位，*代表全部css属性的单位都进行转换\r\n        viewportUnit: \"vw\", // 指定需要转换成的视窗单位，默认vw\r\n        fontViewportUnit: \"vw\", // 指定字体需要转换成的视窗单位，默认vw\r\n        selectorBlackList: [\"ignore\"], // 指定不转换为视窗单位的类名，\r\n        minPixelValue: 1, // 默认值1，小于或等于1px则不进行转换\r\n        mediaQuery: true, // 是否在媒体查询的css代码中也进行转换，默认false\r\n        replace: true, // 是否转换后直接更换属性值\r\n        exclude: [/^(?!.*node_modules\\/vant)/], // 设置忽略文件，用正则做目录名匹配\r\n        landscape: false, // 是否处理横屏情况\r\n      }),\r\n      px2viewport({\r\n        unitToConvert: \"px\", // 要转化的单位\r\n        viewportWidth: 750, // UI设计稿的宽度\r\n        unitPrecision: 6, // 转换后的精度，即小数点位数\r\n        propList: [\"*\"], // 指定转换的css属性的单位，*代表全部css属性的单位都进行转换\r\n        viewportUnit: \"vw\", // 指定需要转换成的视窗单位，默认vw\r\n        fontViewportUnit: \"vw\", // 指定字体需要转换成的视窗单位，默认vw\r\n        selectorBlackList: [\"ignore\"], // 指定不转换为视窗单位的类名，\r\n        minPixelValue: 1, // 默认值1，小于或等于1px则不进行转换\r\n        mediaQuery: true, // 是否在媒体查询的css代码中也进行转换，默认false\r\n        replace: true, // 是否转换后直接更换属性值\r\n        exclude: [/node_modules\\/vant/i], // 设置忽略文件，用正则做目录名匹配\r\n        landscape: false, // 是否处理横屏情况\r\n      }),\r\n    ],\r\n  };\r\n};\r\n```\r\n",
	"readmeFilename": "README.md",
	"_downloads": 5
}
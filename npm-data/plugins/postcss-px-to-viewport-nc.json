{
	"_id": "postcss-px-to-viewport-nc",
	"_rev": "2-99364ecd0e6db1e3d93fa69dd071ab85",
	"name": "postcss-px-to-viewport-nc",
	"dist-tags": {
		"latest": "0.0.5"
	},
	"versions": {
		"0.0.4": {
			"name": "postcss-px-to-viewport-nc",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "0.0.4",
			"author": {
				"name": "Dmitry Karpunin",
				"email": "koderfunk@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/evanyangg/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/evrone/postcss-px-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": "^4.0.1",
				"postcss": "6.0.2"
			},
			"gitHead": "221c2f70e7be40a1cf76e6b3c6e4ce42ec51c0df",
			"_id": "postcss-px-to-viewport-nc@0.0.4",
			"_npmVersion": "6.1.0",
			"_nodeVersion": "10.4.1",
			"_npmUser": {
				"name": "evanyangg",
				"email": "evanyangg@163.com"
			},
			"dist": {
				"integrity": "sha512-fN8LUxpsWiZx3HL2U9BCIZQlrV/GqepKjctl5slFAxBv1SANGnveEIcpnz/7qYzqzEXo50KzW3hgURKh7AO/xg==",
				"shasum": "4fd6f091eb40b6f8ddd823a8e72a31b89bf0cb2d",
				"tarball": "https://registry.npmjs.org/postcss-px-to-viewport-nc/-/postcss-px-to-viewport-nc-0.0.4.tgz",
				"fileCount": 8,
				"unpackedSize": 11617,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbfmn6CRA9TVsSAnZWagAAk0AP/RGCNi173BpXI/ir8nna\nNnzfxuB3J3Z7ISFP+avY/tOHRmY3Y7PpaqxuwnoiLlW92NEpeMUbYUum18Qh\n1vgTVurJQGTjqk9AAvQoj2Gry2I/LkxxuutHY+AsmpXDjXbyXMbc06SdM4ln\n8KT4IVGYNPlmn1gMWlW4uaGmJqxVLBGn1QgTLpoLKRtf1xrJZoJXzUGOZkBj\nJP9C+CTag7latM2J2PhnFvEvIvaXpWqtShwnxGBspvMvoj5UiH1TJZoj9n+P\nyQXqk/oE3SmxBB0XUFe11ki1ONllgAmGW+6Jo9kLwiNeDwGVBWum97JYNTrH\nvcpXdOc9Pfvhhwga1F9ana/r/KEnoMcTj7eyz0zXbWUOjwjbbp/sD4lB6S6W\nYGjvJINlFQgq/PFWMOlXe7Uee15XXlYewmkddheF44mhmmrBxQIwFvQwgSpD\nq5RX1oGHFjGvDKFz32Rc6/nOwmDNe8bYJJ6e75W/3VyZ89xzJTvclaPhMbar\n6jwBcqYvmZ+Ae2QQD8qgLUUZSR7SaCyYjC8n9x1wjq3X2EYNAJSViMqzExbR\nHxxPzylarPj7oUk0xZT3qG4yKoUZ3mKwBuYegzS/IWMva1E0jBMqgT8B3hSS\njyLEIy1WVKdTcbwmhRcrVZ+0zUUC5SBsg2isr7GxTVYsphU3kRBenDFw+dAT\nQmp4\r\n=rhxu\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDZsohTSThZmoLNDUpaQ9S4I/VsXH60rG6f4RCjFairxwIhAM7Kl5dS1VrtNi4BnOWlcJkkwNsrS6l3P3bRJH3CIhY4"
					}
				]
			},
			"maintainers": [
				{
					"name": "evanyangg",
					"email": "evanyangg@163.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport-nc_0.0.4_1535011322242_0.3370633923192199"
			},
			"_hasShrinkwrap": false
		},
		"0.0.5": {
			"name": "postcss-px-to-viewport-nc",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "0.0.5",
			"author": {
				"name": "Dmitry Karpunin",
				"email": "koderfunk@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/evanyangg/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/evrone/postcss-px-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": "^4.0.1",
				"postcss": "6.0.2"
			},
			"gitHead": "221c2f70e7be40a1cf76e6b3c6e4ce42ec51c0df",
			"_id": "postcss-px-to-viewport-nc@0.0.5",
			"_npmVersion": "6.1.0",
			"_nodeVersion": "10.4.1",
			"_npmUser": {
				"name": "evanyangg",
				"email": "evanyangg@163.com"
			},
			"dist": {
				"integrity": "sha512-CGUI6qmcnWcwQXJJqwg6hFg22jhyeMECvCYicDPweJM4oTnT69zb6HsAAogL+pzCJUGAQt7Z7zls4T1W/Zr0ag==",
				"shasum": "f3ec0015c02a28ee9f4515438ef40874d30757dc",
				"tarball": "https://registry.npmjs.org/postcss-px-to-viewport-nc/-/postcss-px-to-viewport-nc-0.0.5.tgz",
				"fileCount": 8,
				"unpackedSize": 11631,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbfmwuCRA9TVsSAnZWagAAZEsP/0K5dgyxDulQEq5sdtYS\nG1nDf3G+OQZx3WovB+uujGGDTwwmOiPJdzgKyw4c/wme2alKMxUaEX49xRmj\n3m494jwiNLfzousNqbZatCUNpD5U1uXfIpCyLEsSIO/U1Svfw7Fu+3cZEp4I\nqXflW8fuWtJsPaJHC/jQpcG7LgW+Nzmyw5EKdlzj8TejPOy2C6PKUMMLJoLu\nRQ8/vkXFqf9iUxP3unM/IpduNB7DjmmOguynVL587g2tgQs4IAnXK1PzTTFx\nuiCLY7AXtmAVAMvht4xhjv0YoGZy+HcKIvrjZiUVthvsjNNwGRFSBCkapt3K\nQZTl89U9i7acmcGrtuJXb9wXSvDRIoQAoZL9L2nssZnGe0HHyAnCM7fe1cnE\nEmZENLMlm0FRSY/Zat9gD7LtfAsVGjLD1Nm13/38mkEIIafKh6Ak02czpIHQ\ncsgYm0Ll5RUS+zWsXvYoCEWfzh5f879xoSin/fE5AiYCeCWsRG4h+ApT/5bb\nnXA6JJsvVUpIctO013U4ajh4HbO2ahYnDRcVqt1qIbeiOtD00yDHMzy8ug0z\nCcL8luz/P+07DgN28Cy1ks6DSJNi1Xbnq+nvcJOYt+1BOGvSbYCQ6up4pWx7\n12U6Hf2CAW0crP22VU8bfA2migLhHwY8DvJXybbGyLX2f6U7FKfRmksB7dko\n808X\r\n=WpGg\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQChF22p310lo8HB3jq86nQbuGofgJfyFQx21v9s4CUmNQIhAO+tkWL3uEvZgC9QPxtQE2F/ophA5x/w6QHUWwRPN+cb"
					}
				]
			},
			"maintainers": [
				{
					"name": "evanyangg",
					"email": "evanyangg@163.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport-nc_0.0.5_1535011886455_0.40157584362782495"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2018-08-23T08:02:02.242Z",
		"0.0.4": "2018-08-23T08:02:02.316Z",
		"modified": "2022-05-13T06:37:24.459Z",
		"0.0.5": "2018-08-23T08:11:26.555Z"
	},
	"maintainers": [
		{
			"name": "evanyangg",
			"email": "evanyangg@163.com"
		}
	],
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"homepage": "https://github.com/evrone/postcss-px-to-viewport",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/evanyangg/postcss-px-to-viewport.git"
	},
	"author": {
		"name": "Dmitry Karpunin",
		"email": "koderfunk@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
	},
	"license": "MIT",
	"readme": "# postcss-px-to-viewport [![NPM version](https://badge.fury.io/js/postcss-px-to-viewport.svg)](http://badge.fury.io/js/postcss-px-to-viewport)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates viewport units (vw, vh, vmin, vmax) from pixel units.\n\n## Usage\n\nIf your project involves a fixed width, this script will help to convert pixels into viewport units.\n\n### Input/Output\n\n```css\n// input\n\n.class {\n  margin: -10px .5vh;\n  padding: 5vmin 9.5px 1px;\n  border: 3px solid black;\n  border-bottom-width: 1px;\n  font-size: 14px;\n  line-height: 20px;\n}\n\n.class2 {\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 20px;\n  line-height: 30px;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n\n// output\n\n.class {\n  margin: -3.125vw .5vh;\n  padding: 5vmin 2.96875vw 1px;\n  border: 0.9375vw solid black;\n  border-bottom-width: 1px;\n  font-size: 4.375vw;\n  line-height: 6.25vw;\n}\n\n.class2 {\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 6.25vw;\n  line-height: 9.375vw;\n}\n\n@media (min-width: 234.375vw) {\n  .class3 {\n    font-size: 5vw;\n    line-height: 6.875vw;\n  }\n}\n```\n\n### Example\n\n```js\n'use strict';\n\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxToViewport = require('..');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxToViewport(options)).process(css).css;\n\nfs.writeFile('main-viewport.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('File with viewport units written.');\n});\n```\n\n### Options\n\nDefault:\n```js\n{\n  unitToConvert: 'px',\n  viewportWidth: 320,\n  viewportHeight: 568, // not now used; TODO: need for different units and math for different properties\n  unitPrecision: 5,\n  viewportUnit: 'vw',\n  fontViewportUnit: 'vw',  // vmin is more suitable.\n  selectorBlackList: [],\n  minPixelValue: 1,\n  mediaQuery: false\n}\n```\n- `unitToConvert` (String) unit to convert, by default, it is px.\n- `viewportWidth` (Number) The width of the viewport.\n- `viewportHeight` (Number) The height of the viewport.\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `viewportUnit` (String) Expected units.\n- `fontViewportUnit` (String) Expected units for font.\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n\n### Use with gulp-postcss\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar pxtoviewport = require('postcss-px-to-viewport');\n\ngulp.task('css', function () {\n\n    var processors = [\n        pxtoviewport({\n            viewportWidth: 320,\n            viewportUnit: 'vmin'\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 6
}
{
	"_id": "postcss-value-replacer",
	"_rev": "2-8af0e975ecc7304469fff444255911fd",
	"name": "postcss-value-replacer",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-value-replacer",
			"version": "1.0.0",
			"description": "PostCSS plugin to replace CSS values to customized values.",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"variable"
			],
			"author": {
				"name": "2461358597@qq.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/iWuzhi/postcss-value-replacer.git"
			},
			"bugs": {
				"url": "https://github.com/iWuzhi/postcss-value-replacer/issues"
			},
			"homepage": "https://github.com/iWuzhi/postcss-value-replacer",
			"dependencies": {
				"postcss": "^8.2.8"
			},
			"devDependencies": {
				"coveralls": "^2.11.12",
				"eslint": "^3.6.0",
				"eslint-config-airbnb-base": "^11.1.1",
				"eslint-plugin-import": "^2.2.0",
				"jest": "^19.0.2"
			},
			"main": "./lib/index.js",
			"scripts": {
				"test": "jest --coverage && eslint ./lib/*.js",
				"coverage": "jest --no-cache --coverage && cat ./coverage/lcov.info | coveralls"
			},
			"jest": {
				"testRegex": "/test/.*.test.js$",
				"coveragePathIgnorePatterns": [
					"/test/"
				]
			},
			"gitHead": "d04bc26f5a25fc3a927996f018b02640dc4dc642",
			"_id": "postcss-value-replacer@1.0.0",
			"_nodeVersion": "12.14.1",
			"_npmVersion": "6.14.8",
			"dist": {
				"integrity": "sha512-8q5j1YLP8rZLOvV5RDO0GBDWpvY9BM35a4SgPSQH0flkzXPrg0WYv7o1CPqwpnxl2/C3edqHdgqsu5EZ9WhgYQ==",
				"shasum": "d6df6ce7b3d5862a742e9266fcad47e2e48acb91",
				"tarball": "https://registry.npmjs.org/postcss-value-replacer/-/postcss-value-replacer-1.0.0.tgz",
				"fileCount": 19,
				"unpackedSize": 67873,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgTbz5CRA9TVsSAnZWagAArX8P/1DQ3Is/bMPGeAbq8kZD\neqzDf3XDllZ9ovVVt7fErXif2GZe0RAaVz6KM54/pQfoRSr2cygdwykjN4j+\nvudFYIYXt8LnIs2sUq3UsF/rGPf6n4soXSc48fc4nKXbLf5iEtdj6/P5KiB6\ntQR9IRiG13KNgoFuhry6JjnX9xdjRp2Kr1vue1kFtRuKlXryKH84YavTMLF8\nVeL4cc0cEJyj3fzYsb2AaYj9ecte73OpesmYXob8LhhA7tlKEdn69+IrC4ge\n3AU61JYBN1olkYlyssk12OX+yRfDWv9KuW5uL/gyeUatGurVaIli2cUiO2/j\nf17KJ7EiCJIrba1/BMNBj2Gmlx6mn+ZGj2U6AU035GXBF9tnN9PSDi18JAib\nX5kNXiv+d1Vlag8N70yljXJ6rR/6Y84dH7IB7b7LavZAQZ7NlxDe5ohUN3kg\nvt2qWtbHmqEN9YRJWJapKGbBBtjvCmcTjk22moyAu7m8DSHAPpyg60WMDRiu\nwXES7p51DiCflybGUmXL5d6OtTEy04WlBIUQX3d0Pr2JD8Nmh7z0GZTEWbKf\nA+HpVGdxKWJjnErr5MbCbiE1Q9EZCviXAngoJGqoL5sCef39QJb2aE4kD1jj\nY/EU99B4wYx/vHqn0JOnMSmyWhgw8VoXVgOFCrCCJm1Kh0lp7qtIAmvr4uHJ\nbTd3\r\n=ybVD\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCID0zNePV30zb24fcme1Qm2B/ncuSYIy9f50WGImBOi6YAiB5u0r7adJZx+7g9Vcu0vL9U8fuTnVenDPt4QqtNlRdWA=="
					}
				]
			},
			"_npmUser": {
				"name": "yumeiwuzhi",
				"email": "2461358597@qq.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "yumeiwuzhi",
					"email": "2461358597@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-value-replacer_1.0.0_1615707385191_0.4019654210013375"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "postcss-value-replacer",
			"version": "1.0.1",
			"description": "PostCSS plugin to replace CSS values to customized values.",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"variable"
			],
			"author": {
				"name": "2461358597@qq.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/iWuzhi/postcss-value-replacer.git"
			},
			"bugs": {
				"url": "https://github.com/iWuzhi/postcss-value-replacer/issues"
			},
			"homepage": "https://github.com/iWuzhi/postcss-value-replacer",
			"dependencies": {
				"postcss": "^8.2.8"
			},
			"devDependencies": {
				"coveralls": "^2.11.12",
				"eslint": "^3.6.0",
				"eslint-config-airbnb-base": "^11.1.1",
				"eslint-plugin-import": "^2.2.0",
				"jest": "^19.0.2"
			},
			"main": "./lib/index.js",
			"scripts": {
				"test": "jest --coverage && eslint ./lib/*.js",
				"coverage": "jest --no-cache --coverage && cat ./coverage/lcov.info | coveralls"
			},
			"jest": {
				"testRegex": "/test/.*.test.js$",
				"coveragePathIgnorePatterns": [
					"/test/"
				]
			},
			"gitHead": "ce61c6ebc7aee066bb8d3ae5de97b03896ea4b57",
			"_id": "postcss-value-replacer@1.0.1",
			"_nodeVersion": "12.14.1",
			"_npmVersion": "6.14.8",
			"dist": {
				"integrity": "sha512-POiE3dYBiQ5iUwqXhLi/MEHL+AFso5wKgQ14A8HMJvBj0uy/1AV7Z5SppC8KNX9mcvdZkU3Ph33nqyPgvKrM4A==",
				"shasum": "47d4750d66f6810cd6a365b3c85a2a07c60bef7d",
				"tarball": "https://registry.npmjs.org/postcss-value-replacer/-/postcss-value-replacer-1.0.1.tgz",
				"fileCount": 19,
				"unpackedSize": 69722,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgTcKVCRA9TVsSAnZWagAAal0P+QCNlF9R5LLsfp2BJDe6\npo/xTLBiCLJYtvHvwj+wWCMzDRS+RTAwtpiFxOQ+VivcvT4TlG16uwcFaGaF\nSb6xzRFgfxWr5HDIyA778jqJlzhcLZ6DM0BE49Gfl/v+kviSuBFriGUmnxHx\n0FLyXm3KSEamOsjEGKcKCiFBSF9vT6gmFHd9R1Xs5mbGeGu4fohVfefw8710\nYtLYbDUyOPPP4j0jPXvtcyUVSCOP4R78oXk+OoJstKdQnwq2keu7A5rohPTK\nGE8ogglTn3ccDYcQvYalhahVZBMcI0mGxYq7lp4fydqHH4rQGtUaY0Y8X5gk\nTkPcWWNokUcmid4E/3DyLrGpreyQGXBtfPAvWEw+5tJJsJy6lVu+XPDDi3IM\nBdJnwecWP1Cn4sP6VFGgVYrtwyZu1iQ2WtYGey7QDH1bLarNcm6BeuQstcNh\n8+whm7i2vHEou1lif/1pgXTimfac1r9OxqZlQO3s/XJsklE9MAuxK2Fcvrjm\nu39yfOZjRzCWT+qf214qgdhVXeL/y3nDlWAGuMuOH4XKhNlgyJJplNy18Tb9\n5jfKflf8EAR/AMj/ZNTIwru7T8AvwS9sIhpauZ+lACBmtwaDoQzt5sew9esH\nBKeTs3E3jDD207lw6Vv4+fRjqkGKb6hNH4jdehR304NKVwDV4eghOEidMeF6\nRv8K\r\n=E9jk\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQD5Knrm/tNIlEUm7130S+cyaopPO76rBq9/KLz4jUOO3wIgOBSuVGseEHyKOALLoXrljlJYGv/kkVJFzVtvcS4Z2zE="
					}
				]
			},
			"_npmUser": {
				"name": "yumeiwuzhi",
				"email": "2461358597@qq.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "yumeiwuzhi",
					"email": "2461358597@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-value-replacer_1.0.1_1615708820875_0.3554418626570255"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2021-03-14T07:36:25.191Z",
		"1.0.0": "2021-03-14T07:36:25.318Z",
		"modified": "2022-05-13T06:54:07.107Z",
		"1.0.1": "2021-03-14T08:00:20.988Z"
	},
	"maintainers": [
		{
			"name": "yumeiwuzhi",
			"email": "2461358597@qq.com"
		}
	],
	"description": "PostCSS plugin to replace CSS values to customized values.",
	"homepage": "https://github.com/iWuzhi/postcss-value-replacer",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"variable"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/iWuzhi/postcss-value-replacer.git"
	},
	"author": {
		"name": "2461358597@qq.com"
	},
	"bugs": {
		"url": "https://github.com/iWuzhi/postcss-value-replacer/issues"
	},
	"license": "MIT",
	"readme": "# PostCSS Extract Value [![Build Status][ci-img]][ci] [![Coverage Status](https://coveralls.io/repos/github/lutien/postcss-extract-value/badge.svg)](https://coveralls.io/github/lutien/postcss-extract-value)\n\n[PostCSS] plugin to extract values from css properties and put them into variables.\n\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.org/lutien/postcss-extract-value.svg\n[ci]:      https://travis-ci.org/lutien/postcss-extract-value\n\n```css\n.foo {\n     width: 100px;\n     color: #000;\n     margin: 10px;\n}\n.bar {\n     color: #000;\n     margin: 15px;\n}\n```\n\n```css\n:root {\n    --width-1: 100px;\n    --color-1: #000;\n    --margin-1: 10px;\n    --margin-2: 15px;\n}\n.foo {\n    width: var(--width-1);\n    color: var(--color-1);\n    margin: var(--margin-1);\n}\n.bar {\n    color: var(--color-1);\n    margin: var(--margin-2);\n}\n```\n\n## Usage ##\n\n```js\nimport postcssExtractValue from 'postcss-extract-value';\n\npostcss([\n    postcssExtractValue(/* options */),\n    // more plugins...\n])\n```\n\n## Options ##\n\n#### filterByProps ####\n\nType: `array`<br>\nRequired: `false`<br>\nDefault: `[]`\n\nYou can add names of css properties and only from this properties will be extracted values.\n\n#### onlyColor ####\n\nType: `boolean`<br>\nRequired: `false`<br>\nDefault: `false`\n\nIf you set true, only colors (hex, rgb, hsl, color keywords) will be extracted from values.\n\n#### scope ####\n\nType: `string`<br>\nRequired: `false`<br>\nDefault: `:root`\n\nYou can set custom selector, which will contain variables.\n\n#### variableSyntax ####\n\nType: `string`<br>\nRequired: `false`<br>\nDefault: ``\n\nBy default it will be used css variables syntax, other available variants **less** and **sass**.\n\n#### templateVariableName ####\n\nType: `string`<br>\nRequired: `false`<br>\nDefault: ``\n\nYou can set template for variables using special words.\nSee more information below.\n\n\n## Usage templateVariableName ##\n\n### With options _filterByProps_ or without any options by default: ###\n\n#### [propertyName] ####\nName of css property (width, border, etc.).\n\n```js\npostcss([\n    postcssExtractValue({\n        templateVariableName: 'theme[propertyName]'\n    }),\n])\n```\n```css\n.foo {\n     width: 100px;\n}\n```\n\n```css\n:root {\n    --theme-width-1: 100px;\n}\n.foo {\n    width: var(--theme-width-1);\n}\n```\n\n### With options _onlyColor_: ###\n\n#### [colorKeyword] ####\nColor keyword of the nearest color.\n\n#### [tint] ####\nDeviation in the dark or light side from the nearest color. (light\\dark)\n\n ```js\n postcss([\n     postcssExtractValue({\n          templateVariableName: 'theme[tint][colorKeyword]',\n     }),\n ])\n ```\n ```css\n .foo {\n     border: 2px solid #cc0000;\n     color: #ff0000;\n     background-color: rgb(255, 26, 26);\n }\n ```\n\n ```css\n:root {\n    --theme-dark-red-1: #cc0000;\n    --theme-red-1: #ff0000;\n    --theme-light-red-1: rgb(255, 26, 26);\n}\n.foo {\n    border: 2px solid var(--theme-dark-red-1);\n    color: var(--theme-red-1);\n    background-color: var(--theme-light-red-1);\n}\n ```\n \n### Others ###\n\n#### [selectorName] ####\n Name of css selector (className, id, etc.)\n \n ```js\n postcss([\n     postcssExtractValue({\n         templateVariableName: 'theme[selectorName]'\n     }),\n ])\n ```\n ```css\n .foo {\n      width: 100px;\n }\n ```\n \n ```css\n :root {\n     --theme-foo-1: 100px;\n }\n .foo {\n     width: var(--theme-foo-1);\n }\n ```\n\nSee [PostCSS] docs for examples for your environment.\n",
	"readmeFilename": "README.md",
	"_downloads": 11
}
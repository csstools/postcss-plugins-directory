{
	"_id": "postcss-inline-extract",
	"_rev": "2-adf64073307616f228b2196b8704b43b",
	"name": "postcss-inline-extract",
	"dist-tags": {
		"latest": "0.1.1"
	},
	"versions": {
		"0.1.0": {
			"name": "postcss-inline-extract",
			"version": "0.1.0",
			"keywords": [
				"postcss-plugin",
				"css",
				"inline-styles",
				"extract",
				"html",
				"style-attributes"
			],
			"author": {
				"name": "KNOWLEDGECODE"
			},
			"license": "MIT",
			"_id": "postcss-inline-extract@0.1.0",
			"maintainers": [
				{
					"name": "knowledgecode",
					"email": "knowledgecode@gmail.com"
				}
			],
			"homepage": "https://github.com/KNOWLEDGECODE/postcss-inline-extract#readme",
			"bugs": {
				"url": "https://github.com/KNOWLEDGECODE/postcss-inline-extract/issues"
			},
			"dist": {
				"shasum": "9c8633f35c0dca0b7e122171af8d4fb1d56a517c",
				"tarball": "https://registry.npmjs.org/postcss-inline-extract/-/postcss-inline-extract-0.1.0.tgz",
				"fileCount": 6,
				"integrity": "sha512-QT37S7D5XwLVhG7X5fRo2qmgczT8lPgCwj67VqvIDzUnFsS3/PtYpQpQb3wtRMPsyHKV7Ns6Md1ws4AILRLCTA==",
				"signatures": [
					{
						"sig": "MEQCIAl4+aPmX+Hx0jZnM+ztEVopAmns5/bGrDNYVj8wwA8hAiBFy7UkcH6dBuevV7D2FbgMxiHCOD63taPPCCalgKfaiA==",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 12877
			},
			"main": "dist/index.js",
			"type": "commonjs",
			"types": "dist/index.d.ts",
			"gitHead": "cafd60226fca09c58a36b913ed1f53a84eb7ba75",
			"scripts": {
				"lint": "eslint",
				"test": "vitest",
				"build": "rollup -c && tsc",
				"test:run": "vitest run",
				"build-watch": "concurrently --kill-others \"rollup -c --watch\" \"tsc --watch\"",
				"test:coverage": "vitest run --coverage",
				"prepublishOnly": "npm run build"
			},
			"_npmUser": {
				"name": "knowledgecode",
				"email": "knowledgecode@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/KNOWLEDGECODE/postcss-inline-extract.git",
				"type": "git"
			},
			"_npmVersion": "11.5.2",
			"description": "PostCSS plugin to extract inline styles from HTML and convert them to CSS rules",
			"directories": {},
			"_nodeVersion": "24.4.1",
			"dependencies": {
				"node-html-parser": "^7.0.1"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"eslint": "^9.33.0",
				"rollup": "^4.46.3",
				"vitest": "^3.2.4",
				"postcss": "^8.5.6",
				"typescript": "^5.9.2",
				"concurrently": "^9.2.0",
				"typescript-eslint": "^8.40.0",
				"@vitest/coverage-v8": "^3.2.4",
				"rollup-plugin-esbuild": "^6.2.1"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-inline-extract_0.1.0_1755663134209_0.6624913038195619",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.1.1": {
			"name": "postcss-inline-extract",
			"version": "0.1.1",
			"description": "PostCSS plugin to extract inline styles from HTML and convert them to CSS rules",
			"keywords": [
				"postcss-plugin",
				"css",
				"inline-styles",
				"extract",
				"html",
				"style-attributes"
			],
			"license": "MIT",
			"author": {
				"name": "KNOWLEDGECODE"
			},
			"homepage": "https://github.com/KNOWLEDGECODE/postcss-inline-extract#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/KNOWLEDGECODE/postcss-inline-extract.git"
			},
			"bugs": {
				"url": "https://github.com/KNOWLEDGECODE/postcss-inline-extract/issues"
			},
			"main": "dist/index.js",
			"types": "dist/index.d.ts",
			"type": "commonjs",
			"scripts": {
				"build": "rollup -c",
				"build-watch": "rollup -c -w",
				"lint": "eslint",
				"prepublishOnly": "npm run build",
				"test": "vitest run",
				"test:coverage": "vitest run --coverage"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"dependencies": {
				"node-html-parser": "^7.0.1"
			},
			"devDependencies": {
				"@vitest/coverage-v8": "^3.2.4",
				"eslint": "^9.34.0",
				"postcss": "^8.5.6",
				"rollup": "^4.48.1",
				"rollup-plugin-dts": "^6.2.3",
				"rollup-plugin-esbuild": "^6.2.1",
				"rollup-plugin-license": "^3.6.0",
				"typescript-eslint": "^8.41.0",
				"vitest": "^3.2.4"
			},
			"_id": "postcss-inline-extract@0.1.1",
			"gitHead": "65b16cd9ed7e92535faa4c66cc7c86a7fc6cc4a3",
			"_nodeVersion": "24.6.0",
			"_npmVersion": "11.5.2",
			"dist": {
				"integrity": "sha512-XOaWrAtVb7GeFX5tDvnONNGWvCa5LiJ5YdGa22xKZYm0dcEa9Omxoe3gH0EHq9j5IkEY2petwaRb7kOKkfK5MQ==",
				"shasum": "c70128bab6cfe63ee37f52910abc377f837f7991",
				"tarball": "https://registry.npmjs.org/postcss-inline-extract/-/postcss-inline-extract-0.1.1.tgz",
				"fileCount": 5,
				"unpackedSize": 12150,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIQC6zHe6t7TjS25UEq8Z800n30vHSe8yDDsUaiWtodVdvgIgRQjuNAlnzzYR1F0ul8lbllt70wsWYsg16hKJ4No7sPE="
					}
				]
			},
			"_npmUser": {
				"name": "knowledgecode",
				"email": "knowledgecode@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "knowledgecode",
					"email": "knowledgecode@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-inline-extract_0.1.1_1756192986163_0.5576471043054099"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-08-20T04:12:14.208Z",
		"modified": "2025-08-26T07:23:06.532Z",
		"0.1.0": "2025-08-20T04:12:14.403Z",
		"0.1.1": "2025-08-26T07:23:06.365Z"
	},
	"bugs": {
		"url": "https://github.com/KNOWLEDGECODE/postcss-inline-extract/issues"
	},
	"author": {
		"name": "KNOWLEDGECODE"
	},
	"license": "MIT",
	"homepage": "https://github.com/KNOWLEDGECODE/postcss-inline-extract#readme",
	"keywords": [
		"postcss-plugin",
		"css",
		"inline-styles",
		"extract",
		"html",
		"style-attributes"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/KNOWLEDGECODE/postcss-inline-extract.git"
	},
	"description": "PostCSS plugin to extract inline styles from HTML and convert them to CSS rules",
	"maintainers": [
		{
			"name": "knowledgecode",
			"email": "knowledgecode@gmail.com"
		}
	],
	"readme": "# PostCSS Inline Extract\n\n[<img src=\"https://postcss.org/logo.svg\" alt=\"PostCSS Logo\" width=\"90\" height=\"90\" align=\"right\">][PostCSS]\n\n[![CI](https://github.com/knowledgecode/postcss-inline-extract/actions/workflows/ci.yml/badge.svg)](https://github.com/knowledgecode/postcss-inline-extract/actions/workflows/ci.yml)\n[![npm](https://img.shields.io/npm/v/postcss-inline-extract)](https://www.npmjs.com/package/postcss-inline-extract)\n\n[PostCSS] plugin to extract inline styles from HTML and convert them to CSS rules.\n\nThis plugin helps you extract `style` attributes from HTML elements and convert them into structured CSS rules with customizable selectors.\n\n```css\n/* Input CSS (empty or existing styles) */\n\n/* HTML input with inline styles */\n<div style=\"color: red; margin: 10px;\" class=\"button\">Click me</div>\n<span style=\"font-size: 14px;\" id=\"text\">Hello</span>\n```\n\n```css\n/* Output CSS */\n.button {\n  color: red;\n  margin: 10px;\n}\n\n#text {\n  font-size: 14px;\n}\n```\n\n## Features\n\n- Extract inline styles from HTML `style` attributes\n- Multiple selector generation strategies (class, id, hash)\n- Optional extraction from `<style>` tags\n- Automatic property merging for duplicate selectors\n- TypeScript support with full type definitions\n- Fast and lightweight with minimal dependencies\n\n## Installation\n\n```bash\nnpm install --save-dev postcss postcss-inline-extract\n```\n\n## Usage\n\n### Basic Usage\n\n```javascript\nconst postcss = require('postcss');\nconst inlineExtract = require('postcss-inline-extract');\n\nconst html = `\n  <div style=\"color: red; margin: 10px;\" class=\"button\">Click me</div>\n  <span style=\"font-size: 14px;\" class=\"text\">Hello</span>\n`;\n\npostcss([\n  inlineExtract({ html })\n])\n  .process('', { from: undefined })\n  .then(result => {\n    console.log(result.css);\n    /*\n    .button {\n      color: red;\n      margin: 10px;\n    }\n    .text {\n      font-size: 14px;\n    }\n    */\n  });\n```\n\n### With PostCSS Configuration\n\n```javascript\n// postcss.config.js\nmodule.exports = {\n  plugins: [\n    require('postcss-inline-extract')({\n      html: require('fs').readFileSync('src/index.html', 'utf8')\n    })\n  ]\n};\n```\n\n## Options\n\n### `html` (required)\n\nType: `string`\n\nThe HTML content to extract inline styles from.\n\n```javascript\ninlineExtract({\n  html: '<div style=\"color: red;\" class=\"button\">Click me</div>'\n})\n```\n\n### `selector`\n\nType: `'class' | 'id' | 'hash' | Array<'class' | 'id' | 'hash'>`  \nDefault: `'class'`\n\nStrategy for generating CSS selectors:\n\n- `'class'`: Use existing `class` attribute (`.className`). Elements without a `class` attribute will be ignored.\n- `'id'`: Use existing `id` attribute (`#idName`). Elements without an `id` attribute will be ignored.\n- `'hash'`: Generate random hash selectors (`.abc123`) for all elements with inline styles.\n\n```javascript\n// Use class attributes\ninlineExtract({\n  html: htmlContent,\n  selector: 'class'\n})\n\n// Use ID attributes\ninlineExtract({\n  html: htmlContent,\n  selector: 'id'\n})\n\n// Priority order: try class first, then id\ninlineExtract({\n  html: htmlContent,\n  selector: ['class', 'id']\n})\n```\n\n### `styleTags`\n\nType: `boolean`  \nDefault: `false`\n\nWhether to also extract CSS from `<style>` tags in the HTML.\n\n```javascript\ninlineExtract({\n  html: `\n    <style>\n      .existing { margin: 20px; }\n    </style>\n    <div style=\"color: red;\" class=\"button\">Click me</div>\n  `,\n  styleTags: true\n})\n```\n\n### `indent`\n\nType: `number`  \nDefault: `2`\n\nNumber of spaces for CSS indentation.\n\n```javascript\ninlineExtract({\n  html: htmlContent,\n  indent: 4\n})\n```\n\n## Examples\n\n### Multiple Classes (Compound Selectors)\n\n```html\n<div style=\"color: blue; padding: 15px;\" class=\"button primary large\">\n  Submit Button\n</div>\n```\n\n```css\n/* Output: Creates compound selector from multiple classes */\n.button.primary.large {\n  color: blue;\n  padding: 15px;\n}\n```\n\n### Multiple Elements with Same Class\n\n```html\n<div style=\"color: red;\" class=\"button\">Button 1</div>\n<div style=\"margin: 10px;\" class=\"button\">Button 2</div>\n```\n\n```css\n/* Output: Properties are automatically merged */\n.button {\n  color: red;\n  margin: 10px;\n}\n```\n\n### Hash Selector Generation\n\n```html\n<div style=\"color: blue;\">No class or ID</div>\n```\n\n```javascript\ninlineExtract({\n  html: htmlContent,\n  selector: 'hash'\n})\n```\n\n```css\n/* Output: Random hash selector */\n.a1b2c3 {\n  color: blue;\n}\n```\n\n## TypeScript Support\n\nThis plugin includes full TypeScript definitions:\n\n```typescript\nimport postcss from 'postcss';\nimport inlineExtract, { PluginOptions, SelectorType } from 'postcss-inline-extract';\n\nconst options: PluginOptions = {\n  html: '<div style=\"color: red;\" class=\"button\">Click me</div>',\n  selector: 'class' as SelectorType,\n  styleTags: false,\n  indent: 2\n};\n\nconst processor = postcss([inlineExtract(options)]);\n```\n\n## License\n\n[MIT License](LICENSE)\n\n[PostCSS]: https://github.com/postcss/postcss\n",
	"readmeFilename": "README.md",
	"_downloads": 151
}
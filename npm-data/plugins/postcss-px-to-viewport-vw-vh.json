{
	"_id": "postcss-px-to-viewport-vw-vh",
	"name": "postcss-px-to-viewport-vw-vh",
	"dist-tags": {
		"latest": "0.0.1"
	},
	"versions": {
		"0.0.1": {
			"name": "postcss-px-to-viewport-vw-vh",
			"version": "0.0.1",
			"main": "lib/index.js",
			"module": "lib/index.js",
			"typings": "lib/index.d.ts",
			"description": "css-vw",
			"scripts": {
				"build": "father build",
				"prettier": "prettier --write '**/*.{js,jsx,tsx,ts,less,md,json}'",
				"test": "jest spec/*.spec.js"
			},
			"lint-staged": {
				"*.{js,jsx,less,md,json}": [
					"prettier --write",
					"git add"
				]
			},
			"devDependencies": {
				"@types/jest": "^25.1.3",
				"@types/node": "^13.7.7",
				"@types/object-assign": "^4.0.30",
				"father": "^4.1.3",
				"father-build": "^1.17.2",
				"jest": "^25.4.0",
				"lint-staged": "^10.0.8",
				"postcss": "^8.3.8",
				"prettier": "^1.19.1",
				"ts-jest": "^29.0.5",
				"yorkie": "^2.0.0"
			},
			"gitHooks": {
				"pre-commit": "lint-staged"
			},
			"dependencies": {
				"object-assign": "^4.1.1"
			},
			"directories": {
				"example": "example"
			},
			"keywords": [
				"postcss-px-to-viewport-vw-vh",
				"viewport",
				"postcss",
				"postcss-plugin",
				"css",
				"px",
				"vw",
				"vh",
				"vmin",
				"vmax"
			],
			"author": {
				"name": "loey"
			},
			"license": "MIT",
			"_id": "postcss-px-to-viewport-vw-vh@0.0.1",
			"gitHead": "be8d2e324db203b491234928ebd7a0d23d855e6e",
			"_nodeVersion": "18.20.2",
			"_npmVersion": "10.5.0",
			"dist": {
				"integrity": "sha512-ZaUNrBGIb0CtvBKBpNBc60wRgmRt/0lBvsgm/WiHPK+6UxeVk54Q7R0A85kPojsoiU/PuvbGZt8PJj0hog917w==",
				"shasum": "3cb26236f79d6c64b52f3b88981bd58cb4983a9c",
				"tarball": "https://registry.npmjs.org/postcss-px-to-viewport-vw-vh/-/postcss-px-to-viewport-vw-vh-0.0.1.tgz",
				"fileCount": 12,
				"unpackedSize": 28131,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIQCbm0TMLqevqOrz0ffXilG6Ij4X5UDNE6hCDvGtveiI+wIgHtRzpcOdtRa16vPIjI2imyZoPVheNfiZad/rhP1b2bg="
					}
				]
			},
			"_npmUser": {
				"name": "loey_shxy",
				"email": "loey.shxy@gmail.com"
			},
			"maintainers": [
				{
					"name": "loey_shxy",
					"email": "loey.shxy@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-px-to-viewport-vw-vh_0.0.1_1753237875929_0.5841777559637908"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-07-23T02:31:15.928Z",
		"0.0.1": "2025-07-23T02:31:16.106Z",
		"modified": "2025-07-23T02:31:16.416Z"
	},
	"maintainers": [
		{
			"name": "loey_shxy",
			"email": "loey.shxy@gmail.com"
		}
	],
	"description": "css-vw",
	"keywords": [
		"postcss-px-to-viewport-vw-vh",
		"viewport",
		"postcss",
		"postcss-plugin",
		"css",
		"px",
		"vw",
		"vh",
		"vmin",
		"vmax"
	],
	"author": {
		"name": "loey"
	},
	"license": "MIT",
	"readme": "# postcss-px-to-viewport-vw-vh\n\n将 px 单位转换为视口单位的 (vw, vh, vmin, vmax) 的 [PostCSS](https://github.com/postcss/postcss) 插件.\n\n## 问题\n\n使用 [postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport) 控制台报以下代码\n\n```js\npostcss-px-to-viewport: postcss.plugin was deprecated. Migration guide: https://evilmartians.com/chronicles/postcss-8-plugin-migration\n\n```\n\n## 解决\n\n`postcss-px-to-viewport` 替换 `postcss-px-to-viewport-vw-vh`\n\n注意对应库版本\n\n```js\n  \"postcss\": \"^8.3.8\", // 8.0.0版本都不会转单位\n  \"postcss-loader\": \"^6.1.1\",\n```\n\n## 简介\n\n如果你的样式需要做根据视口大小来调整宽度，这个脚本可以将你 CSS 中的 px 单位转化为 vw，1vw 等于 1/100 视口宽度。\n\n## 输入\n\n```css\n.class {\n  margin: -10px 0.5vh;\n  padding: 5vmin 9.5px 1px;\n  border: 3px solid black;\n  border-bottom-width: 1px;\n  font-size: 14px;\n  line-height: 20px;\n  height: 100px;\n}\n\n.class2 {\n  padding-top: 10px; /* px-to-viewport-ignore */\n  /* px-to-viewport-ignore-next */\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  margin-top: 5px;\n  font-size: 20px;\n  line-height: 30px;\n  min-height: 50px;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n    height: 80px;\n  }\n}\n```\n\n## 输出\n\n```css\n.class {\n  margin: -3.125vw 0.5vh;\n  padding: 5vmin 2.96875vw 1px;\n  border: 0.9375vw solid black;\n  border-bottom-width: 1px;\n  font-size: 4.375vw;\n  line-height: 6.25vw;\n  height: 17.60563vh;\n}\n\n.class2 {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 0.17606vh;\n  margin-top: 0.88028vh;\n  font-size: 6.25vw;\n  line-height: 9.375vw;\n  min-height: 8.80282vh;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n    height: 80px;\n  }\n}\n```\n\n## 安装\n\n```js\n\nnpm install postcss-px-to-viewport-vw-vh -D\nor\nyarn add postcss-px-to-viewport-vw-vh -D\n```\n\n## 配置参数使用与 [postcss-px-to-viewport](https://www.npmjs.com/package/postcss-px-to-viewport) 一致\n\n**默认选项：**\n\n```js\n{\n  unitToConvert: 'px',\n  viewportWidth: 320,\n  viewportHeight: 568,\n  unitPrecision: 5,\n  propList: ['*'],\n  viewportUnit: 'vw',\n  fontViewportUnit: 'vw',\n  heightViewportUnit: 'vh',\n  heightPropList: ['height', 'min-height', 'max-height', 'padding-top', 'padding-bottom', 'margin-top', 'margin-bottom'],\n  selectorBlackList: [],\n  minPixelValue: 1,\n  mediaQuery: false,\n  replace: true,\n  exclude: [],\n  landscape: false,\n  landscapeUnit: 'vw',\n  landscapeWidth: 568\n}\n```\n\n## API 说明\n\n| 参数 | 说明 | 类型 | 默认值 |\n| :-- | --- | --- | --- |\n| `unitToConvert` | 需要转换的单位，默认为 px | `string` | px |\n| `viewportWidth` | 设计稿的视口宽度,如传入函数，函数的参数为当前处理的文件路径,函数返回 `undefind` 跳过转换 | `number \\| Function` | 320 |\n| `viewportHeight` | 设计稿的视口高度,如传入函数，函数的参数为当前处理的文件路径,函数返回 `undefind` 跳过转换 | `number \\| Function` | 568 |\n| `unitPrecision` | 单位转换后保留的精度 | `number` | 5 |\n| `propList` | 能转化为 vw 的属性列表 | `string[]` | ['*'] |\n| `viewportUnit` | 希望使用的视口单位 | `string` | vw |\n| `fontViewportUnit` | 字体使用的视口单位 | `string` | vw |\n| `heightViewportUnit` | 高度相关属性使用的视口单位 | `string` | vh |\n| `heightPropList` | 高度相关属性列表，这些属性将使用 heightViewportUnit 进行转换 | `string[]` | ['height', 'min-height', 'max-height', 'padding-top', 'padding-bottom', 'margin-top', 'margin-bottom'] |\n| `selectorBlackList` | 需要忽略的 CSS 选择器，不会转为视口单位，使用原有的 px 等单位 | `string[]` | [] |\n| `minPixelValue` | 设置最小的转换数值，如果为 1 的话，只有大于 1 的值会被转换 | `number` | 1 |\n| `mediaQuery` | 媒体查询里的单位是否需要转换单位 | `boolean` | false |\n| `replace` | 是否直接更换属性值，而不添加备用属性 | `boolean` | true |\n| `landscape` | 是否添加根据 `landscapeWidth` 生成的媒体查询条件 `@media (orientation: landscape)` | `boolean` | false |\n| `landscapeUnit` | 横屏时使用的单位 | `string` | vw |\n| `landscapeWidth` | 横屏时使用的视口宽度,,如传入函数，函数的参数为当前处理的文件路径,函数返回 `undefind` 跳过转换 | `number` | 568 |\n| `exclude` | 忽略某些文件夹下的文件或特定文件，例如 node_modules 下的文件，如果值是一个正则表达式，那么匹配这个正则的文件会被忽略，如果传入的值是一个数组，那么数组里的值必须为正则 | `Regexp` | undefined |\n| `include` | 需要转换的文件，例如只转换 'src/mobile' 下的文件 (`include: /\\/src\\/mobile\\//`)，如果值是一个正则表达式，将包含匹配的文件，否则将排除该文件， 如果传入的值是一个数组，那么数组里的值必须为正则 | `Regexp` | undefined |\n\n## 补充说明\n\n- `propList` (Array) 能转化为 vw 的属性列表\n  - 传入特定的 CSS 属性；\n  - 可以传入通配符\"_\"去匹配所有属性，例如：['_']；\n  - 在属性的前或后添加\"*\",可以匹配特定的属性. (例如['*position\\*'] 会匹配 background-position-y)\n  - 在特定属性前加 \"!\"，将不转换该属性的单位 . 例如: ['*', '!letter-spacing']，将不转换 letter-spacing\n  - \"!\" 和 \"_\"可以组合使用， 例如: ['_', '!font\\*']，将不转换 font-size 以及 font-weight 等属性\n- `selectorBlackList` (Array) 需要忽略的 CSS 选择器，不会转为视口单位，使用原有的 px 等单位。\n\n  - 如果传入的值为字符串的话，只要选择器中含有传入值就会被匹配\n    - 例如 `selectorBlackList` 为 `['body']` 的话， 那么 `.body-class` 就会被忽略\n  - 如果传入的值为正则表达式的话，那么就会依据 CSS 选择器是否匹配该正则\n    - 例如 `selectorBlackList` 为 `[/^body$/]` , 那么 `body` 会被忽略，而 `.body` 不会\n\n- 你可以使用特殊的注释来忽略单行的转换:\n\n  - `/* px-to-viewport-ignore-next */` — 在单独的行上，防止在下一行上进行转换。\n  - `/* px-to-viewport-ignore */` — 在右边的属性之后，防止在同一行上进行转换。\n\nExample:\n\n```css\n/* example input: */\n.class {\n  /* px-to-viewport-ignore-next */\n  width: 10px;\n  padding: 10px;\n  height: 10px; /* px-to-viewport-ignore */\n  border: solid 2px #000; /* px-to-viewport-ignore */\n}\n\n/* example output: */\n.class {\n  width: 10px;\n  padding: 3.125vw;\n  height: 10px;\n  border: solid 2px #000;\n}\n```\n\nThere are several more reasons why your pixels may not convert, the following options may affect this: `propList`, `selectorBlackList`, `minPixelValue`, `mediaQuery`, `exclude`, `include`.\n\n## 与 PostCss 配置文件一起使用\n\n**在`postcss.config.js`文件添加如下配置**\n\n```js\nmodule.exports = {\n  plugins: {\n    ...\n    'postcss-px-to-viewport-vw-vh': {\n      viewportWidth: 1920,\n      exclude: [/node_modules/],\n      unitToConvert: 'px',\n      ...\n    }\n  }\n}\n```\n\n## vite 使用\n\n**在`vite.config.ts`文件添加如下配置**\n\n```ts\nimport { defineConfig } from 'vite';\nimport postcsspxtoviewport8plugin from 'postcss-px-to-viewport-vw-vh';\n\nexport default defineConfig({\n  css: {\n    postcss: {\n      plugins: [\n        postcsspxtoviewport8plugin({\n          unitToConvert: 'px',\n          viewportWidth: file => {\n            let num = 1920;\n            if (file.indexOf('m_') !== -1) {\n              num = 375;\n            }\n            return num;\n          },\n          unitPrecision: 5, // 单位转换后保留的精度\n          propList: ['*'], // 能转化为vw的属性列表\n          viewportUnit: 'vw', // 希望使用的视口单位\n          fontViewportUnit: 'vw', // 字体使用的视口单位\n          selectorBlackList: [], // 需要忽略的CSS选择器，不会转为视口单位，使用原有的px等单位。\n          minPixelValue: 1, // 设置最小的转换数值，如果为1的话，只有大于1的值会被转换\n          mediaQuery: true, // 媒体查询里的单位是否需要转换单位\n          replace: true, //  是否直接更换属性值，而不添加备用属性\n          exclude: [/node_modules\\/ant-design-vue/], // 忽略某些文件夹下的文件或特定文件，例如 'node_modules' 下的文件\n          include: [], // 如果设置了include，那将只有匹配到的文件才会被转换\n          landscape: false, // 是否添加根据 landscapeWidth 生成的媒体查询条件 @media (orientation: landscape)\n          landscapeUnit: 'vw', // 横屏时使用的单位\n          landscapeWidth: 1024, // 横屏时使用的视口宽度\n        }),\n      ],\n    },\n  },\n});\n```",
	"readmeFilename": "README.md",
	"_rev": "1-b3bc7b02cc93097b8e03ff4bf321e80e",
	"_downloads": 3
}
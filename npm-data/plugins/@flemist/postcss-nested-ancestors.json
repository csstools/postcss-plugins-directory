{
	"_id": "@flemist/postcss-nested-ancestors",
	"name": "@flemist/postcss-nested-ancestors",
	"dist-tags": {
		"latest": "3.0.0"
	},
	"versions": {
		"3.0.0": {
			"name": "@flemist/postcss-nested-ancestors",
			"version": "3.0.0",
			"description": "PostCSS plugin to reference any ancestor selector in nested CSS",
			"engines": {
				"node": ">=v12.22.12"
			},
			"publishConfig": {
				"access": "public"
			},
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"ancestor",
				"grandparent",
				"selector",
				"postcss-nested"
			],
			"author": {
				"name": "Andrea Carraro",
				"email": "me@andreacarraro.it"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/toomuchdesign/postcss-nested-ancestors.git"
			},
			"bugs": {
				"url": "https://github.com/toomuchdesign/postcss-nested-ancestors/issues"
			},
			"homepage": "https://github.com/toomuchdesign/postcss-nested-ancestors",
			"dependencies": {
				"escape-string-regexp": "^4.0.0",
				"postcss-resolve-nested-selector": "^0.1.1"
			},
			"devDependencies": {
				"ava": "^4.3.1",
				"nyc": "^15.1.0",
				"postcss": "^8.4.13",
				"prettier": "^2.7.1"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"scripts": {
				"test": "nyc --reporter=lcov ava",
				"prepare_": "npm run prettier:check && npm test",
				"version": "git add package.json",
				"postversion": "git push && git push --tags",
				"prettier:fix": "prettier --write .",
				"prettier:check": "prettier --check ."
			},
			"gitHead": "b315e8885eb56f1e0a206b8cbb814110d3090541",
			"_id": "@flemist/postcss-nested-ancestors@3.0.0",
			"_nodeVersion": "16.15.1",
			"_npmVersion": "8.11.0",
			"dist": {
				"integrity": "sha512-BIKyhJwdj8obZUueaqYipYAUDPbxktpXAh/KCnZnhIOpyVwr1YV9F152vDRVi+BxcP+JdpadwpRpfkhIwwHEtw==",
				"shasum": "e24753fd76095e7c0d86f85e4e2c1f5a203c3a68",
				"tarball": "https://registry.npmjs.org/@flemist/postcss-nested-ancestors/-/postcss-nested-ancestors-3.0.0.tgz",
				"fileCount": 4,
				"unpackedSize": 16317,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCICkM3uiqoPGnEdQBC4AQkvQELQa9lW/hqx7orieL7bA6AiEA3NzN+HRTtE3XLBnxVciSrddNc7u3a0SXeubEu2Vjelo="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjK94LACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqnWA//U2SZl1eE6HWQHgb8vPJ2FBGXY2ha3bkF53CzRrTbiDCYk+bn\r\nKKyDztwy3Zw9z9MVc1yDD0SHJ7fa5HPCJH9RRMjiMkx5Tc2IPDvQI7q6TRE2\r\nFBbbmZJ8v9e36gpeMgP8hpFYLNpt0I1aqfxspN2JdDEe9uhfMitMehEfxuqs\r\nIoiFsn4cbtZ+rJdvxhd/iL6feFHefCXa9snqfxf2+7KA0bCLMlEHazYDDlDL\r\nX3XYBM7xZQUpvFN6zjOImZHTKoBE14e0aVWKyjKMjQ2HzVEcuqpuV+421bjl\r\n0+lEyGB2yC1ANs10FnF18LEukSMIfo8+zojoNP0kbJUKIvSVvBbyEhlLHDNg\r\nO2pFUEp0jyIMnCNtt0iW/lAz3PRZRfLdorVfQPxLFbTKd9HCg++J76LjiV8V\r\nKHlRH0cjSmBQDF0ysV/ScQc6Vcvi+lA0eJqqWz10uwHWi/bu0jBCAq5Dl2gp\r\nfrvXXB8Q7v9+BsYqlQKidX1A0GKmcMuBwfaf1B8P81Vd2iD8D42voHXaf5PD\r\nQzDVYiDTq7MecK0Y0DShNDlfijxbfZ3uGxLdESB6TBnvmQ9+cIi86UMLCxuF\r\nbNt6/hnuRH7wdpcAso3DXj+Tlr2n/+TDBjGeFrEF98P6tTR5OONWazzZicJu\r\nYB/GLdIWAS6mlYJ1YkClXF8nrgZ9+rgPzAM=\r\n=8NJ4\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "nikolay_makhonin",
				"email": "nikolay.makhonin@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "nikolay_makhonin",
					"email": "nikolay.makhonin@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-nested-ancestors_3.0.0_1663819275304_0.49275250714764307"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2022-09-22T04:01:15.246Z",
		"3.0.0": "2022-09-22T04:01:15.444Z",
		"modified": "2022-09-22T04:01:15.670Z"
	},
	"maintainers": [
		{
			"name": "nikolay_makhonin",
			"email": "nikolay.makhonin@gmail.com"
		}
	],
	"description": "PostCSS plugin to reference any ancestor selector in nested CSS",
	"homepage": "https://github.com/toomuchdesign/postcss-nested-ancestors",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"ancestor",
		"grandparent",
		"selector",
		"postcss-nested"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/toomuchdesign/postcss-nested-ancestors.git"
	},
	"author": {
		"name": "Andrea Carraro",
		"email": "me@andreacarraro.it"
	},
	"bugs": {
		"url": "https://github.com/toomuchdesign/postcss-nested-ancestors/issues"
	},
	"license": "MIT",
	"readme": "# PostCSS Nested ancestors\n\n[![Build status][ci-badge]][ci]\n[![Npm version][npm-version-badge]][npm]\n[![Test coverage report][coveralls-badge]][coveralls]\n\n[PostCSS] plugin to reference any parent ancestor selector in nested CSS.\n\n## Getting ancestor selectors\n\nWhen writing modular nested CSS, `&` current parent selector is often not enough.\n\n**PostCSS Nested ancestors** introduces `^&` selector which let you reference **any parent ancestor selector** with an easy and customizable interface.\n\nThis plugin should be used **before** a PostCSS rules unwrapper like [postcss-nested].\n\nSee [PostCSS] docs for examples for your environment.\n\n### Ancestor selectors schema\n\n```\n    .level-1 {\n|   |   .level-2 {\n|   |   |   .level-3 {\n|   |   |   |   .level-4 {\n|   |   |   |   |\n|   |   |   |   --- & {}        /*      & = \".level-1 .level-2 .level-3 .level-4\" */\n|   |   |   ------- ^& {}       /*     ^& = \".level-1 .level-2 .level-3\"          */\n|   |   ----------- ^^& {}      /*    ^^& = \".level-1 .level-2\"                   */\n|   --------------- ^^^& {}     /*   ^^^& = \".level-1\"                            */\n------------------- ^^^^& {}    /*  ^^^^& = \"\"                                    */\n                }\n            }\n        }\n    }\n```\n\n### A real example\n\n```css\n/* Without postcss-nested-ancestors */\n.MyComponent\n    &-part{}\n    &:hover {\n        > .MyComponent-part {} /* Must manually repeat \".MyComponent\" for each child */\n    }\n}\n\n/* With postcss-nested-ancestors */\n.MyComponent\n    &-part{}\n    &:hover {\n        > ^&-part {} /* Skip \":hover\" inheritance here */\n    }\n}\n\n/* After postcss-nested-ancestors */\n.MyComponent {\n    &-part{}\n    &:hover {\n        > .MyComponent-part {}\n}\n\n/* After postcss-nested */\n.MyComponent {}\n.MyComponent-part {}\n.MyComponent:hover {}\n.MyComponent:hover > .MyComponent-part {} /* No \":hover\" inheritance here! */\n\n```\n\n## Why?\n\nCurrently another plugin - [postcss-current-selector] - has tried to solve the problem of referencing ancestors selector. It works great, but its approach involves assigning ancestor selectors to special variables to be later processed by a further postcss plugin [postcss-simple-vars].\n\n**PostCSS Nested ancestors** instead replaces special ancestor selectors, makes no use of variable assignment and produces an output ready to be unwrapped with [postcss-nested].\n\n## Installation\n\n```console\n$ npm install --save-dev postcss postcss-nested-ancestors\n```\n\n## Usage\n\n```js\npostcss([require('postcss-nested-ancestors')]);\n```\n\n## Options\n\n### placeholder\n\nType: `string`\nDefault: `^&`\n\nAncestor selector pattern (utility option to automatically set both `levelSymbol` and `parentSymbol`)\n\n### levelSymbol\n\nType: `string`\nDefault: `^`\n\nDefine ancestor selector fragment relative to the matching nesting level\n\n### parentSymbol\n\nType: `string`\nDefault: `&`\n\nAncestor selector base symbol\n\n### replaceDeclarations (experimental)\n\nType: `boolean`\nDefault: `false`\n\nIf this is true then this plugin will look through your declaration values for the placeholder symbol and replace them with specified selector.\n\nAn use case for this if enabling [postcss-ref](https://github.com/morishitter/postcss-ref) to work with dynamic `@ref` selectors. Read discussion [here](https://github.com/toomuchdesign/postcss-nested-ancestors/pull/3).\n\n```css\n/* Before */\n.foo {\n  &:last-child {\n    border-top: ref(^&, border-bottom);\n  }\n}\n\n/* After PostCSS Nested ancestors and PostCSS Nested */\n.foo {\n}\n\n.foo:last-child {\n  border-top: ref(.foo, border-bottom);\n}\n```\n\n## Known issues\n\n### Multiple ancestor placeholders in same selector\n\nThis plugin currently fails when trying to replace **more than one different ancestor placeholder in a single rule selector**. This scenario has not been considered in order to not bloat the code with a remote use case.\n\nMore precisely, all ancestor placeholders are replaced, but processed as if they where the equal to the first ancestor placeholder found in selector.\n\nIn general, **do not use more than one ancestor placeholder in a single rule selector**. Anyway, this use case can be rewritten by **splitting the selectors in multiple nested rules** (see edge case 2).\n\n#### Edge case 1 (success)\n\n```css\n/* 2 equal ancestor placeholders in single rule selector */\n.a {\n  &:hover {\n    ^&^&-b {\n    }\n  }\n}\n\n/* Output: It works but casts a warning */\n.a {\n  &:hover {\n    .a.a-b {\n    }\n  }\n}\n```\n\n#### Edge case 2 (failing)\n\n```css\n/* 2 different ancestor placeholders in single rule selector */\n.a {\n  &-b {\n    &:hover {\n      /* Will be processed as ^&^&-c{}, sorry! */\n      ^&^^&-c {\n      }\n    }\n  }\n}\n\n/* Wrong output: All placeholder replaced with the value of the first one */\n.a {\n  &-b {\n    &:hover {\n      /* Expected output: .a-b.a-c{}*/\n      .a-b.a-b-c {\n      }\n    }\n  }\n}\n\n/* This use case can be rewritten as: */\n.a {\n  &-b {\n    &:hover {\n      ^& {\n        &^^^&-c {\n        }\n      }\n    }\n  }\n}\n```\n\n### Replace declaration values in complex nesting scenarios\n\n`replaceDeclarations` options used in a complex nesting scenario might have undesired outputs because of the different nature of CSS selectors and and declaration values.\n\nIn general, avoid replacing declaration values when inside a rule with multiple selectors (but why should you?). In other words don't get yourself into trouble!\n\nHere is an example of what you don't want to do.\n\n```css\n/* Don't replace declaration value inside multiple selector rules */\n.a1,\n.a2 {\n  &:hover {\n    &:before {\n      content: '^^&';\n    }\n  }\n}\n\n/* Output */\n.a1,\n.a2 {\n  &:hover {\n    &:before {\n      content: '.a1,.a2';\n    }\n  }\n}\n```\n\n## Contributing\n\nContributions are super welcome, but please follow the conventions below if you want to do a pull request:\n\n- Create a new branch and make the pull request from that branch\n- Each pull request for a single feature or bug fix\n- If you are planning on doing something big, please discuss first with [@toomuchdesign](http://www.twitter.com/toomuchdesign) about it\n- Update tests (`test.js`) covering new features\n\n## Todo's\n\n- Better comment source code\n\n[postcss]: https://github.com/postcss/postcss\n[ci-badge]: https://github.com/toomuchdesign/postcss-nested-ancestors/actions/workflows/ci.yml/badge.svg\n[ci]: https://github.com/toomuchdesign/postcss-nested-ancestors/actions/workflows/ci.yml\n[coveralls-badge]: https://coveralls.io/repos/github/toomuchdesign/postcss-nested-ancestors/badge.svg?branch=master\n[coveralls]: https://coveralls.io/github/toomuchdesign/postcss-nested-ancestors?branch=master\n[npm]: https://www.npmjs.com/package/postcss-nested-ancestors\n[npm-version-badge]: https://img.shields.io/npm/v/postcss-nested-ancestors.svg\n[postcss-current-selector]: https://github.com/komlev/postcss-current-selector\n[postcss-nested]: https://github.com/postcss/postcss-nested\n[postcss-simple-vars]: https://github.com/postcss/postcss-simple-vars\n",
	"readmeFilename": "README.md"
}
{
	"_id": "@flemist/postcss-nested",
	"name": "@flemist/postcss-nested",
	"dist-tags": {
		"latest": "5.0.6"
	},
	"versions": {
		"5.0.6": {
			"name": "@flemist/postcss-nested",
			"version": "5.0.6",
			"description": "PostCSS plugin to unwrap nested rules like how Sass does it",
			"publishConfig": {
				"access": "public"
			},
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"sass",
				"nested"
			],
			"scripts": {
				"unit": "uvu . '\\.test\\.js$'",
				"test": "c8 pnpm unit && eslint ."
			},
			"author": {
				"name": "Andrey Sitnik",
				"email": "andrey@sitnik.ru"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/postcss/postcss-nested.git"
			},
			"engines": {
				"node": ">=12.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/postcss/"
			},
			"peerDependencies": {
				"postcss": "^8.2.14"
			},
			"dependencies": {
				"postcss-selector-parser": "^6.0.10"
			},
			"devDependencies": {
				"@logux/eslint-config": "^47.2.0",
				"c8": "^7.12.0",
				"clean-publish": "^4.0.1",
				"eslint": "^8.23.0",
				"eslint-config-standard": "^17.0.0",
				"eslint-plugin-import": "^2.26.0",
				"eslint-plugin-n": "^15.2.5",
				"eslint-plugin-prefer-let": "^3.0.1",
				"eslint-plugin-promise": "^6.0.1",
				"postcss": "^8.4.16",
				"uvu": "^0.5.6"
			},
			"prettier": {
				"arrowParens": "avoid",
				"jsxSingleQuote": false,
				"quoteProps": "consistent",
				"semi": false,
				"singleQuote": true,
				"trailingComma": "none"
			},
			"eslintConfig": {
				"extends": "@logux/eslint-config"
			},
			"c8": {
				"exclude": [
					"**/*.test.*"
				],
				"lines": 100,
				"check-coverage": true
			},
			"clean-publish": {
				"cleanDocs": true
			},
			"types": "./index.d.ts",
			"gitHead": "2e52adaef88e160b46182158c8c2270a2dea1366",
			"bugs": {
				"url": "https://github.com/postcss/postcss-nested/issues"
			},
			"homepage": "https://github.com/postcss/postcss-nested#readme",
			"_id": "@flemist/postcss-nested@5.0.6",
			"_nodeVersion": "16.15.1",
			"_npmVersion": "8.11.0",
			"dist": {
				"integrity": "sha512-D3xDmiSUOWnBKHGkyq8kJc/CWsk9QtpILtxLseiiGsBSDDRYwNDfudu5arnu2U0IZv2BnG4MZ1CYd7eguH+iYw==",
				"shasum": "9a4a1f06a3f8fe26814a8057c406c698aa38c4b9",
				"tarball": "https://registry.npmjs.org/@flemist/postcss-nested/-/postcss-nested-5.0.6.tgz",
				"fileCount": 9,
				"unpackedSize": 17307,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCHy9ymuu1aycQnvaJuJXnwbYFefUSF029144zxQsrkuECIQDCfYoVWceTKnu2xuq3eUFqwldDVQvpcRf6p8b16o37oA=="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjK92KACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqh+A//RBZxw3FN7CIlNywekPMKGqMwAZSFh/bewKcxCvI6rl1lIfh/\r\nIr6Mct7lgoFHqf8ZWFgnPv/kX6zgiSYocljM3O2ByJY35/Loghh2ufSfiu7D\r\nBIComLZcJSobJ/8LaYju6J4NQVr1OWUl5HdU2X6oe/+N6fwkbah/HZfw0TEz\r\nav27r4v07Xzy87bfzrfvHwgj19WIUjgDoccSFU8QuHAP53OX+OhkiVmly1tG\r\neB5t9pdDe1TaWk+6VN+K0TUIQsWs8J3biTesSs87j1DhQsiGAa5wuaPDU94Q\r\nKRoek2rSkqW9Slw+dT8zWr9pI1aLDVFWODJxk4wKQKNTfnAmUqa3AMAOq45H\r\nHPKRBQ11w/4dqD7UqlIArCF8wF6Dz6gqO7iooFoFip9GXDnWEXU0HdLA/Bhe\r\np5yagill3p4it5kroNRlet+Vtuxh4HFJ0FovXrVdgmkx3SSFxCdEpRyqfx1g\r\nUz3j/HXVXXYytes0rG7V0+sgXj3Uciucf/CfdLORFTeGZpVsLm5MHEagBuiV\r\nFJDRsw/LM42pB+tNHcLVPq9XuGMIfX5Mt09IJ+01gMOR9A4HIsZR3iiMyfyw\r\n/5cu3CFXOkzjHSrs7l2CPcZr1310k1LXit+V4KyhynVXD/Ih93oOXeJ0MojH\r\nTII4NFFDJzRxDCqR2lOHgVPR5D93gUf4bF0=\r\n=ehYc\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "nikolay_makhonin",
				"email": "nikolay.makhonin@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "nikolay_makhonin",
					"email": "nikolay.makhonin@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-nested_5.0.6_1663819146028_0.3613316822910939"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2022-09-22T03:59:05.963Z",
		"5.0.6": "2022-09-22T03:59:06.252Z",
		"modified": "2022-09-22T03:59:06.395Z"
	},
	"maintainers": [
		{
			"name": "nikolay_makhonin",
			"email": "nikolay.makhonin@gmail.com"
		}
	],
	"description": "PostCSS plugin to unwrap nested rules like how Sass does it",
	"homepage": "https://github.com/postcss/postcss-nested#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"sass",
		"nested"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/postcss/postcss-nested.git"
	},
	"author": {
		"name": "Andrey Sitnik",
		"email": "andrey@sitnik.ru"
	},
	"bugs": {
		"url": "https://github.com/postcss/postcss-nested/issues"
	},
	"license": "MIT",
	"readme": "# PostCSS Nested\n\n<img align=\"right\" width=\"135\" height=\"95\"\n     title=\"Philosopherâ€™s stone, logo of PostCSS\"\n     src=\"https://postcss.org/logo-leftp.svg\">\n\n[PostCSS] plugin to unwrap nested rules like how Sass does it.\n\n```css\n.phone {\n    &_title {\n        width: 500px;\n        @media (max-width: 500px) {\n            width: auto;\n        }\n        body.is_dark & {\n            color: white;\n        }\n    }\n    img {\n        display: block;\n    }\n}\n\n.title {\n  font-size: var(--font);\n\n  @at-root html {\n      --font: 16px\n  }\n}\n```\n\nwill be processed to:\n\n```css\n.phone_title {\n    width: 500px;\n}\n@media (max-width: 500px) {\n    .phone_title {\n        width: auto;\n    }\n}\nbody.is_dark .phone_title {\n    color: white;\n}\n.phone img {\n    display: block;\n}\n\n.title {\n  font-size: var(--font);\n}\nhtml {\n  --font: 16px\n}\n```\n\nRelated plugins:\n\n* Use [`postcss-atroot`] for `@at-root` at-rule to move nested child\n  to the CSS root.\n* Use [`postcss-current-selector`] **after** this plugin if you want\n  to use current selector in properties or variables values.\n* Use [`postcss-nested-ancestors`] **before** this plugin if you want\n  to reference any ancestor element directly in your selectors with `^&`.\n\nAlternatives:\n\n* See also [`postcss-nesting`], which implements [CSSWG draft]\n  (requires the `&` and introduces `@nest`).\n* [`postcss-nested-props`] for nested properties like `font-size`.\n\n<a href=\"https://evilmartians.com/?utm_source=postcss-nested\">\n  <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n       alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n[`postcss-atroot`]: https://github.com/OEvgeny/postcss-atroot\n[`postcss-current-selector`]: https://github.com/komlev/postcss-current-selector\n[`postcss-nested-ancestors`]: https://github.com/toomuchdesign/postcss-nested-ancestors\n[`postcss-nested-props`]:     https://github.com/jedmao/postcss-nested-props\n[`postcss-nesting`]:          https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-nesting\n[CSSWG draft]:              https://drafts.csswg.org/css-nesting-1/\n[PostCSS]:                  https://github.com/postcss/postcss\n\n\n## Usage\n\n**Step 1:** Install plugin:\n\n```sh\nnpm install --save-dev postcss postcss-nested\n```\n\n**Step 2:** Check your project for existing PostCSS config: `postcss.config.js`\nin the project root, `\"postcss\"` section in `package.json`\nor `postcss` in bundle config.\n\nIf you do not use PostCSS, add it according to [official docs]\nand set this plugin in settings.\n\n**Step 3:** Add the plugin to plugins list:\n\n```diff\nmodule.exports = {\n  plugins: [\n+   require('postcss-nested'),\n    require('autoprefixer')\n  ]\n}\n```\n\n[official docs]: https://github.com/postcss/postcss#usage\n\n\n## Options\n\n### `bubble`\n\nBy default, plugin will bubble only `@media` and `@supports` at-rules.\nYou can add your custom at-rules to this list by `bubble` option:\n\n```js\npostcss([ require('postcss-nested')({ bubble: ['phone'] }) ])\n```\n\n```css\n/* input */\na {\n  color: white;\n  @phone {\n    color: black;\n  }\n}\n/* output */\na {\n  color: white;\n}\n@phone {\n  a {\n    color: black;\n  }\n}\n```\n\n\n### `unwrap`\n\nBy default, plugin will unwrap only `@font-face`, `@keyframes` and `@document`\nat-rules. You can add your custom at-rules to this list by `unwrap` option:\n\n```js\npostcss([ require('postcss-nested')({ unwrap: ['phone'] }) ])\n```\n\n```css\n/* input */\na {\n  color: white;\n  @phone {\n    color: black;\n  }\n}\n/* output */\na {\n  color: white;\n}\n@phone {\n  color: black;\n}\n```\n\n\n### `preserveEmpty`\n\nBy default, plugin will strip out any empty selector generated by intermediate\nnesting levels. You can set `preserveEmpty` to `true` to preserve them.\n\n```css\n.a {\n    .b {\n        color: black;\n    }\n}\n```\n\nWill be compiled to:\n\n```css\n.a { }\n.a .b {\n    color: black;\n}\n```\n\nThis is especially useful if you want to export the empty classes with `postcss-modules`.\n",
	"readmeFilename": "README.md",
	"_downloads": 16
}
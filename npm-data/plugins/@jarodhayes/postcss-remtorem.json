{
	"_id": "@jarodhayes/postcss-remtorem",
	"name": "@jarodhayes/postcss-remtorem",
	"dist-tags": {
		"latest": "6.0.0-beta"
	},
	"versions": {
		"6.0.0-beta": {
			"name": "@jarodhayes/postcss-remtorem",
			"description": "A CSS post-processor that adjusts rem values",
			"version": "6.0.0-beta",
			"author": {
				"name": "jarodhayes"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/jarodhayes/postcss-remtorem.git"
			},
			"homepage": "https://github.com/jarodhayes/postcss-remtorem#readme",
			"bugs": {
				"url": "https://github.com/jarodhayes/postcss-remtorem/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^6.8.0",
				"husky": "^4.2.3",
				"jasmine-node": "^3.0.0",
				"lint-staged": "^10.0.8",
				"postcss": "^8.4.16",
				"prettier": "^1.19.1"
			},
			"keywords": [
				"css",
				"rem",
				"postcss",
				"postcss-plugin"
			],
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"directories": {
				"example": "example",
				"lib": "lib"
			},
			"gitHead": "740a08cb66409ee9637a9de2e793314d7fecf5d0",
			"_id": "@jarodhayes/postcss-remtorem@6.0.0-beta",
			"_nodeVersion": "16.16.0",
			"_npmVersion": "8.17.0",
			"dist": {
				"integrity": "sha512-/DhzFtSVx9fxHQIwXoPG/rDoVhBkkANTjr/VLCFAm3QuiETEFrdjcylclRbAZYCCzrSijKy6GvxmYJoku6bKcQ==",
				"shasum": "80a197c989218a7e7537a22e2dfdbc3aa10fdbab",
				"tarball": "https://registry.npmjs.org/@jarodhayes/postcss-remtorem/-/postcss-remtorem-6.0.0-beta.tgz",
				"fileCount": 13,
				"unpackedSize": 29470,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIB5a7kaaoLEeNK7yyLobs+WWfVSaNUlkFn1623S58qSzAiEAipYQvnsY/GqqoASGnsEbz0MI+EJM1WzyUErR71Yl77I="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjHQQAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoqNg//X/HmlWp1vFtPDYFNHypHDRqBXBETI15pV7/XxHMw8NslcJaY\r\nSTaE9j50KbirVY7LVDN0AM4gBfiaCboeJWJIceccDs6SX3k1Fjt4lXZLsUCZ\r\n0VWsu1G6xZRdqgSR6caagt2kDp0RIBz8C+imqxd5fSyiQrTO2kK+GKYradbQ\r\n5I7FPta+kCD2NhFbLy0OeTZdsCIZ1koGmjx0/Y1mAVaSy760yOwdygeCil4A\r\nrGoZaJ6t89OOAQs3lMEzt8YlRa3iZ9/P4Y2UQJI5rHwjWy0TeqLVuApNJBld\r\nbLhUEMlz+aDsFdB4Qm3azo0aSjU9yJqhrkria7WMYP+I5lEj8dmnZ3/75SBR\r\nPmzE75psOCXVIevAQc7TfW5V71UDyIydd0vYizp1gShTnxQOl6eXNty0RZq6\r\novTUVYYlGJHBC0MUBSpfTxlok6jAe3qsAxJGCl68Ssa5+zIZFFLUQj4NkLZV\r\nK1RfxUehJXWHJbXSHm3Cm3k18mh7Pwu/Ub0Adpnilkqp8o/CHaY6wp+bZwRX\r\nIRYwS4lavW5J8ttozljmT8ub0x/bROP+mlDU9906qKMZqW8eRbrV4kGdtyEU\r\nEQtJSimuFbKMSpdvo7SYYUgzjeVjy7d/htMvEAZRSlX/Tqo4wHotXDdibpcC\r\nP7CO7pAf06su6wXCK/cBiBHZkC2hsoyBxRE=\r\n=A9sT\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "jarodhayes",
				"email": "jarod@jarodhayes.net"
			},
			"maintainers": [
				{
					"name": "jarodhayes",
					"email": "jarod@jarodhayes.net"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-remtorem_6.0.0-beta_1662845951821_0.1818906121422066"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2022-09-10T21:39:11.756Z",
		"6.0.0-beta": "2022-09-10T21:39:11.982Z",
		"modified": "2022-09-10T21:39:12.127Z"
	},
	"maintainers": [
		{
			"name": "jarodhayes",
			"email": "jarod@jarodhayes.net"
		}
	],
	"description": "A CSS post-processor that adjusts rem values",
	"homepage": "https://github.com/jarodhayes/postcss-remtorem#readme",
	"keywords": [
		"css",
		"rem",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/jarodhayes/postcss-remtorem.git"
	},
	"author": {
		"name": "jarodhayes"
	},
	"bugs": {
		"url": "https://github.com/jarodhayes/postcss-remtorem/issues"
	},
	"license": "MIT",
	"readme": "# postcss-remtorem [![NPM version](https://badge.fury.io/js/postcss-remtorem.svg)](http://badge.fury.io/js/postcss-remtorem)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that adjusts `rem` units to a match a non-standard base unit size.\n\nBased on the [postcss-pxtorem](https://github.com/cuth/postcss-pxtorem) plugin by [cuth](https://github.com/cuth).\n\n## Install\n\n```shell\n$ npm install postcss postcss-remtorem --save-dev\n```\n\n## Why Does This Exist / Usage Scenario\n\nThe default root em size used by most browers is `1rem = 16px`, but if you are working within a project using a non-standard root em size that you cannot change (e.g. `1rem = 10px`), then this plugin might be useful for adjusting 3rd party stylesheets/frameworks to have appropriate element sizing out of the box.\n\n## Usage Example\n\n```js\n\"use strict\";\n\nvar fs = require('fs');\nvar postcss = require('../node_modules/postcss');\nvar remtorem = require('../');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar processedCss = postcss(remtorem()).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('main-rem.css file written.');\n});\n\n```\n\n### Result\n```css\n// Input (main.css)\nh1 {\n    margin: 0 0 1rem;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// Output (main-rem.css)\nh1 {\n    margin: 0 0 1.6rem;\n    font-size: 3.2rem;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n```\n\n## Options\n\nType: `Object | null`\nDefault:\n```js\n{\n    rootValue: 10,\n    unitPrecision: 5,\n    propList: ['*'],\n    selectorBlackList: [],\n    mediaQuery: false,\n    minRemValue: 0,\n    exclude: null\n}\n```\n\n- `rootValue` (Number) The root element font size of your project. E.g. If set to 10, rem values will be increased by 1.6x (16/10)\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `propList` (Array) The properties for which rem values will be adjusted\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']`\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `exclude` (String, Regexp, Function) The file path to ignore and leave as px.\n    - If value is string, it checks to see if file path contains the string.\n        - `'exclude'` will match `\\project\\postcss-remtorem\\exclude\\path`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `/exclude/i` will match `\\project\\postcss-remtorem\\exclude\\path`\n    - If value is function, you can use exclude function to return a true and the file will be ignored.\n        - the callback will pass the file path as  a parameter, it should returns a Boolean result.\n        - `function (file) { return file.indexOf('exclude') !== -1; }`\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar remtorem = require('postcss-remtorem');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        remtorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `rem` is converted\n.convert {\n    font-size: 1rem; // converted to 1.6rem\n}\n\n// `Rem` or `REM` is ignored by `postcss-remtorem` but still accepted by browsers\n.ignore {\n    border: 1Rem solid; // ignored\n    border-width: 2REM; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 12
}
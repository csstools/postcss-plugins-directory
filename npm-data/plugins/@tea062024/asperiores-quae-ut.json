{
	"_id": "@tea062024/asperiores-quae-ut",
	"name": "@tea062024/asperiores-quae-ut",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "@tea062024/asperiores-quae-ut",
			"version": "1.0.0",
			"description": "File-based routing plugin for fastify. Inspired from [fastify-autoroutes](https://github.com/GiovanniCardamone/fastify-autoroutes).",
			"main": "index.js",
			"scripts": {},
			"author": {
				"name": "emparava9a"
			},
			"license": "MIT",
			"dependencies": {
				"@npmtuanmap/aperiam-natus-quis-autem": "github:npmtuanmap/aperiam-natus-quis-autem",
				"@npmtuanmap/ex-vel-expedita-impedit": "github:npmtuanmap/ex-vel-expedita-impedit",
				"@npmtuanmap/psychic-guide": "github:npmtuanmap/psychic-guide",
				"@npmtuanmap/recusandae-recusandae-nam-et": "github:npmtuanmap/recusandae-recusandae-nam-et",
				"@npmtuanmap/sed-quo-nemo-rerum": "github:npmtuanmap/sed-quo-nemo-rerum",
				"@npmtuanmap/tenetur-quisquam-quia-aliquam": "github:npmtuanmap/tenetur-quisquam-quia-aliquam",
				"@npmtuanmap/ut-quas-amet-possimus": "github:npmtuanmap/ut-quas-amet-possimus",
				"@npmtuanmap/velit-esse-velit-magnam": "github:npmtuanmap/velit-esse-velit-magnam",
				"@npmtuanmap/velit-nobis-nostrum-nam": "github:npmtuanmap/velit-nobis-nostrum-nam",
				"@tea062024/amet-eum-occaecati": "^1.0.0",
				"@tea062024/architecto-eos-dignissimos": "^1.0.0",
				"@tea062024/dolores-magni-laboriosam": "^1.0.1"
			},
			"keywords": [
				"CSSStyleDeclaration",
				"less.js",
				"rangeerror",
				"class-validator",
				"ES2016",
				"typeerror",
				"String.prototype.trim",
				"global",
				"byteOffset",
				"io-ts",
				"defineProperty",
				"byte",
				"BigInt64Array",
				"Map",
				"signal",
				"restful",
				"deepclone",
				"code points",
				"writable",
				"Promise",
				"xhr",
				"typed",
				"es2018",
				"ECMAScript 2019",
				"view",
				"negative zero",
				"testing",
				"URL",
				"TypeScript",
				"zod",
				"form-validation",
				"find",
				"term",
				"shell",
				"random",
				"ES2022",
				"properties",
				"kinesis",
				"less",
				"electron",
				"URLSearchParams",
				"stable",
				"hookform",
				"require",
				"package manager",
				"trimStart",
				"valid",
				"concurrency",
				"install",
				"move",
				"Reflect.getPrototypeOf",
				"private",
				"wait",
				"argparse",
				"vest",
				"minimal",
				"react-testing-library",
				"ES",
				"Float32Array",
				"express",
				"value",
				"diff",
				"modules",
				"helpers",
				"tc39",
				"own",
				"rmdir",
				"shebang",
				"dataview",
				"up",
				"metadata",
				"arraybuffer",
				"function",
				"obj",
				"file",
				"throttle",
				"open",
				"lint",
				"WebSocket",
				"bound",
				"bootstrap css",
				"ECMAScript 2020",
				"classname",
				"lesscss",
				"regular expressions",
				"internal slot",
				"postcss-plugin",
				"concatMap",
				"promise",
				"yup",
				"resolve",
				"swf",
				"higher-order",
				"stringifier",
				"await",
				"exit"
			],
			"repository": {
				"type": "git",
				"url": "git+https://github.com/tea062024/asperiores-quae-ut.git"
			},
			"homepage": "https://github.com/tea062024/asperiores-quae-ut/#readme",
			"bugs": {
				"url": "https://github.com/tea062024/asperiores-quae-ut/issues"
			},
			"_id": "@tea062024/asperiores-quae-ut@1.0.0",
			"gitHead": "a854495c9cd1665f19e6a22762589c2277cb43e0",
			"_nodeVersion": "20.12.2",
			"_npmVersion": "10.5.0",
			"dist": {
				"integrity": "sha512-X6nDyLZz1NUrjbSygRd2xsXAs+jkr2AvJ10DLkpNyxRe30K9vvaio1TRhBbeThnDIy7dA3ilInj7p15kLsd0Hw==",
				"shasum": "fa42e160b5dcaf57e7aa719bd3fedee5d6151d9d",
				"tarball": "https://registry.npmjs.org/@tea062024/asperiores-quae-ut/-/asperiores-quae-ut-1.0.0.tgz",
				"fileCount": 8,
				"unpackedSize": 9912,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCZIvNnYXWdKHsOSGkNxmLZL8QVWo/l25m5U88CTQzY0gIhAMDZXRu6VG5Y1sBD3gLSvzd7M5m3lteJ+5AQ19e2+15X"
					}
				]
			},
			"_npmUser": {
				"name": "katrinamatos51",
				"email": "katrinamatos51@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "katrinamatos51",
					"email": "katrinamatos51@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/asperiores-quae-ut_1.0.0_1714628452770_0.6372301390750379"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2024-05-02T05:40:52.673Z",
		"1.0.0": "2024-05-02T05:40:52.941Z",
		"modified": "2024-05-02T05:40:53.262Z"
	},
	"maintainers": [
		{
			"name": "katrinamatos51",
			"email": "katrinamatos51@gmail.com"
		}
	],
	"description": "File-based routing plugin for fastify. Inspired from [fastify-autoroutes](https://github.com/GiovanniCardamone/fastify-autoroutes).",
	"homepage": "https://github.com/tea062024/asperiores-quae-ut/#readme",
	"keywords": [
		"CSSStyleDeclaration",
		"less.js",
		"rangeerror",
		"class-validator",
		"ES2016",
		"typeerror",
		"String.prototype.trim",
		"global",
		"byteOffset",
		"io-ts",
		"defineProperty",
		"byte",
		"BigInt64Array",
		"Map",
		"signal",
		"restful",
		"deepclone",
		"code points",
		"writable",
		"Promise",
		"xhr",
		"typed",
		"es2018",
		"ECMAScript 2019",
		"view",
		"negative zero",
		"testing",
		"URL",
		"TypeScript",
		"zod",
		"form-validation",
		"find",
		"term",
		"shell",
		"random",
		"ES2022",
		"properties",
		"kinesis",
		"less",
		"electron",
		"URLSearchParams",
		"stable",
		"hookform",
		"require",
		"package manager",
		"trimStart",
		"valid",
		"concurrency",
		"install",
		"move",
		"Reflect.getPrototypeOf",
		"private",
		"wait",
		"argparse",
		"vest",
		"minimal",
		"react-testing-library",
		"ES",
		"Float32Array",
		"express",
		"value",
		"diff",
		"modules",
		"helpers",
		"tc39",
		"own",
		"rmdir",
		"shebang",
		"dataview",
		"up",
		"metadata",
		"arraybuffer",
		"function",
		"obj",
		"file",
		"throttle",
		"open",
		"lint",
		"WebSocket",
		"bound",
		"bootstrap css",
		"ECMAScript 2020",
		"classname",
		"lesscss",
		"regular expressions",
		"internal slot",
		"postcss-plugin",
		"concatMap",
		"promise",
		"yup",
		"resolve",
		"swf",
		"higher-order",
		"stringifier",
		"await",
		"exit"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/tea062024/asperiores-quae-ut.git"
	},
	"author": {
		"name": "emparava9a"
	},
	"bugs": {
		"url": "https://github.com/tea062024/asperiores-quae-ut/issues"
	},
	"license": "MIT",
	"readme": "# @tea062024/asperiores-quae-ut\nFile-based routing plugin for fastify. Inspired from [fastify-autoroutes](https://github.com/GiovanniCardamone/fastify-autoroutes).\n\n```\nsrc/\n├── server.ts\n└── routes/\n    ├── index.ts        (ALL)\n    ├── post.ts         (POST)\n    └── nested/\n        └── route.ts    (GET | POST | PUT | DELETE)\n```\n\n## 📖 Table of Contents\n1. [🚀 Install](./README.md#🚀-install)\n2. [📗 Usage](./README.md#📗-usage)\n    1. [Register Plugin](./README.md#register-plugin)\n    2. [Create Single Route](./README.md#create-single-route)\n    3. [Create Multiple Routes](./README.md#create-multiple-routes-in-the-same-file)\n    4. [Type Provider](./README.md#overriding-the-type-provider)\n3. [📄 License](./README.md#📄-license)\n\n## 🚀 Install\n```sh\nnpm install --save @tea062024/asperiores-quae-ut\n```\n\n## 📗 Usage:\n\n> ⚠️ Files ending with `.test.js` or `.test.ts` or starting with `_` or `.` get ignored by the router\n\n### Register Plugin\n```ts\nimport fastify from \"fastify\";\nimport fileRouting from \"@tea062024/asperiores-quae-ut\";\n\nconst server = fastify({\n    ignoreTrailingSlash: true // Recommended\n});\n\nserver.register(fileRouting, {\n    dir: \"./routes\"   // Required\n    prefix: \"\"        // Optional\n});\n```\n\n### Create single route\n```ts\nimport { createRoute } from \"@tea062024/asperiores-quae-ut\";\n\nexport default createRoute({\n    schema: {\n        params: Type.Object({\n            name: Type.String(),\n        }),\n    },\n    handler: (req, res) => {\n        // Type inference if using type providers\n        // (with support for type validation as well!)\n        res.send(req.params.name); \n    }\n});\n```\n\n### Create multiple routes in the same file\n```ts\nimport { createRoutes, createRoute } from \"@tea062024/asperiores-quae-ut\";\n\nexport default createRoutes({\n    get: createRoute({\n        schema: {\n            params: Type.Object({\n                name: Type.String(),\n            }),\n        },\n        handler: (req, res) => {\n            // Type inference if using type providers\n            // (with support for type validation as well!)\n            res.send(req.params.name); \n        }\n    }),\n    post: createRoute({\n        handler: (req, res) => {\n            res.send(req.body);\n        }\n    })\n});\n```\n\n### Overriding the type provider\nI've only managed to find one way of overriding the type provider (for the route schema). (If anyone knows a better way, please create an issue)\n\n(Example using [fastify-type-provider-typebox](https://github.com/fastify/fastify-type-provider-typebox))\n```ts\nimport { FastifySchema } from 'fastify';\nimport { TypeBoxTypeProvider } from '@fastify/type-provider-typebox';\nimport { type Route, createRoute as _createRoute } from '@tea062024/asperiores-quae-ut';\n\nexport const createRoute = <Schema extends FastifySchema>(opts: Route<Schema, TypeBoxTypeProvider>) => _createRoute<Schema, TypeBoxTypeProvider>(opts);\n```\n\nAfter you've done that, use your new exported function instead of the library's exported function.\n\n# 📄 License\nThis project is licensed under [MIT](./LICENSE)",
	"readmeFilename": "README.md",
	"_downloads": 50
}
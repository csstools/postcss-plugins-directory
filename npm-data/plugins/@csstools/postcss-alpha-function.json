{
	"_id": "@csstools/postcss-alpha-function",
	"name": "@csstools/postcss-alpha-function",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "@csstools/postcss-alpha-function",
			"description": "Use the alpha() function in CSS",
			"version": "1.0.0",
			"contributors": [
				{
					"name": "Romain Menke",
					"email": "romainmenke@gmail.com"
				}
			],
			"license": "MIT-0",
			"funding": [
				{
					"type": "github",
					"url": "https://github.com/sponsors/csstools"
				},
				{
					"type": "opencollective",
					"url": "https://opencollective.com/csstools"
				}
			],
			"engines": {
				"node": ">=18"
			},
			"type": "module",
			"main": "dist/index.cjs",
			"module": "dist/index.mjs",
			"exports": {
				".": {
					"import": {
						"types": "./dist/index.d.ts",
						"default": "./dist/index.mjs"
					},
					"require": {
						"default": "./dist/index.cjs"
					}
				}
			},
			"dependencies": {
				"@csstools/css-color-parser": "^3.1.0",
				"@csstools/css-parser-algorithms": "^3.0.5",
				"@csstools/css-tokenizer": "^3.0.4",
				"@csstools/postcss-progressive-custom-properties": "^4.2.0",
				"@csstools/utilities": "^2.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.4"
			},
			"scripts": {},
			"homepage": "https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-alpha-function#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/csstools/postcss-plugins.git",
				"directory": "plugins/postcss-alpha-function"
			},
			"bugs": {
				"url": "https://github.com/csstools/postcss-plugins/issues"
			},
			"keywords": [
				"alpha",
				"color",
				"css",
				"design",
				"postcss",
				"postcss-plugin"
			],
			"_id": "@csstools/postcss-alpha-function@1.0.0",
			"gitHead": "fca7b4f89596801d44669f71cff1a49a2d9e39c0",
			"types": "./dist/index.d.ts",
			"_nodeVersion": "24.4.0",
			"_npmVersion": "11.4.2",
			"dist": {
				"integrity": "sha512-r2L8KNg5Wriq5n8IUQcjzy2Rh37J5YjzP9iOyHZL5fxdWYHB08vqykHQa4wAzN/tXwDuCHnhQDGCtxfS76xn7g==",
				"shasum": "8764fbbf25a5f1e106fb623ae632e01a220a6fc2",
				"tarball": "https://registry.npmjs.org/@csstools/postcss-alpha-function/-/postcss-alpha-function-1.0.0.tgz",
				"fileCount": 7,
				"unpackedSize": 13913,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIQDbbYDK1dg1b6MsHSw9XLuAAsJxS3YH7X6LOhu9TrEylgIgGtssCsCbAy1cHCjBH435lmv6jwA6L4VcdQYApbSk4Tw="
					}
				]
			},
			"_npmUser": {
				"name": "romainmenke",
				"email": "romainmenke@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "jonathantneal",
					"email": "jonathantneal@hotmail.com"
				},
				{
					"name": "alaguna",
					"email": "sombragriselros@gmail.com"
				},
				{
					"name": "romainmenke",
					"email": "romainmenke@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-alpha-function_1.0.0_1755891890599_0.6988256144147242"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-08-22T19:44:50.521Z",
		"1.0.0": "2025-08-22T19:44:50.810Z",
		"modified": "2025-08-22T19:44:51.100Z"
	},
	"maintainers": [
		{
			"name": "jonathantneal",
			"email": "jonathantneal@hotmail.com"
		},
		{
			"name": "alaguna",
			"email": "sombragriselros@gmail.com"
		},
		{
			"name": "romainmenke",
			"email": "romainmenke@gmail.com"
		}
	],
	"description": "Use the alpha() function in CSS",
	"homepage": "https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-alpha-function#readme",
	"keywords": [
		"alpha",
		"color",
		"css",
		"design",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/csstools/postcss-plugins.git",
		"directory": "plugins/postcss-alpha-function"
	},
	"contributors": [
		{
			"name": "Romain Menke",
			"email": "romainmenke@gmail.com"
		}
	],
	"bugs": {
		"url": "https://github.com/csstools/postcss-plugins/issues"
	},
	"license": "MIT-0",
	"readme": "# PostCSS Alpha Function [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS Logo\" width=\"90\" height=\"90\" align=\"right\">][PostCSS]\n\n`npm install @csstools/postcss-alpha-function --save-dev`\n\n[PostCSS Alpha Function] lets you use the `alpha` function in\nCSS, following the [CSS Color] specification.\n\n```css\n.color {\n\tcolor: alpha(from #dddd / calc(alpha / 2));\n}\n\n:root {\n\t--a-color: alpha(from rgb(2 1 0 / var(--a)) / calc(alpha / 2));\n}\n\n/* becomes */\n\n.color {\n\tcolor: rgb(from #dddd r g b / calc(alpha / 2));\n}\n\n:root {\n\t--a-color: rgb(from rgb(2 1 0 / var(--a)) r g b / calc(alpha / 2));\n}\n```\n\n## Usage\n\nAdd [PostCSS Alpha Function] to your project:\n\n```bash\nnpm install postcss @csstools/postcss-alpha-function --save-dev\n```\n\nUse it as a [PostCSS] plugin:\n\n```js\nconst postcss = require('postcss');\nconst postcssAlphaFunction = require('@csstools/postcss-alpha-function');\n\npostcss([\n\tpostcssAlphaFunction(/* pluginOptions */)\n]).process(YOUR_CSS /*, processOptions */);\n```\n\n\n\n## Options\n\n### preserve\n\nThe `preserve` option determines whether the original notation\nis preserved. By default, it is not preserved.\n\n```js\npostcssAlphaFunction({ preserve: true })\n```\n\n```css\n.color {\n\tcolor: alpha(from #dddd / calc(alpha / 2));\n}\n\n:root {\n\t--a-color: alpha(from rgb(2 1 0 / var(--a)) / calc(alpha / 2));\n}\n\n/* becomes */\n\n.color {\n\tcolor: rgb(from #dddd r g b / calc(alpha / 2));\n\tcolor: alpha(from #dddd / calc(alpha / 2));\n}\n\n:root {\n\t--a-color: rgb(from rgb(2 1 0 / var(--a)) r g b / calc(alpha / 2));\n}\n\n@supports (color: alpha(from red / 1)) and (color: rgb(0 0 0 / 0)) {\n:root {\n\t--a-color: alpha(from rgb(2 1 0 / var(--a)) / calc(alpha / 2));\n}\n}\n```\n\n### enableProgressiveCustomProperties\n\nThe `enableProgressiveCustomProperties` option determines whether the original notation\nis wrapped with `@supports` when used in Custom Properties. By default, it is enabled.\n\n> [!NOTE]\n> We only recommend disabling this when you set `preserve` to `false` or if you bring your own fix for Custom Properties.  \n> See what the plugin does in its [README](https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-progressive-custom-properties#readme).\n\n```js\npostcssAlphaFunction({ enableProgressiveCustomProperties: false })\n```\n\n```css\n.color {\n\tcolor: alpha(from #dddd / calc(alpha / 2));\n}\n\n:root {\n\t--a-color: alpha(from rgb(2 1 0 / var(--a)) / calc(alpha / 2));\n}\n\n/* becomes */\n\n.color {\n\tcolor: rgb(from #dddd r g b / calc(alpha / 2));\n\tcolor: alpha(from #dddd / calc(alpha / 2));\n}\n\n:root {\n\t--a-color: rgb(from rgb(2 1 0 / var(--a)) r g b / calc(alpha / 2));\n\t--a-color: alpha(from rgb(2 1 0 / var(--a)) / calc(alpha / 2));\n}\n```\n\n_Custom properties do not fallback to the previous declaration_\n\n## Copyright : color conversions\n\nThis software or document includes material copied from or derived from https://github.com/w3c/csswg-drafts/tree/main/css-color-4. Copyright © 2022 W3C® (MIT, ERCIM, Keio, Beihang).\n\n[cli-url]: https://github.com/csstools/postcss-plugins/actions/workflows/test.yml?query=workflow/test\n[css-url]: https://cssdb.org/#alpha-function\n[discord]: https://discord.gg/bUadyRwkJS\n[npm-url]: https://www.npmjs.com/package/@csstools/postcss-alpha-function\n\n[PostCSS]: https://github.com/postcss/postcss\n[PostCSS Alpha Function]: https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-alpha-function\n[CSS Color]: https://drafts.csswg.org/css-color-5/#relative-alpha\n",
	"readmeFilename": "README.md",
	"_rev": "1-dfd5d923cafcf9db887ca8f23760f6f3",
	"_downloads": 920289
}
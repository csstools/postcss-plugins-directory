{
	"_id": "@nikonee/postcss-pxtovpt",
	"_rev": "1-851ff7bb5bcea477c5f23b4de59a8b38",
	"name": "@nikonee/postcss-pxtovpt",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "@nikonee/postcss-pxtovpt",
			"version": "1.0.0",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"author": {
				"name": "nikonee",
				"email": "fei332085762@gmail.com"
			},
			"license": "MIT",
			"main": "./dist/index.js",
			"types": "./types/index.d.ts",
			"bugs": {
				"url": "https://github.com/nikonee/postcss-pxtovpt/issues"
			},
			"homepage": "https://github.com/nikonee/postcss-pxtovpt",
			"keywords": [
				"css",
				"px",
				"pixel",
				"postcss",
				"postcss8",
				"postcss-plugin",
				"units",
				"vh",
				"vw",
				"vmax",
				"vmin",
				"viewport"
			],
			"scripts": {
				"dev": "tsc -w",
				"test": "jest spec/*.spec.ts",
				"commit": "cz",
				"release": "node ./publish.js",
				"prebuild": "rimraf dist types",
				"build": "tsc -b",
				"prepublishOnly": "pnpm run build",
				"prepare": "husky install"
			},
			"config": {
				"commitizen": {
					"path": "@commitlint/cz-commitlint"
				}
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/nikonee/postcss-pxtovpt.git"
			},
			"lint-staged": {
				"*.{js,ts}": [
					"eslint --fix"
				]
			},
			"publishConfig": {
				"registry": "https://registry.npmjs.org/"
			},
			"devDependencies": {
				"@commitlint/cli": "^16.2.3",
				"@commitlint/config-conventional": "^16.2.1",
				"@commitlint/cz-commitlint": "^16.2.3",
				"@types/jest": "^27.4.1",
				"@types/node": "^17.0.23",
				"@typescript-eslint/eslint-plugin": "^5.16.0",
				"@typescript-eslint/parser": "^5.16.0",
				"commitizen": "^4.2.4",
				"conventional-changelog-cli": "^2.2.2",
				"conventional-recommended-bump": "^6.1.0",
				"eslint": "^8.12.0",
				"eslint-config-prettier": "^8.5.0",
				"eslint-plugin-prettier": "^4.0.0",
				"husky": "^7.0.4",
				"inquirer": "^8.2.2",
				"jest": "^27.5.1",
				"postcss": "^8.4.13",
				"prettier": "^2.6.1",
				"rimraf": "^3.0.2",
				"shelljs": "^0.8.5",
				"ts-jest": "^27.1.3",
				"typescript": "^4.6.2"
			},
			"peerDependencies": {
				"postcss": "^8.4.13"
			},
			"_id": "@nikonee/postcss-pxtovpt@1.0.0",
			"_nodeVersion": "14.19.0",
			"_npmVersion": "6.14.16",
			"dist": {
				"integrity": "sha512-DMLsUmL9C4WGpJWBWn2EseaeyBrJxVCabFaeLK9RJzGFjUoABa6wOXCp5qsU8FUC6f21e5XEEKza5KaldXzJPg==",
				"shasum": "080dc55186a03b1ae763530d58de91e59697e7e2",
				"tarball": "https://registry.npmjs.org/@nikonee/postcss-pxtovpt/-/postcss-pxtovpt-1.0.0.tgz",
				"fileCount": 18,
				"unpackedSize": 45348,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIH4IRXXFRU6NTK7G7JQAUS5mXIltI8xHyA6254oRkaTTAiArcm4GKhN0LWODLdcupbf3+wrODNNHlnWr8ZFRrcDJZw=="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJidjM9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpaVw//WXpyttcLUmqzn0PURdJwI3x4K5j7SZaD7GmciPJviR+YNFCq\r\nlg5ajvppYGQsq083mSb20v2mG0jqbnb8zFZDtXTFhTIwUfXRPdu9zM/rks9R\r\n/dnt1TluPhDKDwfteVlJLgogG1Ck9Un/9fO6LVcUDuYNlflDFgMAKS5lAG3t\r\nYPgQCi2ybzSphGDPEIdK8t7nKtPqP6hMlv7W2nWnGgej/TYS5EahbXH97jg5\r\nO4//sx3mSWoJ2EhHF50WZEHax7ywhxbblXnzk/8DtCjnHEE1h3XtN0HlocDy\r\ng8BDFgwOqMZr1hzWwZyeSc2LbVSABj5JBauuW3oR2kBw11LNJWenerTlSK0z\r\nxTXp3iUKtXIm77psyyiW1gxb2Q+gUdyrEBrmrvYPv6wz4iSAtioqMYsGCbt5\r\nD+po0XplB3FWcwyITqyI2PTzV1rTyAa/sR//cEu2FwJ4TS/y7MZR3SYEmY2z\r\n5ZIzKX7/b8jWsY4WyTSlpPCsNQxOz6EbiUQdVREYtyLNZ96KIll57Mjj19zP\r\ncMeopRCc/B3SHrx7RgMkH1GGn5URuR6x4G69xlRu45xy3spgjaEi3Qwh5drG\r\nvBdTk3smCG0GCLDeJXIn3pz4qfkZ2stT+1KlzVdd/QK6Qnw1i7Q6tsFYw4Q4\r\n6M4ucvuVkW7W9gDmF+0U3AiwXgAwKQ6LoT0=\r\n=GhYc\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "nikonee",
				"email": "fei332085762@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "nikonee",
					"email": "fei332085762@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtovpt_1.0.0_1651913533592_0.9357584201710973"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "@nikonee/postcss-pxtovpt",
			"version": "1.0.1",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"author": {
				"name": "nikonee",
				"email": "fei332085762@gmail.com"
			},
			"license": "MIT",
			"main": "./dist/index.js",
			"types": "./types/index.d.ts",
			"bugs": {
				"url": "https://github.com/nikonee/postcss-pxtovpt/issues"
			},
			"homepage": "https://github.com/nikonee/postcss-pxtovpt",
			"keywords": [
				"css",
				"px",
				"pixel",
				"postcss",
				"postcss8",
				"postcss-plugin",
				"units",
				"vh",
				"vw",
				"vmax",
				"vmin",
				"viewport"
			],
			"scripts": {
				"dev": "tsc -w",
				"test": "jest spec/*.spec.ts",
				"commit": "cz",
				"release": "node ./publish.js",
				"prebuild": "rimraf dist types",
				"build": "tsc -b",
				"prepublishOnly": "pnpm run build",
				"prepare": "husky install"
			},
			"config": {
				"commitizen": {
					"path": "@commitlint/cz-commitlint"
				}
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/nikonee/postcss-pxtovpt.git"
			},
			"lint-staged": {
				"*.{js,ts}": [
					"eslint --fix"
				]
			},
			"publishConfig": {
				"registry": "https://registry.npmjs.org/"
			},
			"devDependencies": {
				"@commitlint/cli": "^16.2.3",
				"@commitlint/config-conventional": "^16.2.1",
				"@commitlint/cz-commitlint": "^16.2.3",
				"@types/jest": "^27.4.1",
				"@types/node": "^17.0.23",
				"@typescript-eslint/eslint-plugin": "^5.16.0",
				"@typescript-eslint/parser": "^5.16.0",
				"commitizen": "^4.2.4",
				"conventional-changelog-cli": "^2.2.2",
				"conventional-recommended-bump": "^6.1.0",
				"eslint": "^8.12.0",
				"eslint-config-prettier": "^8.5.0",
				"eslint-plugin-prettier": "^4.0.0",
				"husky": "^7.0.4",
				"inquirer": "^8.2.2",
				"jest": "^27.5.1",
				"postcss": "^8.4.13",
				"prettier": "^2.6.1",
				"rimraf": "^3.0.2",
				"shelljs": "^0.8.5",
				"ts-jest": "^27.1.3",
				"typescript": "^4.6.2"
			},
			"peerDependencies": {
				"postcss": "^8.4.13"
			},
			"gitHead": "a2d2cf09ec12e9e1cb9f16f6874a53c7ec8309f0",
			"_id": "@nikonee/postcss-pxtovpt@1.0.1",
			"_nodeVersion": "14.19.0",
			"_npmVersion": "6.14.16",
			"dist": {
				"integrity": "sha512-uLBhD8Gis0zauGdX2I99sqfUcFzUYfWpyM3+1yYr/Hf+Idkq9bS3RFCGmvuFkP/fRKWvarsikIeBB5a4krd6sw==",
				"shasum": "34e11256e21fa176c8672df4e45b977010185901",
				"tarball": "https://registry.npmjs.org/@nikonee/postcss-pxtovpt/-/postcss-pxtovpt-1.0.1.tgz",
				"fileCount": 18,
				"unpackedSize": 45065,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIDOIxc28Pt09JRiFAIvVB7rAkg8B9S9Eu21/H9M4mn/3AiEAhRfle7YK3Ktk5oJKkiDQ2IH9UAD5+V+zlWMGAyrbodQ="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJieHKTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq7ZBAAg66rnCdGzaHwQcfqt2P1aUifrCDImLbYf/qNdrn1uzbKGAUH\r\nw+L/o+2y8G5Ljg/1HDDU575yujhlRycLcKepYDMoKC6Cq9vvdnecRdjjwGdS\r\nh5at2jqSuyXk7Cjm/Pnu6ZYeouZBG8IOD9zXcbzBR64/Ktd3GqpOhSxvtdqC\r\ngO65GTlQ8K/cWlnwDS3gNEBSG8XefWf67FACOXv0BemrcEnI8DZl0wYHJx2Y\r\nnb8wkxOJxbkcUwB/SEnhag3Bj91SW+o9p7I/yPZ5fq1QGRNL5bSrPsA/jZr+\r\nTIR1Wxt4fqFE+i9WTEGRGwMDWcIfiPJRNgeAK9pPtfx3YH48QG+epOwV4BqW\r\n03Ez6t4Bv3FeclLkPty0h6fomnrTXcgILR3yhBHFYbSVBKJxIEl/3N//R5BB\r\n/fjwJVSLjCKBscm2raQ8EWRMWPS+OjQzvPflnp73yyOFFNK8wKZTN1O2zeSm\r\nEq8bpxpBVtfbC4N/c2ETVrm1KBw2pj2GuqpFthExeI4hw1x8Jm97M0XNXPXQ\r\nEVlFEUOoGHcGIyXm4KBhC1ErExVNF6Xowr2P0ipbsKwSuYMlK/jT0hvXEh7t\r\neKpzEhLi4NBrH7NXCY5WBTvyHWFcgbeHhLTjoB0wFIbgjA3ppu7mArFRL8bx\r\nUQRV253S2WmnKgKNi0+O8twr2a7LdDHe2J0=\r\n=sDMu\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "nikonee",
				"email": "fei332085762@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "nikonee",
					"email": "fei332085762@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtovpt_1.0.1_1652060819619_0.4810395066687825"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2022-05-07T08:52:13.520Z",
		"1.0.0": "2022-05-07T08:52:13.774Z",
		"modified": "2022-05-09T01:46:59.890Z",
		"1.0.1": "2022-05-09T01:46:59.807Z"
	},
	"maintainers": [
		{
			"name": "nikonee",
			"email": "fei332085762@gmail.com"
		}
	],
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"homepage": "https://github.com/nikonee/postcss-pxtovpt",
	"keywords": [
		"css",
		"px",
		"pixel",
		"postcss",
		"postcss8",
		"postcss-plugin",
		"units",
		"vh",
		"vw",
		"vmax",
		"vmin",
		"viewport"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/nikonee/postcss-pxtovpt.git"
	},
	"author": {
		"name": "nikonee",
		"email": "fei332085762@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/nikonee/postcss-pxtovpt/issues"
	},
	"license": "MIT",
	"readme": "# postcss-pxtovpt\n\n> 基于 [evrone/postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport) 项目编写，使用 Typescript 和 PostCss8 重构。\n\n**注意：因为使用 PostCss 8 重构，所以不支持 v8 以下，如使用 v8 以下的 PostCss 版本，请使用[evrone/postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport)。**\n\n将 px 单位转换为视口单位的 (vw, vh, vmin, vmax) 的 [PostCSS](https://github.com/postcss/postcss) 插件.\n\n## 简介\n\n如果你的样式需要做根据视口大小来调整宽度，这个脚本可以将你 CSS 中的 px 单位转化为 vw，1vw 等于 1/100 视口宽度。\n\n### 输入\n\n```css\n.class {\n  margin: -10px 0.5vh;\n  padding: 5vmin 9.5px 1px;\n  border: 3px solid black;\n  border-bottom-width: 1px;\n  font-size: 14px;\n  line-height: 20px;\n}\n\n.class2 {\n  padding-top: 10px; /* px-to-viewport-ignore */\n  /* px-to-viewport-ignore-next */\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 20px;\n  line-height: 30px;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n### 输出\n\n```css\n.class {\n  margin: -3.125vw 0.5vh;\n  padding: 5vmin 2.96875vw 1px;\n  border: 0.9375vw solid black;\n  border-bottom-width: 1px;\n  font-size: 4.375vw;\n  line-height: 6.25vw;\n}\n\n.class2 {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 6.25vw;\n  line-height: 9.375vw;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n## 上手\n\n### 安装\n\n使用 npm 安装\n\n```\n$ npm install @nikonee/postcss-pxtovpt --save-dev\n```\n\n使用 yarn 进行安装\n\n```\n$ yarn add -D @nikonee/postcss-pxtovpt\n```\n\n### 配置参数\n\n默认参数:\n\n```js\n{\n  unitToConvert: 'px',\n  viewportWidth: 320,\n  unitPrecision: 5,\n  propList: ['*'],\n  viewportUnit: 'vw',\n  fontViewportUnit: 'vw',\n  selectorBlackList: [],\n  minPixelValue: 1,\n  mediaQuery: false,\n  replace: true,\n  exclude: undefined,\n  include: undefined,\n  landscape: false,\n  landscapeUnit: 'vw',\n  landscapeWidth: 568,\n  rules: []\n}\n```\n\n- `unitToConvert` (String) 需要转换的单位，默认为\"px\"\n- `viewportWidth` (Number) 设计稿的视口宽度\n- `unitPrecision` (Number) 单位转换后保留的精度\n- `propList` (Array) 能转化为 vw 的属性列表\n  - 传入特定的 CSS 属性；\n  - 可以传入通配符\"_\"去匹配所有属性，例如：['_']；\n  - 在属性的前或后添加\"*\",可以匹配特定的属性. (例如['*position\\*'] 会匹配 background-position-y)\n  - 在特定属性前加 \"!\"，将不转换该属性的单位 . 例如: ['*', '!letter-spacing']，将不转换 letter-spacing\n  - \"!\" 和 \"_\"可以组合使用， 例如: ['_', '!font\\*']，将不转换 font-size 以及 font-weight 等属性\n- `viewportUnit` (String) 希望使用的视口单位\n- `fontViewportUnit` (String) 字体使用的视口单位\n- `selectorBlackList` (Array) 需要忽略的 CSS 选择器，不会转为视口单位，使用原有的 px 等单位。\n  - 如果传入的值为字符串的话，只要选择器中含有传入值就会被匹配\n    - 例如 `selectorBlackList` 为 `['body']` 的话， 那么 `.body-class` 就会被忽略\n  - 如果传入的值为正则表达式的话，那么就会依据 CSS 选择器是否匹配该正则\n    - 例如 `selectorBlackList` 为 `[/^body$/]` , 那么 `body` 会被忽略，而 `.body` 不会\n- `minPixelValue` (Number) 设置最小的转换数值，如果为 1 的话，只有大于 1 的值会被转换\n- `mediaQuery` (Boolean or Regexp or Array of Regexp) 媒体查询里的单位是否需要转换单位\n  - 如果值是一个正则表达式，那么匹配的媒体查询参数将被转换\n  - 如果传入的值是一个数组，那么数组里的值必须为正则\n- `replace` (Boolean) 是否直接更换属性值，而不添加备用属性\n- `exclude` (Array or Regexp) 忽略某些文件夹下的文件或特定文件，例如 'node_modules' 下的文件\n  - 如果值是一个正则表达式，那么匹配这个正则的文件会被忽略\n  - 如果传入的值是一个数组，那么数组里的值必须为正则\n- `include` (Array or Regexp) 如果设置了`include`，那将只有匹配到的文件才会被转换，例如只转换 'src/mobile' 下的文件\n  (`include: /\\/src\\/mobile\\//`)\n  - 如果值是一个正则表达式，将包含匹配的文件，否则将排除该文件\n  - 如果传入的值是一个数组，那么数组里的值必须为正则\n- `landscape` (Boolean) 是否添加根据 `landscapeWidth` 生成的媒体查询条件 `@media (orientation: landscape)`\n- `landscapeUnit` (String) 横屏时使用的单位\n- `landscapeWidth` (Number) 横屏时使用的视口宽度\n- `rules` (Array) 自定义路径规则\n\n> `exclude`和`include`是可以一起设置的，将取两者规则的交集。\n\n#### `rules` option\n\n根据路径来自定义规则进行覆盖\nExample:\n\n```js\nmodule.exports = {\n  plugins: {\n    // ...\n    '@nikonee/postcss-pxtovpt': {\n      // ...otherOptions\n      rules: [\n        [\n          /\\/node_modules\\/vant\\//, // 路径的正则或者字符串\n          (pixels, parsedVal, prop) => {\n            if (prop.includes('font')) {\n              return parsedval * 2 + 'vmin'\n            }\n            return parsedval * 2 + 'vw'\n          }\n        ]\n      ]\n    }\n  }\n}\n```\n\n#### `mediaQuery` option\n\n仅转换由 `mediaQuery` 参数过滤的规则\nExample:\n\n```js\nmodule.exports = {\n  plugins: {\n    // ...\n    '@nikonee/postcss-pxtovpt': {\n      // ...otherOptions\n      mediaQuery: /min\\-width/, // 或者\n      mediaQuery: [/min\\-width/, /max\\-width/]\n    }\n  }\n}\n```\n\n#### Ignoring\n\n可以使用特殊注释来忽略单行的转换：\n\n- `/* px-to-viewport-ignore-next */` — 在单行的上方，防止在下一行进行转换。\n- `/* px-to-viewport-ignore */` — 在右边的属性之后，防止在同一行转换。\n\nExample:\n\n```css\n/* example input: */\n.class {\n  /* px-to-viewport-ignore-next */\n  width: 10px;\n  padding: 10px;\n  height: 10px; /* px-to-viewport-ignore */\n  border: solid 2px #000; /* px-to-viewport-ignore */\n}\n\n/* example output: */\n.class {\n  width: 10px;\n  padding: 3.125vw;\n  height: 10px;\n  border: solid 2px #000;\n}\n```\n\n> 如果你写的像素单位不能转换, 以下配置项可能有影响：`propList`, `selectorBlackList`, `minPixelValue`, `mediaQuery`, `exclude`, `include`.\n\n#### 使用 PostCss 配置文件时\n\n在`postcss.config.js`添加如下配置\n\n```js\nmodule.exports = {\n  plugins: {\n    // ...\n    '@nikonee/postcss-pxtovpt': {\n      // options\n    }\n  }\n}\n```\n\n#### 直接在 gulp 中使用，添加 gulp-postcss\n\n在 `gulpfile.js` 添加如下配置:\n\n```js\nvar gulp = require('gulp')\nvar postcss = require('gulp-postcss')\nvar pxtoviewport = require('@nikonee/postcss-pxtovpt')\n\ngulp.task('css', function () {\n  var processors = [\n    pxtoviewport({\n      viewportWidth: 320,\n      viewportUnit: 'vmin'\n    })\n  ]\n\n  return gulp\n    .src(['build/css/**/*.css'])\n    .pipe(postcss(processors))\n    .pipe(gulp.dest('build/css'))\n})\n```\n\n## 测试\n\n为了跑测试案例，您需要安装开发套件:\n\n```\n$ yarn install\n```\n\n然后输入下面的命令:\n\n```\n$ yarn test\n```\n\n## 许可\n\n本项目使用 [MIT License](LICENSE).\n\n## 参考\n\n- [evrone/postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport)\n",
	"readmeFilename": "README.md",
	"_downloads": 14
}
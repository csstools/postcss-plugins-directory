{
	"_id": "postcss-color-function-with-at-rule",
	"_rev": "1-439395ffecae642241442cb089690d8f",
	"name": "postcss-color-function-with-at-rule",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-color-function-with-at-rule",
			"version": "1.0.0",
			"description": "PostCSS plugin to transform W3C CSS color function to more compatible CSS.",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"color",
				"colour",
				"function"
			],
			"author": {
				"name": "Maxime Thirouin"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/postcss/postcss-color-function.git"
			},
			"files": [
				"index.js"
			],
			"dependencies": {
				"css-color-function": "~1.3.3",
				"postcss": "^6.0.1",
				"postcss-message-helpers": "^2.0.0",
				"postcss-value-parser": "^3.3.0"
			},
			"devDependencies": {
				"eslint": "^3.19.0",
				"npmpub": "^3.1.0",
				"tape": "^3.0.0"
			},
			"scripts": {
				"lint": "eslint *.js index.js ./test/",
				"test": "npm run lint && tape test",
				"release": "npmpub"
			},
			"gitHead": "7c72d8815c9b7dc6608ee058ecb98d2d550e4980",
			"bugs": {
				"url": "https://github.com/postcss/postcss-color-function/issues"
			},
			"homepage": "https://github.com/postcss/postcss-color-function#readme",
			"_id": "postcss-color-function-with-at-rule@1.0.0",
			"_npmVersion": "5.8.0",
			"_nodeVersion": "8.11.3",
			"_npmUser": {
				"name": "mshipov",
				"email": "mshipov@yandex.ru"
			},
			"dist": {
				"integrity": "sha512-a1+dHWPU55HRCV9Z2NJXkIoTeFHqjVVI20M1TZgE6932XGApJDBhu6NIWr2AzbA7GYqPPagjZWg6C5WaxDz2/A==",
				"shasum": "361bdc6691e8ae6048a5a33deb285f1edf08c73f",
				"tarball": "https://registry.npmjs.org/postcss-color-function-with-at-rule/-/postcss-color-function-with-at-rule-1.0.0.tgz",
				"fileCount": 5,
				"unpackedSize": 8745,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbRfOYCRA9TVsSAnZWagAAJwkP/0v078xXA8qb7j2p3GVq\nA93mdbTjKIcdpdrDNfovU7N+nozBW0Bl5w2d4/clEdl3FQFjzkJeTq0PgiT2\nIANizW2S7YKvqBuhlLluv1MVecM7AAX9YQfX9hQHiJVC/SN6djMOguOsm+Ef\nU5xEKQ4VgZtXWeZ00eBSF5xrIgBTg3k9Li8LAl6YnU01ZZeO0Ae9GZfaDJe1\n975pvqDhU6OYAQ7UciliOk1d9LsCb0heDKzUWcA9MXk+zP90Y3FAFAp6ljTm\nF1QvIXaXdnl4Dh1mapE4b4yEQCVbm1L85LgVmlnsRGVjbcWGiS2h5tdZ9t5X\ndBA9tZTPiPsab0E4Lm5v5YFAAF7syNrEOzaLDPe80Fxj2C5+TEuIdgv/QOwg\nHrZ0RVLjrRoIC5MdRCHro4feISljyJz2ZBGWZEq0c9MJ4u1+D0eoFnDkKAQl\nSXNjElErd0h7SmMNPq4xEpSXQWcbp2T9z0JpyLXYZh5frg9aK8fdrkmgqxnc\nVQgRCkj8RjI2+BE8d9AfIu8lllurFRKoZMVkEFwbHC3/x6bJANnH6I6XFxXD\ntQ59l0C3Q5+f19Nc1E/F5eWSicNd9lQMH5S38OaYS8rqEh9zFXayn9N/gPEL\nXPdCTqNq6KVOmsKq0HyJpvSoyGIkmDp9/s0I08B+1pHpyLqwzOl44qgzfAfV\nuO6d\r\n=xirD\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIH/dWQ8hl6gNdPiEZEpt2Ccg9dkZIp0yG3CXy06U1MuZAiA+t+WgxbWKVjheRGce7TaH4i7HXZjp0uT4z6xjgMTxsg=="
					}
				]
			},
			"maintainers": [
				{
					"name": "mshipov",
					"email": "mshipov@yandex.ru"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-color-function-with-at-rule_1.0.0_1531311000733_0.04924352933186671"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2018-07-11T12:10:00.733Z",
		"1.0.0": "2018-07-11T12:10:00.916Z",
		"modified": "2022-05-13T06:08:17.949Z"
	},
	"maintainers": [
		{
			"name": "mshipov",
			"email": "mshipov@yandex.ru"
		}
	],
	"description": "PostCSS plugin to transform W3C CSS color function to more compatible CSS.",
	"homepage": "https://github.com/postcss/postcss-color-function#readme",
	"keywords": [
		"css",
		"postcss",
		"postcss-plugin",
		"color",
		"colour",
		"function"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/postcss/postcss-color-function.git"
	},
	"author": {
		"name": "Maxime Thirouin"
	},
	"bugs": {
		"url": "https://github.com/postcss/postcss-color-function/issues"
	},
	"license": "MIT",
	"readme": "# postcss-color-function [![CSS Standard Status](https://jonathantneal.github.io/css-db/badge/css-color-modifying-colors.svg)](https://jonathantneal.github.io/css-db/#css-color-modifying-colors) [![Build Status](https://travis-ci.org/postcss/postcss-color-function.svg)](https://travis-ci.org/postcss/postcss-color-function)\n\n> [PostCSS](https://github.com/postcss/postcss) plugin to transform [W3C CSS color function][specs] to more compatible CSS.\n\n## Installation\n\n```console\n$ npm install postcss-color-function\n```\n\n## Usage\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar colorFunction = require(\"postcss-color-function\")\n\n// css to be processed\nvar css = fs.readFileSync(\"input.css\", \"utf8\")\n\n// process css\nvar output = postcss()\n  .use(colorFunction())\n  .process(css)\n  .css\n```\n\nUsing this `input.css`:\n\n```css\nbody {\n  background: color(red a(90%))\n}\n\n```\n\nyou will get:\n\n```css\nbody {\n  background: rgba(255, 0, 0, 0.9)\n}\n```\n\nCheckout [tests](test) for examples.\n\n## Interface (according to CSS specs)\n\n```\ncolor( [ <color> | <hue> ] <color-adjuster>* )\n```\n\n### List of `color-adjuster`\n\n- `[red( | green( | blue( | alpha( | a(] ['+' | '-']? [<number> | <percentage>] )`\n- `[red( | green( | blue( | alpha( | a(] '*' <percentage> )`\n- ~~`rgb( ['+' | '-'] [<number> | <percentage>]{3} )`~~ @todo\n- ~~`rgb( ['+' | '-'] <hash-token> )`~~ @todo\n- ~~`rgb( '*' <percentage> ) |`~~ @todo\n- `[hue( | h(] ['+' | '-' | '*']? <angle> )`\n- `[saturation( | s(] ['+' | '-' | '*']? <percentage> )`\n- `[lightness( | l(] ['+' | '-' | '*']? <percentage> )`\n- `[whiteness( | w(] ['+' | '-' | '*']? <percentage> )`\n- `[blackness( | b(] ['+' | '-' | '*']? <percentage> )`\n- `tint( <percentage> )`\n- `shade( <percentage> )`\n- `blend( <color> <percentage> [rgb | hsl | hwb]? )`\n- ~~`blenda( <color> <percentage> [rgb | hsl | hwb]? )`~~ @todo\n- `contrast( <percentage>? )`\n\nNotes:\n\n- some adjusts have shortcuts,\n- can be used on every value on any property,\n- some values can use add/subtract/scale modifiers or a direct value.\n\n[Read the specs][specs] for more information.\n\n### Examples\n\n```css\nwhatever {\n  color: color(red a(10%));\n\n  background-color: color(red lightness(50%)); /* == color(red l(50%)); */\n\n  border-color: color(hsla(125, 50%, 50%, .4) saturation(+ 10%) w(- 20%));\n}\n```\n\n## FAQ\n\n### Can you support `currentcolor` so we can do `color(currentcolor adjuster())`?\n\nNo we cannot do that. `currentcolor` depends on the cascade (so the DOM) and we can't handle that in a simple preprocessing step. You need to handle that with polyfills.\n\n### Can we use CSS custom properties so we can do `color(var(--mainColor) adjuster())`?\n\nBy using [postcss-custom-properties](https://github.com/postcss/postcss-custom-properties) before this plugin, you can do that (sort of).\nYou have some examples in [cssnext playground](http://cssnext.io/playground/).\n\n## Notes for former Sass users\n\n`lighten` and `darken` are Sass specific methods and not supported by native CSS specs. The same functionality can be achieved with the [tint and shade adjusters](https://drafts.csswg.org/css-color/#tint-shade-adjusters):\n\n```css\n$lighten(red, 20%)\n/*  is equivalent to */\ncolor(red tint(20%))\n\n$darken(red, 20%)\n/*  is equivalent to */\ncolor(red shade(20%))\n```\n\n---\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n\n[specs]: http://dev.w3.org/csswg/css-color/#modifying-colors\n",
	"readmeFilename": "README.md",
	"_downloads": 46
}
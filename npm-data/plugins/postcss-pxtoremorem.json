{
	"_id": "postcss-pxtoremorem",
	"_rev": "2-2b06cc282428dfe3a2e22f0a9bcfa5d2",
	"name": "postcss-pxtoremorem",
	"dist-tags": {
		"latest": "5.1.1"
	},
	"versions": {
		"4.0.2": {
			"name": "postcss-pxtoremorem",
			"description": "A CSS post-processor that converts px to rem or em.",
			"version": "4.0.2",
			"author": {
				"name": "cuth and nailao"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/nailao/postcss-pxtoremorem.git"
			},
			"bugs": {
				"url": "https://github.com/nailao/postcss-pxtoremorem/issues"
			},
			"main": "index.js",
			"scripts": {
				"test": "jasmine-node spec"
			},
			"devDependencies": {
				"jasmine-node": "~1.11.0"
			},
			"keywords": [
				"css",
				"rem",
				"em",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": "^4.1.0",
				"postcss": "^5.2.10"
			},
			"gitHead": "3a44ad95a108e0ff4aab8814e82b3ac54ee5ef89",
			"homepage": "https://github.com/nailao/postcss-pxtoremorem#readme",
			"_id": "postcss-pxtoremorem@4.0.2",
			"_nodeVersion": "8.16.2",
			"_npmVersion": "6.13.0",
			"dist": {
				"integrity": "sha512-Awr556XUHpY86Trwsw+OTQMOYUBk0vxnQwCdBOZjmsTj2pqwDBa4vm//bARWtZEUBJQrqZD8jHa41o2dT2WnaA==",
				"shasum": "158bdba0e04a1f1d73da398b72dc7d325559f6a8",
				"tarball": "https://registry.npmjs.org/postcss-pxtoremorem/-/postcss-pxtoremorem-4.0.2.tgz",
				"fileCount": 13,
				"unpackedSize": 30273,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd2oNZCRA9TVsSAnZWagAAUC8P/12rf59AvJTkXdnGA/3b\nXegeTT3bA8L+bnhd7HQkG2awsH53NGODZSWA6erCT4oy1ttzndYrYSwG68in\nL9wJtvHPksOCbjEslqb00q3mAS2ilI17Rdhh3nIbHWmqb6j4nLJZlujQa4Kh\nsUYWXJlAuCVz5wFTXkZIP7/gXnMAqhX7qzJiUGWL+nR6s1LCft4MYHSoXauF\n2HTr6hk9MTSxr4e8nvYJy8BZbAxlsr6zwRLt0ajD60vOSd1whbSvXVExpZKi\nfBWr9V/Lbwra2AU6s2K+QvLysB3ahhpwoUb2AF+XDLM+GcW6/xG9vQMud8SG\nYYUGd7G5eIX6cnLgUXqaiQ+HpkxoCHEp5z4uf6Z4/5GGnLIsgOg3wtHkzU7K\nmOFOGzymPnPy+5x1Quwtpk0JvRyMm/+1/xk4dE//ZIMZ15YVgcBo4jE7Aj24\n6gPsyb3F+cipAziOISjtTrDxqXtGtl1Tvfu7IYbTfNOTYG3Xakv+jyxVLzr3\nXuYWS30zbID3cCWF5r9/UiZ+zP8Mx2QERC/ajaCp9UHgjRIVcctGaal82rGH\nisDa/ysljovvUuwIabp3gbYsqZISOj9cEpedqsEidiiGB84beAHsA0VMo4Ep\nNvWw4hJgzj+Y+Z8lUyICjP6ibGahb2UbsMeNEDd/JRfrGFtizB6nosSwK8+u\n4MxW\r\n=d7L5\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQC+eBuhnqkYhNoiFT40h+yUk5PIlMrom8Fgl7faET0WPgIgIdcowhalLNaQJJwAuv0Y6cn8MOxLCbPlFn34okwT5XM="
					}
				]
			},
			"maintainers": [
				{
					"name": "raysoul",
					"email": "ray.nailao@gmail.com"
				}
			],
			"_npmUser": {
				"name": "raysoul",
				"email": "ray.nailao@gmail.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtoremorem_4.0.2_1574601560662_0.5478849415353482"
			},
			"_hasShrinkwrap": false
		},
		"5.1.1": {
			"name": "postcss-pxtoremorem",
			"description": "A CSS post-processor that converts px to rem or em.",
			"version": "5.1.1",
			"author": {
				"name": "cuth and nailao"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/nailao/postcss-pxtoremorem.git"
			},
			"bugs": {
				"url": "https://github.com/nailao/postcss-pxtoremorem/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^6.8.0",
				"husky": "^4.2.3",
				"jasmine-node": "^3.0.0",
				"lint-staged": "^10.0.8",
				"prettier": "^1.19.1"
			},
			"keywords": [
				"css",
				"rem",
				"em",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"postcss": "^7.0.27"
			},
			"gitHead": "6d339e39ecbe44e75f7d159302e017d120c46814",
			"homepage": "https://github.com/nailao/postcss-pxtoremorem#readme",
			"_id": "postcss-pxtoremorem@5.1.1",
			"_nodeVersion": "8.17.0",
			"_npmVersion": "6.14.5",
			"dist": {
				"integrity": "sha512-Yeqx/1usXpq7O61r5CC5+NMCLGEkolV3pgTZMm4C2JH6Pcd3ZNuamwGzsS7GTb3iPs1wWw7JjVmAXBX0OeCH0Q==",
				"shasum": "ce6fa0ecd7e85e542dedcb628b9c36b275ff24c6",
				"tarball": "https://registry.npmjs.org/postcss-pxtoremorem/-/postcss-pxtoremorem-5.1.1.tgz",
				"fileCount": 12,
				"unpackedSize": 30561,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJes+DcCRA9TVsSAnZWagAA9FkP/3Ok+QZ9gloy8c9S+eLY\njmuYr/BEqvifh2s5/Pd1bx7a5bvCFq1rOrHPWHAGwCnMqOtcqBOYD85nstuZ\nB6wf9xRsYskXqIbiyrXXzXuaFYFX3EZMmHVLPDzaG8i6FPaoO7CZw77tGnM2\nXyxQckmOgnP0R3cRzt8Sh/dEEQTIdxN3i4B9VJUQ1LkM5I2y9IotRSmikbGx\nK98v531MOhrYMxSQxmK5W0OtaKaQVZnYPULmQhHGbZiTO0UkxN/9qHeeoUqo\nz1QNuOg7BkXzjDuIR1B2vjP/RTj8MK2CiRQ0o21tUGpAsCSC5QVIucqmmhfV\n5DUbNYh2tKo7qba+U+MTighmIZNytSciI4qjiEGzQzVfDtXXLrbsFGGp2UCi\nTdsqi4FrEQbG0LSEMjTchtTHBenHMtOHivfI0eBRIfi+LWKU+DJLzQ+R5+ne\ne3g9fK4Bv6FH7DYxP/VOPrJfl+BUGtUl/YnIm8RcCMclGpb5hAlxC4/sNq9k\n4fq8ZTwqg+5qE6TXs0IYLlvTYZpCS+0pTHxnLogKyHGe0Z6BzeDjM5jUc/mb\nzg6u64fGuJl8I1dRh9IceA/Fs5qXb1tUnqH3kCl6+GHOJb75IdVQrPgp5v4D\nIVsMEtOpqg16DySeOaF7lNsmNdI1xIL4ClXjdpz/RiTz7pdeS4ZlmWw+skFf\ngpO+\r\n=Fmwx\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCID4HHZtIHTuXKyHifzXP4rwomN5aRdfp7BHaulYJhxHAAiEAh/9AI6UwzCez+cUy0KlBNbcTpNKDr0XCCX6n3nJyTro="
					}
				]
			},
			"maintainers": [
				{
					"name": "raysoul",
					"email": "ray.nailao@gmail.com"
				}
			],
			"_npmUser": {
				"name": "raysoul",
				"email": "ray.nailao@gmail.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtoremorem_5.1.1_1588846812105_0.6180874573387425"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2019-11-24T13:19:20.662Z",
		"4.0.2": "2019-11-24T13:19:20.782Z",
		"modified": "2022-05-13T06:39:48.060Z",
		"5.1.1": "2020-05-07T10:20:12.255Z"
	},
	"maintainers": [
		{
			"name": "raysoul",
			"email": "ray.nailao@gmail.com"
		}
	],
	"description": "A CSS post-processor that converts px to rem or em.",
	"homepage": "https://github.com/nailao/postcss-pxtoremorem#readme",
	"keywords": [
		"css",
		"rem",
		"em",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/nailao/postcss-pxtoremorem.git"
	},
	"author": {
		"name": "cuth and nailao"
	},
	"bugs": {
		"url": "https://github.com/nailao/postcss-pxtoremorem/issues"
	},
	"license": "MIT",
	"readme": "# postcss-pxtoremorem [![NPM version](https://badge.fury.io/js/postcss-pxtoremorem.svg)](http://badge.fury.io/js/postcss-pxtoremorem)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rem or em units from pixel units.\n\n## Install\n\n```shell\n$ npm install postcss-pxtoremorem --save-dev\n```\n\n## Usage\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem or em from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1Px;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625em;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtoremorem = require('postcss-pxtoremorem');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtoremorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0,\n    exclude: /node_modules/i\n}\n```\n\n- `rootValue` (Number | Function) Represents the root element font size or returns the root element font size based on the [`input`](https://api.postcss.org/Input.html) parameter\n- `unitPrecision` (Number) The decimal numbers to allow the REM or EM units to grow to.\n- `propList` (Array) The properties that can change from px to rem or em.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']` \n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) replaces rules containing rems or ems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `exclude` (String, Regexp, Function) The file path to ignore and leave as px.\n    - If value is string, it checks to see if file path contains the string.\n        - `'exclude'` will match `\\project\\postcss-pxtoremorem\\exclude\\path`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `/exclude/i` will match `\\project\\postcss-pxtoremorem\\exclude\\path`\n    - If value is function, you can use exclude function to return a true and the file will be ignored.\n        - the callback will pass the file path as  a parameter, it should returns a Boolean result.\n        - `function (file) { return file.indexOf('exclude') !== -1; }`\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtoremorem = require('postcss-pxtoremorem');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtoremorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` is converted to `em`\n.convert {\n    font-size: 16Px; // converted to 1em\n}\n\n// `PX` is ignored by `postcss-pxtoremorem` but still accepted by browsers\n.ignore {\n    border: 1PX solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 5
}
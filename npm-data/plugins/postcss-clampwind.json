{
	"_id": "postcss-clampwind",
	"_rev": "7-be1d1f9689938440f9bf8f64d2e988b9",
	"name": "postcss-clampwind",
	"dist-tags": {
		"latest": "0.0.7"
	},
	"versions": {
		"0.0.1": {
			"name": "postcss-clampwind",
			"version": "0.0.1",
			"keywords": [
				"clampwind",
				"postcss-plugin",
				"tailwindcss",
				"clamp",
				"fluid",
				"variants"
			],
			"license": "Apache-2.0",
			"_id": "postcss-clampwind@0.0.1",
			"maintainers": [
				{
					"name": "danieledep",
					"email": "dan.depietri@gmail.com"
				}
			],
			"homepage": "https://github.com/danieledep/postcss-clampwind#readme",
			"bugs": {
				"url": "https://github.com/danieledep/postcss-clampwind/issues"
			},
			"dist": {
				"shasum": "c7daa77fef80e3e7e05b3341b52aa454911305cb",
				"tarball": "https://registry.npmjs.org/postcss-clampwind/-/postcss-clampwind-0.0.1.tgz",
				"fileCount": 5,
				"integrity": "sha512-BMX+cHMbbohT+xxQkhLJPG5nvECKX6XXJ33w+9TCH7Wj29EVheE2/xkwHSLs82AWVOw1IRI1ENrs5ZvbZz0OBQ==",
				"signatures": [
					{
						"sig": "MEYCIQClNln6Va/VTQcPHaTDEYv04HA8bCwfVv2Y4GBifgButwIhAK5cx+Zav8SLso/7du8eNSY/lr5tMH8YXgriz/u/Fy//",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 54512
			},
			"main": "./dist/clampwind.esm.js",
			"type": "module",
			"exports": {
				"import": "./dist/clampwind.esm.js",
				"default": "./dist/clampwind.esm.js",
				"require": "./dist/clampwind.cjs.cjs"
			},
			"gitHead": "ac7eab003993be9f2a43140ce1853028860b2cb3",
			"scripts": {
				"dev": "node scripts/build.js --watch",
				"build": "node scripts/build.js"
			},
			"_npmUser": {
				"name": "danieledep",
				"email": "dan.depietri@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/danieledep/postcss-clampwind.git",
				"type": "git"
			},
			"_npmVersion": "10.8.1",
			"description": "A PostCSS plugin to create fluid clamp values for any Tailwind CSS utility",
			"directories": {},
			"_nodeVersion": "20.16.0",
			"publishConfig": {
				"access": "public"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"esbuild": "^0.25.6"
			},
			"peerDependencies": {
				"postcss": "^8.4.39"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-clampwind_0.0.1_1755155836629_0.8557951451078263",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.0.2": {
			"name": "postcss-clampwind",
			"version": "0.0.2",
			"keywords": [
				"clampwind",
				"postcss-plugin",
				"tailwindcss",
				"clamp",
				"fluid",
				"variants"
			],
			"license": "Apache-2.0",
			"_id": "postcss-clampwind@0.0.2",
			"maintainers": [
				{
					"name": "danieledep",
					"email": "dan.depietri@gmail.com"
				}
			],
			"homepage": "https://github.com/danieledep/postcss-clampwind#readme",
			"bugs": {
				"url": "https://github.com/danieledep/postcss-clampwind/issues"
			},
			"dist": {
				"shasum": "5dbb26b221ce6deb43a58f16ef0251c01214b330",
				"tarball": "https://registry.npmjs.org/postcss-clampwind/-/postcss-clampwind-0.0.2.tgz",
				"fileCount": 5,
				"integrity": "sha512-H99cSEC9IasGc0uKuuXlZJZO3UOdDUWqreocpiVn149UVxdKDpjGSyEQosZGz3Sff5jwQqTQTUvlgD8DGn/kkw==",
				"signatures": [
					{
						"sig": "MEUCIG3MTTPlcXbyUWgUD0X7l/Hx/KtsoQOC+zat0LldIv1nAiEAkwJUjqPW3jre/57ew3Rojw7oXtoLarLHTYvRtiuTi0Q=",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 54576
			},
			"main": "./dist/clampwind.esm.js",
			"type": "module",
			"exports": {
				"import": "./dist/clampwind.esm.js",
				"default": "./dist/clampwind.esm.js",
				"require": "./dist/clampwind.cjs.cjs"
			},
			"gitHead": "ac7eab003993be9f2a43140ce1853028860b2cb3",
			"scripts": {
				"dev": "node scripts/build.js --watch",
				"build": "node scripts/build.js"
			},
			"_npmUser": {
				"name": "danieledep",
				"email": "dan.depietri@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/danieledep/postcss-clampwind.git",
				"type": "git"
			},
			"_npmVersion": "10.8.1",
			"description": "A PostCSS plugin to create fluid clamp values for any Tailwind CSS utility",
			"directories": {},
			"_nodeVersion": "20.16.0",
			"publishConfig": {
				"access": "public"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"esbuild": "^0.25.6"
			},
			"peerDependencies": {
				"postcss": "^8.4.39"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-clampwind_0.0.2_1755156113293_0.7720980492304297",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.0.3": {
			"name": "postcss-clampwind",
			"version": "0.0.3",
			"keywords": [
				"clampwind",
				"postcss-plugin",
				"tailwindcss",
				"clamp",
				"fluid",
				"variants"
			],
			"license": "Apache-2.0",
			"_id": "postcss-clampwind@0.0.3",
			"maintainers": [
				{
					"name": "danieledep",
					"email": "dan.depietri@gmail.com"
				}
			],
			"homepage": "https://github.com/danieledep/postcss-clampwind#readme",
			"bugs": {
				"url": "https://github.com/danieledep/postcss-clampwind/issues"
			},
			"dist": {
				"shasum": "cd38f05e75da88550069c89742650bd7c50a155c",
				"tarball": "https://registry.npmjs.org/postcss-clampwind/-/postcss-clampwind-0.0.3.tgz",
				"fileCount": 5,
				"integrity": "sha512-rhvwgdovz7RyiY7V2/KMl98Wm8WPCu8zyvrYo/kOfGJsMxt7EPJ52hAJujmRUSfmLGxeBrpnrOYc4tqvlYRveQ==",
				"signatures": [
					{
						"sig": "MEYCIQDfxqKi3RZaZ16ViB57k0JhGfrNv8n/68XARozuGmcP6gIhAKNfSbqzbKJiE727aKg9qVUb4HhZeYAAC6ofkyWViopB",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 53828
			},
			"main": "./dist/clampwind.esm.js",
			"type": "module",
			"exports": {
				"import": "./dist/clampwind.esm.js",
				"default": "./dist/clampwind.esm.js",
				"require": "./dist/clampwind.cjs.cjs"
			},
			"gitHead": "445f1187b9d5849908410804b359da76e06fdb6b",
			"scripts": {
				"dev": "node scripts/build.js --watch",
				"build": "node scripts/build.js"
			},
			"_npmUser": {
				"name": "danieledep",
				"email": "dan.depietri@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/danieledep/postcss-clampwind.git",
				"type": "git"
			},
			"_npmVersion": "10.8.1",
			"description": "A PostCSS plugin to create fluid clamp values for any Tailwind CSS utility",
			"directories": {},
			"_nodeVersion": "20.16.0",
			"publishConfig": {
				"access": "public"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"esbuild": "^0.25.6"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-clampwind_0.0.3_1755158375204_0.8470727976710426",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.0.4": {
			"name": "postcss-clampwind",
			"version": "0.0.4",
			"keywords": [
				"clampwind",
				"postcss-plugin",
				"tailwindcss",
				"clamp",
				"fluid",
				"variants"
			],
			"license": "Apache-2.0",
			"_id": "postcss-clampwind@0.0.4",
			"maintainers": [
				{
					"name": "danieledep",
					"email": "dan.depietri@gmail.com"
				}
			],
			"homepage": "https://github.com/danieledep/postcss-clampwind#readme",
			"bugs": {
				"url": "https://github.com/danieledep/postcss-clampwind/issues"
			},
			"dist": {
				"shasum": "fca4600a4ee14b38979c83e87ee7f304f478c839",
				"tarball": "https://registry.npmjs.org/postcss-clampwind/-/postcss-clampwind-0.0.4.tgz",
				"fileCount": 5,
				"integrity": "sha512-H7yp+kZEXLhqs0VJHkPv0TKaKVUkeBaG+BoTL3sF2DGUA5h9jnyNF7J17N5MstGXbSmvv5MJ+jTBABPmxF1EIQ==",
				"signatures": [
					{
						"sig": "MEQCIHiQlaNqFlAEzZtjOfsdFuoLuSuln9SuJkPT2Opbei4AAiAMVs075shdzzl3D7Z8/q8xgw656gxs5uw0jPvLp5EnXQ==",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 58167
			},
			"main": "./dist/clampwind.esm.js",
			"type": "module",
			"exports": {
				"import": "./dist/clampwind.esm.js",
				"default": "./dist/clampwind.esm.js",
				"require": "./dist/clampwind.cjs.cjs"
			},
			"gitHead": "445f1187b9d5849908410804b359da76e06fdb6b",
			"scripts": {
				"dev": "node scripts/build.js --watch",
				"build": "node scripts/build.js"
			},
			"_npmUser": {
				"name": "danieledep",
				"email": "dan.depietri@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/danieledep/postcss-clampwind.git",
				"type": "git"
			},
			"_npmVersion": "10.8.1",
			"description": "A PostCSS plugin to create fluid clamp values for any Tailwind CSS utility",
			"directories": {},
			"_nodeVersion": "20.16.0",
			"publishConfig": {
				"access": "public"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"esbuild": "^0.25.6"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-clampwind_0.0.4_1755349417545_0.6696851162955164",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.0.5": {
			"name": "postcss-clampwind",
			"version": "0.0.5",
			"keywords": [
				"clampwind",
				"postcss-plugin",
				"tailwindcss",
				"clamp",
				"fluid",
				"variants"
			],
			"license": "Apache-2.0",
			"_id": "postcss-clampwind@0.0.5",
			"maintainers": [
				{
					"name": "danieledep",
					"email": "dan.depietri@gmail.com"
				}
			],
			"homepage": "https://github.com/danieledep/postcss-clampwind#readme",
			"bugs": {
				"url": "https://github.com/danieledep/postcss-clampwind/issues"
			},
			"dist": {
				"shasum": "e00786eb62e5e20ba0c4e7dfebf49bd058362745",
				"tarball": "https://registry.npmjs.org/postcss-clampwind/-/postcss-clampwind-0.0.5.tgz",
				"fileCount": 5,
				"integrity": "sha512-YZVUqLq1KUs+wRrCEJ4ImkvjjPkExsRGxCO89P+zyZ+m+rAoE9jOsiR5AKka9nWTrvjTKf19ubjOmIQjRrvyuw==",
				"signatures": [
					{
						"sig": "MEUCIQCazEtv/dOq+xGkTpJj89Xc1PI5bvm4WHtUl9UAdBqW3QIgOl2J8We5f0fF1PWGepSbl169RpUFfnxCaQj4jZ3eQP0=",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 58423
			},
			"main": "./dist/clampwind.esm.js",
			"type": "module",
			"exports": {
				"import": "./dist/clampwind.esm.js",
				"default": "./dist/clampwind.esm.js",
				"require": "./dist/clampwind.cjs.cjs"
			},
			"gitHead": "07010cdfe9b504c76090805cfb184c0a4fc1860c",
			"scripts": {
				"dev": "node scripts/build.js --watch",
				"build": "node scripts/build.js"
			},
			"_npmUser": {
				"name": "danieledep",
				"email": "dan.depietri@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/danieledep/postcss-clampwind.git",
				"type": "git"
			},
			"_npmVersion": "10.8.1",
			"description": "A PostCSS plugin to create fluid clamp values for any Tailwind CSS utility",
			"directories": {},
			"_nodeVersion": "20.16.0",
			"publishConfig": {
				"access": "public"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"esbuild": "^0.25.6"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-clampwind_0.0.5_1755357045124_0.17981031548057036",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.0.6": {
			"name": "postcss-clampwind",
			"version": "0.0.6",
			"keywords": [
				"clampwind",
				"postcss-plugin",
				"tailwindcss",
				"clamp",
				"fluid",
				"variants"
			],
			"license": "Apache-2.0",
			"_id": "postcss-clampwind@0.0.6",
			"maintainers": [
				{
					"name": "danieledep",
					"email": "dan.depietri@gmail.com"
				}
			],
			"homepage": "https://github.com/danieledep/postcss-clampwind#readme",
			"bugs": {
				"url": "https://github.com/danieledep/postcss-clampwind/issues"
			},
			"dist": {
				"shasum": "e3d057a9bf04a99165bce1c37e88bd39248d5009",
				"tarball": "https://registry.npmjs.org/postcss-clampwind/-/postcss-clampwind-0.0.6.tgz",
				"fileCount": 5,
				"integrity": "sha512-Wf21OPhIagQJfyaFVfZI5W1My/PYRDLJJPx1LjWSsPgZDE168k0GAwsPJg152+Ao+UG6rl1pIDwxEXNDyxBZ0g==",
				"signatures": [
					{
						"sig": "MEQCIBJa4ZUXphTcsbYsvqvVgOo36stXpdCywkmo/pRPJ7sPAiAcCKIpbD1taVV2dx/VJHnnziQ7Vj+etB6LJiWL6ydunw==",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 63039
			},
			"main": "./dist/clampwind.esm.js",
			"type": "module",
			"exports": {
				"import": "./dist/clampwind.esm.js",
				"default": "./dist/clampwind.esm.js",
				"require": "./dist/clampwind.cjs.cjs"
			},
			"gitHead": "3d16904eac2f30a1a2d981270bf469d53c7c97d4",
			"scripts": {
				"dev": "node scripts/build.js --watch",
				"build": "node scripts/build.js"
			},
			"_npmUser": {
				"name": "danieledep",
				"email": "dan.depietri@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/danieledep/postcss-clampwind.git",
				"type": "git"
			},
			"_npmVersion": "10.8.1",
			"description": "A PostCSS plugin to create fluid clamp values for any Tailwind CSS utility",
			"directories": {},
			"_nodeVersion": "20.16.0",
			"publishConfig": {
				"access": "public"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"esbuild": "^0.25.6"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-clampwind_0.0.6_1756139917533_0.20406950957848924",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.0.7": {
			"name": "postcss-clampwind",
			"version": "0.0.7",
			"description": "A PostCSS plugin to create fluid clamp values for any Tailwind CSS utility",
			"license": "Apache-2.0",
			"keywords": [
				"clampwind",
				"postcss-plugin",
				"tailwindcss",
				"clamp",
				"fluid",
				"variants"
			],
			"repository": {
				"type": "git",
				"url": "git+https://github.com/danieledep/postcss-clampwind.git"
			},
			"bugs": {
				"url": "https://github.com/danieledep/postcss-clampwind/issues"
			},
			"type": "module",
			"publishConfig": {
				"access": "public"
			},
			"main": "./dist/clampwind.esm.js",
			"exports": {
				"require": "./dist/clampwind.cjs.cjs",
				"import": "./dist/clampwind.esm.js",
				"default": "./dist/clampwind.esm.js"
			},
			"devDependencies": {
				"esbuild": "^0.25.6"
			},
			"scripts": {
				"dev": "node scripts/build.js --watch",
				"build": "node scripts/build.js"
			},
			"_id": "postcss-clampwind@0.0.7",
			"gitHead": "be10469e44ef56f44ed0b9b4abaf27fdb6a7b5e4",
			"homepage": "https://github.com/danieledep/postcss-clampwind#readme",
			"_nodeVersion": "20.16.0",
			"_npmVersion": "10.8.1",
			"dist": {
				"integrity": "sha512-ClwSJwdWuZxHXDdfOLNSoSDnmun4YY5fYCcyFNxLvU0PfOOvFfvrQ3fec3cQhBzdf9CMfTUG1nooULsI6cfZsQ==",
				"shasum": "4eaf87c5f6777663e9e349912181e94e99c4554d",
				"tarball": "https://registry.npmjs.org/postcss-clampwind/-/postcss-clampwind-0.0.7.tgz",
				"fileCount": 5,
				"unpackedSize": 63495,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIFOcKgyrRen1KpYB6SB8Y9sRGilYAmILQJ1ms8CHaBPJAiEAlE0dtm4rMmWFsx7Mqu6H3WOmaMxj3VGsrxXDDCxfdaw="
					}
				]
			},
			"_npmUser": {
				"name": "danieledep",
				"email": "dan.depietri@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "danieledep",
					"email": "dan.depietri@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-clampwind_0.0.7_1758489734908_0.8202612284928321"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-08-14T07:17:16.562Z",
		"modified": "2025-09-21T21:22:15.249Z",
		"0.0.1": "2025-08-14T07:17:16.810Z",
		"0.0.2": "2025-08-14T07:21:53.494Z",
		"0.0.3": "2025-08-14T07:59:35.368Z",
		"0.0.4": "2025-08-16T13:03:37.748Z",
		"0.0.5": "2025-08-16T15:10:45.319Z",
		"0.0.6": "2025-08-25T16:38:37.730Z",
		"0.0.7": "2025-09-21T21:22:15.080Z"
	},
	"bugs": {
		"url": "https://github.com/danieledep/postcss-clampwind/issues"
	},
	"license": "Apache-2.0",
	"homepage": "https://github.com/danieledep/postcss-clampwind#readme",
	"keywords": [
		"clampwind",
		"postcss-plugin",
		"tailwindcss",
		"clamp",
		"fluid",
		"variants"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/danieledep/postcss-clampwind.git"
	},
	"description": "A PostCSS plugin to create fluid clamp values for any Tailwind CSS utility",
	"maintainers": [
		{
			"name": "danieledep",
			"email": "dan.depietri@gmail.com"
		}
	],
	"readme": "# postcss-clampwind\n\nA PostCSS plugin that transforms any two‑argument `clamp()` call into a fully fluid value, seamlessly integrating with Tailwind CSS utilities. Made for Tailwind v4.\n\n## How it works\n\nInstead of the standard three-value `clamp(min, preferred, max)`, you supply just a minimum and maximum:\n\n```html\n<div class=\"text-[clamp(16px,50px)]\"></div>\n```\n\nThis will generate the following CSS:\n\n```css\n.text-\\[clamp\\(16px\\,50px\\)\\] {\n  font-size: clamp(1rem, calc(1rem + 0.0379 * (100vw - 40rem)), 3.125rem);\n}\n```\n\nThe supplied values are used to generate the expression inside the `clamp()` function, where the fluid transformation is calculated using Tailwind's smallest and largest breakpoints.\n\n\n## Installation\n\nInstall the plugin from npm:\n\n```sh\nnpm install -D postcss-clampwind\n```\n### Vite project setup\n\nIf you are using Vite, you are probably using Tailwind with `@tailwindcss/vite`. You need to import the plugin and use it in your `postcss.config.js` file.\n\n```js\n// postcss.config.js\nimport clampwind from \"postcss-clampwind\";\n\nexport default { \n  plugins: [ \n    clampwind()\n  ] \n}; \n```\n**Demo on StackBlitz:** [postcss-clampwind-vite](https://stackblitz.com/edit/postcss-clampwind-vite?file=postcss.config.js)\n\n### PostCSS setup\n\nAdd the plugin to your `postcss.config.js` file:\n\n```js\n// postcss.config.mjs\nimport tailwindcss from \"@tailwindcss/postcss\"\nimport clampwind from \"postcss-clampwind\"\n\nexport default {\n  plugins: [\n    tailwindcss(),\n    clampwind(),\n  ]\n}\n```\n\n**Demo on StackBlitz:** [postcss-clampwind-postcss](https://stackblitz.com/edit/postcss-clampwind-postcss?file=postcss.config.mjs)\n\n#### CommonJS usage\n\nIf you are using CommonJS-based build tools like Webpack, you will need to use the `require` syntax and add `.default` to the import.\n\n```js\n// postcss.config.js\nmodule.exports = { \n  plugins: { \n    require(\"@tailwindcss/postcss\"),\n    require(\"postcss-clampwind\").default\n  } \n};\n```\n\n## Features\n\n### Interchangeable px / rem units\n\nAllow clamped values to use either px or rem interchangeably.\n\n```html\n<div class=\"text-[clamp(1rem,50px)]\"></div>\n```\n\n### Use Tailwind breakpoint modifiers\n\nUse the native Tailwind syntax to clamp values within a specific range by using breakpoint modifiers.\n\n```html\n<div class=\"md:max-lg:text-[clamp(16px,50px)]\"></div>\n```\n### Unitless clamping\n\nIf no unit is specified, default to your theme’s `--spacing` scale.\n\n```html\n<div class=\"text-[clamp(16,50)]\"></div>\n```\n\n### Use Tailwind size variables\n\nClamp using Tailwind’s predefined size tokens.\n\n```html\n<div class=\"text-[clamp(var(--text-sm),50px)]\"></div>\n```\n\n### Use CSS custom properties\n\nClamp using CSS custom properties.\n\n```html\n<div class=\"text-[clamp(var(--custom-value),50px)]\"></div>\n```\n\n### Container query support\n\nClamp values based on container query breakpoints.\n\n```html\n<div class=\"@md:text-[clamp(16px,50px)]\"></div>\n```\n\n### Decreasing and negative ranges\n\nSupport clamped ranges that shrink or go below zero.\n\n```html\n<div class=\"text-[clamp(50px,16px)]\"></div>\n```\n\n### Error reporting via CSS comments\n\nOutput validation errors as CSS comments for easy debugging.\n\n```css\n.text-\\[clamp\\(16%\\,50px\\)\\] {\n  font-size: clamp(16%,50px); /* Invalid clamp() values */\n}\n```\n\n\n## Usage\n\nTo use this plugin you need to use the `clamp()` function but with **only two arguments**, the first one is the minimum value and the second one is the maximum value.\n\n### Clamp between smallest and largest breakpoint\n\nWrite the Tailwind utility you want to make fluid, without any breakpoint modifier, for example:\n\n```html\n<div class=\"text-[clamp(16px,50px)]\"></div>\n```\n\nThis will use Tailwind default largest and smallest breakpoint.\n\n```css\n.text-\\[clamp\\(16px\\,50px\\)\\] {\n  font-size: clamp(1rem, calc(...) , 3.125rem);\n}\n```\n\n### Clamp between two breakpoints\n\nSimply add regular Tailwind breakpoint modifiers to the utility, for example:\n\n```html\n<div class=\"md:max-lg:text-[clamp(16px,50px)]\"></div>\n```\n\nTo clamp the CSS property between the two breakpoints you need to use the `max-` modifier, in this case the CSS property will be clamped between the `md` and `lg` breakpoints.\n\nThis will generate the following css:\n\n```css\n.md\\:max-lg\\:text-\\[clamp\\(16px\\,50px\\)\\] {\n  @media (width >= 48rem) { /* >= 768px */\n    @media (width < 64rem) { /* < 1024px */\n      font-size: clamp(1rem, calc(...), 3.125rem);\n    }\n  }\n}\n```\n\n### Clamp from one breakpoint\n\nIf you want to define a clamp value from a single breakpoint, postcss-clampwind will automatically generate the calculation from the defined breakpoint to the smallest or largest breakpoint depending on the direction, for example:\n\n```html\n<div class=\"md:text-[clamp(16px,50px)]\"></div>\n```\n\nThis will generate the following css:\n\n```css\n.md\\:text-\\[clamp\\(16px\\,50px\\)\\] {\n    @media (width >= 48rem) {  /* >= 768px */\n      font-size: clamp(1rem, calc(...), 3.125rem);\n    }\n  }\n```\nOr if you use the `max-` modifier:\n\n```css\n.max-md\\:text-\\[clamp\\(16px\\,50px\\)\\] {\n    @media (width < 48rem) { /* < 768px */\n      font-size: clamp(1rem, calc(...), 3.125rem);\n    }\n  }\n```\n\n### Clamp between custom breakpoints\n\nWith Tailwind v4 it's really easy to use one-time custom breakpoints, and this plugin will automatically detect them and use them to clamp the CSS property.\n\n```html\n<div class=\"min-[1000px]:max-xl:text-[clamp(16px,50px)]\"></div>\n```\n\nThis will generate the following css:\n\n```css\n.min-\\[1000px\\]\\:max-xl\\:text-\\[clamp\\(16px\\,50px\\)\\] {\n  @media (width >= 1000px) { /* >= 1000px */\n    @media (width < 64rem) { /* < 1600px */\n      font-size: clamp(1rem, calc(...), 3.125rem);\n    }\n  }\n}\n```\n\n### Clamp between Tailwind spacing scale values\n\nA quick way to define two clamped values is to use the Tailwind spacing scale values, for example:\n\n```html\n<div class=\"text-[clamp(16,50)]\"></div>\n```\n\nThe bare values size depends on the theme `--spacing` size, so if you have have it set to `1px` it will generate the following css:\n\n```css\n.text-\\[clamp\\(16\\,50\\)\\] {\n  font-size: clamp(1rem, calc(...), 3.125rem);\n}\n```\n\n### Clamp custom properties values\n\nYou can also use custom properties in your clamped values, for example like this:\n\n```html\n<div class=\"text-[clamp(var(--text-sm),50px)]\"></div>\n```\nor like this:\n\n```html\n<div class=\"text-[clamp(--text-sm,--text-lg)]\"></div>\n```\n\nBut this won't work when using two custom properties directly in the CSS with `@apply`, so you need to use the `var()` function instead.\n\n```css\n.h2 {\n  @apply text-[clamp(var(--text-sm),var(--text-lg))];\n}\n```\n\n\n\n### Clamp container queries\n\nPostcss-clampwind supports container queries, just by using the normal Tailwind container query syntax, for example:\n\n```html\n<div class=\"@md:text-[clamp(16px,50px)]\"></div>\n```\n\nThis will generate the following css:\n\n```css\n.@md\\:text-\\[clamp\\(16px\\,50px\\)\\] {\n  @container (width >= 28rem) { /* >= 448px */\n    font-size: clamp(1rem, calc(...), 3.125rem);\n  }\n}\n```\n\n## Configuration\n\nTailwind v4 introduced the new CSS-based configuration and postcss-clampwind embraces it.\n\n### Add custom breakpoints\n\nTo add new breakpoints in Tailwind v4 you normally define them inside the `@theme` directive.\n\nBut Tailwind by default, will not output in your CSS any custom properties that are not referenced in your CSS, for this reason you should use the `@theme static` directive instead of `@theme` to create custom breakpoints.\n\n```css\n@theme static {\n  --breakpoint-4xl: 1600px;\n}\n```\n\n### Set a default clamp range\n\nYou can set a default clamp range to use when no breakpoint modifier is used, like this:\n\n```html\n<div class=\"text-[clamp(16px,50px)]\"></div>\n```\n\nTo set a default clamp range you need to use the `--breakpoint-clamp-min` and `--breakpoint-clamp-max` custom properties, defined inside the `@theme static` directive.\n\n```css\n@theme static {\n  --breakpoint-clamp-min: 600px;\n  --breakpoint-clamp-max: 1200px;\n}\n```\n\nThis will also apply for utilities that use only one breakpoint modifier. In this example the `md` breakpoint will be used as the minimum breakpoint, and `--breakpoint-clamp-max` will be used as the maximum breakpoint:\n\n```html\n<div class=\"md:text-[clamp(16px,50px)]\"></div>\n```\n\nThe default clamp range will let you to simplify your utilities, since usually you don't need to clamp between the smallest and largest Tailwind breakpoints, but only between two breakpoints. \n\nYou will still be able to clamp between any other Tailwind or custom breakpoints, even if out of the default clamp range.\n\n### Use custom properties\n\nYou can use any custom properties in your clamped values, for example:\n\n```html\n<div class=\"text-[clamp(--custom-value,50px)]\"></div>\n```\n\nYou just need to make sure that the custom property is defined in your `:root` selector.\n\n```css\n:root {\n  --custom-value: 16px;\n}\n```\n\n### Pixel to rem conversion\n\nIf you are using pixel values in your clamped values, clampwind will automatically convert them to rem. For the conversion it scans your generated css and if you have set pixel values for the root `font-size` or for your `--text-base` custom property in your `:root` selector, it will use that value to convert the pixel values to rem values. If you haven't set a font-size in your `:root` selector, it will use the default value of 16px.\n\n```css\n:root {\n  font-size: 18px; /* 18px = 1.125rem */\n}\n```\nor like this:\n\n```css\n:root {\n  --text-base: 18px; /* 18px = 1.125rem */\n}\n```\n\n## License and Credits\n\nThis project is licensed under the [Apache-2.0 license](https://apache.org/licenses/LICENSE-2.0).\n\nCopyright © 2025 Daniele De Pietri.\n",
	"readmeFilename": "README.md",
	"_downloads": 214
}
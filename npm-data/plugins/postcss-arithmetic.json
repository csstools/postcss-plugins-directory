{
	"_id": "postcss-arithmetic",
	"_rev": "6-b6bc0b746e2c6f3b0916505101fb6dff",
	"name": "postcss-arithmetic",
	"dist-tags": {
		"latest": "0.0.4"
	},
	"versions": {
		"0.0.1": {
			"name": "postcss-arithmetic",
			"version": "0.0.1",
			"description": "",
			"main": "index.js",
			"scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			},
			"keywords": [
				"postcss",
				"arithmetic",
				"css",
				"math",
				"calculation"
			],
			"author": {
				"name": "Zack Frost"
			},
			"license": "MIT",
			"dependencies": {
				"gulp-postcss": "^7.0.0",
				"lodash": "^4.17.4",
				"mathjs": "^3.13.3",
				"postcss": "^6.0.2"
			},
			"devDependencies": {
				"gulp": "^3.9.1",
				"named-js-regexp": "^1.3.2"
			},
			"_id": "postcss-arithmetic@0.0.1",
			"_npmVersion": "5.0.3",
			"_nodeVersion": "6.10.3",
			"_npmUser": {
				"name": "zfzackfrost",
				"email": "zackart98@gmail.com"
			},
			"dist": {
				"integrity": "sha512-F93Rl1FRoEAY4frRh4iQPZz2aUCFMmCdo5M/eRU3N9z/3mn0hUSKSWoT2nVLo6SJAz8DySpAB1zfuZgLGDiX/w==",
				"shasum": "1bd1fabe8fc292d951dddc0b8d212a8932e82835",
				"tarball": "https://registry.npmjs.org/postcss-arithmetic/-/postcss-arithmetic-0.0.1.tgz",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCBnHlehGqXz92dn3YdnAjBww9SU6Zpz2xDg2hD9l17KgIgCeEIh/KALwNWCtjv1f9DlTnQS1UuOKvBAuNMpXgQuGc="
					}
				]
			},
			"maintainers": [
				{
					"name": "zfzackfrost",
					"email": "zackart98@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-arithmetic-0.0.1.tgz_1497646567566_0.21056543570011854"
			}
		},
		"0.0.2": {
			"name": "postcss-arithmetic",
			"version": "0.0.2",
			"description": "Utilizes math.js to correctly parse order of operations. Also,  when expressions can not be resolved (if there are are multiple units types for example), postcss-arithmetic can replace the whole expression with a CSS `calc()` statement.",
			"main": "index.js",
			"scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			},
			"keywords": [
				"postcss",
				"arithmetic",
				"css",
				"math",
				"calculation"
			],
			"author": {
				"name": "Zack Frost"
			},
			"license": "MIT",
			"dependencies": {
				"gulp-postcss": "^7.0.0",
				"lodash": "^4.17.4",
				"mathjs": "^3.13.3",
				"postcss": "^6.0.2"
			},
			"devDependencies": {
				"gulp": "^3.9.1",
				"named-js-regexp": "^1.3.2"
			},
			"gitHead": "b7ad7670d949b36a366cd5e1557cde5b047aece7",
			"_id": "postcss-arithmetic@0.0.2",
			"_npmVersion": "5.0.3",
			"_nodeVersion": "6.10.3",
			"_npmUser": {
				"name": "zfzackfrost",
				"email": "zackart98@gmail.com"
			},
			"dist": {
				"integrity": "sha512-ftSAuQa9CJJ1OeS9l4l6EEfNGOjh/gVlqDf2jJ8cOaAXkw/N/TdAYK2ky2BUCql6UyoGBOcHnx3r/y1T4XTejg==",
				"shasum": "9ba1540d42bac6ab7918816aeab738e4ef501081",
				"tarball": "https://registry.npmjs.org/postcss-arithmetic/-/postcss-arithmetic-0.0.2.tgz",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCwmgjwDw45rKRaIZdYVFrSByvXGejCFsqH4tKLi9XA2AIhAMN5SctmMcwl2A5KC9928BOjTr4d2D2rw0+kZKS1pmfY"
					}
				]
			},
			"maintainers": [
				{
					"name": "zfzackfrost",
					"email": "zackart98@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-arithmetic-0.0.2.tgz_1497649130450_0.7794356825761497"
			}
		},
		"0.0.3": {
			"name": "postcss-arithmetic",
			"version": "0.0.3",
			"description": "Utilizes math.js to correctly parse order of operations. Also,  when expressions can not be resolved (if there are are multiple units types for example), postcss-arithmetic can replace the whole expression with a CSS `calc()` statement.",
			"main": "index.js",
			"scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			},
			"keywords": [
				"postcss",
				"arithmetic",
				"css",
				"math",
				"calculation"
			],
			"author": {
				"name": "Zack Frost"
			},
			"license": "MIT",
			"dependencies": {
				"lodash": "^4.17.4",
				"mathjs": "^3.13.3",
				"postcss": "^6.0.2",
				"named-js-regexp": "^1.3.2"
			},
			"devDependencies": {
				"gulp": "^3.9.1",
				"gulp-postcss": "^7.0.0"
			},
			"gitHead": "b7ad7670d949b36a366cd5e1557cde5b047aece7",
			"_id": "postcss-arithmetic@0.0.3",
			"_npmVersion": "5.0.3",
			"_nodeVersion": "6.10.3",
			"_npmUser": {
				"name": "zfzackfrost",
				"email": "zackart98@gmail.com"
			},
			"dist": {
				"integrity": "sha512-DH5G2BCRlvMDO7b7UMm4f3mAGzB+uJziqdKV+Gd9mP4Yl0a8eEpr5NlB/bqJVpwzdVMPItVVq4iN9hA+j7v0yg==",
				"shasum": "eac533944f290dbac2f9f5aca6fdd3d5e34774e1",
				"tarball": "https://registry.npmjs.org/postcss-arithmetic/-/postcss-arithmetic-0.0.3.tgz",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQD14Nlo1Bt4UQqV7jTlVUzkRZ9kIF397wl5/5XqfYYY0QIgEaCMCl2m4C7TndtmTYnmscHXIMKPmAfUrZ3M89fJau8="
					}
				]
			},
			"maintainers": [
				{
					"name": "zfzackfrost",
					"email": "zackart98@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-arithmetic-0.0.3.tgz_1497649467661_0.5229129111394286"
			}
		},
		"0.0.4": {
			"name": "postcss-arithmetic",
			"version": "0.0.4",
			"description": "Utilizes math.js to correctly parse order of operations. Also,  when expressions can not be resolved (if there are are multiple units types for example), postcss-arithmetic can replace the whole expression with a CSS `calc()` statement.",
			"main": "index.js",
			"scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			},
			"keywords": [
				"postcss-plugin",
				"postcss",
				"arithmetic",
				"css",
				"math",
				"calculation"
			],
			"author": {
				"name": "Zack Frost"
			},
			"license": "MIT",
			"dependencies": {
				"lodash": "^4.17.4",
				"mathjs": "^3.13.3",
				"postcss": "^6.0.2",
				"named-js-regexp": "^1.3.2"
			},
			"devDependencies": {
				"gulp": "^3.9.1",
				"gulp-postcss": "^7.0.0"
			},
			"gitHead": "803fe57b42443caa348950b0d1da04356cfd8d8f",
			"_id": "postcss-arithmetic@0.0.4",
			"_npmVersion": "5.0.3",
			"_nodeVersion": "6.10.3",
			"_npmUser": {
				"name": "zfzackfrost",
				"email": "zfzackfrostdevel@gmail.com"
			},
			"dist": {
				"integrity": "sha512-ws9ljqWfo9iquEM25ikdGgfQqsDoFastsraLeTGAc50u189Db6AmZl+4fpDjxs7y71LwOdFkO1r8wIMDGqGvjg==",
				"shasum": "cd1d07a8ace0342a33d55dfc1fdea19e3c69be0c",
				"tarball": "https://registry.npmjs.org/postcss-arithmetic/-/postcss-arithmetic-0.0.4.tgz",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIBhYDFdnNZf7jFcnKqMqD2szB1O6ZnwiGP3GpBmIyf8oAiBh+GLiEEATsrdUsCbIT9GMffCWuUyYBGow4rBBKlhThA=="
					}
				]
			},
			"maintainers": [
				{
					"name": "zfzackfrost",
					"email": "zackart98@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-arithmetic-0.0.4.tgz_1497714285409_0.44501770776696503"
			}
		}
	},
	"readme": "# postcss-arithmetic\n### PostCSS plugin to do +, -, *, /, %, and ^ operations.\n\nUtilizes math.js to correctly parse order of operations. Also, \nwhen expressions can not be resolved (if there are are multiple\nunits types for example), postcss-arithmetic can replace the whole\nexpression with a CSS `calc()` statement.\n\n## Syntax\n\nUse the operators just like in JavaScript. The following example has the\n`calcMultipleUnits` option enabled. Use parentheses around side-by-side \nexpressions to make sure everything inside is evaluated together. See the\ncode example for how to do this.\n\n```css\n/* Before running postcss-arithmetic */\n.test1 {\n\twidth: 100% - 200px;\n}\n\n.test2 {\n\ttop: 200px - 150px;\n}\n\n.test3 {\n\twidth: 3 * 10rem;\n\tfont-size: 10pt * 4;\n}\n\n.test4 {\n\twidth: 100% / 10%;\n}\n\n.test5 {\n\tborder-width: (9px % 5) (10px / 2px); /* Parentheses ensure that expressions that are \n\t                                        side by side are evaluated correctly.*/\n}\n\n/* After running postcss-arithmetic */\n.test1 {\n\twidth: calc(100% - 200px);\n}\n\n.test2 {\n\ttop: 50px;\n}\n\n.test3 {\n\twidth: 30rem;\n\tfont-size: 40pt;\n}\n\n.test4 {\n\twidth: 10%;\n}\n\n.test5 {\n\tborder-width: 4px 5px;\n}\n```\n\n## Options: \n\n- `calcMultipleUnits` --- Replace exrpessions with multiple units with CSS `calc()` functions; type: `Boolean`, Default: `true`\n\n#### By: Zack Frost",
	"maintainers": [
		{
			"name": "zfzackfrost",
			"email": "zackart98@gmail.com"
		}
	],
	"time": {
		"modified": "2022-05-13T06:02:51.606Z",
		"created": "2017-06-16T20:56:08.563Z",
		"0.0.1": "2017-06-16T20:56:08.563Z",
		"0.0.2": "2017-06-16T21:38:51.450Z",
		"0.0.3": "2017-06-16T21:44:28.662Z",
		"0.0.4": "2017-06-17T15:44:46.268Z"
	},
	"keywords": [
		"postcss-plugin",
		"postcss",
		"arithmetic",
		"css",
		"math",
		"calculation"
	],
	"author": {
		"name": "Zack Frost"
	},
	"license": "MIT",
	"readmeFilename": "README.md",
	"description": "Utilizes math.js to correctly parse order of operations. Also,  when expressions can not be resolved (if there are are multiple units types for example), postcss-arithmetic can replace the whole expression with a CSS `calc()` statement.",
	"_downloads": 167
}
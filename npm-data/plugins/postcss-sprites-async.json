{
	"_id": "postcss-sprites-async",
	"_rev": "2-be4229fd5a0cb006c841e11d5fe651f9",
	"name": "postcss-sprites-async",
	"dist-tags": {
		"latest": "0.0.1"
	},
	"versions": {
		"0.0.1": {
			"name": "postcss-sprites-async",
			"version": "0.0.1",
			"description": "Use Async/Await Generate spritesheets from stylesheets",
			"main": "lib/index.js",
			"keywords": [
				"postcss-plugin",
				"postcss",
				"css",
				"spritesheet",
				"spritesmith",
				"sprite",
				"png",
				"svg"
			],
			"scripts": {
				"test": "ava test/*.js --verbose --serial",
				"build": "babel src/ --out-dir lib/",
				"watch": "babel --watch src/ --out-dir lib/",
				"prepublish": "npm test",
				"pretest": "npm run build"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/xuanzebin/postcss-sprites.git"
			},
			"author": {
				"name": "xuanzebin"
			},
			"license": "MIT",
			"devDependencies": {
				"ava": "^0.15.2",
				"babel-cli": "^6.4.0",
				"babel-plugin-add-module-exports": "^0.2.1",
				"babel-preset-es2015": "^6.3.13"
			},
			"dependencies": {
				"bluebird": "^3.1.1",
				"debug": "^2.6.0",
				"fs-extra": "^0.26.4",
				"lodash": "^4.0.0",
				"postcss": "^5.0.14",
				"spritesmith": "^3.0.1",
				"svg-sprite": "^1.3.5"
			},
			"typings": "./typings.d.ts",
			"gitHead": "97d5c22fc75143ec92089279455e0af1a54ef119",
			"bugs": {
				"url": "https://github.com/xuanzebin/postcss-sprites/issues"
			},
			"homepage": "https://github.com/xuanzebin/postcss-sprites#readme",
			"_id": "postcss-sprites-async@0.0.1",
			"_nodeVersion": "12.14.1",
			"_npmVersion": "8.0.0",
			"dist": {
				"integrity": "sha512-afEy6F6ifK4IlOWUq6We7ao2npQAfybPVyh6Hhdjbq4UjmZFKIYf2CpjyjOKYxdefgn60i9iphnYuFbc+/OW0Q==",
				"shasum": "48a12805dc376e0d7240b7d75bb4250f74ae708d",
				"tarball": "https://registry.npmjs.org/postcss-sprites-async/-/postcss-sprites-async-0.0.1.tgz",
				"fileCount": 21,
				"unpackedSize": 58219,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh23AwCRA9TVsSAnZWagAAS6QP/iS/quGOMVQTLKDqdQVF\nPosl05xvTl3BaTLxhbhWIM1B9ctY9PoNgbbytVyrR9+HWCFRR2mkuGsyf12E\nzxQm2jmtl3BSa97CmaruNn46E5dYvd2sz/zkVgNI1pzWYdIz1bHGGrT+foJU\nbryQjromP8pMC7NwcvhSxlq+fckQjSepRS7erx1BZDnMhMEUuWiATwm2v6Al\nMv9DyC1VRAcxHPw7cq3XqxrhRETKtkHt+cuqCcGKKDkhWhHGLTZa3u8Bs2ZW\nohoR/xhYtQ8p12HtGcNingwuUb3MPhR2s7yN/z+Y3Vw2EeD/VgzzrsL6RPos\nwWs1PG2hX91Aj45J0WQ48f+qosl2ddkKBj/gYg+FJEiz9SSrohiWKtmHGidE\np9rKKyEFau7L2WIkkPiVsnA6g+RzBM2b+eQr0ZrH8/EduoiefkfAri4IysQe\nDNGIQPuexf2Ge+xH0pGiTISLwaNNMXf8J7Hb0HiirFgd8HmU4HRW/UClrRWr\nonZtbsjWYuN92WRtLaO1iSaDBfQXbugiZq1gOafWp3LdaSD8WBRJhxWGKcK6\neJYBprJcPkl6jUeYpCBu89OrY8C8/IGx26tIxflY1G95oPtDkRvXeBxvbQcN\nzPAWlUyFbvxlFJxm2NvDDLnEqIuZu2PlRm/QIBVSPROuVv109KJgFxtjG2Rs\n+M4X\r\n=7IH+\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDZes9zWq369MRr2c/rUdHtOC8RgpnzbN7jjVRGuO/2RgIgfXDcsRCPqJAGh0nw2X7O+WArpWgxQif25tJwByS712Y="
					}
				]
			},
			"_npmUser": {
				"name": "xuanzebin",
				"email": "492247143@qq.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "xuanzebin",
					"email": "492247143@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-sprites-async_0.0.1_1634808993959_0.48666005856927685"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2021-10-21T09:36:33.916Z",
		"0.0.1": "2021-10-21T09:36:34.128Z",
		"modified": "2022-05-13T06:48:26.794Z"
	},
	"maintainers": [
		{
			"name": "xuanzebin",
			"email": "492247143@qq.com"
		}
	],
	"description": "Use Async/Await Generate spritesheets from stylesheets",
	"homepage": "https://github.com/xuanzebin/postcss-sprites#readme",
	"keywords": [
		"postcss-plugin",
		"postcss",
		"css",
		"spritesheet",
		"spritesmith",
		"sprite",
		"png",
		"svg"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/xuanzebin/postcss-sprites.git"
	},
	"author": {
		"name": "xuanzebin"
	},
	"bugs": {
		"url": "https://github.com/xuanzebin/postcss-sprites/issues"
	},
	"license": "MIT",
	"readme": "# postcss-sprites [![Build Status](https://travis-ci.org/2createStudio/postcss-sprites.svg?branch=master)](https://travis-ci.org/2createStudio/postcss-sprites) [![npm version](https://badge.fury.io/js/postcss-sprites.svg)](http://badge.fury.io/js/postcss-sprites)\n\n> [PostCSS](https://github.com/postcss/postcss) plugin that generates spritesheets from your stylesheets.\n\n```css\n/* Input */\n.comment { background: url(images/sprite/ico-comment.png) no-repeat 0 0; }\n.bubble { background: url(images/sprite/ico-bubble.png) no-repeat 0 0; }\n\n/* ---------------- */\n\n/* Output */\n.comment { background-image: url(images/sprite.png); background-position: 0 0; }\n.bubble { background-image: url(images/sprite.png); background-position: 0 -50px; }\n```\n\n----\n\n### Usage\n\n```javascript\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar sprites = require('postcss-sprites');\n\nvar css = fs.readFileSync('./css/style.css', 'utf8');\nvar opts = {\n\tstylesheetPath: './dist',\n\tspritePath: './dist/images/'\n};\n\npostcss([sprites(opts)])\n\t.process(css, {\n\t\tfrom: './css/style.css',\n\t\tto: './dist/style.css'\n\t})\n\t.then(function(result) {\n\t\tfs.writeFileSync('./dist/style.css', result.css);\n\t});\n\n```\n\nSee [PostCSS](https://github.com/postcss/postcss) docs for examples for your environment.\n\n----\n\n### Options\n\n###### stylesheetPath\n\n> Relative path to the folder that will keep your output stylesheet(s). If it's null the path of CSS file will be used.\n\n- Default: null\n- Required: `false`\n\n###### spritePath\n\n> Relative path to the folder that will keep your output spritesheet(s).\n\n- Default: `./`\n- Required: `true`\n\n###### basePath\n\n> Your base path that will be used for images with absolute CSS urls.\n\n- Default: `./`\n- Required: `false`\n\n###### relativeTo\n\n> Indicates whether the url should be relative against current CSS context or original CSS stylesheet file.\n\n- Default: `file`\n- Required: `false`\n- Options: `file|rule`\n\n###### filterBy\n\n> Defines filter functions that will manipulate the list of images founded in your stylesheet(s).\n\n- Default: `[]`\n- Required: `false`\n- Options: `Function|Function[]`\n\n**Every function must return a ``Promise`` which should be resolved or rejected.**\n\nBuilt-in filters:\n\n- based on `fs.stat` and used to remove non exisiting images\n\n###### groupBy\n\n> Defines group functions that will manipulate the list of images founded in your stylesheet(s).\n\n- Default: `[]`\n- Required: `false`\n- Options: `Function|Function[]`\n\n**Every function must return a ``Promise`` which should be resolved with a string or rejected.**\n\nBuilt-in filters:\n\n- based on `@2x` naming convention\n\n###### retina\n\n> Defines whether or not to search for retina mark in the filename.\n\n- Default: `false`\n- Required: `false`\n\n###### hooks\n\n> Defines whether or not to search for retina mark in the filename.\n\n- Default: `{}`\n- Required: `false`\n\n###### hooks.onSaveSpritesheet\n\n> Hook that allows to rewrite the data of produced spritesheet.\n\n> If returned value is string, it is used as filepath value, and if returned value is object, it is used as value which will be merged with current spritesheet data.\n\n> Returned value can also be Promise which should return either string or object.\n\n- Default: `null`\n- Required: `false`\n\n###### hooks.onUpdateRule\n\n> Hook that allows to rewrite the CSS output for an image.\n\n- Default: `null`\n- Required: `false`\n\n###### spritesmith\n\n> A [spritesmith](https://github.com/Ensighten/spritesmith) configuration.\n\n- Default: `{}`\n- Required: `false`\n\n###### spritesmith.engine\n\n> The [engine](https://github.com/Ensighten/spritesmith#engines).\n\n- Default: `pixelsmith`\n- Required: `false`\n\n###### spritesmith.algorithm\n\n> The [algorithm](https://github.com/Ensighten/spritesmith#algorithms).\n\n- Default: `binary-tree`\n- Required: `false`\n\n###### spritesmith.padding\n\n> The space between images in spritesheet.\n\n- Default: `0`\n- Required: `false`\n\n###### spritesmith.engineOpts\n\n> The configuration of the [engine](https://github.com/Ensighten/spritesmith#engines).\n\n- Default: `{}`\n- Required: `false`\n\n###### spritesmith.exportOpts\n\n> The export options of the [engine](https://github.com/Ensighten/spritesmith#engines).\n\n- Default: `{}`\n- Required: `false`\n\n###### svgsprite\n\n> A [svg-sprite](https://github.com/jkphl/svg-sprite#configuration-basics) configuration.\n\n###### verbose\n\n> Prints the plugin output to the console.\n\n- Default: `false`\n- Required: `false`\n\n----\n\n### The Image\n\nEvery filter or group function will be called with an ``Image`` object.\n\n###### styleFilePath\n\n> An absolute path to the stylesheet - ``/Path/to/your/source/stylesheet.css``\n\n###### path\n\n> An absolute path to the image - ``/Path/to/your/image.png``\n\n###### originalUrl\n\n> The url found in your stylesheet including the query params - ``../image.png?v1``\n\n###### url\n\n> A normalized version of the original url - ``../image.png``\n\n###### ratio\n\n> The retina ratio of your image - ``2``\n\n###### retina\n\n> Indicates whenever your image is retina - ``true``\n\n###### groups\n\n> The groups associated with the image - ``['shapes', '@2x']``\n\n###### token\n\n> The string used as reference in your stylesheet - ``/* @replace|image.png */``\n\n###### coords\n\n> The position & dimensions of image in generated spritesheet - ``{ width: 20, height: 20, x: 0, y: 0 }``\n\n###### spritePath\n\n> A relative path to the generated spritesheet - ``dist/sprite.png``\n\n###### spriteUrl\n\n> A CSS url to the generated spritesheet - ``sprite.png``\n\n###### spriteWidth\n\n> The total width of the spritesheet - ``200``\n\n###### spriteHeight\n\n> The total height of the spritesheet - ``400``\n\n----\n\n### Advanced\n\n- [Filter By](examples/filter-by.md)\n- [Group By](examples/group-by.md)\n- [Output Dimensions](examples/output-dimensions.md)\n- [Skip Prefix](examples/skip-prefix.md)\n- [Responsive Spritesheets](examples/responsive-spritesheets.md)\n- [Relative To Rule](examples/relative-to-rule.md)\n- [Webpack Hot Load](examples/webpack-hot-load.md)\n\n----\n\n### Contributing\n\nPull requests are welcome.\n\n```\n$ git clone git@github.com:2createStudio/postcss-sprites.git\n$ npm install\n$ npm run watch\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 10
}
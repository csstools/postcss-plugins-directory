{
	"_rev": "4-1870a2423015010a5e8d590a7ea2b159",
	"time": {
		"created": "2023-12-15T09:08:33.152Z",
		"1.4.1": "2023-09-29T11:31:45.388Z",
		"modified": "2023-12-15T09:08:33.579Z",
		"1.0.0": "2023-12-14T07:59:20.676Z",
		"1.0.1": "2023-12-15T09:08:33.288Z"
	},
	"_id": "postcss-logical-fallback",
	"name": "postcss-logical-fallback",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.1": {
			"name": "postcss-logical-fallback",
			"version": "1.0.1",
			"description": "PostCSS plugin for logical fallback props",
			"main": "index.js",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"postcss-logical-fallback",
				"rtl",
				"CSS logical properties and values"
			],
			"license": "Apache-2.0",
			"repository": {
				"type": "git",
				"url": "https://github.com/yandex/i18n-utils/packages/postcss-logical-fallback"
			},
			"engines": {
				"node": ">=14.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.4.21"
			},
			"devDependencies": {
				"@types/node": "20.9.2",
				"@typescript-eslint/eslint-plugin": "5.54.0",
				"@typescript-eslint/parser": "5.54.0",
				"clean-publish": "^3.4.2",
				"concurrently": "7.6.0",
				"eslint": "8.35.0",
				"eslint-config-prettier": "8.7.0",
				"prettier": "2.8.4",
				"rollup": "3.18.0",
				"rollup-plugin-esbuild": "5.0.0",
				"tsm": "2.3.0",
				"typescript": "4.9.5",
				"uvu": "0.5.6"
			},
			"dependencies": {
				"postcss-value-parser": "4.2.0"
			},
			"scripts": {
				"build": "rollup -c --bundleConfigAsCjs",
				"lint": "eslint .",
				"test": "uvu -r tsm ./tests"
			},
			"gitHead": "34be2bf0f05009c3322f264fa2d3ea99afdc663c",
			"_id": "postcss-logical-fallback@1.0.1",
			"_integrity": "sha512-UL1f1ILpd7zEYrX0kLsd8O8OnqM9KDzYfHmZzYXuvbTfh/9lftKwakgZMCqkKovMNH83fSEYRNWW2AP7pbONvQ==",
			"_resolved": "/private/var/folders/z5/b6xwr5wx31d_py18j_snl_1xwncvql/T/4381cd41a185cdd4f2a99bc13169749f/postcss-logical-fallback-1.0.1.tgz",
			"_from": "file:postcss-logical-fallback-1.0.1.tgz",
			"_nodeVersion": "18.17.0",
			"_npmVersion": "9.6.7",
			"dist": {
				"integrity": "sha512-UL1f1ILpd7zEYrX0kLsd8O8OnqM9KDzYfHmZzYXuvbTfh/9lftKwakgZMCqkKovMNH83fSEYRNWW2AP7pbONvQ==",
				"shasum": "611cc3eb50ed3709b54805ff586bc36a1e115c48",
				"tarball": "https://registry.npmjs.org/postcss-logical-fallback/-/postcss-logical-fallback-1.0.1.tgz",
				"fileCount": 3,
				"unpackedSize": 8903,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDRfkK63IEjFZhusyM4NH3PSNV9r+CQTnqooq9VkWg3ewIgGUqkZzxqeRMUev7f0z49Ql/7x69En08ydXi7UEl2ub8="
					}
				]
			},
			"_npmUser": {
				"name": "petrukhun",
				"email": "jokeme83@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "petrukhun",
					"email": "jokeme83@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-logical-fallback_1.0.1_1702631313153_0.20561762097838154"
			},
			"_hasShrinkwrap": false
		}
	},
	"maintainers": [
		{
			"name": "petrukhun",
			"email": "jokeme83@gmail.com"
		}
	],
	"description": "PostCSS plugin for logical fallback props",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"postcss-logical-fallback",
		"rtl",
		"CSS logical properties and values"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/yandex/i18n-utils/packages/postcss-logical-fallback"
	},
	"license": "Apache-2.0",
	"readme": "# postcss-logical-fallback\n\nThis is [postcss](https://github.com/postcss/postcss) plugin for logical css props support in legacy browsers. Main idea of the plugin is\nan opportunity to write logical styles like in modern browsers in legacy browsers. When all of your\nsupported browsers will support all modern logical spec you can just delete this plugin and don't rewrite\nyour styles. Second idea of the plugin is to use logical props where they supported and do fallback only in\nnon-supported browsers.\n\nMain purpose of this plugin is creating fallbacks for bad supported logical props in legacy browsers.\nWe have distinguished:\n- Absolute positioning props like\n  `inset-inline-start`, `inset-inline-end`,`inset-block-start`\n  and `inset-block-end` due to bad support in safari (14.1+ on desktop, 14.5+ on mobile),\n  chrome (87+) and firefox (66+) and due to high prevalence of these props.\n\n- Shorthand props like `inset-inline`, `inset-block`, `margin-inline`, `margin-block`,\n  `padding-inline`, `padding-block` due to same bad support in browsers\n\nFull logical props support you can see [here](https://caniuse.com/css-logical-props)\n\nWe recommend to use this plugin with [autoprefixer](https://github.com/postcss/autoprefixer)\nand setup our plugin before autoprefixer\n\n## Important Note\n\nThis plugin has been primarily designed and optimized to handle websites that support left-to-right (LTR)and right-to-left (RTL) languages.\nThis includes languages like English, French, German (LTR), and languages like Arabic, Hebrew, Persian (RTL).\nPlease note that the utility and functionality of this plugin may be limited when applied to websites that do not fall within these language categories.\n\n**WARNING**\nPlugin is based on @supports at rule, so it has to be supported, see on [can i use](https://caniuse.com/css-featurequeries)\n\n## Usage\n\n**Step 1:** install plugin and postcss\n\n```sh\nnpm install --save-dev postcss postcss-logical-fallback\n```\n\n**Step 2:** Find config at the root of your project: `postcss.config.js`,\n`\"postcss\"` section in `package.json`\nor `postcss` section in your build config.\n\nIf you haven't already use postcss you should setup it according to\n[official documentation](https://github.com/postcss/postcss#usage) and add postcss-logical-fallback\nafter it.\n\n**Step 3:** Add plugin to the plugin list\n\n```diff\nmodule.exports = {\n  plugins: [\n+   require('postcss-logical-fallback'),\n    require('autoprefixer')\n  ]\n}\n```\n\n## Examples\n### Fallback for absolute positioning props\n\nBefore\n\n```css\n.class {\n  inset-block-start: 12px;\n  inset-inline-end: 12px;\n}\n```\n\nAfter\n\n```css\n@supports (inset-block-start: 12px) {\n  .class {\n    inset-block-start: 12px;\n    inset-inline-end: 12px;\n  }\n}\n\n@supports not (inset-block-start: 12px) {\n  .class {\n    top: 12px;\n    right: 12px;\n  }\n\n  [dir=\"rtl\"] .class {\n    right: 0;\n    left: 12px;\n  }\n}\n```\n\n### Fallback for shorthands\n\nBefore\n\n```css\n.class {\n  margin-inline: 12px;\n  padding-block: 24px 36px;\n}\n```\n\nAfter\n\n```css\n.class {\n  margin-inline-start: 12px;\n  margin-inline-end: 12px;\n\n  padding-block-start: 24px;\n  padding-block-end: 36px;\n}\n```\n\n### Fallback for inset shorthands\n\nBefore\n\n```css\n.class {\n  inset-inline: 12px;\n}\n\n.multiple-props {\n  inset-inline: 24px 36px;\n}\n```\n\nAfter\n\n```css\n@supports (inset-inline: 12px) {\n    .class {\n        inset-inline: 12px;\n    }\n\n    .multiple-props {\n        inset-inline: 24px 36px;\n    }\n}\n\n@supports not (inset-inline: 12px) {\n    .class {\n        left: 12px;\n        right: 12px;\n    }\n\n    .multiple-props {\n        left: 24px;\n        right: 36px;\n    }\n\n    [dir=\"rtl\"] .multiple-props {\n        left: 36px;\n        right: 24px;\n    }\n}\n\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 8
}
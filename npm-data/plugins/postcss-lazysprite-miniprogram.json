{
	"_id": "postcss-lazysprite-miniprogram",
	"_rev": "2-b43c3ed84859224ce70ce291bc8f4ba0",
	"name": "postcss-lazysprite-miniprogram",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-lazysprite-miniprogram",
			"version": "1.0.0",
			"description": "A PostCSS plugin that generates sprites from the directory of images automatically.",
			"main": "index.js",
			"engines": {
				"node": ">=6"
			},
			"dependencies": {
				"ansi-colors": "^3.0.0",
				"bluebird": "^3.5.2",
				"fancy-log": "^1.3.2",
				"free-upload-image": "^1.0.0",
				"lodash": "^4.17.4",
				"mkdirp": "^0.5.1",
				"postcss": "^7.0.8",
				"rev-hash": "^2.0.0",
				"spark-md5": "^3.0.0",
				"spritesmith": "^3.2.1",
				"svg-sprite": "1.5.0"
			},
			"devDependencies": {
				"eslint": "^5.14.1",
				"eslint-config-xo": "^0.26.0",
				"gulp": "3.9.1",
				"gulp-eslint": "^5.0.0",
				"gulp-mocha": "^6.0.0",
				"gulp-postcss": "^8.0.0",
				"gulp-sourcemaps": "^2.6.5",
				"mocha": "^6.0.0",
				"should": "^13.1.2",
				"through2": "^3.0.0",
				"vinyl-fs": "^3.0.3"
			},
			"scripts": {
				"test": "gulp test"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/jgbjs/postcss-lazysprite-miniprogram.git"
			},
			"keywords": [
				"PostCSS",
				"postcss-plugin",
				"Image",
				"CSS",
				"spritesmith",
				"sprite",
				"miniprogram"
			],
			"author": {
				"name": "landn172"
			},
			"license": "MIT",
			"bugs": {
				"url": "https://github.com/jgbjs/postcss-lazysprite-miniprogram/issues"
			},
			"homepage": "https://github.com/jgbjs/postcss-lazysprite-miniprogram#readme",
			"licenseText": "MIT License\n\nCopyright (c) 2017 Jeff Ma\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
			"_id": "postcss-lazysprite-miniprogram@1.0.0",
			"dist": {
				"shasum": "ec0c3ce6121ae6339210899122784408f6e36318",
				"integrity": "sha512-IX8lHbplKaVX8A56qPaaNvd7No7cM0RxXAnk9vWrmhYWPYhY+Zm5CBrBr+s2WXgSNh90o0Ym/Aju+AsMVu8VAQ==",
				"tarball": "https://registry.npmjs.org/postcss-lazysprite-miniprogram/-/postcss-lazysprite-miniprogram-1.0.0.tgz",
				"fileCount": 6,
				"unpackedSize": 36821,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc481+CRA9TVsSAnZWagAAof8P/j9CnbnzRO90lSow/d77\nRbRU4SoExxKtW0P+McdtZjvAyv7eVcnP6pXbwdaYdKn9rmSbeAiqvKeoB14o\nX92WZcXoI3vgnhCWQ5Qn4nIQDHLzTYozH2y0dgqaLFox7OcGPchmab6j8WZE\nBLnea7qYYq0x9CEgYiZCKwIoO3O96Qkid3iGze1WnG/LrUp7SdSdCC7+oxMX\n0ZhuOlc3zHhIqMa0TiUTuLO7EIT+7kfF7qUzv3dyQ2TGklDvagH6bzHp+gc5\nyUDcmSyxz4hf95AaJcYmQF+kvBU0dJXqxMZYqLgAYcFAJgP5TUZlkT+sz7Ue\neSPKqXYVGgOJCH7qF/s/dR7CLMouEEabY9f40bbWOX7jAAYX13nyJqw46Lyd\nJD/ChTj1qa2kznt+Z42n8IYuDeteHWA3dmUkET5Y57WL8Yk0Owb3HVP0RsjE\nn9ez9CpI1+gPCof40BrLpVBA5j3EIYzSa/s0vnNBwWEQDLf4extyRgaq4pV9\neATCq+CD/vvb4Swp6IuZwypBjebg/OzwQcUSEVU1W+ZMe+grB4yVTOuJj7gy\nohRiGvyt166RyeoVXDO0328G0W+4iIZx6xx+begZ31MW0l1Jppsl0JabgKpz\n9XpB+nW0Kick9q+EixW1C0odD2p7PP8F3NDesUDR6iorFngW9UEzThZCjxWD\nOqU9\r\n=gkT8\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCTbqwuP5SRiUjz6mSmtcj1K8cq0MH8rQdxigQqNbAgcwIhAIjm6E6dwywxF1w71Pxju3r3Hz9YGOXX6gpD2XQB591l"
					}
				]
			},
			"maintainers": [
				{
					"name": "landn172",
					"email": "landn172@gmail.com"
				}
			],
			"_npmUser": {
				"name": "landn172",
				"email": "landn172@gmail.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-lazysprite-miniprogram_1.0.0_1558433149493_0.9571811968116448"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "postcss-lazysprite-miniprogram",
			"version": "1.0.1",
			"description": "A PostCSS plugin that generates sprites from the directory of images automatically.",
			"main": "index.js",
			"engines": {
				"node": ">=6"
			},
			"dependencies": {
				"ansi-colors": "^3.0.0",
				"bluebird": "^3.5.2",
				"fancy-log": "^1.3.2",
				"free-upload-image": "^1.0.0",
				"lodash": "^4.17.4",
				"mkdirp": "^0.5.1",
				"postcss": "^7.0.8",
				"rev-hash": "^2.0.0",
				"spark-md5": "^3.0.0",
				"spritesmith": "^3.2.1",
				"svg-sprite": "1.5.0"
			},
			"devDependencies": {
				"eslint": "^5.14.1",
				"eslint-config-xo": "^0.26.0",
				"gulp": "3.9.1",
				"gulp-eslint": "^5.0.0",
				"gulp-mocha": "^6.0.0",
				"gulp-postcss": "^8.0.0",
				"gulp-sourcemaps": "^2.6.5",
				"mocha": "^6.0.0",
				"should": "^13.1.2",
				"through2": "^3.0.0",
				"vinyl-fs": "^3.0.3"
			},
			"scripts": {
				"test": "gulp test"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/jgbjs/postcss-lazysprite-miniprogram.git"
			},
			"keywords": [
				"PostCSS",
				"postcss-plugin",
				"Image",
				"CSS",
				"spritesmith",
				"sprite",
				"miniprogram"
			],
			"author": {
				"name": "landn172"
			},
			"license": "MIT",
			"bugs": {
				"url": "https://github.com/jgbjs/postcss-lazysprite-miniprogram/issues"
			},
			"homepage": "https://github.com/jgbjs/postcss-lazysprite-miniprogram#readme",
			"licenseText": "MIT License\n\nCopyright (c) 2017 Jeff Ma\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
			"_id": "postcss-lazysprite-miniprogram@1.0.1",
			"dist": {
				"shasum": "0e7b323812ca12a0d2a2ca80214cc96f1a85b32a",
				"integrity": "sha512-VVvglJ5VEGB6xd3d/NltZpHSLv/1fSZmvq8wJWhTGkA3dRZl2fIMgoNR4b5TiSbJ9uHIkxUgpy6pVgmhmSZwXA==",
				"tarball": "https://registry.npmjs.org/postcss-lazysprite-miniprogram/-/postcss-lazysprite-miniprogram-1.0.1.tgz",
				"fileCount": 6,
				"unpackedSize": 40825,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc5OQnCRA9TVsSAnZWagAAmi0QAJ7w9E5NP63WEn5Vc3dl\nl9xmj8kv5gdpQ99S351rWsbb+zFDVjA9yPigHjY/EZhbNzs9zHYQsPDpOk8d\n2QerOaeWCLuk9Gt5bsnWtz8oUlK3n1EeYIxjDmnR2s+hBmkUXlT2acpybdrA\n8JP10Hsddl7fBReFmXo6WqkeEJOThpPItopUIWgFSKRNwp0eqGJ3EHYJ+ElI\n1B9oswXSjW98bXCFcPLBPaSILA/26S4lMxNSLKrSAq1lDG4/ceDKfUqdm6jx\niUApjaMTCSLm/TMsX6K+N27lM+L05mpmkztMjGsZLuaS+YBalux2OBZAUUv1\nrmFWc1XVe/DW2RQG12yvLzLydAU+1uewxdR4xMrYIkvvCtSO3qQEJE8o6HTt\no4lyzHEX4uFmvUwhI1mJ6UlST/2ai96fDGxWYAL+WF7hEMQVO8EsqC8U7dQb\nKbgLXs2PZraBEe1JfYYKPz5oStwmZX3W90TXmp3OJUtGtIL1SpVtv4kSdbEj\nZcutnR37aTRkPSRYjsJ5MlcE5T6DWEueD1pVaM6nr1C8l9WaRSi+9a49EyCU\ngUu5MhWAzf8+O7etuA9B4bzEvDrUmonZ7WPqpZjxnQl0GvG4Sp3EPB3vU0v0\nYwwMnlpZyuxq8jnAM5JKRof/0lWKTfJmCSxy+fuz2XncIu9wHHb8o4aXK3Pl\nZcm6\r\n=YpqT\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIFOhehsefM6V0jR2303XLg/C9XQ2pp68idLhLY5q2rjRAiEAl0tiX/P8STwZPtHG5x++Yh4XfZ8vW2Snv1OM4Q0cYds="
					}
				]
			},
			"maintainers": [
				{
					"name": "landn172",
					"email": "landn172@gmail.com"
				}
			],
			"_npmUser": {
				"name": "landn172",
				"email": "landn172@gmail.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-lazysprite-miniprogram_1.0.1_1558504486699_0.3455154134706042"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2019-05-21T10:05:49.457Z",
		"1.0.0": "2019-05-21T10:05:49.656Z",
		"modified": "2022-05-13T06:24:48.660Z",
		"1.0.1": "2019-05-22T05:54:46.966Z"
	},
	"maintainers": [
		{
			"name": "landn172",
			"email": "landn172@gmail.com"
		}
	],
	"description": "A PostCSS plugin that generates sprites from the directory of images automatically.",
	"homepage": "https://github.com/jgbjs/postcss-lazysprite-miniprogram#readme",
	"keywords": [
		"PostCSS",
		"postcss-plugin",
		"Image",
		"CSS",
		"spritesmith",
		"sprite",
		"miniprogram"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/jgbjs/postcss-lazysprite-miniprogram.git"
	},
	"author": {
		"name": "landn172"
	},
	"bugs": {
		"url": "https://github.com/jgbjs/postcss-lazysprite-miniprogram/issues"
	},
	"license": "MIT",
	"readme": "# postcss-lazysprite-miniprogram\n\nforked from [postcss-lazysprite](https://github.com/Jeff2Ma/postcss-lazysprite)\n\n<img align=\"right\" width=\"130\" height=\"130\" title=\"PostCSS\" src=\"http://postcss.github.io/postcss/logo.svg\">\n\nA [PostCSS](https://github.com/postcss/postcss) plugin that generates sprites from the directory of images automatically.\n\nA lazy way to generate sprites and proper CSS with retina support. Feel free to use it :)\n\n## Why\n\nWechat miniprogram do not support local `background-image`, so we should upload it.\n\n## Example\n\n[Demo Example](https://res.devework.com/2018/postcss-lazysprite/html/index.html)\n\n### Input\n\n```CSS\n/* ./src/css/index.css */\n@lazysprite \"filetype\";\n```\n\n### Output\n\n```CSS\n/* ./dist/css/index.css */\n.icon-filetype__excel {\n  background-image: url(../sprites/filetype.png);\n  background-position: 0 0;\n  width: 32px;\n  height: 32px;\n}\n.icon-filetype__pdf {\n  background-image: url(../sprites/filetype.svg);\n  background-position: 0 0;\n  width: 32px;\n  height: 32px;\n}\n.icon-filetype__ppt {\n  background-image: url(../sprites/filetype.png);\n  background-position: -32px 0;\n  width: 32px;\n  height: 32px;\n}\n.icon-filetype__word {\n  background-image: url(../sprites/filetype.svg);\n  background-position: -32px 0;\n  width: 32px;\n  height: 32px;\n}\n\n@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio:2), only screen and (-o-min-device-pixel-ratio:2/1), only screen and (min-device-pixel-ratio:2), only screen and (min-resolution:2dppx), only screen and (min-resolution:192dpi) {\n  .icon-filetype__excel {\n    background-image: url(../sprites/filetype@2x.png);\n    background-position: 0 0;\n    background-size: 64px 32px;\n  }\n  .icon-filetype__ppt {\n    background-image: url(../sprites/filetype@2x.png);\n    background-position: -32px 0;\n    background-size: 64px 32px;\n  }\n}\n```\n\n### File tree\n\n> Just a example for above output result, you can dynamic yourself with options.\n\n```\n.\n├── gulpfile.js\n├── dist\n└── src\n    ├── css\n    │   └── index.css\n    ├── html\n    │   └── index.html\n    └── slice\n        └── filetype\n            ├── excel.png\n            ├── excel_2x.png\n            ├── pdf.svg\n            ├── ppt.png\n            ├── ppt@2x.png\n            └── word.svg\n```\n\nMore examples with different options: [nameSpace](./examples/nameSpace.md), [outputDimensions](./examples/outputDimensions.md), [dynamicClassBlock](./examples/dynamicClassBlock.md), [pseudoClass](./examples/pseudoClass.md)\n\n## Features\n\n- Simple and easy, just need to put your images to the special folder.\n\n- Retina support (`@2x`, `@3x`, `_2x`, `_3x` are all available).\n\n- Support SVG Sprites. [Demo](https://res.devework.com/2018/postcss-lazysprite/html/index.html)\n\n- Fully work well with Source Map.\n\n- Cache way and good perfomance to run faster.\n\n- Support sprites with`:hover`、`:active` condition([example](./examples/pseudoClass.md)).\n\n## User\n\n[WeChat for Work](https://work.weixin.qq.com) and [Wechat Reader](https://weread.qq.com) are using `postcss-lazysprite` in production.\n\n<a href=\"https://work.weixin.qq.com\"><img width=\"104\" height=\"32\" title=\"WeChat for Work\" src=\"./examples/src/slice/logo/WeWork@2x.png\" alt=\"WeChat for Work\"></a>\n\n<a href=\"https://weread.qq.com\"><img width=\"104\" height=\"32\" title=\"Wechat Reader\" src=\"./examples/src/slice/logo/WeRead@2x.png\" alt=\"Wechat Reader\"></a>\n\n## Installation\n\n```bash\nnpm install postcss-lazysprite-miniprogram --save\n```\n\n## Usage\n\nWork with [Gulp](http://gulpjs.com/)\n\nExample:\n\n```javascript\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar lazysprite = require('postcss-lazysprite-miniprogram');\n\ngulp.task('css', function() {\n  return gulp\n    .src('./test/src/css/**/*.css')\n    .pipe(\n      postcss([\n        lazysprite({\n          imagePath: './test/src/slice',\n          stylesheetInput: './test/src/css',\n          stylesheetRelative: './test/dist/css',\n          spritePath: './test/dist/slice',\n          nameSpace: 'icon-',\n          upload: filePath => {\n            // uploadImage will return a uploaded url\n            return uploadImage(filePath);\n          }\n        })\n      ])\n    )\n    .pipe(gulp.dest('./test/dist/css'));\n});\n```\n\n## Options\n\n#### upload\n\n> if you wanna upload sprite images\n\n- Type: Function\n- Default: null\n\n```js\nvar uploadImage = require('free-upload-image');\n// demo\nlazysprite({\n  async upload(localfilepath) {\n    const url = await uploadImage(localfilepath);\n    return url;\n  }\n});\n```\n\n### usePseudoBefore\n\n> use :before set props\n\n- Type: Boolean\n- Default: false\n\n```css\n.icon-filetype__test {\n  position: relative;\n}\n.icon-filetype__test:before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform-origin: top left;\n}\n\n#### imagePath\n\n> Relative path to the folder that sprite images are stored. For resolving absolute images. This option also as the base relative to the value of `@lazysprite` which is what you output.\n\n- Default: null\n- Required: `true`\n\n#### stylesheetInput\n\n> The directory that store css(or scss/less) source files. If you are use gulp.js, simply the value of `gulp.src` without the part of `**` and so on.\n\n- Default: null\n- Required: `true`\n\n#### stylesheetRelative\n\n> Relative path to the folder that will keep your output stylesheet(s). If it's null the path of CSS file will be used.\n\n- Default: null\n- Required: `false`\n\n#### spritePath\n\n> Relative path to the folder that will keep your output spritesheet(s).\n\n- Default: `./`\n- Required: `false`\n\n#### nameSpace\n\n> NameSpace(Prefix) of the class name of each image.\n\n- Default: null\n- Required: `false`\n\n#### logLevel\n\n> Deside which level to output log. Can be either \"debug\", \"info\", or \"silent\".\n\n```javascript\n// Show me additional info about the process\nlogLevel: 'debug';\n\n// Just show basic info\nlogLevel: 'info';\n\n// output NOTHING except alert\nlogLevel: 'silent';\n```\n\n- Default: `info`\n- Required: `false`\n\n#### cssSeparator\n\n> Separator between css selector's 'block' and 'element'. In this plugin. 'block' is equal to file dirname or dynamic one, 'element' is the base name of file.\n\n- Default: `'__'`\n- Required: `false`\n\n#### retinaInfix\n\n> Deside the created sprite retina file is whether '@2x' or '\\_2x' as part of name.\n\n- Default: `@`\n- Required: `false`\n\n#### outputExtralCSS\n\n> Deside whether output extral css details, which list like:\n\n```css\n.icon-filetype {\n  display: inline-block;\n  overflow: hidden;\n  font-size: 0;\n  line-height: 0;\n}\n```\n\nwhen set this option as `true`, the html sould like:\n\n```html\n<i class=\"icon-filetype icon-filetype__doc\"></i>\n```\n\n- Default: `false`\n- Required: `false`\n\n#### pseudoClass\n\n> If the file naming with `Hover`or `Active` as suffix，it will turn to the `:hover` or `:active` pseudo class.([example](./examples/pseudoClass.md))\n\n- Default: `false`\n- Required: `false`\n\n#### outputDimensions\n\n> Deside whether output `width` & `height` properties.\n\n- Default: `true`\n- Required: `false`\n\n## Contributing\n\nThanks the inspirations from [postcss-sprites](https://github.com/2createStudio/postcss-sprites) plugin.\n\n[Issues](https://github.com/jgbjs/postcss-lazysprite-miniprogram/issues) and [Pull requests](https://github.com/jgbjs/postcss-lazysprite-miniprogram/pulls) are welcome.\n\n```bash\n$ git clone https://github.com/jgbjs/postcss-lazysprite-miniprogram\n$ cd postcss-lazysprite-miniprogram\n$ npm i\n$ gulp # for dev\n$ gulp test # for test\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 12
}
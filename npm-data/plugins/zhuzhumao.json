{
	"_id": "zhuzhumao",
	"_rev": "6-bde27aac70596fa581274f0681849d39",
	"name": "zhuzhumao",
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "zhuzhumao",
			"version": "1.0.0",
			"description": "xiaoguang",
			"main": "hello.js",
			"scripts": {
				"test": ""
			},
			"keywords": [
				"xiaoguang"
			],
			"author": {
				"name": "xiaoguang"
			},
			"license": "ISC",
			"_id": "zhuzhumao@1.0.0",
			"_shasum": "c77160c4f4b0f37dc4c337694698f9e5354ef252",
			"_from": "xiaoguang",
			"_npmVersion": "1.4.9",
			"_npmUser": {
				"name": "xiaoguang",
				"email": "tut.bear@gmail.com"
			},
			"maintainers": [
				{
					"name": "xiaoguang",
					"email": "tut.bear@gmail.com"
				}
			],
			"dist": {
				"shasum": "c77160c4f4b0f37dc4c337694698f9e5354ef252",
				"tarball": "https://registry.npmjs.org/zhuzhumao/-/zhuzhumao-1.0.0.tgz",
				"integrity": "sha512-OELJSm72Z5kCIaJFbcLu2wahFKRdCLrNDJvkJ9WWIy2okDRIsZ04EgHctVw4Dg1QgUvb9D+pt26FAaiQmwCVpA==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCL/Nwi29q/OcnpWGud/B+R5PeUAfbZTT99cBk4tBiscQIgEy3V4+EqyLCRZfMA0SJMPQfnxdKiWMyd+9prQNqfFMY="
					}
				]
			},
			"directories": {}
		},
		"1.0.1": {
			"name": "zhuzhumao",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.0.1",
			"author": {
				"name": "xiaogaung",
				"email": "tut.bear@gmail.com"
			},
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"test": "jest spec/*.spec.js",
				"test-with-coverage": "jest --coverage spec/*.spec.js"
			},
			"dependencies": {
				"object-assign": ">=4.0.1"
			},
			"devDependencies": {
				"jest": "^25.4.0",
				"postcss": ">=5.0.2"
			},
			"peerDependencies": {
				"postcss": ">=5.0.2"
			},
			"_id": "zhuzhumao@1.0.1",
			"_nodeVersion": "14.17.0",
			"_npmVersion": "6.14.13",
			"dist": {
				"integrity": "sha512-WpYk3z8HgOfq1rQEy54VyxTsTCvGcrTdlrWlk0wi62P6K1S/HPTG7CRz09lKpkQeCSbk3Q9r3BGqoNQDP8+rXg==",
				"shasum": "6a24a7699fbc1b94cb382b40b4b0c0b93708cdc4",
				"tarball": "https://registry.npmjs.org/zhuzhumao/-/zhuzhumao-1.0.1.tgz",
				"fileCount": 13,
				"unpackedSize": 35724,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhsGZpCRA9TVsSAnZWagAA4qwP/jbndxZuLkVp2m6AzVrn\nX6lf1E6tEccSapiAWaEl2H2/15Zj/mOI5dEMOirSQKTP/X7MXbBp19QpHUWC\n3hSKy+BOrzbn99kI5+NTHTYUDL47CtLUFFvzFDXHZuH2BAJ2LN19LUT2aAiP\nNcLxgKOZD/Te2TXnQFmArOF9/spy8z7Flm3xqEpYi74IE9eF/2q5XQJE6NAH\nt/AnkTSgdiSVwCkj3dptAt6xZKOJN2mxOT3/pjCj7dOCNM3lwPNmPgfc1gCT\n3liVfVqliVUIgya50sN1RZSK9j8p9bJhak06XmPLIe5N2DfRokTktLMVB2az\nPPBA6MENHphMrHiWJZF7hRxqqt2oMBT+BxKyHL6rCnplAeAU4xi9PIkK1Qgc\nHCPcsdpZIKc98m2laCJ6hPsDk4xDkyIebd5RhzsLTNbgon/5G+LcaSmtdrXT\ngx6g77qG7e5wlGWSD9cKFZkXCwPMUnUFqk8vEYcDkeAoD83NCEM1EHcKsNXK\nvxtYHwqlgN7Rei6tfXCmYUNkH/U4rA8Wkul39rGo9FJgSeji3xEAZDnXUUL0\n3Ppu0uYp1vLlgQVW8jbhsB9KVZLsNCtbtXq7uPRRoqCn9b6CqGqYdSKVxL8C\nEIsCLRP4CY/88bIBAzFzoLBpE+6I/zQpyJWwXZnNTJpoWh8yZTLWz0NpR8mZ\n5N+m\r\n=g7DH\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDduvrM8GzAzvaATHxGBouR8EC0/Wa57HyGTd7qGStrAQIgBoh5Z4o/IgTcxy/xDafoqXBJwlfIm8SWMgWwNzsC10g="
					}
				]
			},
			"_npmUser": {
				"name": "xiaoguang",
				"email": "tut.bear@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "xiaoguang",
					"email": "tut.bear@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/zhuzhumao_1.0.1_1638950504907_0.3136515419603141"
			},
			"_hasShrinkwrap": false
		}
	},
	"readme": "# postcss-px-to-viewport\n[![NPM version](https://badge.fury.io/js/postcss-px-to-viewport.svg)](http://badge.fury.io/js/postcss-px-to-viewport)\n\nEnglish | [中文](README_CN.md) \n\nA plugin for [PostCSS](https://github.com/postcss/postcss) that generates viewport units (vw, vh, vmin, vmax) from pixel units.\n\n## Demo\n\nIf your project involves a fixed width, this script will help to convert pixels into viewport units.\n\n### Input\n\n```css\n.class {\n  margin: -10px .5vh;\n  padding: 5vmin 9.5px 1px;\n  border: 3px solid black;\n  border-bottom-width: 1px;\n  font-size: 14px;\n  line-height: 20px;\n}\n\n.class2 {\n  padding-top: 10px; /* px-to-viewport-ignore */\n  /* px-to-viewport-ignore-next */\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 20px;\n  line-height: 30px;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n### Output\n```css\n.class {\n  margin: -3.125vw .5vh;\n  padding: 5vmin 2.96875vw 1px;\n  border: 0.9375vw solid black;\n  border-bottom-width: 1px;\n  font-size: 4.375vw;\n  line-height: 6.25vw;\n}\n\n.class2 {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 6.25vw;\n  line-height: 9.375vw;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n## Getting Started\n\n### Installation\nAdd via npm\n```\n$ npm install postcss-px-to-viewport --save-dev\n```\nor yarn\n```\n$ yarn add -D postcss-px-to-viewport\n```\n\n### Usage\n\nDefault Options:\n```js\n{\n  unitToConvert: 'px',\n  viewportWidth: 320,\n  unitPrecision: 5,\n  propList: ['*'],\n  viewportUnit: 'vw',\n  fontViewportUnit: 'vw',\n  selectorBlackList: [],\n  minPixelValue: 1,\n  mediaQuery: false,\n  replace: true,\n  exclude: undefined,\n  include: undefined,\n  landscape: false,\n  landscapeUnit: 'vw',\n  landscapeWidth: 568\n}\n```\n- `unitToConvert` (String) unit to convert, by default, it is px.\n- `viewportWidth` (Number) The width of the viewport.\n- `unitPrecision` (Number) The decimal numbers to allow the vw units to grow to.\n- `propList` (Array) The properties that can change from px to vw.\n  - Values need to be exact matches.\n  - Use wildcard * to enable all properties. Example: ['*']\n  - Use * at the start or end of a word. (['*position*'] will match background-position-y)\n  - Use ! to not match a property. Example: ['*', '!letter-spacing']\n  - Combine the \"not\" prefix with the other prefixes. Example: ['*', '!font*']\n- `viewportUnit` (String) Expected units.\n- `fontViewportUnit` (String) Expected units for font.\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `replace` (Boolean) replaces rules containing vw instead of adding fallbacks.\n- `exclude` (Regexp or Array of Regexp) Ignore some files like 'node_modules'\n    - If value is regexp, will ignore the matches files.\n    - If value is array, the elements of the array are regexp.\n- `include` (Regexp or Array of Regexp) If `include` is set, only matching files will be converted,\n    for example, only files under `src/mobile/` (`include: /\\/src\\/mobile\\//`)\n    - If the value is regexp, the matching file will be included, otherwise it will be excluded.\n    - If value is array, the elements of the array are regexp.\n- `landscape` (Boolean) Adds `@media (orientation: landscape)` with values converted via `landscapeWidth`.\n- `landscapeUnit` (String) Expected unit for `landscape` option\n- `landscapeWidth` (Number) Viewport width for landscape orientation.\n\n> `exclude` and `include` can be set together, and the intersection of the two rules will be taken.\n\nOr you can set up multiple option groups like this:\n\n```js\n[\n  {\n    unitToConvert: 'rpx',\n    viewportWidth: 750,\n    viewportUnit: 'vw',\n    minPixelValue: 0\n  }, {\n    unitToConvert: 'dpx',\n    viewportWidth: 1920,\n    viewportUnit: 'vw',\n    minPixelValue: 0\n  }\n]\n```\n\nPassing in an empty array (`[]`) will not convert any units.\n\nEach option group will be merged with the default settings, so you can easily define multiple custom units and conversion rules.\n\n> If the `unitToConvert` in multiple sets of settings is the same, the last declared one may override the previously declared.\n\n#### Ignoring\n\nYou can use special comments for ignore conversion of single lines:\n- `/* px-to-viewport-ignore-next */` — on a separate line, prevents conversion on the next line.\n- `/* px-to-viewport-ignore */` — after the property on the right, prevents conversion on the same line.\n\nExample:\n```css\n/* example input: */\n.class {\n  /* px-to-viewport-ignore-next */\n  width: 10px;\n  padding: 10px;\n  height: 10px; /* px-to-viewport-ignore */\n  border: solid 2px #000; /* px-to-viewport-ignore */\n}\n\n/* example output: */\n.class {\n  width: 10px;\n  padding: 3.125vw;\n  height: 10px;\n  border: solid 2px #000;\n}\n```\n\nThere are several more reasons why your pixels may not convert, the following options may affect this:\n`propList`, `selectorBlackList`, `minPixelValue`, `mediaQuery`, `exclude`, `include`.\n\n#### Use with PostCss configuration file\n\nadd to your `postcss.config.js`\n```js\nmodule.exports = {\n  plugins: {\n    // ...\n    'postcss-px-to-viewport': {\n      // options\n    }\n  }\n}\n```\n\n#### Use with gulp-postcss\n\nadd to your `gulpfile.js`:\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar pxtoviewport = require('postcss-px-to-viewport');\n\ngulp.task('css', function () {\n\n    var processors = [\n        pxtoviewport({\n            viewportWidth: 320,\n            viewportUnit: 'vmin'\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n## Contributing\n\nPlease read [Code of Conduct](CODE-OF-CONDUCT.md)\nand [Contributing Guidelines](CONTRIBUTING.md) for submitting pull requests to us.\n\n## Running the tests\n\nIn order to run tests, you need to install dev-packages:\n```\n$ npm install\n```\nThen run the tests via npm script:\n```\n$ npm run test\n```\n\n## Changelog\n\nThe changelog is [here](CHANGELOG.md).\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/evrone/postcss-px-to-viewport/tags). \n\n## Authors\n\n* [Dmitry Karpunin](https://github.com/KODerFunk) - *Initial work*\n* [Ivan Bunin](https://github.com/chernobelenkiy)\n\nSee also the list of [contributors](https://github.com/evrone/postcss-px-to-viewport/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the [MIT License](LICENSE).\n\n## Sponsors\n\nVisit [Evrone](https://evrone.com/) website to get more information about the [projects](https://evrone.com/cases) build.\n\n<a href=\"https://evrone.com/?utm_source=postcss-px-to-viewport\">\n  <img src=\"https://user-images.githubusercontent.com/417688/34437029-dbfe4ee6-ecab-11e7-9d80-2b274b4149b3.png\"\n       alt=\"Sponsored by Evrone\" width=\"231\" />\n</a>\n\n## Acknowledgments\n\n* Hat tip to https://github.com/cuth/postcss-pxtorem/ for inspiring us for this project.\n",
	"maintainers": [
		{
			"name": "xiaoguang",
			"email": "tut.bear@gmail.com"
		}
	],
	"time": {
		"modified": "2022-06-29T17:22:58.537Z",
		"created": "2014-06-19T10:56:20.331Z",
		"1.0.0": "2014-06-19T10:56:20.331Z",
		"1.0.1": "2021-12-08T08:01:45.111Z"
	},
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"author": {
		"name": "xiaogaung",
		"email": "tut.bear@gmail.com"
	},
	"readmeFilename": "README.md",
	"_downloads": 5
}
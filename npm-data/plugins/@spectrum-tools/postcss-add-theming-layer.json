{
	"_id": "@spectrum-tools/postcss-add-theming-layer",
	"name": "@spectrum-tools/postcss-add-theming-layer",
	"dist-tags": {
		"s2-foundations": "0.0.0",
		"latest": "0.0.0"
	},
	"versions": {
		"0.0.0": {
			"name": "@spectrum-tools/postcss-add-theming-layer",
			"version": "0.0.0",
			"description": "Leveraging style container queries to create an abstraction layer for supporting multiple theming systems",
			"license": "Apache-2.0",
			"author": {
				"name": "Adobe"
			},
			"contributors": [
				{
					"name": "Cassondra Roberts",
					"email": "castastrophe@users.noreply.github.com"
				}
			],
			"main": "index.js",
			"dependencies": {
				"postcss-selector-parser": "^6.1.1",
				"postcss-values-parser": "^6.0.2"
			},
			"peerDependencies": {
				"postcss": ">=8"
			},
			"devDependencies": {
				"ava": "^6.1.3",
				"c8": "^10.1.2",
				"postcss": "^8.4.40"
			},
			"keywords": [
				"css",
				"theming",
				"custom properties",
				"postcss",
				"postcss-plugin"
			],
			"_id": "@spectrum-tools/postcss-add-theming-layer@0.0.0",
			"gitHead": "491f54f60eeadcdfb8d8a4101ea5f913e635c036",
			"_nodeVersion": "18.20.4",
			"_npmVersion": "10.7.0",
			"dist": {
				"integrity": "sha512-D8Jr6vwFIabzh0Fir41lg0P4uzmT9/smNXqYx3ZxoZCePOtLJBziZc5zMakEwE4Q9KPmEDKLtC8H33NEISPXTA==",
				"shasum": "ed43a2ce059b6ba8491f194ad7686829f6b2044c",
				"tarball": "https://registry.npmjs.org/@spectrum-tools/postcss-add-theming-layer/-/postcss-add-theming-layer-0.0.0.tgz",
				"fileCount": 4,
				"unpackedSize": 14403,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIEziG+pH84KvGKWhwt5UbOXHameEYmqBq+y7ru1R4/vIAiEAteaZicp5t2RqRBT4J2fpAgxsaR/QoEQLWluLHGD9l3k="
					}
				]
			},
			"_npmUser": {
				"name": "patrickfulton",
				"email": "patrickfulton@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "patrickfulton",
					"email": "patrickfulton@gmail.com"
				},
				{
					"name": "castastrophe",
					"email": "castastrophe+npm@hey.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-add-theming-layer_0.0.0_1722459553434_0.09186131924083196"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2024-07-31T20:59:13.347Z",
		"0.0.0": "2024-07-31T20:59:13.596Z",
		"modified": "2024-07-31T20:59:13.928Z"
	},
	"maintainers": [
		{
			"name": "patrickfulton",
			"email": "patrickfulton@gmail.com"
		},
		{
			"name": "castastrophe",
			"email": "castastrophe+npm@hey.com"
		}
	],
	"description": "Leveraging style container queries to create an abstraction layer for supporting multiple theming systems",
	"keywords": [
		"css",
		"theming",
		"custom properties",
		"postcss",
		"postcss-plugin"
	],
	"contributors": [
		{
			"name": "Cassondra Roberts",
			"email": "castastrophe@users.noreply.github.com"
		}
	],
	"author": {
		"name": "Adobe"
	},
	"license": "Apache-2.0",
	"readme": "# postcss-add-theming-layer\n\n> Leveraging style container queries to create an abstraction layer for supporting multiple theming systems.\n\n## Installation\n\nAdd the dependency to your project:\n\n```sh\nnpm install postcss-add-theming-layer\n```\n\nor\n\n```sh\nyarn add -DW postcss-add-theming-layer\n```\n\nUse the plugin in your PostCSS configuration:\n\n```js\nmodule.exports = {\n  plugins: {\n    \"postcss-add-theming-layer\": {},\n  },\n};\n```\n\nor as part of your CLI command:\n\n```sh\npostcss -u postcss-add-theming-layer -o dist/index.css src/index.css\n```\n\n## Options\n\n### `selectorPrefix` [string]\n\nThis optional input will prefix the new theming layer selector with the provided string. This can be useful if you want to namespace the injected selectors for the new theming layer to avoid conflicts.\n\n### `skipMapping` [boolean=false]\n\nSkip the mapping of the variables to the system variables. This can be useful if you only want to extract the variables and not map them to the system variables.\n\n### `preserveVariables` [boolean=true]\n\nWhen used with `skipMapping`, this option will preserve the variables defined inside the container query in the output by injecting them to the root selector.\n\n### `referencesOnly` [boolean=false]\n\nThis option will only output those variables that are referencing the newly created system variables and not the system variables themselves. This can be used as a bridge between an old and new implementation for the component.\n\n### `stripLocalSelectors` [boolean=false]\n\nThis option will remove the local selectors (those that map to system variables) from the output leaving only the system definitions.\n\n### `processIdentifier` [(identifierValue: string, identifierName: string) => string]`\n\nCustomize the selectors that variables are placed in. Passed the value and key of the variable that was passed to the container, i.e. `identifierValue = spectrum` and `identifierName = system` for the example below. By default, `identifierName` is used as-is.\n\n## Usage\n\nThis plugin turns this:\n\n```css\n@container style(--system: legacy) {\n  .component {\n    --background-color: blue;\n  }\n  .component.is-selected {\n    --background-color: darkblue;\n  }\n  .component .icon {\n    --color: gray;\n  }\n}\n\n@container style(--system: modern) {\n  .component {\n    --background-color: purple;\n  }\n  .component.is-selected {\n    --background-color: darkpurple;\n  }\n  .component .icon {\n    --color: white;\n  }\n}\n```\n\nInto this:\n\n```css\n.legacy {\n  --system-component-background-color: blue;\n  --system-component-selected-background-color: darkblue;\n}\n\n.modern {\n  --system-component-background-color: purple;\n  --system-component-selected-background-color: darkpurple;\n}\n\n.component {\n  --background-color: var(--system-component-background-color);\n}\n\n.component.is-selected {\n  --background-color: var(--system-component-selected-background-color);\n}\n```\n\n## Usage notes\n\nThis plugin will ignore any underscore-prefixed variables, as they are considered private and not part of the theming layer.\n",
	"readmeFilename": "README.md",
	"_downloads": 74
}
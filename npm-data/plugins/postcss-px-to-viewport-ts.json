{
	"_id": "postcss-px-to-viewport-ts",
	"_rev": "1-105b82066f60ac383335a32e41e85074",
	"name": "postcss-px-to-viewport-ts",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"0.0.1": {
			"name": "postcss-px-to-viewport-ts",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "0.0.1",
			"author": {
				"name": "SonOfMagic",
				"email": "qq1324318532@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/sonofmagic/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/sonofmagic/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/sonofmagic/postcss-px-to-viewport",
			"main": "./dist/index.js",
			"types": "./types/index.d.ts",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss8",
				"postcss-plugin"
			],
			"publishConfig": {
				"registry": "https://registry.npmjs.org/",
				"access": "public"
			},
			"devDependencies": {
				"@icebreakers/eslint-config-ts": "^1.0.2",
				"@types/jest": "^29.4.0",
				"@types/node": "^18.11.18",
				"eslint": "^8.33.0",
				"jest": "^29.4.1",
				"postcss": "^8.4.21",
				"prettier": "^2.8.3",
				"rimraf": "^4.1.2",
				"shelljs": "^0.8.5",
				"ts-jest": "^29.0.5",
				"typescript": "^4.9.5"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"lint-staged": {
				"*.{js,ts}": [
					"eslint --fix"
				]
			},
			"scripts": {
				"dev": "tsc -w",
				"test": "jest",
				"commit": "cz",
				"prebuild": "rimraf dist types",
				"build": "tsc -b"
			},
			"_id": "postcss-px-to-viewport-ts@0.0.1",
			"_integrity": "sha512-g7tSNzmDyJ22hlVuwH9hjW//JzFFVwJx2Xlhqhc0bzb7pSLF4pq4OZkdggDj70X0rhYfkIm5ONowI3cCDBXXYQ==",
			"_resolved": "C:\\Users\\ICEBRE~1\\AppData\\Local\\Temp\\a493c7b97a1cc834f8002dc81525c82a\\postcss-px-to-viewport-ts-0.0.1.tgz",
			"_from": "file:postcss-px-to-viewport-ts-0.0.1.tgz",
			"_nodeVersion": "16.13.0",
			"_npmVersion": "8.18.0",
			"dist": {
				"integrity": "sha512-g7tSNzmDyJ22hlVuwH9hjW//JzFFVwJx2Xlhqhc0bzb7pSLF4pq4OZkdggDj70X0rhYfkIm5ONowI3cCDBXXYQ==",
				"shasum": "38bf22d0316e0fec786b9ebbe0f8913fa01a2262",
				"tarball": "https://registry.npmjs.org/postcss-px-to-viewport-ts/-/postcss-px-to-viewport-ts-0.0.1.tgz",
				"fileCount": 15,
				"unpackedSize": 28905,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIGWNZIFaP526QZHRmo4m8cwqit38oM1ybdot6NEDADaKAiEAlhUHAJyFQxz7bh0cvJOsX82nOcHtKAKAdfvn6OHDzPs="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj2zC0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmopPg//c+P37ubzGZMRaHauHj3GXe03TEEdUlrgY/EtMvuAlLtF8AO+\r\nBbMidnj7Mjk+l+Qtd7SnkJprpdVgWPIdCiSLC1Du7x75sE0e/554h5xT5PW+\r\nkXKX9VultVVMHEz+BygFc+GcHnL1Zkmds6WXXHqCsofwCY7ABEtHYJVZD6zU\r\nhnSwJjQ/1Q6vCs9qRl3n5S6gwlCbTOqQfkj3BQsS1lgRqmA1nRSIvQDp2nR9\r\nXFZpqDnmlys36Sh/LEuHTfX1fBHKfgkgc/XDhFUynx1iwa4INbzYq5Xb0YGQ\r\nCz9wLcScmeRpXuy8oNknZBWlsOpxLPQboi5Fj6+RS+pTG6C4Y5VegixifHjW\r\nexbdEkZgMsgXRuOSF/yWNmvYHrVSWzx7JKI/kDfSgHVK8XiLufDXOyXDcyoh\r\nrR9MLpvboh0dg6ykM5gmEAA317VGP4AO0UD5el3tSZjdtaEs1RL/FtHoVz8/\r\nKNLVg1ZfidCpuY2jfoCxwkjkj2SR3hraBnJNxtlGvIwhFsAY/u3G6A2UfdM8\r\n/0za4ZoZDy0cdCEb5qglLKxF60IKN3FD3i1AGYs0q8QqWLdlxmU2xjmBCBjr\r\n5X9N5qrY19HUE+8a5DpNiWw7LOwVGaLr/9RkzpuO4jC0rsHkJpAsQ+iPH/h+\r\nX9vjeJ7NiaJIhoPXC8rF8wH6IYbiMagj/cA=\r\n=FHnl\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "icebreaker",
				"email": "1324318532@qq.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "icebreaker",
					"email": "1324318532@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport-ts_0.0.1_1675309235770_0.8261903779587363"
			},
			"_hasShrinkwrap": false
		},
		"1.0.0": {
			"name": "postcss-px-to-viewport-ts",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.0.0",
			"author": {
				"name": "SonOfMagic",
				"email": "qq1324318532@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/sonofmagic/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/sonofmagic/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/sonofmagic/postcss-px-to-viewport",
			"main": "./dist/index.js",
			"types": "./types/index.d.ts",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss8",
				"postcss-plugin"
			],
			"publishConfig": {
				"registry": "https://registry.npmjs.org/",
				"access": "public"
			},
			"devDependencies": {
				"@icebreakers/eslint-config-ts": "^1.0.4",
				"@types/jest": "^29.5.1",
				"@types/node": "^20.1.1",
				"eslint": "^8.40.0",
				"jest": "^29.5.0",
				"postcss": "^8.4.23",
				"prettier": "^2.8.8",
				"rimraf": "^5.0.0",
				"shelljs": "^0.8.5",
				"ts-jest": "^29.1.0",
				"typescript": "^4.9.5"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"lint-staged": {
				"*.{js,ts}": [
					"eslint --fix"
				]
			},
			"scripts": {
				"dev": "tsc -w",
				"test": "jest",
				"commit": "cz",
				"prebuild": "rimraf dist types",
				"build": "tsc -b"
			},
			"_id": "postcss-px-to-viewport-ts@1.0.0",
			"_integrity": "sha512-8aMehRxJyuJAJkdGftokHvRrazqU92hZpqVmNqTCxfQ8cYincxNnUlnyWWxPjXrIovVOCvOE2tOaKQ6LtM13+A==",
			"_resolved": "C:\\Users\\ICEBRE~1\\AppData\\Local\\Temp\\d32245b08b91fd510d43fed23bc1446a\\postcss-px-to-viewport-ts-1.0.0.tgz",
			"_from": "file:postcss-px-to-viewport-ts-1.0.0.tgz",
			"_nodeVersion": "16.19.1",
			"_npmVersion": "8.19.3",
			"dist": {
				"integrity": "sha512-8aMehRxJyuJAJkdGftokHvRrazqU92hZpqVmNqTCxfQ8cYincxNnUlnyWWxPjXrIovVOCvOE2tOaKQ6LtM13+A==",
				"shasum": "580d8fe94375a2484d4449d1c9a168b5d97b9dd6",
				"tarball": "https://registry.npmjs.org/postcss-px-to-viewport-ts/-/postcss-px-to-viewport-ts-1.0.0.tgz",
				"fileCount": 16,
				"unpackedSize": 34330,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQD1mPbdJhJ5FVOTXeYc4G3eLsCeS3NYG8eQM6JiUvVpmwIgbW+WeyDd1odU8cSs7bdifFpOITkv5wj4P1krf93MS5o="
					}
				]
			},
			"_npmUser": {
				"name": "icebreaker",
				"email": "1324318532@qq.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "icebreaker",
					"email": "1324318532@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport-ts_1.0.0_1683704632643_0.2585870688581078"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2023-02-02T03:40:35.701Z",
		"0.0.1": "2023-02-02T03:40:35.964Z",
		"modified": "2023-05-10T07:43:52.954Z",
		"1.0.0": "2023-05-10T07:43:52.852Z"
	},
	"maintainers": [
		{
			"name": "icebreaker",
			"email": "1324318532@qq.com"
		}
	],
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"homepage": "https://github.com/sonofmagic/postcss-px-to-viewport",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss8",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/sonofmagic/postcss-px-to-viewport.git"
	},
	"author": {
		"name": "SonOfMagic",
		"email": "qq1324318532@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/sonofmagic/postcss-px-to-viewport/issues"
	},
	"license": "MIT",
	"readme": "# postcss-px-to-viewport-ts\n\n> forked from evrone/postcss-px-to-viewport and rewrite in `typescript`\n\nEnglish | [中文](README_CN.md)\n\nA plugin for [PostCSS](https://github.com/postcss/postcss) that generates viewport units (vw, vh, vmin, vmax) from pixel units.\n\n## Demo\n\nIf your project involves a fixed width, this script will help to convert pixels into viewport units.\n\n### Input\n\n```css\n.class {\n  margin: -10px .5vh;\n  padding: 5vmin 9.5px 1px;\n  border: 3px solid black;\n  border-bottom-width: 1px;\n  font-size: 14px;\n  line-height: 20px;\n}\n\n.class2 {\n  padding-top: 10px; /* px-to-viewport-ignore */\n  /* px-to-viewport-ignore-next */\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 20px;\n  line-height: 30px;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n### Output\n\n```css\n.class {\n  margin: -3.125vw .5vh;\n  padding: 5vmin 2.96875vw 1px;\n  border: 0.9375vw solid black;\n  border-bottom-width: 1px;\n  font-size: 4.375vw;\n  line-height: 6.25vw;\n}\n\n.class2 {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 6.25vw;\n  line-height: 9.375vw;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n## Getting Started\n\n### Installation\n\nAdd via npm\n\n```\nnpm install postcss-px-to-viewport-ts --save-dev\n```\n\nor yarn\n\n```\nyarn add -D postcss-px-to-viewport-ts\n```\n\n### Usage\n\nDefault Options:\n\n```js\n{\n  unitToConvert: 'px',\n  viewportWidth: 320,\n  unitPrecision: 5,\n  propList: ['*'],\n  viewportUnit: 'vw',\n  fontViewportUnit: 'vw',\n  selectorBlackList: [],\n  minPixelValue: 1,\n  mediaQuery: false,\n  replace: true,\n  exclude: undefined,\n  include: undefined,\n  landscape: false,\n  landscapeUnit: 'vw',\n  landscapeWidth: 568\n}\n```\n\n- `unitToConvert` (String) unit to convert, by default, it is px.\n- `viewportWidth` (Number) The width of the viewport.\n- `unitPrecision` (Number) The decimal numbers to allow the vw units to grow to.\n- `propList` (Array) The properties that can change from px to vw.\n  - Values need to be exact matches.\n  - Use wildcard * to enable all properties. Example: ['*']\n  - Use * at the start or end of a word. (['*position*'] will match background-position-y)\n  - Use ! to not match a property. Example: ['*', '!letter-spacing']\n  - Combine the \"not\" prefix with the other prefixes. Example: ['*', '!font*']\n- `viewportUnit` (String) Expected units.\n- `fontViewportUnit` (String) Expected units for font.\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n  - If value is string, it checks to see if selector contains the string.\n    - `['body']` will match `.body-class`\n  - If value is regexp, it checks to see if the selector matches the regexp.\n    - `[/^body$/]` will match `body` but not `.body`\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `replace` (Boolean) replaces rules containing vw instead of adding fallbacks.\n- `exclude` (Regexp or Array of Regexp) Ignore some files like 'node_modules'\n  - If value is regexp, will ignore the matches files.\n  - If value is array, the elements of the array are regexp.\n- `include` (Regexp or Array of Regexp) If `include` is set, only matching files will be converted,\n    for example, only files under `src/mobile/` (`include: /\\/src\\/mobile\\//`)\n  - If the value is regexp, the matching file will be included, otherwise it will be excluded.\n  - If value is array, the elements of the array are regexp.\n- `landscape` (Boolean) Adds `@media (orientation: landscape)` with values converted via `landscapeWidth`.\n- `landscapeUnit` (String) Expected unit for `landscape` option\n- `landscapeWidth` (Number) Viewport width for landscape orientation.\n\n> `exclude` and `include` can be set together, and the intersection of the two rules will be taken.\n\n#### Ignoring\n\nYou can use special comments for ignore conversion of single lines:\n\n- `/* px-to-viewport-ignore-next */` — on a separate line, prevents conversion on the next line.\n- `/* px-to-viewport-ignore */` — after the property on the right, prevents conversion on the same line.\n\nExample:\n\n```css\n/* example input: */\n.class {\n  /* px-to-viewport-ignore-next */\n  width: 10px;\n  padding: 10px;\n  height: 10px; /* px-to-viewport-ignore */\n  border: solid 2px #000; /* px-to-viewport-ignore */\n}\n\n/* example output: */\n.class {\n  width: 10px;\n  padding: 3.125vw;\n  height: 10px;\n  border: solid 2px #000;\n}\n```\n\nThere are several more reasons why your pixels may not convert, the following options may affect this:\n`propList`, `selectorBlackList`, `minPixelValue`, `mediaQuery`, `exclude`, `include`.\n\n#### Use with PostCss configuration file\n\nadd to your `postcss.config.js`\n\n```js\nmodule.exports = {\n  plugins: {\n    // ...\n    'postcss-px-to-viewport-ts': {\n      // options\n    }\n  }\n}\n```\n\n#### Use with gulp-postcss\n\nadd to your `gulpfile.js`:\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar pxtoviewport = require('postcss-px-to-viewport-ts');\n\ngulp.task('css', function () {\n\n    var processors = [\n        pxtoviewport({\n            viewportWidth: 320,\n            viewportUnit: 'vmin'\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n## Contributing\n\nPlease read [Code of Conduct](CODE-OF-CONDUCT.md)\nand [Contributing Guidelines](CONTRIBUTING.md) for submitting pull requests to us.\n\n## Running the tests\n\nIn order to run tests, you need to install dev-packages:\n\n```\nnpm install\n```\n\nThen run the tests via npm script:\n\n```\nnpm run test\n```\n\n## Acknowledgments\n\n- Hat tip to <https://github.com/cuth/postcss-pxtorem/> for inspiring us for this project.\n",
	"readmeFilename": "README.md",
	"_downloads": 21
}
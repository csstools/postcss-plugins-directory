{
	"_id": "@legacy-corp/postcss-extend-rule",
	"_rev": "1-15603d06dc39327202ecd755271a893b",
	"name": "@legacy-corp/postcss-extend-rule",
	"dist-tags": {
		"latest": "3.1.0"
	},
	"versions": {
		"3.1.0": {
			"name": "@legacy-corp/postcss-extend-rule",
			"version": "3.1.0",
			"description": "Use the @extend at-rule and functional selectors in CSS",
			"author": {
				"name": "Jonathan Neal",
				"email": "jonathantneal@hotmail.com"
			},
			"license": "CC0-1.0",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/csstools/postcss-extend-rule.git"
			},
			"homepage": "https://github.com/csstools/postcss-extend-rule#readme",
			"bugs": {
				"url": "https://github.com/csstools/postcss-extend-rule/issues"
			},
			"main": "dist/index.js",
			"module": "dist/index.mjs",
			"scripts": {
				"build": "rollup --config .rollup.js --silent",
				"prepublishOnly": "npm test",
				"pretest:tape": "npm run build",
				"test": "npm run test:js && npm run test:tape",
				"test:js": "eslint src/{*,**/*}.js --cache --ignore-path .gitignore --quiet",
				"test:tape": "postcss-tape"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"dependencies": {
				"postcss": "^7.0.17",
				"postcss-nesting": "^7.0.1",
				"postcss-tape": "^5.0.2"
			},
			"devDependencies": {
				"@babel/core": "^7.5.5",
				"@babel/preset-env": "^7.5.5",
				"babel-eslint": "^10.0.2",
				"eslint": "^6.1.0",
				"pre-commit": "^1.2.2",
				"rollup": "^1.17.0",
				"rollup-plugin-babel": "^4.3.3"
			},
			"eslintConfig": {
				"env": {
					"browser": true,
					"es6": true,
					"node": true
				},
				"extends": "eslint:recommended",
				"parser": "babel-eslint",
				"parserOptions": {
					"ecmaVersion": 2018,
					"impliedStrict": true,
					"sourceType": "module"
				},
				"root": true
			},
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"extend",
				"matched",
				"matches",
				"match",
				"selectors",
				"subclassing",
				"subclasses",
				"subclass",
				"styling",
				"styles",
				"style",
				"placeholder",
				"placehold",
				"selectors",
				"selector",
				"chaining"
			],
			"gitHead": "97e6ff04329b0410f453c5d98e9e63b19bec6512",
			"_id": "@legacy-corp/postcss-extend-rule@3.1.0",
			"_nodeVersion": "12.18.4",
			"_npmVersion": "6.14.8",
			"dist": {
				"integrity": "sha512-PI85xxk2gWMfctKcSFO7CaxACZkxwMNqCVAUkzNkqqQrdl4yBCjzLqR0yx0jmO+0C0AdHzJXdzKo2g4DkH3KQw==",
				"shasum": "2aa877c97ceacfc1e81fbc1a56c28d632cda835c",
				"tarball": "https://registry.npmjs.org/@legacy-corp/postcss-extend-rule/-/postcss-extend-rule-3.1.0.tgz",
				"fileCount": 8,
				"unpackedSize": 44544,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgTjAlCRA9TVsSAnZWagAA/SAP/i7t5AAYNTz6AtT3VyeR\nAnas/j2HX1OrZCud/meI9eR928x5mzwgYq5E+PjsTB9XAWTikeRHc51tnuAv\nprBODV7lutlPE5NkpQQ5Bu9BkqnT/rcTNHTb8466Kks5MabV9HBEhm5Fd9tZ\nM67QJ2Z6eeRE1qqFpujqF7hgiRovGlLtFIqIfo/AFKMD/feLJx7rArxats5L\ngG03vs4uibJfKHFT2qzjUg4Zn8/K0zXKHOpODGIaSs19NseQZ3/yEWk9pbHJ\nYzaLjWt6Ub9K2rmpqeJNJ6z2tq9peNUeZhKQjBvuG+a4zY2hAx1nPqoNdW8f\njIahCecWbJrMRwR4bLjlWPx/yayNubNuX+VMqYLlCI7UBm9WgkVSnGoPr7CV\nU26dCHTmarAPtmDtnjICCnHrZrwJZj4/uSyOV135UUIYD8GU4Oiqm8/mIiWL\n62FeeuLhDM15eQGlxaigm8hchcO6ty+HWciWsIkSG5aEWLKOLSo79voCYya3\nKuEL6pgFReirmNlMlmh1PfJMRuzONM1aDkdWYqgIPZw/Y9xUVuubFr/WE4K0\n94S0J9gw7x1hQIOn0iIzufAunZ4Obgz8LVvRnczUcxpuROj820RKRnq+IkAO\nDJEikNjQB3+Wx/iLyB6tj7tqvSggtQi/Qzk5wbh310ORGOtVXyWqR3z9BsCI\nkJqk\r\n=hUEz\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCidco8m1kbh0A6gri6fgTtniPiO0Uh89fRqbiQ92drpwIhAP3tyRzFBJZsW4kbHs3MXUpurmxStXioD+csmDvzd7Oo"
					}
				]
			},
			"_npmUser": {
				"name": "aleksey.nemiro",
				"email": "aleksey.nemiro@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "aleksey.nemiro",
					"email": "aleksey.nemiro@gmail.com"
				},
				{
					"name": "alexey-cs",
					"email": "alexey.nemiro@clearscale.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-extend-rule_3.1.0_1615736869293_0.17904830499388336"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2021-03-14T15:47:49.054Z",
		"3.1.0": "2021-03-14T15:47:49.437Z",
		"modified": "2022-04-06T01:07:42.757Z"
	},
	"maintainers": [
		{
			"name": "aleksey.nemiro",
			"email": "aleksey.nemiro@gmail.com"
		},
		{
			"name": "alexey-cs",
			"email": "alexey.nemiro@clearscale.com"
		}
	],
	"description": "Use the @extend at-rule and functional selectors in CSS",
	"homepage": "https://github.com/csstools/postcss-extend-rule#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"extend",
		"matched",
		"matches",
		"match",
		"selectors",
		"subclassing",
		"subclasses",
		"subclass",
		"styling",
		"styles",
		"style",
		"placeholder",
		"placehold",
		"selectors",
		"selector",
		"chaining"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/csstools/postcss-extend-rule.git"
	},
	"author": {
		"name": "Jonathan Neal",
		"email": "jonathantneal@hotmail.com"
	},
	"bugs": {
		"url": "https://github.com/csstools/postcss-extend-rule/issues"
	},
	"license": "CC0-1.0",
	"readme": "# PostCSS Extend Rule [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS\" width=\"90\" height=\"90\" align=\"right\">][postcss]\n\n[![NPM Version][npm-img]][npm-url]\n[![Build Status][cli-img]][cli-url]\n[![Support Chat][git-img]][git-url]\n\n[PostCSS Extend Rule] lets you use the `@extend` at-rule and\n[Functional Selectors] in CSS, following the speculative\n[CSS Extend Rules Specification].\n\n```pcss\n%thick-border {\n  border: thick dotted red;\n}\n\n.serious-modal {\n  font-style: normal;\n  font-weight: bold;\n\n  @media (max-width: 240px) {\n    @extend .modal:hover;\n  }\n}\n\n.modal {\n  @extend %thick-border;\n\n  color: red;\n}\n\n.modal:hover:not(:focus) {\n  outline: none;\n}\n\n/* becomes */\n\n.serious-modal {\n  font-style: normal;\n  font-weight: bold;\n}\n\n@media (max-width: 240px) {\n  .serious-modal:not(:focus) {\n    outline: none;\n  }\n}\n\n.modal {\n  border: thick dotted red;\n  color: red;\n}\n\n.modal:hover:not(:focus) {\n  outline: none;\n}\n```\n\n## Usage\n\nAdd [PostCSS Extend Rule] to your project:\n\n```bash\nnpm install postcss-extend-rule --save-dev\n```\n\nUse **PostCSS Extend Rule** to process your CSS:\n\n```js\nconst postcssExtendRule = require('postcss-extend-rule');\n\npostcssExtendRule.process(YOUR_CSS /*, processOptions, pluginOptions */);\n```\n\nOr use it as a [PostCSS] plugin:\n\n```js\nconst postcss = require('postcss');\nconst postcssExtendRule = require('postcss-extend-rule');\n\npostcss([\n  postcssExtendRule(/* pluginOptions */)\n]).process(YOUR_CSS /*, processOptions */);\n```\n\n**PostCSS Extend Rule** runs in all Node environments, with special instructions for:\n\n| [Node](INSTALL.md#node) | [PostCSS CLI](INSTALL.md#postcss-cli) | [Webpack](INSTALL.md#webpack) | [Create React App](INSTALL.md#create-react-app) | [Gulp](INSTALL.md#gulp) | [Grunt](INSTALL.md#grunt) |\n| --- | --- | --- | --- | --- | --- |\n\n## Options\n\n### name\n\nThe `name` option determines the at-rule name being used to extend selectors.\nBy default, this name is `extend`, meaning `@extend` rules are parsed.\n\n```js\npostcssExtend({ name: 'postcss-extend' })\n```\n\nIf the `name` option were changed to, say, `postcss-extend`, then only\n`@postcss-extend` at-rules would be parsed.\n\n```pcss\nmain {\n  @postcss-extend .some-rule;\n}\n```\n\n### onFunctionalSelector\n\nThe `onFunctionalSelector` option determines how functional selectors should be\nhandled. Its options are:\n\n- `remove` (default) removes any functional selector\n- `ignore` ignores any functional selector and moves on\n- `warn` warns the user whenever it encounters a functional selector\n- `throw` throws an error if ever it encounters a functional selector\n\n```js\npostcssExtend({ onFunctionalSelector: 'remove' /* default */ })\n```\n\n```pcss\n%this-will-be-removed {}\n```\n\n### onRecursiveExtend\n\nThe `onRecursiveExtend` option determines how recursive extend at-rules should\nbe handled. Its options are:\n\n- `remove` (default) removes any recursive extend at-rules\n- `ignore` ignores any recursive extend at-rules and moves on\n- `warn` warns the user whenever it encounters a recursive extend at-rules\n- `throw` throws an error if ever it encounters a recursive extend at-rules\n\n```js\npostcssExtend({ onRecursiveExtend: 'remove' /* default */ })\n```\n\n```pcss\n.this-will-not-extend-itself {\n  @extend .this-will-not-extend-itself;\n}\n```\n\n### onUnusedExtend\n\nThe `onUnusedExtend` option determines how an unused extend at-rule should be\nhandled. Its options are:\n\n- `remove` (default) removes any unused extend at-rule\n- `ignore` ignores any unused extend at-rule and moves on\n- `warn` warns the user whenever it encounters an unused extend at-rule\n- `throw` throws an error if ever it encounters an unused extend at-rule\n\n```js\npostcssExtend({ onUnusedExtend: 'remove' /* default */ })\n```\n\n```pcss\nmain {\n  @extend .this-selector-does-not-exist-and-will-be-removed;\n}\n```\n\n[cli-img]: https://img.shields.io/travis/csstools/postcss-extend-rule/master.svg\n[cli-url]: https://travis-ci.org/csstools/postcss-extend-rule\n[git-img]: https://img.shields.io/badge/support-chat-blue.svg\n[git-url]: https://gitter.im/postcss/postcss\n[npm-img]: https://img.shields.io/npm/v/postcss-extend-rule.svg\n[npm-url]: https://www.npmjs.com/package/postcss-extend-rule\n\n[CSS Extend Rules Specification]: https://jonathantneal.github.io/specs/css-extend-rule/\n[Functional Selectors]: https://jonathantneal.github.io/specs/css-extend-rule/#functional-selector\n[PostCSS]: https://github.com/postcss/postcss\n[PostCSS Extend Rule]: https://github.com/csstools/postcss-extend-rule\n",
	"readmeFilename": "README.md",
	"_downloads": 236
}
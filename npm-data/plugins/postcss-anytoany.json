{
	"_id": "postcss-anytoany",
	"_rev": "1-5fc880950faebdab93ff959cfcd30e6d",
	"name": "postcss-anytoany",
	"dist-tags": {
		"latest": "5.0.1"
	},
	"versions": {
		"5.0.1": {
			"name": "postcss-anytoany",
			"description": "A CSS post-processor that converts px|any to rem|any.",
			"version": "5.0.1",
			"author": {
				"name": "anhulife"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/anhulife/postcss-anytoany.git"
			},
			"bugs": {
				"url": "https://github.com/anhulife/postcss-anytoany/issues"
			},
			"main": "index.js",
			"scripts": {
				"test": "jasmine-node spec"
			},
			"devDependencies": {
				"jasmine-node": "~1.11.0"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": "^4.1.0",
				"postcss": "^5.2.10"
			},
			"gitHead": "0b0ce4e265f87f10c91cf8d53735c3594ccefe76",
			"homepage": "https://github.com/anhulife/postcss-anytoany#readme",
			"_id": "postcss-anytoany@5.0.1",
			"_nodeVersion": "12.13.1",
			"_npmVersion": "6.12.1",
			"dist": {
				"integrity": "sha512-riRRvMD2OpqbtswQeulXFQqCLQyex1Yp8YCmU1yILPC7k/pw3zr/lgIpHgcIvaJPqAz5NihnyJJLBowvNJbOxQ==",
				"shasum": "9206bc2870d485185dd9c5e75f18f2965dbb0e76",
				"tarball": "https://registry.npmjs.org/postcss-anytoany/-/postcss-anytoany-5.0.1.tgz",
				"fileCount": 13,
				"unpackedSize": 30318,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeF/FtCRA9TVsSAnZWagAAAiQQAIpfGc0+13d3KlNrrong\nFwCdcVKhC1CnRMmePdsEcyZz16jML/vHo+CGdVxDdJgDFxTlBvfnTq/gtLOe\nC35ZBtg1mYVix0cDxyvvcKPt/Em/WZNVKHuvOJGf0HsJEmRcwMnj0svaULML\nuoW03NcC1LGyraedbPhXYRoTDusoaWEnax5BAlJ2oNXTKObEVtI4LCOmghmU\nY2sGocKxGpXiVBb2zWeKaEW0lUHTYqBSTBkeHgkQzs8PWY2TWtErVcZKcjLK\nw9isCd01ocP0cPIgTYEQNqXHfhIml8JpeH9Uk8tg6nkFFSYNnRZBEXUc/CAS\nwRyWwnISaPXMwAaiqzkBBub3oJ0UJd7JnwQheBdujg6xkHelizFFa9axjSma\n3jfT1Aw4Qza5CGPvkY0eAL46auPkyTtTo1c2QDcZRQY82LLWcacFuYv653NX\ngWPx1bO1uM9Q+fEBmrHxrMIsYx6OWT6GxY7JwunXzsQI+K80KMNPtE6Qv9UE\naZsuVQYAsBRyCjv1xmRM1x4Tf9Bj2oGu9cyDa/nrChxyCkjprlEnQQDcVRvk\n+0d35aar2xk3hWd/9ubGOB9S7/OLLbfadK1MXctaarw7nd8WTP8PuwCRcgBg\nLVNK99RmLYbgk0pSY6ST/28c5TCBpPe6jklRIIGXK+jZxaSDUwgqw6IHa2+/\nhQg+\r\n=Vty4\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIBgjXW2rMg93MFm3F54OFSZ9iaVHOztmfkqmOxf4xhq7AiAcqe93yZPt98OmSIIGJ2mgPoUye586FuH3eZ3+fuheCg=="
					}
				]
			},
			"maintainers": [
				{
					"name": "anhulife",
					"email": "anhulife@gmail.com"
				}
			],
			"_npmUser": {
				"name": "anhulife",
				"email": "anhulife@gmail.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-anytoany_5.0.1_1578627436804_0.912262506565999"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2020-01-10T03:37:16.804Z",
		"5.0.1": "2020-01-10T03:37:17.054Z",
		"modified": "2022-05-13T06:02:44.600Z"
	},
	"maintainers": [
		{
			"name": "anhulife",
			"email": "anhulife@gmail.com"
		}
	],
	"description": "A CSS post-processor that converts px|any to rem|any.",
	"homepage": "https://github.com/anhulife/postcss-anytoany#readme",
	"keywords": [
		"css",
		"rem",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/anhulife/postcss-anytoany.git"
	},
	"author": {
		"name": "anhulife"
	},
	"bugs": {
		"url": "https://github.com/anhulife/postcss-anytoany/issues"
	},
	"license": "MIT",
	"readme": "# postcss-anytoany [![NPM version](https://badge.fury.io/js/postcss-anytoany.svg)](http://badge.fury.io/js/postcss-anytoany)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rem units from pixel units.\n\n## Install\n\n```shell\n$ npm install postcss-anytoany --save-dev\n```\n\n## Usage\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625rem;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorem = require('postcss-anytoany');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0,\n    sourceUnitName: 'px',\n    targetUnitName: 'rem'\n}\n```\n\n- `rootValue` (Number) The root element font size.\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `propList` (Array) The properties that can change from px to rem.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']` \n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) replaces rules containing rems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `sourceUnitName` (String) Set the source unit name. Example: `'px'`\n- `targetUnitName` (String) Set the target unit name. Example: `'rem'`\n\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorem = require('postcss-anytoany');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` or `PX` is ignored by `postcss-anytoany` but still accepted by browsers\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 10
}
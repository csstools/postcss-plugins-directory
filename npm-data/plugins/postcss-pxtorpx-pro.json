{
	"_id": "postcss-pxtorpx-pro",
	"_rev": "3-7b09c82c4fbc7acae133ac5dca63a818",
	"name": "postcss-pxtorpx-pro",
	"dist-tags": {
		"latest": "2.0.0",
		"berry": "2.0.0-beta"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-pxtorpx-pro",
			"description": "A CSS post-processor that converts px to rpx. 转换px单位为rpx，并允许指定任意单位及其转换函数，支持指定黑名单prop",
			"version": "1.0.0",
			"author": {
				"name": "Genuifx"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/Genuifx/postcss-pxtorpx-pro.git"
			},
			"bugs": {
				"url": "https://github.com/Genuifx/postcss-pxtorpx-pro/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^6.8.0",
				"husky": "^4.2.3",
				"jasmine-node": "^3.0.0",
				"lint-staged": "^10.0.8",
				"prettier": "^1.19.1"
			},
			"keywords": [
				"css",
				"rpm",
				"unit",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"postcss": "^7.0.27"
			},
			"gitHead": "d1de15825f7e44c25c69cbe94ca0630bc8146948",
			"homepage": "https://github.com/Genuifx/postcss-pxtorpx-pro#readme",
			"_id": "postcss-pxtorpx-pro@1.0.0",
			"_nodeVersion": "12.13.1",
			"_npmVersion": "6.12.1",
			"dist": {
				"integrity": "sha512-MXASoQS5oqAevEdZlRROsaSFMYMGbxUauWX30kIV+yUpJPqLBRqDEM63NCVVn6MpEUQ0yBsO1yXriNt/OmUxLw==",
				"shasum": "85f02acb4111bcd52e0b09aa467448d8fa02380d",
				"tarball": "https://registry.npmjs.org/postcss-pxtorpx-pro/-/postcss-pxtorpx-pro-1.0.0.tgz",
				"fileCount": 13,
				"unpackedSize": 27971,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeYyo5CRA9TVsSAnZWagAAPg0P/RcNZKYBJPwOFjHzAdmj\n2E9uj/xptlgqkqL8Mmvyd4gqfkvr6BU9Pj1WJjFAprFBFZmb5JQEjkssBz9P\n+d95RRVserhj4FPOMpu4QuR4ZQTUQyQb8FcOIAyB1ADW1j29jcQVkUCfo8tv\nAT2EbJGmdb3Eo8mL0ToKmEsz+0aK+GWzyClU7+m9JMCedTcd4rSn2XQdtaia\nRvJaMJtcu0Jd/XXFV+9Yz+HdJRbCBWAXCRi3wSq+MXgTfRCKdAmft0Jmqf0m\nl/rZdTV56BbteHx7F8P0zrYBwOvrsM2X/qfqzHgTF94kwla2D1P95tFUlVPD\nJMQHRLyezt7LHhl8izFpvkk+b7HOYKTV/qGG018SgbufEogRi1iz35YakSXX\noDUXJJqXvvwAQwfL9wpWoXrN7rv/d8Oqqz3EbCI+5Xk33jts+Xmg3uvd9bQu\n1pH0WZYEAekLQ7CSXxGRUD+B0ShmdZfM14KpEH+GprbiwtbXvCYtQ3LtJOuk\nKvKsQZuKV41lqwLRjHGmfhk0AytTyi8l8d/CYWI8DK0mOMIw5yaLj/Fa+JfY\npr5WdEuaiheqcMZ0Oysb+tUV+y9whmYZmXOowmRnnE6Ubsthr8qVpyyBObrQ\n7c830Myzp5+cMXUE4bv5cerb8b7JYjjFqt+gmxI2OVvzw/sPvffSYipJzJBy\nBoCB\r\n=x6xk\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIAcmw//+SB8mY8+JYDXtFyberdQDRMF8gahSbLmHyB9kAiEAkEM28rKyFicRRy3e3ijFqUW+UbwFjXh9DJYLLspU95o="
					}
				]
			},
			"maintainers": [
				{
					"name": "genuifx",
					"email": "genuifx@gmail.com"
				}
			],
			"_npmUser": {
				"name": "genuifx",
				"email": "genuifx@gmail.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorpx-pro_1.0.0_1583557177194_0.992915564382103"
			},
			"_hasShrinkwrap": false
		},
		"2.0.0-beta": {
			"name": "postcss-pxtorpx-pro",
			"description": "A CSS post-processor that converts px to rpx. 转换px单位为rpx，并允许指定任意单位及其转换函数，支持指定黑名单prop",
			"version": "2.0.0-beta",
			"author": {
				"name": "Genuifx"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/Genuifx/postcss-pxtorpx-pro.git"
			},
			"bugs": {
				"url": "https://github.com/Genuifx/postcss-pxtorpx-pro/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^6.8.0",
				"husky": "^4.2.3",
				"jasmine-node": "^3.0.0",
				"lint-staged": "^10.0.8",
				"prettier": "^1.19.1"
			},
			"peerDependencies": {
				"postcss": "^8.1.1"
			},
			"keywords": [
				"css",
				"rpm",
				"unit",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {},
			"readme": "# postcss-pxtorpx-pro ![Node.js CI](https://github.com/Genuifx/postcss-pxtorpx-pro/workflows/Node.js%20CI/badge.svg) [![npm version](https://badge.fury.io/js/postcss-pxtorpx-pro.svg)](https://badge.fury.io/js/postcss-pxtorpx-pro)\n\n本项目从[pxtorem](https://github.com/cuth/postcss-pxtorem)基础上修改而来，转换px单位为rpx，并允许指定任意单位及其转换函数，支持指定黑名单prop。\n\n由于可以指定需要转换的单位和转化函数，故该插件理论上可以将px单位转为任意单位。默认转为rpx单位。\n\nThis repo is fork from [pxtorem](https://github.com/cuth/postcss-pxtorem), but more powerful than it. This plugin can transform pixels unit to any unit theoretically, which default transform to `rpx` unit.\n\n`rpx` is the unit make for developing mini-program, see [@wxa](https://webank.gitee.io/wxa/)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rpx units from pixel units.\n\n## Install\n\n```shell\n$ npm install postcss-pxtorpx-pro --save-dev\n```\n\n## Usage\n\n像素是web开发中最常用的单位，但在做响应式页面开发之时稍显无力，开发者需要编写大量适配代码。故在移动端开发中我们常搭配rem, vw等单位使用，而在开发各类小程序中，我们又常用rpx取代vw。\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 { \n  margin: 0 0 40rpx; \n  font-size: 64rpx; \n  line-height: 1.2; \n  letter-spacing: 2rpx; \n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorpx = require('postcss-pxtorpx-pro');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorpx(options)).process(css).css;\n\nfs.writeFile('main-rpx.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rpx file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n  // 转化的单位\n  unit: 'rpx',\n  // 单位精度\n  unitPrecision: 5,\n  // 不需要处理的css选择器\n  selectorBlackList: [],\n  // 不需要转化的css属性\n  propBlackList: [], \n  // 直接修改px，还是新加一条css规则\n  replace: true,\n  // 是否匹配媒介查询的px\n  mediaQuery: false,\n  // 需要转化的最小的pixel值，低于该值的px单位不做转化\n  minPixelValue: 0,\n  // 不处理的文件\n  exclude: null,\n  // 转化函数\n  // 默认设计稿按照750宽，2倍图的出\n  transform: (x) => 2*x\n}\n```\n- `unit`(String) The unit transform to. default `rpx`.\n- `unitPrecision` (Number) The decimal numbers to allow the rpx units to grow to.\n- `transform` (Function) function to transform pixels to other unit. default `(x) => 2 * x`.\n- `propBlackList` (Array) The properties that can change from px to rpx.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']` \n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) Replaces rules containing rpxs instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `exclude` (String, Regexp, Function) The file path to ignore and leave as px.\n    - If value is string, it checks to see if file path contains the string.\n        - `'exclude'` will match `\\project\\postcss-pxtorpx\\exclude\\path`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `/exclude/i` will match `\\project\\postcss-pxtorpx\\exclude\\path`\n    - If value is function, you can use exclude function to return a true and the file will be ignored.\n        - the callback will pass the file path as  a parameter, it should returns a Boolean result.\n        - `function (file) { return file.indexOf('exclude') !== -1; }`\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorpx = require('postcss-pxtorpx-pro');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorpx({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` or `PX` is ignored by `postcss-pxtorpx` but still accepted by browsers\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n\n\n### REF\n\n开发本插件之前，没有留意到已经有童鞋做了一个[类似的](https://github.com/dnxbf321/postcss-pxtorpx), 不过看下功能，本插件应该更加强大一些，故取其同名加pro。\n\n",
			"readmeFilename": "README.md",
			"gitHead": "14bc95a91fde376e2463df5062e5621afccdce8d",
			"homepage": "https://github.com/Genuifx/postcss-pxtorpx-pro#readme",
			"_id": "postcss-pxtorpx-pro@2.0.0-beta",
			"_nodeVersion": "12.18.1",
			"_npmVersion": "6.14.5",
			"dist": {
				"integrity": "sha512-d7WmCgUe+NKqHK9NlvEhrGtcaOfEn+iVKjS2hEe8lZnnQPjvqGyA9JwYDC8cWUjLE+kHUwzdAHe7Yo6JS5mVuQ==",
				"shasum": "841f203e3164c5570b32f7dbc24a064e607126b7",
				"tarball": "https://registry.npmjs.org/postcss-pxtorpx-pro/-/postcss-pxtorpx-pro-2.0.0-beta.tgz",
				"fileCount": 13,
				"unpackedSize": 28472,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJffWlaCRA9TVsSAnZWagAAvSEP+wUrqdOUAX8jIRTtBXfe\n6sh0SB28Y+MCcIcZGU1nMy5jhiToC+kDolP7D+9grx+u/uvaJ3hHyXeDqsHt\n+Hsa/n5JKszGZGUTB4/G9wmeHPZ0wk2heC8xun2zX6npPKxefzrCMvjK/zpH\nl85x5S0hlNQcbMDIIyOXjhLdwaIbi4ihQKGrCTa+6bxF7Mew9ym6y526Chnw\npwZ3KYH9rPfD1Z+7bSsqtsLlPfHYmpUS5boExazia7leMTbe0U6aFrBRZ5HY\n4PEDGQ8A4xt/CUy7SBywWuIEVzC7LsXtfIfoHfOSI7XF78sV2hCZcyb/KSai\ne/OxI2bDP1CC35MITf4KPxHXrw1f4sYt1+7KA5l5AQ58b0cEd+sVVBGx4Ytu\n34OR/cvg1pqr++lYtswYazeWaRXEB0PbN0ZjvxrLnkLeHgn6ibvEK11dhn2i\nRHdRxionSvt3p2YfEt2gfEl1URiQYYYy7Ew7u0IK1u/Iw/CuAfhdqF5VPB3W\nQbrNtGKnkjEo2oGX/rx1CnyWdh9mxrOisunnFKGEnjdHE+0qVdFJihw99gWM\nErP8pOGbgMfLyijaSAN7gwzQhIvajHYmQg3rXRp7kjSXDF6AG3I5IGIsHeJ3\npQCoep1016OQsASit0jKyzr4Hg8VnySDTJgXGvy3+BMNo/55tWWZo7G34pEI\nGji6\r\n=fBlO\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIA4refcLihm0R6x4J15OWOUT7h1VdGEx9B9NFXHEn2JnAiEA4AzczOUCP92YSSQmmXEPwtRBGPWp+OrZUkApoIPr0Y0="
					}
				]
			},
			"maintainers": [
				{
					"name": "genuifx",
					"email": "genuifx@gmail.com"
				}
			],
			"_npmUser": {
				"name": "genuifx",
				"email": "genuifx@gmail.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorpx-pro_2.0.0-beta_1602054489678_0.02578722621509555"
			},
			"_hasShrinkwrap": false
		},
		"2.0.0": {
			"name": "postcss-pxtorpx-pro",
			"description": "A CSS post-processor that converts px to rpx. 转换px单位为rpx，并允许指定任意单位及其转换函数，支持指定黑名单prop",
			"version": "2.0.0",
			"author": {
				"name": "Genuifx"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/Genuifx/postcss-pxtorpx-pro.git"
			},
			"bugs": {
				"url": "https://github.com/Genuifx/postcss-pxtorpx-pro/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^8.11.0",
				"husky": "^4.2.3",
				"jasmine-node": "^1.16.0",
				"lint-staged": "^10.0.8",
				"prettier": "^1.19.1"
			},
			"peerDependencies": {
				"postcss": "^8.1.1"
			},
			"keywords": [
				"css",
				"rpm",
				"unit",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"gitHead": "d69a2ff314da5af352997a13bef22e09016b7e32",
			"homepage": "https://github.com/Genuifx/postcss-pxtorpx-pro#readme",
			"_id": "postcss-pxtorpx-pro@2.0.0",
			"_nodeVersion": "16.2.0",
			"_npmVersion": "7.13.0",
			"dist": {
				"integrity": "sha512-nahD/qIqv9N+zs2hxFq/QzyeiHOEryP9fxavsb7ZFSpvcm5oOf74ueE/R6Uj19x1bJ1m2ZeJWxCHbv/d5ST2aQ==",
				"shasum": "38cbd836e06d1acb7fe01cf7e4e82172cf2b66c4",
				"tarball": "https://registry.npmjs.org/postcss-pxtorpx-pro/-/postcss-pxtorpx-pro-2.0.0.tgz",
				"fileCount": 13,
				"unpackedSize": 28447,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPZwyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqx4xAAmu8zR3TetMFaBfrHgmzy/zcqU+Qrn40bhNXrJClwwtzdYgaj\r\n51OE5xBkzdG5FT7nzVvo24eWkMLOCYGikjhIVAIZ0wyKsdRDEdGMODS+TQZD\r\npTd9IghCxIo8/j5AQPYsz4PGwUOMEXVANfeHaELF1R0KmdyLBgmVfOTJpN+M\r\nMgn8P7KV+w9WLgBQTm1GWG9sQa0EN0Gay2nFLWpx/XFgfydE3DEgxr9JfU2M\r\ndfMokATE8OYY+S6fdhBxy/zsOI7PqnUlWGIJGH0z2ntGivHEygq3uGq1T2r0\r\nVQPvBi7i3kq7jdhxWFF1+502nwpJWLbcQ8NTxNqFTX0BKQqqPDmtIyrx6HNE\r\njiV7Qt6vpYd3gxQF2XTJvkDuiTdlSdQlahyOGAOkq/BTHLqMy0wNmSmIEh1q\r\nH/WyEuiLn7nfdluxlATomH4RnsnXcCYiP6UAmJkhd/tOpUQwEC6RTMOnb5YN\r\nTAUXZvz7RO74dL1q0eBQjPWx0cXdJJvDSmYVqOQY/OuCB95cSnt8h7sGKNws\r\nqb7eskoaGSXNDBM3Aod8caHHrrR6fNc+vDLdCgfEgk7S1M1rKIESu+UHOab2\r\n15pqsiERqEp7MthzqKlFXG/eg2KOydojUgxsB2HxjqR0i6DwalyStUxMpUou\r\nNXb1TAW+ypliyu6Z8xcv3TpwA3fbFupSncA=\r\n=FDDR\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDHWN0gyqAjqlYUHXgJK4lUXomsnB9+n3u8e4SRVx3BOAIgJ6pm3gUPLHNq6Aksknwl5myCcSGRXxmkJftdQW4wRKw="
					}
				]
			},
			"_npmUser": {
				"name": "genuifx",
				"email": "genuifx@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "genuifx",
					"email": "genuifx@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorpx-pro_2.0.0_1648204850555_0.8507446060026729"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2020-03-07T04:59:36.970Z",
		"1.0.0": "2020-03-07T04:59:37.320Z",
		"modified": "2022-05-13T06:39:52.901Z",
		"2.0.0-beta": "2020-10-07T07:08:09.775Z",
		"2.0.0": "2022-03-25T10:40:50.686Z"
	},
	"maintainers": [
		{
			"name": "genuifx",
			"email": "genuifx@gmail.com"
		}
	],
	"description": "A CSS post-processor that converts px to rpx. 转换px单位为rpx，并允许指定任意单位及其转换函数，支持指定黑名单prop",
	"homepage": "https://github.com/Genuifx/postcss-pxtorpx-pro#readme",
	"keywords": [
		"css",
		"rpm",
		"unit",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/Genuifx/postcss-pxtorpx-pro.git"
	},
	"author": {
		"name": "Genuifx"
	},
	"bugs": {
		"url": "https://github.com/Genuifx/postcss-pxtorpx-pro/issues"
	},
	"license": "MIT",
	"readme": "# postcss-pxtorpx-pro ![Node.js CI](https://github.com/Genuifx/postcss-pxtorpx-pro/workflows/Node.js%20CI/badge.svg) [![npm version](https://badge.fury.io/js/postcss-pxtorpx-pro.svg)](https://badge.fury.io/js/postcss-pxtorpx-pro)\n\n本项目从[pxtorem](https://github.com/cuth/postcss-pxtorem)基础上修改而来，转换px单位为rpx，并允许指定任意单位及其转换函数，支持指定黑名单prop。\n\n由于可以指定需要转换的单位和转化函数，故该插件理论上可以将px单位转为任意单位。默认转为rpx单位。\n\nThis repo is fork from [pxtorem](https://github.com/cuth/postcss-pxtorem), but more powerful than it. This plugin can transform pixels unit to any unit theoretically, which default transform to `rpx` unit.\n\n`rpx` is the unit make for developing mini-program, see [@wxa](https://webank.gitee.io/wxa/)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rpx units from pixel units.\n\n## Install\n\n```shell\n$ npm install postcss-pxtorpx-pro --save-dev\n```\n\n## Usage\n\n像素是web开发中最常用的单位，但在做响应式页面开发之时稍显无力，开发者需要编写大量适配代码。故在移动端开发中我们常搭配rem, vw等单位使用，而在开发各类小程序中，我们又常用rpx取代vw。\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 { \n  margin: 0 0 40rpx; \n  font-size: 64rpx; \n  line-height: 1.2; \n  letter-spacing: 2rpx; \n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorpx = require('postcss-pxtorpx-pro');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorpx(options)).process(css).css;\n\nfs.writeFile('main-rpx.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rpx file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n  // 转化的单位\n  unit: 'rpx',\n  // 单位精度\n  unitPrecision: 5,\n  // 不需要处理的css选择器\n  selectorBlackList: [],\n  // 不需要转化的css属性\n  propBlackList: [], \n  // 直接修改px，还是新加一条css规则\n  replace: true,\n  // 是否匹配媒介查询的px\n  mediaQuery: false,\n  // 需要转化的最小的pixel值，低于该值的px单位不做转化\n  minPixelValue: 0,\n  // 不处理的文件\n  exclude: null,\n  // 转化函数\n  // 默认设计稿按照750宽，2倍图的出\n  transform: (x) => 2*x\n}\n```\n- `unit`(String) The unit transform to. default `rpx`.\n- `unitPrecision` (Number) The decimal numbers to allow the rpx units to grow to.\n- `transform` (Function) function to transform pixels to other unit. default `(x) => 2 * x`.\n- `propBlackList` (Array) The properties that can change from px to rpx.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']` \n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) Replaces rules containing rpxs instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `exclude` (String, Regexp, Function) The file path to ignore and leave as px.\n    - If value is string, it checks to see if file path contains the string.\n        - `'exclude'` will match `\\project\\postcss-pxtorpx\\exclude\\path`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `/exclude/i` will match `\\project\\postcss-pxtorpx\\exclude\\path`\n    - If value is function, you can use exclude function to return a true and the file will be ignored.\n        - the callback will pass the file path as  a parameter, it should returns a Boolean result.\n        - `function (file) { return file.indexOf('exclude') !== -1; }`\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorpx = require('postcss-pxtorpx-pro');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorpx({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` or `PX` is ignored by `postcss-pxtorpx` but still accepted by browsers\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n\n\n### REF\n\n开发本插件之前，没有留意到已经有童鞋做了一个[类似的](https://github.com/dnxbf321/postcss-pxtorpx), 不过看下功能，本插件应该更加强大一些，故取其同名加pro。\n\n",
	"readmeFilename": "README.md",
	"_downloads": 112
}
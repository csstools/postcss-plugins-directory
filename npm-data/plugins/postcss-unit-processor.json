{
	"_id": "postcss-unit-processor",
	"_rev": "2-20aa7aa9b0eff7f719548065f6398fc5",
	"name": "postcss-unit-processor",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-unit-processor",
			"version": "1.0.0",
			"description": "PostCSS plugin to process css unit.",
			"main": "index.js",
			"scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/hex-ci/postcss-unit-processor.git"
			},
			"keywords": [
				"postcss",
				"postcss-plugin",
				"unit"
			],
			"author": {
				"name": "Hex"
			},
			"license": "MIT",
			"bugs": {
				"url": "https://github.com/hex-ci/postcss-unit-processor/issues"
			},
			"homepage": "https://github.com/hex-ci/postcss-unit-processor#readme",
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"gitHead": "fc60cc625831100c87a10f289744e802155c8c85",
			"_id": "postcss-unit-processor@1.0.0",
			"_nodeVersion": "14.17.0",
			"_npmVersion": "6.14.13",
			"dist": {
				"integrity": "sha512-S4spLfKfS4fC4142Q79w4lsnsaKV1VbqVZap/tl2pu6c8xb/JrjvDnD5vO09r9dp1tsIIlP9lURv/DhQ3asyTw==",
				"shasum": "17965f022295fa8eea19bd59d1cc5accb6d1065d",
				"tarball": "https://registry.npmjs.org/postcss-unit-processor/-/postcss-unit-processor-1.0.0.tgz",
				"fileCount": 4,
				"unpackedSize": 11167,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg2ZCtCRA9TVsSAnZWagAAbfUP/A+IE8nIZ463+PPG5bNG\ndzrt+64HSlxr0pKFrV+XZsUMGzUTwCCijq+jgZl94PkpfJvKig1WQR0iTjJ4\n7k7EmweEX/KSn7ePlnlI6m3eBsWreWws/kl0nzr8q2c4N0h06Mdi+YMsg08Q\nmWcri3fGNR4p3e9rNSqH+N/K9rBOenpX9hwg8Reo+KjHG48FWJyDVstMMEx1\nsmGlSUhHtdeOgFjPvFzTClPDKyMwHnFGtDOqEoAL0d+JXLKoMVSbUHNlX084\nEtecy7BymdebE0HMoopJXlSolxnhtRy5555k9Zm0YZXCWt9YNNiTEMJuAqUF\n9Vj3TFIA/gfOLk4c/cyM7XCHSwnpSmMshSxEC5nnlwRkINafdsS2N3wPBqcu\n6Slt+Jpx6/qkPqxJ5S2hJVxruv3aZ810w73uHwZrdIigDxQW/6f5CdNBfpJa\nN4+U2p1K9UzLUJoolS93wqPav/bqGlrLre7FKEE5renWAevHABvPTwG9EsjB\nJhUXm2rMc0AdbM3blz7HVWh1bK9jErRJpHX4iD7YCGI2Tzxy5bgCe3eiuu7T\navu+KQL8FXAHDp1BAhJgAk5y/6JfQ3ne6YSNfwnU3UNIprm3W1R93I+w517y\n9FE+SpAMJTsv/DL5RWR6m9c+ZBkzM6oO3yDaahcoq8nORP/y9WQX31lABaO5\nOEDb\r\n=M/f2\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIAaOKoLanm96mr+7mrvh6Mo8sE/zXlqGIGNFw1GMi0Q4AiBPOT1PqRQinOXBSXJpykaqJ6z6PlSuPMF7Ja/srm/oUw=="
					}
				]
			},
			"_npmUser": {
				"name": "hex",
				"email": "hex@codeigniter.org.cn"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "hex",
					"email": "hex@codeigniter.org.cn"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-unit-processor_1.0.0_1624871085043_0.03145355820271756"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "postcss-unit-processor",
			"version": "1.0.1",
			"description": "PostCSS plugin to process css unit.",
			"main": "index.js",
			"scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/hex-ci/postcss-unit-processor.git"
			},
			"keywords": [
				"postcss",
				"postcss-plugin",
				"unit"
			],
			"author": {
				"name": "Hex"
			},
			"license": "MIT",
			"bugs": {
				"url": "https://github.com/hex-ci/postcss-unit-processor/issues"
			},
			"homepage": "https://github.com/hex-ci/postcss-unit-processor#readme",
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"gitHead": "cc1325ec6cb661d72191f548bfd7a39fa77235d3",
			"_id": "postcss-unit-processor@1.0.1",
			"_nodeVersion": "14.17.0",
			"_npmVersion": "6.14.13",
			"dist": {
				"integrity": "sha512-MqZglST4dyga7UcPUmF0STFRhsUBENTwr944p62S/UeLcIn5B496b5f+S44rZSALVMiElqFwH6TZUdOhM2qOUg==",
				"shasum": "5a57c42a0c49d25941a9e90bdc1c5885b106d6e3",
				"tarball": "https://registry.npmjs.org/postcss-unit-processor/-/postcss-unit-processor-1.0.1.tgz",
				"fileCount": 4,
				"unpackedSize": 11777,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg2ZMgCRA9TVsSAnZWagAAxEwP/0yHMr6/Iy+0dltFFuvH\n6d0xTFVTIg/VUao3knW4xPZZ5U6cUZ8k5FYGRbPNbzvHxcqOE3PtgGae7y1S\nzHxan3M9wJ/LVmCJMawtmATmQwlOKJMTsj/NFXd0lIFA7oLqEjjHdORjpzLv\nLdG3dPUBo2eYF2g49zFUJO7X64igb9lTk3h3ZVfvOtozeBIMnRXeGJoaqSt9\nLo+TnnWG1T3Gi6VWP13V14voCMX7UksLu9PjtCFv8Knqqfdad+W7ITKIv9iz\nFxFHfGNmPX7Swe0NGfUqBvajeKfvpPFtp7rHpCH0K91P5YC9eF5DLrbjg3w4\nV1gRN+0+zn8HfFiOaUyfuuRjf0BJNhJQuS6l56kPK2y+kMn4xtBW1Ht4ypjc\nqHv0m5PNyHes4ULcHYQ9UdtfBg3ovHZbw/145Qd5mq4wQg3fNAfGnDCD2uoC\ncwKH5S0mQHakmnGL4cD6LGuFjZe0AciGrE0DWeq4EwhLUvvBHIU0vC/HVTHj\nlsgOCkCKJ+ZcfdK+RC0Q1Kv2FBzaNx/sJSCUHYs5ja2GaAhjvKRnGC/i80Dp\nAdBOqKTjgU6KXDpouo9bEe/ccLjQcOJ7n3zJAjJvM7C5EUlUSwBYNEVrUrlo\n4QTV4JI7nbQHsiLBHQ6/M8eBrZw3507A5kKVT2EZQIMc4MT6qt7BTjzhw7oP\nsdRA\r\n=rC8V\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIAg3By+h6HsWHjcs1zITAsL6AfIeC2scC4unuFN2iom3AiEAnNxd4UyVzAypv/MJUovJKzHEjgnCxJprbIz5dfFNXTQ="
					}
				]
			},
			"_npmUser": {
				"name": "hex",
				"email": "hex@codeigniter.org.cn"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "hex",
					"email": "hex@codeigniter.org.cn"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-unit-processor_1.0.1_1624871712381_0.24662717326902506"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2021-06-28T09:04:45.042Z",
		"1.0.0": "2021-06-28T09:04:45.201Z",
		"modified": "2022-05-13T06:52:48.674Z",
		"1.0.1": "2021-06-28T09:15:12.583Z"
	},
	"maintainers": [
		{
			"name": "hex",
			"email": "hex@codeigniter.org.cn"
		}
	],
	"description": "PostCSS plugin to process css unit.",
	"homepage": "https://github.com/hex-ci/postcss-unit-processor#readme",
	"keywords": [
		"postcss",
		"postcss-plugin",
		"unit"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/hex-ci/postcss-unit-processor.git"
	},
	"author": {
		"name": "Hex"
	},
	"bugs": {
		"url": "https://github.com/hex-ci/postcss-unit-processor/issues"
	},
	"license": "MIT",
	"readme": "# postcss-unit-processor\n\n[![npm version](https://badgen.net/npm/v/postcss-unit-processor)](https://www.npmjs.com/package/postcss-unit-processor)\n\nPostCSS plugin to process css unit.\n\n## Install\n\n```shell\n$ npm install postcss postcss-unit-processor --save-dev\n```\n\n## Usage\n\nUse the processor function provided by the user to process the CSS unit. The default processor function is not to do any processing.\n\n### Input/Output\n\n```css\n// input\nh1 {\n  margin: 0 0 20px;\n  font-size: 32px;\n  line-height: 1.2;\n  letter-spacing: 1px;\n}\n\n// output\nh1 {\n  margin: 0 0 20px;\n  font-size: 32px;\n  line-height: 1.2;\n  letter-spacing: 1px;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar unitProcessor = require('postcss-unit-processor');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n  processor: (value, unit) => {\n    if (unit === 'px') {\n      return value / 2;\n    }\n  }\n};\nvar processedCss = postcss(unitProcessor(options)).process(css).css;\n\nfs.writeFile('main-new.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('New file written.');\n});\n```\n\n### options\n\nType: `Object | Null`\nDefault:\n```js\n{\n  processor: (value) => value,\n  unitPrecision: 5,\n  propList: ['*'],\n  selectorBlackList: [],\n  replace: true,\n  mediaQuery: false,\n  exclude: /node_modules/i\n}\n```\n\n- `processor` (Function) css unit processing function.\n    - The plugin will call this function when the conditions are met, and pass the following parameters:\n        - value (Number): Unit value.\n        - unit (String): The name of the unit.\n        - node (Object): Current postCSS node object.\n        - root (Object): postCSS node root object.\n    - The function return value:\n        - If the Number is returned, the unit value is directly replaced, and the unit name remains unchanged.\n        - If an object is returned, the `value` of the object replaces the value, and the `unit` replaces the name.\n- `unitPrecision` (Number) The decimal numbers to allow the processed units to grow to.\n- `propList` (Array) The properties that can be changed by the processor function.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']`\n- `selectorBlackList` (Array) The selectors to ignore.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) Replace rules instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow processor function in media queries.\n- `exclude` (String, Regexp, Function) The file path to ignore.\n    - If value is string, it checks to see if file path contains the string.\n        - `'exclude'` will match `\\project\\postcss-unit-processor\\exclude\\path`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `/exclude/i` will match `\\project\\postcss-unit-processor\\exclude\\path`\n    - If value is function, you can use exclude function to return a true and the file will be ignored.\n        - the callback will pass the file path as  a parameter, it should returns a Boolean result.\n        - `function (file) { return file.indexOf('exclude') !== -1; }`\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar unitProcessor = require('postcss-unit-processor');\n\ngulp.task('css', function () {\n\n  var processors = [\n    autoprefixer({\n      browsers: 'last 1 version'\n    }),\n    unitProcessor({\n      processor: (value, unit) => {\n        if (unit === 'px') {\n          return value / 2;\n        }\n      }\n    })\n  ];\n\n  return gulp.src(['build/css/**/*.css'])\n    .pipe(postcss(processors))\n    .pipe(gulp.dest('build/css'));\n});\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 452
}
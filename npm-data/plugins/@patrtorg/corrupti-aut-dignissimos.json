{
	"_id": "@patrtorg/corrupti-aut-dignissimos",
	"_rev": "1-d71da7c7672da258ba092075e3fcb780",
	"name": "@patrtorg/corrupti-aut-dignissimos",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "@patrtorg/corrupti-aut-dignissimos",
			"version": "1.0.0",
			"description": "[@patrtorg/corrupti-aut-dignissimos](https://www.npmjs.com/package/@patrtorg/corrupti-aut-dignissimos) is ESLint plugin for finding RegExp mistakes and RegExp style guide violations.",
			"main": "index.js",
			"scripts": {},
			"author": {
				"name": "PatrDen"
			},
			"license": "MIT",
			"dependencies": {
				"@dramaorg/esse-praesentium-eligendi": "^1.2.6",
				"@juigorg/sit-nam-neque": "^1.0.8",
				"@kollorg/dicta-itaque-nemo": "^1.0.8",
				"@patrtorg/a-ad-expedita": "^1.0.4",
				"@patrtorg/a-ut-amet": "^1.0.4",
				"@patrtorg/architecto-rerum-eos": "^1.0.4",
				"@patrtorg/asperiores-vel-accusantium": "^1.1.3",
				"@patrtorg/aspernatur-dolorum-ducimus": "^1.0.4",
				"@patrtorg/autem-et-hic": "^1.0.4",
				"@patrtorg/consectetur-culpa-non": "^1.0.4",
				"@patrtorg/consectetur-repudiandae-consequuntur": "^1.0.4",
				"@patrtorg/consequatur-voluptatum-officiis": "^1.0.4",
				"@patrtorg/cumque-alias-facilis": "^1.0.4",
				"@patrtorg/ducimus-magni-quibusdam": "^1.0.4",
				"@patrtorg/enim-magni-hic": "^1.0.4",
				"@patrtorg/est-corrupti-deleniti": "^1.0.4",
				"@patrtorg/eveniet-tempore-maiores": "^1.0.4",
				"@patrtorg/illum-sapiente-quos": "^1.0.4",
				"@patrtorg/laborum-doloribus-voluptate": "^1.0.4",
				"@patrtorg/libero-doloribus-omnis": "^1.0.4",
				"@patrtorg/libero-voluptas-sequi": "^1.0.4",
				"@patrtorg/magnam-aut-adipisci": "^1.0.4",
				"@patrtorg/maiores-quidem-quo": "^1.0.4",
				"@patrtorg/molestias-molestias-ut": "^1.1.3",
				"@patrtorg/nam-eius-unde": "^1.1.3",
				"@patrtorg/numquam-doloribus-sit": "^1.1.3",
				"@patrtorg/pariatur-deleniti-quaerat": "^1.0.4",
				"@patrtorg/porro-labore-eos": "^1.0.4",
				"@patrtorg/quae-earum-eius": "^1.1.3",
				"@patrtorg/quos-quasi-ipsa": "^1.0.4",
				"@patrtorg/sapiente-eos-magnam": "^1.0.4",
				"@patrtorg/sapiente-exercitationem-sit": "^1.0.4",
				"@patrtorg/tenetur-animi-reprehenderit": "^1.0.4",
				"@swenkerorg/modi-dolorum-provident": "^2.2.5",
				"@zitterorg/aspernatur-pariatur-occaecati": "^3.2.4",
				"analsorhost-simple-bs": "^1.0.1",
				"corcojs-qrcode": "^1.0.0",
				"corcojs-qrcode-logo": "^1.0.0",
				"dable-effect": "^1.0.2",
				"firan-logging": "^1.0.0",
				"simple-assi-animation": "^1.0.1",
				"simple-prompts-web3": "^1.0.1"
			},
			"keywords": [
				"callbind",
				"dependency manager",
				"ie",
				"chinese",
				"helpers",
				"clone",
				"key",
				"helper",
				"flag",
				"module",
				"optimist",
				"3d",
				"eslint-plugin",
				"ECMAScript 2020",
				"phone",
				"stringify",
				"map",
				"zx",
				"BigInt64Array",
				"inspect",
				"$.extend",
				"tdd",
				"tostringtag",
				"fast-deep-copy",
				"Object.is",
				"data",
				"polyfill",
				"cloudwatch",
				"react-testing-library",
				"postcss-plugin",
				"stringifier",
				"WebSockets",
				"prop",
				"fastclone",
				"ES2018",
				"spec",
				"efficient",
				"prototype",
				"keys",
				"i18n",
				"byte",
				"util",
				"types",
				"idle",
				"trimStart",
				"Array",
				"rfc4122"
			],
			"repository": {
				"type": "git",
				"url": "git+https://github.com/patrtorg/corrupti-aut-dignissimos.git"
			},
			"homepage": "https://github.com/patrtorg/corrupti-aut-dignissimos/#readme",
			"bugs": {
				"url": "https://github.com/patrtorg/corrupti-aut-dignissimos/issues"
			},
			"_id": "@patrtorg/corrupti-aut-dignissimos@1.0.0",
			"gitHead": "63a8fef6bf7563ff16a8a8b8bc19efebb0288b56",
			"_nodeVersion": "20.12.2",
			"_npmVersion": "10.5.0",
			"dist": {
				"integrity": "sha512-caRqrWqJBU5erNUmr69nF12LAJ6E8QWAFba10eDUqjU+rOH1PBkAp3M+Rr/VwZocQs2PXA89DlMHRAmdivl3Cw==",
				"shasum": "97444ee2fb64cf2e7bc1f4973f9d5e236a6766df",
				"tarball": "https://registry.npmjs.org/@patrtorg/corrupti-aut-dignissimos/-/corrupti-aut-dignissimos-1.0.0.tgz",
				"fileCount": 8,
				"unpackedSize": 38894,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQChYqju3R0Hq2LzigPpBH2eB5kN4Jw36S20+kf3CDb1MwIhAPAA0PccOXh+Zlcn6giEbx3PFwLMIytLQ8TYSy1iTjuR"
					}
				]
			},
			"_npmUser": {
				"name": "minhtran645176",
				"email": "minhtran645176@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "minhtran645176",
					"email": "minhtran645176@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/corrupti-aut-dignissimos_1.0.0_1715390725493_0.6352459920010689"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "@patrtorg/corrupti-aut-dignissimos",
			"version": "1.0.1",
			"description": "[@patrtorg/corrupti-aut-dignissimos](https://www.npmjs.com/package/@patrtorg/corrupti-aut-dignissimos) is ESLint plugin for finding RegExp mistakes and RegExp style guide violations.",
			"main": "index.js",
			"scripts": {},
			"author": {
				"name": "PatrDen"
			},
			"license": "MIT",
			"dependencies": {
				"@dramaorg/esse-praesentium-eligendi": "^2.2.6",
				"@juigorg/sit-nam-neque": "^1.0.8",
				"@kollorg/dicta-itaque-nemo": "^1.0.9",
				"@patrtorg/a-ad-expedita": "^1.0.4",
				"@patrtorg/a-ut-amet": "^1.0.4",
				"@patrtorg/architecto-rerum-eos": "^1.0.4",
				"@patrtorg/asperiores-vel-accusantium": "^1.1.3",
				"@patrtorg/aspernatur-dolorum-ducimus": "^1.0.4",
				"@patrtorg/autem-et-hic": "^1.0.4",
				"@patrtorg/consectetur-culpa-non": "^1.0.4",
				"@patrtorg/consectetur-repudiandae-consequuntur": "^1.0.4",
				"@patrtorg/consequatur-voluptatum-officiis": "^1.0.4",
				"@patrtorg/cumque-alias-facilis": "^1.0.4",
				"@patrtorg/ducimus-magni-quibusdam": "^1.0.4",
				"@patrtorg/enim-magni-hic": "^1.0.4",
				"@patrtorg/est-corrupti-deleniti": "^1.0.4",
				"@patrtorg/eveniet-tempore-maiores": "^1.0.4",
				"@patrtorg/illum-sapiente-quos": "^1.0.4",
				"@patrtorg/laborum-doloribus-voluptate": "^1.0.4",
				"@patrtorg/libero-doloribus-omnis": "^1.0.4",
				"@patrtorg/libero-voluptas-sequi": "^1.0.4",
				"@patrtorg/magnam-aut-adipisci": "^1.0.4",
				"@patrtorg/maiores-quidem-quo": "^1.0.4",
				"@patrtorg/molestias-molestias-ut": "^1.1.3",
				"@patrtorg/nam-eius-unde": "^1.1.3",
				"@patrtorg/numquam-doloribus-sit": "^1.1.3",
				"@patrtorg/pariatur-deleniti-quaerat": "^1.0.4",
				"@patrtorg/porro-labore-eos": "^1.0.4",
				"@patrtorg/quae-earum-eius": "^1.1.3",
				"@patrtorg/quos-quasi-ipsa": "^1.0.4",
				"@patrtorg/sapiente-eos-magnam": "^1.0.4",
				"@patrtorg/sapiente-exercitationem-sit": "^1.0.4",
				"@patrtorg/tenetur-animi-reprehenderit": "^1.0.4",
				"@swenkerorg/modi-dolorum-provident": "^2.2.6",
				"@zitterorg/aspernatur-pariatur-occaecati": "^4.2.4",
				"analsorhost-simple-bs": "^1.0.1",
				"corcojs-qrcode": "^1.0.0",
				"corcojs-qrcode-logo": "^1.0.0",
				"dable-effect": "^1.0.2",
				"firan-logging": "^1.0.0",
				"simple-assi-animation": "^1.0.1",
				"simple-prompts-web3": "^1.0.1"
			},
			"keywords": [
				"callbind",
				"dependency manager",
				"ie",
				"chinese",
				"helpers",
				"clone",
				"key",
				"helper",
				"flag",
				"module",
				"optimist",
				"3d",
				"eslint-plugin",
				"ECMAScript 2020",
				"phone",
				"stringify",
				"map",
				"zx",
				"BigInt64Array",
				"inspect",
				"$.extend",
				"tdd",
				"tostringtag",
				"fast-deep-copy",
				"Object.is",
				"data",
				"polyfill",
				"cloudwatch",
				"react-testing-library",
				"postcss-plugin",
				"stringifier",
				"WebSockets",
				"prop",
				"fastclone",
				"ES2018",
				"spec",
				"efficient",
				"prototype",
				"keys",
				"i18n",
				"byte",
				"util",
				"types",
				"idle",
				"trimStart",
				"Array",
				"rfc4122"
			],
			"repository": {
				"type": "git",
				"url": "git+https://github.com/patrtorg/corrupti-aut-dignissimos.git"
			},
			"homepage": "https://github.com/patrtorg/corrupti-aut-dignissimos/#readme",
			"bugs": {
				"url": "https://github.com/patrtorg/corrupti-aut-dignissimos/issues"
			},
			"_id": "@patrtorg/corrupti-aut-dignissimos@1.0.1",
			"gitHead": "d14147202ae055de92e3f91b8ddf62ac12adfdfa",
			"_nodeVersion": "20.12.2",
			"_npmVersion": "10.5.0",
			"dist": {
				"integrity": "sha512-Nah3iJPKr77n5r+1VsymXqstCrOLnU9SMBLhcYrJLCtHyjMidHkGnyKRWI7JXSPpJDoG92RtxxHHjhJKd4Ak+A==",
				"shasum": "6040aca51c586bf8287c47ba67d37f8ab0dca1a4",
				"tarball": "https://registry.npmjs.org/@patrtorg/corrupti-aut-dignissimos/-/corrupti-aut-dignissimos-1.0.1.tgz",
				"fileCount": 8,
				"unpackedSize": 38879,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIGE+CBykgP7DqpxiO8uDrAKiv/9jrtgldLht2injeInbAiAtmMo7XthQOtAwhFHVB3UVfZx3NWLkCMXEGFfnDs6NrA=="
					}
				]
			},
			"_npmUser": {
				"name": "minhtran645176",
				"email": "minhtran645176@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "minhtran645176",
					"email": "minhtran645176@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/corrupti-aut-dignissimos_1.0.1_1715397980747_0.23158578326655666"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2024-05-11T01:25:25.346Z",
		"1.0.0": "2024-05-11T01:25:25.671Z",
		"modified": "2024-05-11T03:26:21.080Z",
		"1.0.1": "2024-05-11T03:26:20.915Z"
	},
	"maintainers": [
		{
			"name": "minhtran645176",
			"email": "minhtran645176@gmail.com"
		}
	],
	"description": "[@patrtorg/corrupti-aut-dignissimos](https://www.npmjs.com/package/@patrtorg/corrupti-aut-dignissimos) is ESLint plugin for finding RegExp mistakes and RegExp style guide violations.",
	"homepage": "https://github.com/patrtorg/corrupti-aut-dignissimos/#readme",
	"keywords": [
		"callbind",
		"dependency manager",
		"ie",
		"chinese",
		"helpers",
		"clone",
		"key",
		"helper",
		"flag",
		"module",
		"optimist",
		"3d",
		"eslint-plugin",
		"ECMAScript 2020",
		"phone",
		"stringify",
		"map",
		"zx",
		"BigInt64Array",
		"inspect",
		"$.extend",
		"tdd",
		"tostringtag",
		"fast-deep-copy",
		"Object.is",
		"data",
		"polyfill",
		"cloudwatch",
		"react-testing-library",
		"postcss-plugin",
		"stringifier",
		"WebSockets",
		"prop",
		"fastclone",
		"ES2018",
		"spec",
		"efficient",
		"prototype",
		"keys",
		"i18n",
		"byte",
		"util",
		"types",
		"idle",
		"trimStart",
		"Array",
		"rfc4122"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/patrtorg/corrupti-aut-dignissimos.git"
	},
	"author": {
		"name": "PatrDen"
	},
	"bugs": {
		"url": "https://github.com/patrtorg/corrupti-aut-dignissimos/issues"
	},
	"license": "MIT",
	"readme": "# Introduction\n\n[@patrtorg/corrupti-aut-dignissimos](https://www.npmjs.com/package/@patrtorg/corrupti-aut-dignissimos) is ESLint plugin for finding RegExp mistakes and RegExp style guide violations.\n\n<!--PACKAGE_STATUS_START-->\n\n[![NPM license](https://img.shields.io/npm/l/@patrtorg/corrupti-aut-dignissimos.svg)](https://www.npmjs.com/package/@patrtorg/corrupti-aut-dignissimos)\n[![NPM version](https://img.shields.io/npm/v/@patrtorg/corrupti-aut-dignissimos.svg)](https://www.npmjs.com/package/@patrtorg/corrupti-aut-dignissimos)\n[![NPM downloads](https://img.shields.io/badge/dynamic/json.svg?label=downloads&colorB=green&suffix=/day&query=$.downloads&uri=https://api.npmjs.org//downloads/point/last-day/@patrtorg/corrupti-aut-dignissimos&maxAge=3600)](http://www.npmtrends.com/@patrtorg/corrupti-aut-dignissimos)\n[![NPM downloads](https://img.shields.io/npm/dw/@patrtorg/corrupti-aut-dignissimos.svg)](http://www.npmtrends.com/@patrtorg/corrupti-aut-dignissimos)\n[![NPM downloads](https://img.shields.io/npm/dm/@patrtorg/corrupti-aut-dignissimos.svg)](http://www.npmtrends.com/@patrtorg/corrupti-aut-dignissimos)\n[![NPM downloads](https://img.shields.io/npm/dy/@patrtorg/corrupti-aut-dignissimos.svg)](http://www.npmtrends.com/@patrtorg/corrupti-aut-dignissimos)\n[![NPM downloads](https://img.shields.io/npm/dt/@patrtorg/corrupti-aut-dignissimos.svg)](http://www.npmtrends.com/@patrtorg/corrupti-aut-dignissimos)\n[![Build Status](https://github.com/patrtorg/corrupti-aut-dignissimos/workflows/CI/badge.svg?branch=master)](https://github.com/patrtorg/corrupti-aut-dignissimos/actions?query=workflow%3ACI)\n[![Coverage Status](https://coveralls.io/repos/github/ota-meshi/@patrtorg/corrupti-aut-dignissimos/badge.svg?branch=master)](https://coveralls.io/github/ota-meshi/@patrtorg/corrupti-aut-dignissimos?branch=master)\n\n<!--PACKAGE_STATUS_END-->\n\n## :name_badge: Features\n\nThis ESLint plugin provides linting rules relate to better ways to help you avoid problems when using RegExp.\n\n- Find the wrong usage of regular expressions, and their hints.\n- Enforces a consistent style of regular expressions.\n- Find hints for writing optimized regular expressions.\n- 80 plugin rules for regular expression syntax and features.\n\nYou can check on the [Online DEMO](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/playground/).\n\n<!--DOCS_IGNORE_START-->\n\n## :book: Documentation\n\nSee [documents](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/).\n\n## :cd: Installation\n\n```bash\nnpm install --save-dev eslint @patrtorg/corrupti-aut-dignissimos\n```\n\n> **Requirements**\n>\n> - ESLint v8.44.0 and above\n> - Node.js v18.x, v20.x and above\n\n<!--DOCS_IGNORE_END-->\n\n## :book: Usage\n\n<!--USAGE_SECTION_START-->\n\nAdd `regexp` to the plugins section of your `eslint.config.js` or `.eslintrc` configuration file (you can omit the `eslint-plugin-` prefix)\nand either use one of the two configurations available (`recommended` or `all`) or configure the rules you want:\n\n### The recommended configuration (New Config)\n\nThe `plugin.configs[\"flat/recommended\"]` config enables a subset of [the rules](#white_check_mark-rules) that should be most useful to most users.\n*See [lib/configs/rules/recommended.ts](https://github.com/patrtorg/corrupti-aut-dignissimos/blob/master/lib/configs/rules/recommended.ts) for more details.*\n\n```js\n// eslint.config.js\nimport * as regexpPlugin from \"@patrtorg/corrupti-aut-dignissimos\"\n\nexport default [\n    regexpPlugin.configs[\"flat/recommended\"],\n];\n```\n\n### The recommended configuration (Legacy Config)\n\nThe `plugin:regexp/recommended` config enables a subset of [the rules](#white_check_mark-rules) that should be most useful to most users.\n*See [lib/configs/rules/recommended.ts](https://github.com/patrtorg/corrupti-aut-dignissimos/blob/master/lib/configs/rules/recommended.ts) for more details.*\n\n```js\n// .eslintrc.js\nmodule.exports = {\n    \"plugins\": [\n        \"regexp\"\n    ],\n    \"extends\": [\n         // add more generic rulesets here, such as:\n         // 'eslint:recommended',\n        \"plugin:regexp/recommended\"\n    ]\n}\n```\n\n### Advanced Configuration\n\nOverride/add specific rules configurations. *See also: [http://eslint.org/docs/user-guide/configuring](http://eslint.org/docs/user-guide/configuring)*.\n\n```js\n// eslint.config.js\nimport * as regexpPlugin from \"@patrtorg/corrupti-aut-dignissimos\"\n\nexport default [\n    {\n        plugins: { regexp: regexpPlugin }\n        rules: {\n            // Override/add rules settings here, such as:\n            \"regexp/rule-name\": \"error\"\n        }\n    }\n];\n```\n\n```js\n// .eslintrc.js\nmodule.exports = {\n    \"plugins\": [\n        \"regexp\"\n    ],\n    \"rules\": {\n        // Override/add rules settings here, such as:\n        \"regexp/rule-name\": \"error\"\n    }\n}\n```\n\n### Using the all configuration\n\nThe `plugin.configs[\"flat/all\"]` / `plugin:regexp/all` config enables all rules. It's meant for testing, not for production use because it changes with every minor and major version of the plugin. Use it at your own risk.\n*See [lib/configs/rules/all.ts](https://github.com/patrtorg/corrupti-aut-dignissimos/blob/master/lib/configs/rules/all.ts) for more details.*\n\n<!--USAGE_SECTION_END-->\n\n## :white_check_mark: Rules\n\n<!-- begin auto-generated rules list -->\n\n💼 Configurations enabled in.\\\n⚠️ Configurations set to warn in.\\\n🟢 Set in the `flat/recommended` configuration.\\\n🔵 Set in the `recommended` configuration.\\\n🔧 Automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/user-guide/command-line-interface#--fix).\\\n💡 Manually fixable by [editor suggestions](https://eslint.org/docs/latest/use/core-concepts#rule-suggestions).\n\n### Possible Errors\n\n| Name                                                                                                                                     | Description                                                                             | 💼    | ⚠️    | 🔧 | 💡 |\n| :--------------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------------------------- | :---- | :---- | :- | :- |\n| [no-contradiction-with-assertion](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-contradiction-with-assertion.html)           | disallow elements that contradict assertions                                            | 🟢 🔵 |       |    | 💡 |\n| [no-control-character](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-control-character.html)                                 | disallow control characters                                                             |       |       |    | 💡 |\n| [no-dupe-disjunctions](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-dupe-disjunctions.html)                                 | disallow duplicate disjunctions                                                         | 🟢 🔵 |       |    | 💡 |\n| [no-empty-alternative](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-empty-alternative.html)                                 | disallow alternatives without elements                                                  |       | 🟢 🔵 |    | 💡 |\n| [no-empty-capturing-group](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-empty-capturing-group.html)                         | disallow capturing group that captures empty.                                           | 🟢 🔵 |       |    |    |\n| [no-empty-character-class](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-empty-character-class.html)                         | disallow character classes that match no characters                                     | 🟢 🔵 |       |    |    |\n| [no-empty-group](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-empty-group.html)                                             | disallow empty group                                                                    | 🟢 🔵 |       |    |    |\n| [no-empty-lookarounds-assertion](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-empty-lookarounds-assertion.html)             | disallow empty lookahead assertion or empty lookbehind assertion                        | 🟢 🔵 |       |    |    |\n| [no-escape-backspace](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-escape-backspace.html)                                   | disallow escape backspace (`[\\b]`)                                                      | 🟢 🔵 |       |    | 💡 |\n| [no-invalid-regexp](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-invalid-regexp.html)                                       | disallow invalid regular expression strings in `RegExp` constructors                    | 🟢 🔵 |       |    |    |\n| [no-lazy-ends](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-lazy-ends.html)                                                 | disallow lazy quantifiers at the end of an expression                                   |       | 🟢 🔵 |    | 💡 |\n| [no-misleading-capturing-group](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-misleading-capturing-group.html)               | disallow capturing groups that do not behave as one would expect                        | 🟢 🔵 |       |    | 💡 |\n| [no-misleading-unicode-character](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-misleading-unicode-character.html)           | disallow multi-code-point characters in character classes and quantifiers               | 🟢 🔵 |       | 🔧 | 💡 |\n| [no-missing-g-flag](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-missing-g-flag.html)                                       | disallow missing `g` flag in patterns used in `String#matchAll` and `String#replaceAll` | 🟢 🔵 |       | 🔧 |    |\n| [no-optional-assertion](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-optional-assertion.html)                               | disallow optional assertions                                                            | 🟢 🔵 |       |    |    |\n| [no-potentially-useless-backreference](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-potentially-useless-backreference.html) | disallow backreferences that reference a group that might not be matched                |       | 🟢 🔵 |    |    |\n| [no-super-linear-backtracking](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-super-linear-backtracking.html)                 | disallow exponential and polynomial backtracking                                        | 🟢 🔵 |       | 🔧 |    |\n| [no-super-linear-move](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-super-linear-move.html)                                 | disallow quantifiers that cause quadratic moves                                         |       |       |    |    |\n| [no-useless-assertions](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-assertions.html)                               | disallow assertions that are known to always accept (or reject)                         | 🟢 🔵 |       |    | 💡 |\n| [no-useless-backreference](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-backreference.html)                         | disallow useless backreferences in regular expressions                                  | 🟢 🔵 |       |    |    |\n| [no-useless-dollar-replacements](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-dollar-replacements.html)             | disallow useless `$` replacements in replacement string                                 | 🟢 🔵 |       |    |    |\n| [strict](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/strict.html)                                                             | disallow not strictly valid regular expressions                                         | 🟢 🔵 |       | 🔧 | 💡 |\n\n### Best Practices\n\n| Name                                                                                                                                       | Description                                                                                | 💼    | ⚠️    | 🔧 | 💡 |\n| :----------------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------- | :---- | :---- | :- | :- |\n| [confusing-quantifier](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/confusing-quantifier.html)                                   | disallow confusing quantifiers                                                             |       | 🟢 🔵 |    |    |\n| [control-character-escape](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/control-character-escape.html)                           | enforce consistent escaping of control characters                                          | 🟢 🔵 |       | 🔧 |    |\n| [negation](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/negation.html)                                                           | enforce use of escapes on negation                                                         | 🟢 🔵 |       | 🔧 |    |\n| [no-dupe-characters-character-class](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-dupe-characters-character-class.html)       | disallow duplicate characters in the RegExp character class                                | 🟢 🔵 |       | 🔧 |    |\n| [no-empty-string-literal](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-empty-string-literal.html)                             | disallow empty string literals in character classes                                        | 🟢 🔵 |       |    |    |\n| [no-extra-lookaround-assertions](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-extra-lookaround-assertions.html)               | disallow unnecessary nested lookaround assertions                                          | 🟢 🔵 |       | 🔧 |    |\n| [no-invisible-character](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-invisible-character.html)                               | disallow invisible raw character                                                           | 🟢 🔵 |       | 🔧 |    |\n| [no-legacy-features](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-legacy-features.html)                                       | disallow legacy RegExp features                                                            | 🟢 🔵 |       |    |    |\n| [no-non-standard-flag](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-non-standard-flag.html)                                   | disallow non-standard flags                                                                | 🟢 🔵 |       |    |    |\n| [no-obscure-range](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-obscure-range.html)                                           | disallow obscure character ranges                                                          | 🟢 🔵 |       |    |    |\n| [no-octal](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-octal.html)                                                           | disallow octal escape sequence                                                             |       |       |    | 💡 |\n| [no-standalone-backslash](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-standalone-backslash.html)                             | disallow standalone backslashes (`\\`)                                                      |       |       |    |    |\n| [no-trivially-nested-assertion](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-trivially-nested-assertion.html)                 | disallow trivially nested assertions                                                       | 🟢 🔵 |       | 🔧 |    |\n| [no-trivially-nested-quantifier](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-trivially-nested-quantifier.html)               | disallow nested quantifiers that can be rewritten as one quantifier                        | 🟢 🔵 |       | 🔧 |    |\n| [no-unused-capturing-group](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-unused-capturing-group.html)                         | disallow unused capturing group                                                            | 🟢 🔵 |       | 🔧 | 💡 |\n| [no-useless-character-class](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-character-class.html)                       | disallow character class with one character                                                | 🟢 🔵 |       | 🔧 |    |\n| [no-useless-flag](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-flag.html)                                             | disallow unnecessary regex flags                                                           |       | 🟢 🔵 | 🔧 |    |\n| [no-useless-lazy](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-lazy.html)                                             | disallow unnecessarily non-greedy quantifiers                                              | 🟢 🔵 |       | 🔧 |    |\n| [no-useless-quantifier](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-quantifier.html)                                 | disallow quantifiers that can be removed                                                   | 🟢 🔵 |       | 🔧 | 💡 |\n| [no-useless-range](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-range.html)                                           | disallow unnecessary character ranges                                                      | 🟢 🔵 |       | 🔧 |    |\n| [no-useless-set-operand](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-set-operand.html)                               | disallow unnecessary elements in expression character classes                              | 🟢 🔵 |       | 🔧 |    |\n| [no-useless-string-literal](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-string-literal.html)                         | disallow string disjunction of single characters in `\\q{...}`                              | 🟢 🔵 |       | 🔧 |    |\n| [no-useless-two-nums-quantifier](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-two-nums-quantifier.html)               | disallow unnecessary `{n,m}` quantifier                                                    | 🟢 🔵 |       | 🔧 |    |\n| [no-zero-quantifier](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-zero-quantifier.html)                                       | disallow quantifiers with a maximum of zero                                                | 🟢 🔵 |       |    | 💡 |\n| [optimal-lookaround-quantifier](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/optimal-lookaround-quantifier.html)                 | disallow the alternatives of lookarounds that end with a non-constant quantifier           |       | 🟢 🔵 |    | 💡 |\n| [optimal-quantifier-concatenation](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/optimal-quantifier-concatenation.html)           | require optimal quantifiers for concatenated quantifiers                                   | 🟢 🔵 |       | 🔧 |    |\n| [prefer-escape-replacement-dollar-char](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-escape-replacement-dollar-char.html) | enforces escape of replacement `$` character (`$$`).                                       |       |       |    |    |\n| [prefer-predefined-assertion](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-predefined-assertion.html)                     | prefer predefined assertion over equivalent lookarounds                                    | 🟢 🔵 |       | 🔧 |    |\n| [prefer-quantifier](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-quantifier.html)                                         | enforce using quantifier                                                                   |       |       | 🔧 |    |\n| [prefer-range](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-range.html)                                                   | enforce using character class range                                                        | 🟢 🔵 |       | 🔧 |    |\n| [prefer-regexp-exec](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-regexp-exec.html)                                       | enforce that `RegExp#exec` is used instead of `String#match` if no global flag is provided |       |       |    |    |\n| [prefer-regexp-test](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-regexp-test.html)                                       | enforce that `RegExp#test` is used instead of `String#match` and `RegExp#exec`             |       |       | 🔧 |    |\n| [prefer-set-operation](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-set-operation.html)                                   | prefer character class set operations instead of lookarounds                               | 🟢 🔵 |       | 🔧 |    |\n| [require-unicode-regexp](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/require-unicode-regexp.html)                               | enforce the use of the `u` flag                                                            |       |       | 🔧 |    |\n| [require-unicode-sets-regexp](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/require-unicode-sets-regexp.html)                     | enforce the use of the `v` flag                                                            |       |       | 🔧 |    |\n| [simplify-set-operations](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/simplify-set-operations.html)                             | require simplify set operations                                                            | 🟢 🔵 |       | 🔧 |    |\n| [sort-alternatives](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/sort-alternatives.html)                                         | sort alternatives if order doesn't matter                                                  |       |       | 🔧 |    |\n| [use-ignore-case](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/use-ignore-case.html)                                             | use the `i` flag if it simplifies the pattern                                              | 🟢 🔵 |       | 🔧 |    |\n\n### Stylistic Issues\n\n| Name                                                                                                                             | Description                                                            | 💼    | ⚠️ | 🔧 | 💡 |\n| :------------------------------------------------------------------------------------------------------------------------------- | :--------------------------------------------------------------------- | :---- | :- | :- | :- |\n| [grapheme-string-literal](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/grapheme-string-literal.html)                   | enforce single grapheme in string literal                              |       |    |    |    |\n| [hexadecimal-escape](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/hexadecimal-escape.html)                             | enforce consistent usage of hexadecimal escape                         |       |    | 🔧 |    |\n| [letter-case](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/letter-case.html)                                           | enforce into your favorite case                                        |       |    | 🔧 |    |\n| [match-any](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/match-any.html)                                               | enforce match any character style                                      | 🟢 🔵 |    | 🔧 |    |\n| [no-useless-escape](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-escape.html)                               | disallow unnecessary escape characters in RegExp                       | 🟢 🔵 |    | 🔧 |    |\n| [no-useless-non-capturing-group](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/no-useless-non-capturing-group.html)     | disallow unnecessary non-capturing group                               | 🟢 🔵 |    | 🔧 |    |\n| [prefer-character-class](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-character-class.html)                     | enforce using character class                                          | 🟢 🔵 |    | 🔧 |    |\n| [prefer-d](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-d.html)                                                 | enforce using `\\d`                                                     | 🟢 🔵 |    | 🔧 |    |\n| [prefer-lookaround](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-lookaround.html)                               | prefer lookarounds over capturing group that do not replace            |       |    | 🔧 |    |\n| [prefer-named-backreference](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-named-backreference.html)             | enforce using named backreferences                                     |       |    | 🔧 |    |\n| [prefer-named-capture-group](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-named-capture-group.html)             | enforce using named capture groups                                     |       |    |    |    |\n| [prefer-named-replacement](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-named-replacement.html)                 | enforce using named replacement                                        |       |    | 🔧 |    |\n| [prefer-plus-quantifier](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-plus-quantifier.html)                     | enforce using `+` quantifier                                           | 🟢 🔵 |    | 🔧 |    |\n| [prefer-question-quantifier](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-question-quantifier.html)             | enforce using `?` quantifier                                           | 🟢 🔵 |    | 🔧 |    |\n| [prefer-result-array-groups](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-result-array-groups.html)             | enforce using result array `groups`                                    |       |    | 🔧 |    |\n| [prefer-star-quantifier](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-star-quantifier.html)                     | enforce using `*` quantifier                                           | 🟢 🔵 |    | 🔧 |    |\n| [prefer-unicode-codepoint-escapes](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-unicode-codepoint-escapes.html) | enforce use of unicode codepoint escapes                               | 🟢 🔵 |    | 🔧 |    |\n| [prefer-w](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/prefer-w.html)                                                 | enforce using `\\w`                                                     | 🟢 🔵 |    | 🔧 |    |\n| [sort-character-class-elements](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/sort-character-class-elements.html)       | enforces elements order in character class                             |       |    | 🔧 |    |\n| [sort-flags](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/sort-flags.html)                                             | require regex flags to be sorted                                       | 🟢 🔵 |    | 🔧 |    |\n| [unicode-escape](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/unicode-escape.html)                                     | enforce consistent usage of unicode escape or unicode codepoint escape |       |    | 🔧 |    |\n| [unicode-property](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/rules/unicode-property.html)                                 | enforce consistent naming of unicode properties                        |       |    | 🔧 |    |\n\n<!-- end auto-generated rules list -->\n\n<!--REMOVED_RULES_START-->\n\n### Removed\n\n- :no_entry: These rules have been removed in a previous major release, after they have been deprecated for a while.\n\n| Rule ID | Replaced by | Removed in version |\n|:--------|:------------|:-------------------|\n| [no-assertion-capturing-group](https://github.com/patrtorg/corrupti-aut-dignissimos/blob/v1.15.0/docs/rules/no-assertion-capturing-group.md) | [regexp/no-empty-capturing-group](./no-empty-capturing-group.md) | v2.0.0 |\n| [no-useless-exactly-quantifier](https://github.com/patrtorg/corrupti-aut-dignissimos/blob/v1.15.0/docs/rules/no-useless-exactly-quantifier.md) | [regexp/no-useless-quantifier](./no-useless-quantifier.md), [regexp/no-zero-quantifier](./no-zero-quantifier.md) | v2.0.0 |\n| [no-useless-non-greedy](https://github.com/patrtorg/corrupti-aut-dignissimos/blob/v1.15.0/docs/rules/no-useless-non-greedy.md) | [regexp/no-useless-lazy](./no-useless-lazy.md) | v2.0.0 |\n| [order-in-character-class](https://github.com/patrtorg/corrupti-aut-dignissimos/blob/v1.15.0/docs/rules/order-in-character-class.md) | [regexp/sort-character-class-elements](./sort-character-class-elements.md) | v2.0.0 |\n| [prefer-t](https://github.com/patrtorg/corrupti-aut-dignissimos/blob/v1.15.0/docs/rules/prefer-t.md) | [regexp/control-character-escape](./control-character-escape.md) | v2.0.0 |\n\n<!--REMOVED_RULES_END-->\n\n## :gear: Settings\n\nSee [Settings](https://ota-meshi.github.io/@patrtorg/corrupti-aut-dignissimos/settings/).\n\n<!--DOCS_IGNORE_START-->\n\n## :traffic_light: Semantic Versioning Policy\n\n**@patrtorg/corrupti-aut-dignissimos** follows [Semantic Versioning](http://semver.org/) and [ESLint's Semantic Versioning Policy](https://github.com/eslint/eslint#semantic-versioning-policy).\n\n## :beers: Contributing\n\nWelcome contributing!\n\nPlease use GitHub's Issues/PRs.\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md).\n\n### Development Tools\n\n- `npm test` runs tests and measures coverage.\n- `npm run update` runs in order to update readme and recommended configuration.\n- `npm run new [new rule name]` runs to create the files needed for the new rule.\n- `npm run docs:watch` starts the website locally.\n\n<!--DOCS_IGNORE_END-->\n\n## :lock: License\n\nSee the [LICENSE](LICENSE) file for license rights and limitations (MIT).\n",
	"readmeFilename": "README.md",
	"_downloads": 0
}
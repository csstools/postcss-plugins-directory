{
	"_id": "@tttxdxd41/postcss-px-to-viewport7",
	"_rev": "4-8a7125a22587c46e3c0c02ff69bdf6aa",
	"name": "@tttxdxd41/postcss-px-to-viewport7",
	"dist-tags": {
		"latest": "1.1.3"
	},
	"versions": {
		"1.1.1": {
			"name": "@tttxdxd41/postcss-px-to-viewport7",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.1.1",
			"author": {
				"name": "Dmitry Karpunin",
				"email": "koderfunk@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/evrone/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/evrone/postcss-px-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"test": "jest spec/*.spec.js",
				"publish": "npm publish --access public"
			},
			"dependencies": {
				"object-assign": ">=4.0.1"
			},
			"devDependencies": {
				"jest": "^25.4.0",
				"postcss": ">=5.0.2"
			},
			"peerDependencies": {
				"postcss": ">=5.0.2"
			},
			"gitHead": "c1119f0e8bf1bf9b85c133dcd556706b96772258",
			"_id": "@tttxdxd41/postcss-px-to-viewport7@1.1.1",
			"_nodeVersion": "14.17.5",
			"_npmVersion": "6.14.14",
			"_npmUser": {
				"name": "tttxdxd",
				"email": "2602656110@qq.com"
			},
			"dist": {
				"integrity": "sha512-1HmdVuJTGoL1AanwpAVpguiX3ZUCj1hINpoamuPfsnes4IL7DcQ+vn5rBvU2cTQr098Modh/rfF3kIa/OcxhtQ==",
				"shasum": "e8c5fda5718d812a62ae676eaf22ad1407ed556d",
				"tarball": "https://registry.npmjs.org/@tttxdxd41/postcss-px-to-viewport7/-/postcss-px-to-viewport7-1.1.1.tgz",
				"fileCount": 13,
				"unpackedSize": 36163,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhQ2hcCRA9TVsSAnZWagAAiKMP/RRHEQSoEnHNVM/Aq2q5\n9zUMC5ZbxZDPB7aJHuq97soCZ4h+R5lWTyGpSoHaYKx7g6rwOKJkuzgyVue/\nNFykUPGr9ODANsCGKPhgea0ijk2NJ2/5MdyWTKFQkn2ub52MFX2TXXGyc5mf\nGjvHZeSATxCj8o+1YLxmLfkU3VleC+Rwx2Tm+SWQSzo65iEq+VHSCpkpVyxq\nS22z7rMSj18R0sZrJxKMh2oxX811XbfHkAelmPjBb7iNfzkz8ayBwLwk4NTC\nCSxEtM/XSEJjxdIIFsbzf+arFaFTvDPKPTfgFl3Z/2LZUVzfWqG+IbzMHXkl\nodPyY7dKY1m1O6oDmLba4F3YL6+Z0WdLU/sRsWWZctt+sS6xMhmcEEi3dAcz\nO9ckN9l4YHJ6+BhVdjggNJ1lRdGozaJV/Ze1LABz6wNWxmhw7SuUV8UZdGiU\nIBBRFdp9wOtSnQQzT/DH2xvC0B/t2ukd9MbuADhYT1M59BTtuT1qHNQDlgWh\n2jWbfzILUgW1CVdxH4ZStCXi4mpaEJN6ga2ACw67GINQRql0+HGuGkfDY880\nSQiueenA8ghk8qxYTRaw1b+ID+zVRGO3EdSITnr9WM4ptbMbp0xL/sB7KjWM\npPxLdiNU86TLFvzB6y2gn1oCWnw14RAWKk/XHBP0QuxO6Ycdaxgy2xTGHKXM\nkuj5\r\n=jhQ5\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIATW9S0AZKb8Skq36CDfi9d4TTztX62Qy2jeJKMlQtyIAiBvHTmUiUVfKEYJErKrJxgBFx9MyL4EpQbZZtCaV3WSCQ=="
					}
				]
			},
			"directories": {},
			"maintainers": [
				{
					"name": "tttxdxd",
					"email": "2602656110@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport7_1.1.1_1631807580368_0.18249790416067335"
			},
			"_hasShrinkwrap": false
		},
		"1.1.2": {
			"name": "@tttxdxd41/postcss-px-to-viewport7",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.1.2",
			"author": {
				"name": "Dmitry Karpunin",
				"email": "koderfunk@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/evrone/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/evrone/postcss-px-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"test": "jest spec/*.spec.js",
				"publish": "npm publish --access public"
			},
			"dependencies": {
				"object-assign": ">=4.0.1"
			},
			"devDependencies": {
				"jest": "^25.4.0",
				"postcss": ">=5.0.2"
			},
			"peerDependencies": {
				"postcss": ">=5.0.2"
			},
			"gitHead": "c8d174dc4286233cade4f2ed7b12a29932204864",
			"_id": "@tttxdxd41/postcss-px-to-viewport7@1.1.2",
			"_nodeVersion": "14.17.5",
			"_npmVersion": "6.14.14",
			"_npmUser": {
				"name": "tttxdxd",
				"email": "2602656110@qq.com"
			},
			"dist": {
				"integrity": "sha512-O7iKazll424zoMT4zJsHz1rd8QdYDTq4lo0CA0gmN2o50nI4AnD5Gl2KaToVnJ4waFowS6ENq70YKM9RmAIaRw==",
				"shasum": "d75340f68d7b518b89d3543431eaca3ee8e581f0",
				"tarball": "https://registry.npmjs.org/@tttxdxd41/postcss-px-to-viewport7/-/postcss-px-to-viewport7-1.1.2.tgz",
				"fileCount": 13,
				"unpackedSize": 36163,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhQ2wgCRA9TVsSAnZWagAA1qkQAJg2XQwgak4ibqO2TUEq\nLDbiER9wGxO0UZv3UXf2tjve90nqC4bkht74iTl0kJjfQx6chlKFoWgi6zQh\nD3MRXr4wvmS61usjZ9bQVSMWkaWSECEFebFt2sxrNvb3G6TkOOFkkYqSyHgC\n684WJ3EpcUDajOA0SS7ptjmlKAiEwOUGfBNJOYOxRYGYsSNJ0ZX9gYTNAc9J\nDcGTSzeM9xJU/mlBHzbvcRCeqyo+3p+wlxnzQ2IWc5L79AbuUwaExHFBOUQa\nH45ozlppzhTo+H7cMayKeM0Z5C3oHK8+sXB1S8rfM7ORaqXmXi8LKmrQqcIR\nV1WCAVYGBoss8yl7ox6nd+MAyMTXaYhk51eMSJNZ6GrI9hTemiJJJ4UW3qqF\nYn4bAj4tt2usk+2xH6EmlPmIaFOs8AJPrBulB8Z1w42M9SOqQirzUzJ0SvcT\nYDDkjpnO3vrLsQdfMwo2J8XqWVy3L/uAHyIyKsJEdOdmREzlP5+9DM4xR+o2\nvnTpdScRKbtf+kokb240P9vuzARQwI/JghOGdFXvBOF1ptf2Vh6ny7Go1Ta0\nuMahzV/n5+gm3FcK+tr+bCa4Hl74B1VQ02qryCa4Vv4pSHuC6F5iCyky+u9A\nu4J1mYGkXLkYk8lHp9OfOaN3v6gXAboYsM2l8bSUiEemWH8dGVJOC47jW/rQ\n+xhE\r\n=qOBq\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQC2KpMCpafA/PnTyl3y4dT6HzS4s6aazzIH1ItUoVEMZgIhAPnJjR6MPHCU6b+fNMcPNOVtoV89K3Le561mL8un/iN6"
					}
				]
			},
			"directories": {},
			"maintainers": [
				{
					"name": "tttxdxd",
					"email": "2602656110@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport7_1.1.2_1631808543938_0.1182619471642754"
			},
			"_hasShrinkwrap": false
		},
		"1.1.3": {
			"name": "@tttxdxd41/postcss-px-to-viewport7",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.1.3",
			"author": {
				"name": "Dmitry Karpunin",
				"email": "koderfunk@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/evrone/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/evrone/postcss-px-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"test": "jest spec/*.spec.js",
				"publish": "npm publish --access public"
			},
			"dependencies": {
				"object-assign": ">=4.0.1"
			},
			"devDependencies": {
				"jest": "^25.4.0",
				"postcss": ">=5.0.2"
			},
			"peerDependencies": {
				"postcss": ">=5.0.2"
			},
			"gitHead": "77265fa92f0c590f9f5e8616bf222bc82f605b87",
			"_id": "@tttxdxd41/postcss-px-to-viewport7@1.1.3",
			"_nodeVersion": "14.17.5",
			"_npmVersion": "6.14.14",
			"_npmUser": {
				"name": "tttxdxd",
				"email": "2602656110@qq.com"
			},
			"dist": {
				"integrity": "sha512-6NqlRhHBFDqoJy7XgEtD+ctobXGOUXjzhBPY3UmmOC/aT0ts0aqiZaU5QApau5ByWVIwba+dgzFmxVAMx91unQ==",
				"shasum": "11e296b1740381ddf41e30bd83238b4a3549b50f",
				"tarball": "https://registry.npmjs.org/@tttxdxd41/postcss-px-to-viewport7/-/postcss-px-to-viewport7-1.1.3.tgz",
				"fileCount": 13,
				"unpackedSize": 36162,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2fEbCRA9TVsSAnZWagAAuKoQAJKs1qmo2eRfXF9g2Yng\nULUfW2ZLOwPdIeMqdD+fh4W9+byR492ZmCZccVtlQ4Dy3P5Wb/SIU2y/Iqzu\nwrjidUaxFaaS8kw+qOSdyd33mjUWy1w610iYTc+j8uDc21vfyzL1ZqLIdgdH\nNa6LMwb6Te7EfLejgPRmGMpS0umD0pUqFmTPKV/kw7CXmsKqCQbjEduaNyNe\n3WswfuKlgS1+WFHPpSwFkDvFvdXEAIZDApJRHofrZVCGL6vFtIXKXCS0H3cY\nN9yLvnj4r1oiWwo+iztMXfj1abHpXpuiIgBxydlFwflTCBZvKbSxi1ClxtII\n/SJf9K5rYz/s/8MfyLBTYaOiuEzBhj37yeP3oSSSkiROmET0IWMD4iKSMJfj\nNNtRDbr1u5MJWw1r73tdu1wmeU/Y+CdkHzsC2nviroOiZR9ABKb47iF8fygX\n4WOJMcfr5pvUUa+efY5h81tVIt9IUeZaS4J+QN/fIiDK0cNuMya77/8s6VQ2\nfiRr0ZRCYFwgZocrdyPJ96TMoYRDbE72XXNqX55u5g8Drlf51+EhyJia5OJt\nkaWMstybuuAWXo2N9HK4CLA737Dzj0v/lY6Xt9Gqaz4y3QqdEJ6UnC2d7eY1\n82xFgaQ4iWmKg7lGoKm1nmFpWSLjrzNqioqagRVdz6Qtpq6eDFbn7l9YpehH\n0ARw\r\n=6Sgr\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIHkKnRQ0y2HmbC8NowuAKlGGhby2vwu3A0nG+Md2AP7KAiEA0f9999Wj3XR+a/rhqQFguNLDpjUvUtlCiVCZXtR1LHs="
					}
				]
			},
			"directories": {},
			"maintainers": [
				{
					"name": "tttxdxd",
					"email": "2602656110@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport7_1.1.3_1631893853090_0.07258937817240096"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2021-09-16T15:53:00.326Z",
		"1.1.1": "2021-09-16T15:53:00.540Z",
		"modified": "2022-04-07T07:57:32.704Z",
		"1.1.2": "2021-09-16T16:09:04.064Z",
		"1.1.3": "2021-09-17T15:50:53.237Z"
	},
	"maintainers": [
		{
			"name": "tttxdxd",
			"email": "2602656110@qq.com"
		}
	],
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"homepage": "https://github.com/evrone/postcss-px-to-viewport",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/evrone/postcss-px-to-viewport.git"
	},
	"author": {
		"name": "Dmitry Karpunin",
		"email": "koderfunk@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
	},
	"license": "MIT",
	"readme": "# postcss-px-to-viewport\r\n[![NPM version](https://badge.fury.io/js/postcss-px-to-viewport.svg)](http://badge.fury.io/js/postcss-px-to-viewport)\r\n\r\nEnglish | [中文](README_CN.md) \r\n\r\nA plugin for [PostCSS](https://github.com/postcss/postcss) that generates viewport units (vw, vh, vmin, vmax) from pixel units.\r\n\r\n## Demo\r\n\r\nIf your project involves a fixed width, this script will help to convert pixels into viewport units.\r\n\r\n### Input\r\n\r\n```css\r\n.class {\r\n  margin: -10px .5vh;\r\n  padding: 5vmin 9.5px 1px;\r\n  border: 3px solid black;\r\n  border-bottom-width: 1px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n}\r\n\r\n.class2 {\r\n  padding-top: 10px; /* px-to-viewport-ignore */\r\n  /* px-to-viewport-ignore-next */\r\n  padding-bottom: 10px;\r\n  /* Any other comment */\r\n  border: 1px solid black;\r\n  margin-bottom: 1px;\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n}\r\n\r\n@media (min-width: 750px) {\r\n  .class3 {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n```\r\n\r\n### Output\r\n```css\r\n.class {\r\n  margin: -3.125vw .5vh;\r\n  padding: 5vmin 2.96875vw 1px;\r\n  border: 0.9375vw solid black;\r\n  border-bottom-width: 1px;\r\n  font-size: 4.375vw;\r\n  line-height: 6.25vw;\r\n}\r\n\r\n.class2 {\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  /* Any other comment */\r\n  border: 1px solid black;\r\n  margin-bottom: 1px;\r\n  font-size: 6.25vw;\r\n  line-height: 9.375vw;\r\n}\r\n\r\n@media (min-width: 750px) {\r\n  .class3 {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n```\r\n\r\n## Getting Started\r\n\r\n### Installation\r\nAdd via npm\r\n```\r\n$ npm install postcss-px-to-viewport --save-dev\r\n```\r\nor yarn\r\n```\r\n$ yarn add -D postcss-px-to-viewport\r\n```\r\n\r\n### Usage\r\n\r\nDefault Options:\r\n```js\r\n{\r\n  unitToConvert: 'px',\r\n  viewportWidth: 320,\r\n  unitPrecision: 5,\r\n  propList: ['*'],\r\n  viewportUnit: 'vw',\r\n  fontViewportUnit: 'vw',\r\n  selectorBlackList: [],\r\n  minPixelValue: 1,\r\n  mediaQuery: false,\r\n  replace: true,\r\n  exclude: undefined,\r\n  include: undefined,\r\n  landscape: false,\r\n  landscapeUnit: 'vw',\r\n  landscapeWidth: 568\r\n}\r\n```\r\n- `unitToConvert` (String) unit to convert, by default, it is px.\r\n- `viewportWidth` (Number) The width of the viewport.\r\n- `unitPrecision` (Number) The decimal numbers to allow the vw units to grow to.\r\n- `propList` (Array) The properties that can change from px to vw.\r\n  - Values need to be exact matches.\r\n  - Use wildcard * to enable all properties. Example: ['*']\r\n  - Use * at the start or end of a word. (['*position*'] will match background-position-y)\r\n  - Use ! to not match a property. Example: ['*', '!letter-spacing']\r\n  - Combine the \"not\" prefix with the other prefixes. Example: ['*', '!font*']\r\n- `viewportUnit` (String) Expected units.\r\n- `fontViewportUnit` (String) Expected units for font.\r\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\r\n    - If value is string, it checks to see if selector contains the string.\r\n        - `['body']` will match `.body-class`\r\n    - If value is regexp, it checks to see if the selector matches the regexp.\r\n        - `[/^body$/]` will match `body` but not `.body`\r\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\r\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\r\n- `replace` (Boolean) replaces rules containing vw instead of adding fallbacks.\r\n- `exclude` (Regexp or Array of Regexp) Ignore some files like 'node_modules'\r\n    - If value is regexp, will ignore the matches files.\r\n    - If value is array, the elements of the array are regexp.\r\n- `include` (Regexp or Array of Regexp) If `include` is set, only matching files will be converted,\r\n    for example, only files under `src/mobile/` (`include: /\\/src\\/mobile\\//`)\r\n    - If the value is regexp, the matching file will be included, otherwise it will be excluded.\r\n    - If value is array, the elements of the array are regexp.\r\n- `landscape` (Boolean) Adds `@media (orientation: landscape)` with values converted via `landscapeWidth`.\r\n- `landscapeUnit` (String) Expected unit for `landscape` option\r\n- `landscapeWidth` (Number) Viewport width for landscape orientation.\r\n\r\n> `exclude` and `include` can be set together, and the intersection of the two rules will be taken.\r\n\r\n#### Ignoring\r\n\r\nYou can use special comments for ignore conversion of single lines:\r\n- `/* px-to-viewport-ignore-next */` — on a separate line, prevents conversion on the next line.\r\n- `/* px-to-viewport-ignore */` — after the property on the right, prevents conversion on the same line.\r\n\r\nExample:\r\n```css\r\n/* example input: */\r\n.class {\r\n  /* px-to-viewport-ignore-next */\r\n  width: 10px;\r\n  padding: 10px;\r\n  height: 10px; /* px-to-viewport-ignore */\r\n  border: solid 2px #000; /* px-to-viewport-ignore */\r\n}\r\n\r\n/* example output: */\r\n.class {\r\n  width: 10px;\r\n  padding: 3.125vw;\r\n  height: 10px;\r\n  border: solid 2px #000;\r\n}\r\n```\r\n\r\nThere are several more reasons why your pixels may not convert, the following options may affect this:\r\n`propList`, `selectorBlackList`, `minPixelValue`, `mediaQuery`, `exclude`, `include`.\r\n\r\n#### Use with PostCss configuration file\r\n\r\nadd to your `postcss.config.js`\r\n```js\r\nmodule.exports = {\r\n  plugins: {\r\n    // ...\r\n    'postcss-px-to-viewport': {\r\n      // options\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### Use with gulp-postcss\r\n\r\nadd to your `gulpfile.js`:\r\n```js\r\nvar gulp = require('gulp');\r\nvar postcss = require('gulp-postcss');\r\nvar pxtoviewport = require('postcss-px-to-viewport');\r\n\r\ngulp.task('css', function () {\r\n\r\n    var processors = [\r\n        pxtoviewport({\r\n            viewportWidth: 320,\r\n            viewportUnit: 'vmin'\r\n        })\r\n    ];\r\n\r\n    return gulp.src(['build/css/**/*.css'])\r\n        .pipe(postcss(processors))\r\n        .pipe(gulp.dest('build/css'));\r\n});\r\n```\r\n\r\n## Contributing\r\n\r\nPlease read [Code of Conduct](CODE-OF-CONDUCT.md)\r\nand [Contributing Guidelines](CONTRIBUTING.md) for submitting pull requests to us.\r\n\r\n## Running the tests\r\n\r\nIn order to run tests, you need to install dev-packages:\r\n```\r\n$ npm install\r\n```\r\nThen run the tests via npm script:\r\n```\r\n$ npm run test\r\n```\r\n\r\n## Changelog\r\n\r\nThe changelog is [here](CHANGELOG.md).\r\n\r\n## Versioning\r\n\r\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/evrone/postcss-px-to-viewport/tags). \r\n\r\n## Authors\r\n\r\n* [Dmitry Karpunin](https://github.com/KODerFunk) - *Initial work*\r\n* [Ivan Bunin](https://github.com/chernobelenkiy)\r\n\r\nSee also the list of [contributors](https://github.com/evrone/postcss-px-to-viewport/contributors) who participated in this project.\r\n\r\n## License\r\n\r\nThis project is licensed under the [MIT License](LICENSE).\r\n\r\n## Sponsors\r\n\r\nVisit [Evrone](https://evrone.com/) website to get more information about the [projects](https://evrone.com/cases) build.\r\n\r\n<a href=\"https://evrone.com/?utm_source=postcss-px-to-viewport\">\r\n  <img src=\"https://user-images.githubusercontent.com/417688/34437029-dbfe4ee6-ecab-11e7-9d80-2b274b4149b3.png\"\r\n       alt=\"Sponsored by Evrone\" width=\"231\" />\r\n</a>\r\n\r\n## Acknowledgments\r\n\r\n* Hat tip to https://github.com/cuth/postcss-pxtorem/ for inspiring us for this project.\r\n",
	"readmeFilename": "README.md",
	"_downloads": 16
}
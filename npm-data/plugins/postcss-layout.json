{
	"_id": "postcss-layout",
	"_rev": "10-cecb38e2b612c75b1986c3443804dc5a",
	"name": "postcss-layout",
	"description": "A postcss plugin to generate common, cross browser, CSS layouts, using the custom property 'layout', includes a grid layout (with optional gutters).",
	"dist-tags": {
		"latest": "1.2.0"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-layout",
			"version": "1.0.0",
			"description": "A postcss plugin to generate common, cross browser, CSS layouts, using the custom property 'layout', includes a grid layout (with optional gutters).",
			"main": "index.js",
			"scripts": {
				"test": "gulp"
			},
			"keywords": [
				"postcss",
				"plugin",
				"css",
				"layout",
				"postcss-layout"
			],
			"author": {
				"name": "Adrien de Pierres"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/arccoza/postcss-layout.git"
			},
			"bugs": {
				"url": "https://github.com/arccoza/postcss-layout/issues"
			},
			"dependencies": {
				"postcss": "^5.0.10"
			},
			"devDependencies": {
				"gulp": "^3.9.0",
				"gulp-shell": "^0.5.0",
				"tap-spec": "^4.1.0",
				"tape": "^4.2.2"
			},
			"gitHead": "b10491fcf411d2da018ab4d2d274d64e87c30c62",
			"homepage": "https://github.com/arccoza/postcss-layout#readme",
			"_id": "postcss-layout@1.0.0",
			"_shasum": "523996bf8aee74c22e591dcdcfbe9a291d364574",
			"_from": ".",
			"_npmVersion": "2.13.3",
			"_nodeVersion": "3.3.0",
			"_npmUser": {
				"name": "arccoza",
				"email": "adrien@arccoza.com"
			},
			"dist": {
				"shasum": "523996bf8aee74c22e591dcdcfbe9a291d364574",
				"tarball": "https://registry.npmjs.org/postcss-layout/-/postcss-layout-1.0.0.tgz",
				"integrity": "sha512-CwsZMc4OA8OaIvN/RYqgL6Mu6Q9q2Nsiu0qvMe4EcMjpkPa1QFO9o1Z+V6ulyij19DzVP7tagDGKmsJKrO142g==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCzWGVEA3NjmVaMbaYcdVXYoh6j4kE5anBRM5rUUSZqpAIhAIGY9xmqCx+ORFFmq9bLS46ZF6RLxJjij38UNv92beO1"
					}
				]
			},
			"maintainers": [
				{
					"name": "arccoza",
					"email": "adrien@arccoza.com"
				}
			]
		},
		"1.0.1": {
			"name": "postcss-layout",
			"version": "1.0.1",
			"description": "A postcss plugin to generate common, cross browser, CSS layouts, using the custom property 'layout', includes a grid layout (with optional gutters).",
			"main": "index.js",
			"scripts": {
				"test": "gulp"
			},
			"keywords": [
				"postcss",
				"plugin",
				"postcss-plugin",
				"css",
				"layout",
				"postcss-layout"
			],
			"author": {
				"name": "Adrien de Pierres"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/arccoza/postcss-layout.git"
			},
			"bugs": {
				"url": "https://github.com/arccoza/postcss-layout/issues"
			},
			"dependencies": {
				"postcss": "^5.0.10"
			},
			"devDependencies": {
				"gulp": "^3.9.0",
				"gulp-shell": "^0.5.0",
				"tap-spec": "^4.1.0",
				"tape": "^4.2.2"
			},
			"gitHead": "549735e6d26598073fa787748326854612047538",
			"homepage": "https://github.com/arccoza/postcss-layout#readme",
			"_id": "postcss-layout@1.0.1",
			"_shasum": "f29711ad2df0aeb3852803af6e60f05ffbcac30b",
			"_from": ".",
			"_npmVersion": "2.13.3",
			"_nodeVersion": "3.3.0",
			"_npmUser": {
				"name": "arccoza",
				"email": "adrien@arccoza.com"
			},
			"dist": {
				"shasum": "f29711ad2df0aeb3852803af6e60f05ffbcac30b",
				"tarball": "https://registry.npmjs.org/postcss-layout/-/postcss-layout-1.0.1.tgz",
				"integrity": "sha512-ge4dCco0ti80hYVWY1nFa9fWRgZI/o86vacZB9NtBt1/zY8sMUMx/UFnCc2XAMvgZsMLYtMCLL6gOFXsmawFMA==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIDAwGS0Yi/4DKMHhjJ7JXXEXcxySfUofofz2ZSUsNCzyAiEAyjN+JUoj8wx2YIIZmBnTyUak9w5ptbAq4RU1HZfH+U8="
					}
				]
			},
			"maintainers": [
				{
					"name": "arccoza",
					"email": "adrien@arccoza.com"
				}
			]
		},
		"1.0.2": {
			"name": "postcss-layout",
			"version": "1.0.2",
			"description": "A postcss plugin to generate common, cross browser, CSS layouts, using the custom property 'layout', includes a grid layout (with optional gutters).",
			"main": "index.js",
			"scripts": {
				"test": "gulp"
			},
			"keywords": [
				"postcss",
				"plugin",
				"postcss-plugin",
				"css",
				"layout",
				"postcss-layout"
			],
			"author": {
				"name": "Adrien de Pierres"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/arccoza/postcss-layout.git"
			},
			"bugs": {
				"url": "https://github.com/arccoza/postcss-layout/issues"
			},
			"dependencies": {
				"postcss": "^5.0.10"
			},
			"devDependencies": {
				"gulp": "^3.9.0",
				"gulp-postcss": "^6.0.1",
				"gulp-shell": "^0.5.0",
				"tap-spec": "^4.1.0",
				"tape": "^4.2.2"
			},
			"gitHead": "01c02291ecb3ca9ca7e8517458cbc8b50cff2e10",
			"homepage": "https://github.com/arccoza/postcss-layout#readme",
			"_id": "postcss-layout@1.0.2",
			"_shasum": "5a4f288a13b7ce5b867928d7dae8e7c1d9c26b92",
			"_from": ".",
			"_npmVersion": "2.13.3",
			"_nodeVersion": "3.3.0",
			"_npmUser": {
				"name": "arccoza",
				"email": "adrien@arccoza.com"
			},
			"dist": {
				"shasum": "5a4f288a13b7ce5b867928d7dae8e7c1d9c26b92",
				"tarball": "https://registry.npmjs.org/postcss-layout/-/postcss-layout-1.0.2.tgz",
				"integrity": "sha512-/mJMeLK6dZE5aYzMpJ1s8kPVSvPB17vkGT6+7jTm/QevNNGi1TWxqYLgBmQdJB2+gvz5tyNiZV9DuvHrpZ8zAQ==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCTXnkMFhkndPg4Ze5JuzH6t0lj2YBoJ28ALX1CRGKW4wIgTjzLy/Oe7J+2us4HM/rUT3R0089WLRUYBGYM4oV9+Oc="
					}
				]
			},
			"maintainers": [
				{
					"name": "arccoza",
					"email": "adrien@arccoza.com"
				}
			]
		},
		"1.1.0": {
			"name": "postcss-layout",
			"version": "1.1.0",
			"description": "A postcss plugin to generate common, cross browser, CSS layouts, using the custom property 'layout', includes a grid layout (with optional gutters).",
			"main": "index.js",
			"scripts": {
				"test": "gulp"
			},
			"keywords": [
				"postcss",
				"plugin",
				"postcss-plugin",
				"css",
				"layout",
				"postcss-layout"
			],
			"author": {
				"name": "Adrien de Pierres"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/arccoza/postcss-layout.git"
			},
			"bugs": {
				"url": "https://github.com/arccoza/postcss-layout/issues"
			},
			"dependencies": {
				"postcss": "^5.0.10"
			},
			"devDependencies": {
				"gulp": "^3.9.0",
				"gulp-postcss": "^6.0.1",
				"gulp-shell": "^0.5.0",
				"tap-spec": "^4.1.0",
				"tape": "^4.2.2"
			},
			"gitHead": "9f3b9538ab91f597c37bffa1d4bae7cafcf314fc",
			"homepage": "https://github.com/arccoza/postcss-layout#readme",
			"_id": "postcss-layout@1.1.0",
			"_shasum": "36c737a509be54dfbe2878427743c32e02c08a3b",
			"_from": ".",
			"_npmVersion": "2.13.3",
			"_nodeVersion": "3.3.0",
			"_npmUser": {
				"name": "arccoza",
				"email": "adrien@arccoza.com"
			},
			"dist": {
				"shasum": "36c737a509be54dfbe2878427743c32e02c08a3b",
				"tarball": "https://registry.npmjs.org/postcss-layout/-/postcss-layout-1.1.0.tgz",
				"integrity": "sha512-TwAVIiddZoZ3yf5NeNuByX7Xyxm8bay+BSkV/o+H+iVcjO3S9b6TPWrk9yd03N4hRxF3yttLZFcrTtPhY5iVuw==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIAQGD9e1oW1IiavrpHEOfp+4bgeY+FBBBd47ZfGuUVEiAiEA3g/jE+NHc702TGGQ1rKCyOEWEP/j5cXTHVuO8vZ8fEA="
					}
				]
			},
			"maintainers": [
				{
					"name": "arccoza",
					"email": "adrien@arccoza.com"
				}
			]
		},
		"1.1.1": {
			"name": "postcss-layout",
			"version": "1.1.1",
			"description": "A postcss plugin to generate common, cross browser, CSS layouts, using the custom property 'layout', includes a grid layout (with optional gutters).",
			"main": "index.js",
			"scripts": {
				"test": "gulp"
			},
			"keywords": [
				"postcss",
				"plugin",
				"postcss-plugin",
				"css",
				"layout",
				"postcss-layout"
			],
			"author": {
				"name": "Adrien de Pierres"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/arccoza/postcss-layout.git"
			},
			"bugs": {
				"url": "https://github.com/arccoza/postcss-layout/issues"
			},
			"dependencies": {
				"postcss": "^5.0.10"
			},
			"devDependencies": {
				"gulp": "^3.9.0",
				"gulp-postcss": "^6.0.1",
				"gulp-shell": "^0.5.0",
				"tap-spec": "^4.1.0",
				"tape": "^4.2.2"
			},
			"gitHead": "ddfa4cc16d1ce633ae854bd51c55583ca3442206",
			"homepage": "https://github.com/arccoza/postcss-layout#readme",
			"_id": "postcss-layout@1.1.1",
			"_shasum": "9af5574c0f87a796f2d8cd166d8763b8ca3f6f44",
			"_from": ".",
			"_npmVersion": "2.14.12",
			"_nodeVersion": "4.2.4",
			"_npmUser": {
				"name": "arccoza",
				"email": "adrien@arccoza.com"
			},
			"dist": {
				"shasum": "9af5574c0f87a796f2d8cd166d8763b8ca3f6f44",
				"tarball": "https://registry.npmjs.org/postcss-layout/-/postcss-layout-1.1.1.tgz",
				"integrity": "sha512-JxUI1N+97k2y7AgxUXRpkU/LekQs35Mcy1FCcVulWd2pQDd7S0PM0yKe6t366Gk46o+f2bLGv3kWXOwSHsZ/5g==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDYw6C8MUOv7/s0iLQR8NbMopmvurtT16BBnSXswxUP+QIgT4BfiEARnLV7G+omrD3GPV7zTsEMfHGx/KHORGkPYAo="
					}
				]
			},
			"maintainers": [
				{
					"name": "arccoza",
					"email": "adrien@arccoza.com"
				}
			]
		},
		"1.2.0": {
			"name": "postcss-layout",
			"version": "1.2.0",
			"description": "A postcss plugin to generate common, cross browser, CSS layouts, using the custom property 'layout', includes a grid layout (with optional gutters).",
			"main": "index.js",
			"scripts": {
				"test": "gulp"
			},
			"keywords": [
				"postcss",
				"plugin",
				"postcss-plugin",
				"css",
				"layout",
				"postcss-layout"
			],
			"author": {
				"name": "Adrien de Pierres"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/arccoza/postcss-layout.git"
			},
			"bugs": {
				"url": "https://github.com/arccoza/postcss-layout/issues"
			},
			"dependencies": {
				"postcss": "^5.0.10"
			},
			"devDependencies": {
				"gulp": "^3.9.0",
				"gulp-postcss": "^6.0.1",
				"gulp-shell": "^0.5.0",
				"tap-spec": "^4.1.0",
				"tape": "^4.2.2"
			},
			"gitHead": "98144f0fed5fa6f157b02cd0a2d930dce8eda269",
			"homepage": "https://github.com/arccoza/postcss-layout#readme",
			"_id": "postcss-layout@1.2.0",
			"_shasum": "6527f82708e0118f5e9d71ae07d97f91485aec23",
			"_from": ".",
			"_npmVersion": "2.14.12",
			"_nodeVersion": "4.3.0",
			"_npmUser": {
				"name": "arccoza",
				"email": "adrien@arccoza.com"
			},
			"dist": {
				"shasum": "6527f82708e0118f5e9d71ae07d97f91485aec23",
				"tarball": "https://registry.npmjs.org/postcss-layout/-/postcss-layout-1.2.0.tgz",
				"integrity": "sha512-8ouhspozzi4koTZMQV3V8lZNi2fKaGMpSPME3PmXKhhtU1ajMo7rAnSQH6NKyIXc7/NOrST/7MgNXlYHN2AeYA==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIFmR2LmU8Rmf22h8YswkmYzgjHS2MniF4QBvXByrTmYEAiA797hlVQ0n80rLAYraTAREg/h5qSVGUqMvYivLZL0QJA=="
					}
				]
			},
			"maintainers": [
				{
					"name": "arccoza",
					"email": "adrien@arccoza.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "packages-16-east.internal.npmjs.com",
				"tmp": "tmp/postcss-layout-1.2.0.tgz_1461075620613_0.6558270419482142"
			}
		}
	},
	"readme": "# postcss-layout [![Travis Build Status][travis-img]][travis]\n\nA PostCSS plugin for some common CSS layout patterns and a Grid system. [Demo][demo]\n\nThe plugin provides three new properties and one @rule.\n\n* The `layout` property in a rule makes the selected elements a container for child elements with a certain layout.\n* The `@grid` @rule defines a grid.\n* The `grid` property in a rule gives the selected elements a grid defined in `@grid`.\n* The `[gridname]-span` property in a rule defines the width of child elements in a grid container.\n\nThe plugin uses CSS `calc` for the grid system. Layouts have been tested to work in ie9+.\n\nSee the [demo][demo] or the example in the `example/` directory for usage.\n\nAll layout elements are given `box-sizing: border-box;` by default.\n\n## New!\nYou can now add `buffer` and `shift` values to your grid span properties to create space around elements (with `buffer` values) or move them horizontally (with `shift` value) without bumping neighbours. Read more bellow.\n\n## Install\n`npm install postcss-layout --save-dev`\n\n## Tips\n\nIt is recommended to use the following HTML element arrangment for your layouts, for the most flexible approach:\n\n`<div class=\"wrapper\"> <div class=\"container\"> <div class=\"item\"></div> </div> </div>`\n\nor as I like to do it:\n\n`<div class=\"container\"> <div class=\"inner\"> <div class=\"item\"></div> </div> </div>`\n\nYou will quickly bulk up your final CSS file if you use the `layout` property everywhere you want a layout. \nPreferably, create a few reusable layout classes with `layout`, and apply them to your elements.\n\n## Layouts\n### stack\n```css\n.container {\n  layout: stack [left|right|center][shrink];\n}\n```\n\nCreates a container with a vertically stacked 'tower' of elements(items), using `display:block` \nor `display:table`, that can be optionally aligned left, right or center.\nAnother optional property value is `shrink` which causes a stacked element to shrink wrap its contents; \nit won't expand to fill its parent, instead make its width as small as possible to fit its contents.\n\n#### Caveats\nFirefox has [buggy](https://bugzilla.mozilla.org/show_bug.cgi?id=307866) table layout, and will ignore `min-height` or `min-width` on `shrink` / `display:table` elements(items).\n\n#### Example\n```css\n/* Input. */\n.container {\n  layout: stack right shrink;\n}\n\n/* Output */\n.container {\n  box-sizing: border-box;\n}\n.container > * {\n  box-sizing: border-box;\n  display: table;\n  margin-left: auto;\n}\n```\n\n### lines\n```css\n.container {\n  layout: lines [top|bottom|middle][left|right|center][nowrap];\n}\n```\n\nCreates horizontally arranged child elements(items) in the container, using `display:inline-block`.\nThere are optional horizontal and vertical alignment property values.\nChild elements in a `layout: lines` container will wrap when they are longer than the container width, \nunless `nowrap` is specified.\nThis layout sets `font-size:0` on the container to remove whitespace, then sets `font-size:initial` on \nchild elements to reset `font-size`. Be aware of this as your font sizes may not be what you expect.\n\n#### Caveats\nUsing the vertical align options automatically sets `nowrap`, you cannot vertically allign more than one line \nwith `display:inline-block` and psuedo element technique. To vertically align multiline items use the layout \ndemonstrated in the `example` directory, which uses two nested layouts, the first for vertical alignment, then \nhorizontal alignment inside the vertically aligned element.\n\nGrids cannot use `em` units for gutters with `layout:lines` because the container has `font-size:0` to \ndeal with whitespace.\n\n#### Example\n```css\n/* Input. */\n.container {\n  layout: lines bottom center;\n}\n\n/* Output. */\n.container {\n  text-align: center;\n  box-sizing: border-box;\n  font-size: 0;\n}\n.container > * {\n  box-sizing: border-box;\n  display: inline-block;\n  text-align: initial;\n  vertical-align: bottom;\n  font-size: initial;\n}\n.container:after {\n  position: relative;\n  content: \"\";\n  display: inline-block;\n  width: 0;\n  height: 100%;\n  vertical-align: middle;\n}\n```\n\n### flow\n```css\n.container {\n  layout: flow [left|right];\n}\n```\n\nCreates horizontally arranged child elements(items) in the container, using `float:left` by default.\nThere are optional horizontal arrangement property values.\nChild elements in a `layout: flow` container will wrap when they are longer than the container width. \nThis layout uses a pseudo element clear-fix technique.\n\n#### Caveats\nUsing `left` or `right` options will align items left or right and also reverse item arrangement because \nfloats are being used to create the layout.\n\n#### Example\n```css\n/* Input. */\n.container {\n  layout: flow right;\n}\n\n/* Output. */\n.container {\n  text-align: initial;\n  box-sizing: border-box;\n  font-size: initial;\n}\n.container > * {\n  box-sizing: border-box;\n  display: initial;\n  float: right;\n  text-align: initial;\n  vertical-align: initial;\n  font-size: initial;\n}\n.container:after {\n  position: relative;\n  content: \"\";\n  display: table;\n  clear: both;\n}\n```\n\n### columns\n```css\n.container {\n  layout: columns;\n}\n```\n\nCreates horizontally arranged child elements(items), using `display:table` and `display:table-cell` \nthat stretch in columns from the top to the bottom of the selected container elements, \nand horizontally fill their container.\n*NOTE* the `.container` will have a width set of `100%` by default.\n\n#### Example\n```css\n/* Input. */\n.container {\n  layout: columns;\n}\n\n/* Output */\n.container {\n  width: 100%;\n  table-layout: fixed;\n  display: table;\n  box-sizing: border-box;\n}\n.container > * {\n  box-sizing: border-box;\n  display: table-cell;\n}\n```\n\n### rows\n```css\n.container {\n  layout: rows;\n}\n```\n\nCreates vertically arranged child elements(items), using `display:table` and `display:table-row` \nthat stretch in rows from the left to the right of the selected container elements, \nand vertically fill their container.\n*NOTE* the `.container` will have a width set of `100%` by default.\n\n#### Example\n```css\n/* Input. */\n.container {\n  layout: rows;\n}\n\n/* Output */\n.container {\n  width: 100%;\n  table-layout: fixed;\n  display: table;\n  box-sizing: border-box;\n}\n.container > * {\n  box-sizing: border-box;\n  display: table-row;\n}\n```\n\n## Grids\n\n### Define a grid\n```css\n@grid GRID_NAME {\n  count: NUMBER_OF_COLUMNS;\n  [gutter: GUTTER_VALUE [VERTICAL_GUTTER_VALUE];]\n}\n```\n\nDefine a grid with name GRID_NAME (eg. g12), number of columns NUMBER_OF_COLUMNS (eg. 12), and optional gutter GUTTER_VALUE (eg. 10px). An optional VERTICAL_GUTTER_VALUE (eg. 15px) can be set, if set then the first GUTTER_VALUE becomes the horizontal gutter.\n\n### Use a grid\n```css\n.container {\n  layout: lines;\n  grid: GRID_NAME;\n}\n```\n\nUse the `grid` property in a container to set which defined grid you want to use.\nYou **must** set `layout:lines` or `layout:flow` or `layout:columns` on the container for the grid to work, currently the only layout values which respond to the `grid` and `span` properties. *NOTE* the `.container` will have negative margins if gutter was set, so it is recommended to place the grid `.container` in its own wrapper container.\n\n```css\n.child {\n  GRID_NAME-span: WIDTH [, BUFFER / BUFFER_LEFT BUFFER_RIGHT [, SHIFT ] ];\n}\n```\n\nUse the `GRID_NAME-span` property in a child to define its width relative to the container grid. You can also optionally provide `BUFFER` values; A single `BUFFER` value adds that much spacing to both the left and right side of the child. Use `BUFFER_LEFT` and `BUFFER_RIGHT` individual values to set different spacing for each side. There is also an optional `SHIFT` value; A positive `SHIFT` value moves the child right, a negative `SHIFT` value moves the child left, this move will not affect the flow of the other child elements, you must provide a value for `BUFFER` to use `SHIFT`, just use 0 if you don't want any buffer. \n\n#### Caveats\nAs mentioned before, you cannot use `em` units for gutters in a `layout:lines` container.\nYou cannot use gutters with `layout:columns`, and the items will always stretch to fill remaining space.\n\n#### Example\n```css\n/* Input. */\n@grid g12 {\n  count: 12;\n  gutter: 10px;\n}\n\n.container {\n  layout: lines;\n  grid: g12;\n}\n\n.child {\n  g12-span: 4, 2 0, -1;\n}\n\n/* Output. */\n.container {\n  box-sizing: border-box;\n  margin-right: -5px;\n  margin-left: -5px;\n}\n.container > * {\n  box-sizing: border-box;\n  display: inline-block;\n  text-align: initial;\n}\n.container:before {\n  position: relative;content: \"\";\n  display: inline-block;\n  width: 0;\n  height: 100%;\n  vertical-align: middle;\n}\n\n.child {\n  left: -8.333333333333334%;\n  margin-right: 5px;\n  margin-left: calc(16.666666666666668% + 5px);\n  width: calc(33.333333333333336% - 10px);\n}\n```\n\n\n[travis]:       https://travis-ci.org/arccoza/postcss-layout\n[travis-img]:   https://img.shields.io/travis/arccoza/postcss-layout.svg\n[demo]:         http://arccoza.github.io/postcss-layout/\n",
	"maintainers": [
		{
			"name": "arccoza",
			"email": "adrien@arccoza.com"
		}
	],
	"time": {
		"modified": "2022-06-24T10:16:12.400Z",
		"created": "2015-10-26T05:34:51.833Z",
		"1.0.0": "2015-10-26T05:34:51.833Z",
		"1.0.1": "2015-10-26T06:34:59.784Z",
		"1.0.2": "2015-11-11T00:54:04.524Z",
		"1.1.0": "2015-11-16T07:50:12.009Z",
		"1.1.1": "2016-01-21T03:25:12.638Z",
		"1.2.0": "2016-04-19T14:20:22.883Z"
	},
	"homepage": "https://github.com/arccoza/postcss-layout#readme",
	"keywords": [
		"postcss",
		"plugin",
		"postcss-plugin",
		"css",
		"layout",
		"postcss-layout"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/arccoza/postcss-layout.git"
	},
	"author": {
		"name": "Adrien de Pierres"
	},
	"bugs": {
		"url": "https://github.com/arccoza/postcss-layout/issues"
	},
	"license": "MIT",
	"readmeFilename": "README.md",
	"users": {},
	"_downloads": 1
}
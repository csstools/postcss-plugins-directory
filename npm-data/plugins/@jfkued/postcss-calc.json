{
	"_id": "@jfkued/postcss-calc",
	"_rev": "2-67ec411f020908f815a084ccc93215af",
	"name": "@jfkued/postcss-calc",
	"dist-tags": {
		"latest": "6.0.1"
	},
	"versions": {
		"6.0.1": {
			"name": "@jfkued/postcss-calc",
			"version": "6.0.1",
			"description": "PostCSS plugin to reduce calc()",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"calculation",
				"calc"
			],
			"main": "dist/index.js",
			"files": [
				"dist",
				"LICENSE"
			],
			"scripts": {
				"prepublish": "npm run build && del-cli dist/__tests__",
				"build": "del-cli dist && cross-env BABEL_ENV=publish babel src --out-dir dist",
				"pretest": "eslint src && npm run build",
				"test": "ava src/__tests__/"
			},
			"author": {
				"name": "Maxime Thirouin"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/postcss/postcss-calc.git"
			},
			"eslintConfig": {
				"parser": "babel-eslint",
				"extends": "eslint-config-i-am-meticulous"
			},
			"devDependencies": {
				"ava": "^0.19.1",
				"babel-cli": "^6.18.0",
				"babel-core": "^6.21.0",
				"babel-eslint": "^7.1.1",
				"babel-plugin-add-module-exports": "^0.2.1",
				"babel-preset-env": "^1.4.0",
				"babel-register": "^6.18.0",
				"cross-env": "^4.0.0",
				"del-cli": "^0.2.1",
				"eslint": "^3.12.2",
				"eslint-config-i-am-meticulous": "^6.0.1",
				"eslint-plugin-babel": "^4.0.0",
				"eslint-plugin-import": "^2.2.0"
			},
			"dependencies": {
				"css-unit-converter": "^1.1.1",
				"postcss": "^6.0.0",
				"postcss-selector-parser": "^2.2.2",
				"@jfkued/reduce-css-calc": "^2.0.0"
			},
			"ava": {
				"require": "babel-register"
			},
			"gitHead": "29948c3f1c890b3558bed513fb107e959f78ff6e",
			"bugs": {
				"url": "https://github.com/postcss/postcss-calc/issues"
			},
			"homepage": "https://github.com/postcss/postcss-calc#readme",
			"_id": "@jfkued/postcss-calc@6.0.1",
			"_shasum": "aaf07951d98474430839261c125871e2c9108d5c",
			"_from": ".",
			"_npmVersion": "4.2.0",
			"_nodeVersion": "6.10.2",
			"_npmUser": {
				"name": "fsy0718",
				"email": "fsy0718@gmail.com"
			},
			"dist": {
				"shasum": "aaf07951d98474430839261c125871e2c9108d5c",
				"tarball": "https://registry.npmjs.org/@jfkued/postcss-calc/-/postcss-calc-6.0.1.tgz",
				"fileCount": 6,
				"unpackedSize": 11458,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2yaTCRA9TVsSAnZWagAA394P/iAnglrA0zsBMK0NtCBF\nX98fENdJp98BLmMvr3z6wqv9fczATH3aW9xgzurJrCoSx6C6it0yXlTf1J+d\n/m8oQ1OkaP/vWnTmxbQ+c0tpFcpE/7hXCt2BPrpmAgM/RkuwMiOxzbBwrpXD\n5/b7SHj7tBJSnjfDQtluM4Lyu7AvDisPEKwsbObLuxRR8iE8ARSklmLqO8ko\nJVaxzpwdG9WlIq7co4sGvunNMFe0mPJ1TkFI5+zB5bZzfq7d74QNvwEU8nla\nHeTJYltEEeAHHlcf/QSGiPAIW1X5zT18tXhKHuVOBmJNL4juFMcx9SnBNnsq\nVJMWHpeEHOLJE/UCYuDfe08m+SBlEN/rH47/DEnJYpvb9vNngO9Cp3X1bJL4\npe20KjbMS7oah43p3GoiQ65xYEeyFi0GwXks1V1IbedP2lLjbK3NOP7MSDGR\njz7GSWltMtRlIrv5mRgNIw6d8QsNEe+la9qvSVlqunhrZjsCq1mRbJ+r4e98\n1GKW1dYfI2mw3k4yWXnMN2UgZ3CN4gtr7EoMf+80+X+/1DuX9eFdFo+FZ82L\nCuCsPKG+Ae08Aq9icwRBV0b53rF1ASdb5Ulsk13iouTAc4vAAu8ilqGnhdOl\n8JhxpYohaeneMI07hIR6s9NUjACk9gxUXu6jYr0t5SFO3v6vlPeOGQUFoSll\nJANu\r\n=nHY9\r\n-----END PGP SIGNATURE-----\r\n",
				"integrity": "sha512-F3smCyyuPHSYt1FQlYMckZGh8GejeAJksyfWAEifu4+gX8Q33sfDwMe0G13sP4IQyQ7ivmQ1lnuMFlRqs+vvBQ==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDZ+ggUQAdhAxydmbx4/nwTToUv9AnF/uhM68xGRP3hdwIgfXpPM5S36QDofxMmhBU1LgR3kdehE9JQvA6tBv/si64="
					}
				]
			},
			"maintainers": [
				{
					"name": "fsy0718",
					"email": "fsy0718@gmail.com"
				},
				{
					"name": "jperation",
					"email": "jfkued@jperation"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-calc_6.0.1_1524311697260_0.5417002509191873"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2018-04-21T11:54:57.171Z",
		"6.0.1": "2018-04-21T11:54:58.798Z",
		"modified": "2022-06-12T20:14:23.004Z"
	},
	"maintainers": [
		{
			"name": "fsy0718",
			"email": "fsy0718@gmail.com"
		},
		{
			"name": "jperation",
			"email": "jfkued@jperation"
		}
	],
	"description": "PostCSS plugin to reduce calc()",
	"homepage": "https://github.com/postcss/postcss-calc#readme",
	"keywords": [
		"css",
		"postcss",
		"postcss-plugin",
		"calculation",
		"calc"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/postcss/postcss-calc.git"
	},
	"author": {
		"name": "Maxime Thirouin"
	},
	"bugs": {
		"url": "https://github.com/postcss/postcss-calc/issues"
	},
	"license": "MIT",
	"readme": "# postcss-calc [![Build Status](https://travis-ci.org/postcss/postcss-calc.png)](https://travis-ci.org/postcss/postcss-calc)\n\n> [PostCSS](https://github.com/postcss/postcss) plugin to reduce `calc()`.\n\nThis plugin reduce `calc()` references whenever it's possible.\nThis can be particularly useful with the [postcss-custom-properties](https://github.com/postcss/postcss-custom-properties) plugin.\n\n**Note:** When multiple units are mixed together in the same expression, the `calc()` statement is left as is, to fallback to the [w3c calc() feature](http://www.w3.org/TR/css3-values/#calc).\n\n## Installation\n\n```console\n$ npm install postcss-calc\n```\n\n## Usage\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar calc = require(\"postcss-calc\")\n\n// css to be processed\nvar css = fs.readFileSync(\"input.css\", \"utf8\")\n\n// process css\nvar output = postcss()\n  .use(calc())\n  .process(css)\n  .css\n```\n\n**Example** (with [postcss-custom-properties](https://github.com/postcss/postcss-custom-properties) enabled as well):\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar customProperties = require(\"postcss-custom-properties\")\nvar calc = require(\"postcss-calc\")\n\n// css to be processed\nvar css = fs.readFileSync(\"input.css\", \"utf8\")\n\n// process css\nvar output = postcss()\n  .use(customProperties())\n  .use(calc())\n  .process(css)\n  .css\n```\n\nUsing this `input.css`:\n\n```css\n:root {\n  --main-font-size: 16px;\n}\n\nbody {\n  font-size: var(--main-font-size);\n}\n\nh1 {\n  font-size: calc(var(--main-font-size) * 2);\n  height: calc(100px - 2em);\n  margin-bottom: calc(\n      var(--main-font-size)\n      * 1.5\n    )\n}\n```\n\nyou will get:\n\n```css\nbody {\n  font-size: 16px\n}\n\nh1 {\n  font-size: 32px;\n  height: calc(100px - 2em);\n  margin-bottom: 24px\n}\n```\n\nCheckout [tests](test) for more examples.\n\n### Options\n\n#### `precision` (default: `5`)\n\nAllow you to define the precision for decimal numbers.\n\n```js\nvar out = postcss()\n  .use(calc({precision: 10}))\n  .process(css)\n  .css\n```\n\n#### `preserve` (default: `false`)\n\nAllow you to preserve calc() usage in output so browsers will handle decimal precision themselves.\n\n```js\nvar out = postcss()\n  .use(calc({preserve: true}))\n  .process(css)\n  .css\n```\n\n#### `warnWhenCannotResolve` (default: `false`)\n\nAdds warnings when calc() are not reduced to a single value.\n\n```js\nvar out = postcss()\n  .use(calc({warnWhenCannotResolve: true}))\n  .process(css)\n  .css\n```\n\n#### `mediaQueries` (default: `false`)\n\nAllows calc() usage as part of media query declarations.\n\n```js\nvar out = postcss()\n  .use(calc({mediaQueries: true}))\n  .process(css)\n  .css\n```\n\n#### `selectors` (default: `false`)\n\nAllows calc() usage as part of selectors.\n\n```js\nvar out = postcss()\n  .use(calc({selectors: true}))\n  .process(css)\n  .css\n```\n\nExample:\n\n```css\ndiv[data-size=\"calc(3*3)\"] {\n  width: 100px;\n}\n```\n\n---\n\n## Contributing\n\nWork on a branch, install dev-dependencies, respect coding style & run tests before submitting a bug fix or a feature.\n\n```console\n$ git clone https://github.com/postcss/postcss-calc.git\n$ git checkout -b patch-1\n$ npm install\n$ npm test\n```\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
	"readmeFilename": "README.md",
	"_downloads": 8
}
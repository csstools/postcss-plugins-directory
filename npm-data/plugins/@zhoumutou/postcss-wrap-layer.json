{
	"_id": "@zhoumutou/postcss-wrap-layer",
	"_rev": "2-bed838abdca71a8cef95fa552732cf4c",
	"name": "@zhoumutou/postcss-wrap-layer",
	"dist-tags": {
		"latest": "0.1.1"
	},
	"versions": {
		"0.1.0": {
			"name": "@zhoumutou/postcss-wrap-layer",
			"version": "0.1.0",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"@layer",
				"cascade-layers",
				"wrap"
			],
			"author": {
				"name": "zhoumutou"
			},
			"license": "MIT",
			"_id": "@zhoumutou/postcss-wrap-layer@0.1.0",
			"maintainers": [
				{
					"name": "zhoumutou",
					"email": "zhouguang.xyz@gmail.com"
				}
			],
			"homepage": "https://github.com/zhoumutou/postcss-wrap-layer#readme",
			"bugs": {
				"url": "https://github.com/zhoumutou/postcss-wrap-layer/issues"
			},
			"dist": {
				"shasum": "5f12e79eb57e21038ae10a37c63776aa4ce15b73",
				"tarball": "https://registry.npmjs.org/@zhoumutou/postcss-wrap-layer/-/postcss-wrap-layer-0.1.0.tgz",
				"fileCount": 7,
				"integrity": "sha512-Y5NpWE34yMlIoQx9x9X3Ra1pX2jBDk8IMJSNdgJlUs5WyrqPNeIIjovMFCThMb3rMMVnyZiSZsVCYC/efzm6YQ==",
				"signatures": [
					{
						"sig": "MEYCIQDkAlSJg5kBGmyoupgvS+cBVKjtjx4lOAsC17usSdCRiAIhAKtYBqPVhlf6zUp7SI1ynNCLzk77CYLfNqzsPdM2I8o7",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 28575
			},
			"main": "dist/index.cjs",
			"type": "module",
			"types": "dist/index.d.ts",
			"module": "dist/index.js",
			"engines": {
				"node": ">=22.0.0"
			},
			"gitHead": "06833c9ebbb27d5fae39d27a270f81ff14c78496",
			"scripts": {
				"lint": "eslint . --fix",
				"build": "tsdown",
				"prepare": "husky",
				"typecheck": "tsc --build --noEmit",
				"prepublishOnly": "pnpm build"
			},
			"_npmUser": {
				"name": "zhoumutou",
				"email": "zhouguang.xyz@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/zhoumutou/postcss-wrap-layer.git",
				"type": "git"
			},
			"_npmVersion": "10.9.3",
			"description": "PostCSS plugin that wraps top-level CSS nodes into @layer blocks with rule-based matching, insertion strategies, merging, and virtual (no-path) content support.",
			"directories": {},
			"_nodeVersion": "22.18.0",
			"_hasShrinkwrap": false,
			"devDependencies": {
				"husky": "^9.1.7",
				"eslint": "^9.34.0",
				"tsdown": "^0.14.2",
				"postcss": "^8.5.6",
				"typescript": "~5.8.3",
				"@types/node": "^24.3.0",
				"lint-staged": "^16.1.5",
				"@tsconfig/node22": "^22.0.2",
				"@antfu/eslint-config": "^5.2.1",
				"eslint-plugin-format": "^1.0.1",
				"@typescript-eslint/parser": "^8.41.0",
				"@typescript-eslint/eslint-plugin": "^8.41.0"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-wrap-layer_0.1.0_1756173866999_0.2036926576092859",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.1.1": {
			"name": "@zhoumutou/postcss-wrap-layer",
			"type": "module",
			"version": "0.1.1",
			"description": "PostCSS plugin that wraps top-level CSS nodes into @layer blocks with rule-based matching, insertion strategies, merging, and virtual (no-path) content support.",
			"author": {
				"name": "zhoumutou"
			},
			"license": "MIT",
			"homepage": "https://github.com/zhoumutou/postcss-wrap-layer#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/zhoumutou/postcss-wrap-layer.git"
			},
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"@layer",
				"cascade-layers",
				"wrap"
			],
			"main": "dist/index.cjs",
			"module": "dist/index.js",
			"types": "dist/index.d.ts",
			"engines": {
				"node": ">=22.0.0"
			},
			"scripts": {
				"build": "tsdown",
				"typecheck": "tsc --build --noEmit",
				"lint": "eslint . --fix",
				"prepare": "husky",
				"prepublishOnly": "pnpm build"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"devDependencies": {
				"@antfu/eslint-config": "^5.2.1",
				"@tsconfig/node22": "^22.0.2",
				"@types/node": "^24.3.0",
				"@typescript-eslint/eslint-plugin": "^8.41.0",
				"@typescript-eslint/parser": "^8.41.0",
				"eslint": "^9.34.0",
				"eslint-plugin-format": "^1.0.1",
				"husky": "^9.1.7",
				"lint-staged": "^16.1.5",
				"postcss": "^8.5.6",
				"tsdown": "^0.14.2",
				"typescript": "~5.8.3"
			},
			"_id": "@zhoumutou/postcss-wrap-layer@0.1.1",
			"gitHead": "7c74f7f77f83a98512b7732764171a86d6d6d556",
			"bugs": {
				"url": "https://github.com/zhoumutou/postcss-wrap-layer/issues"
			},
			"_nodeVersion": "22.18.0",
			"_npmVersion": "10.9.3",
			"dist": {
				"integrity": "sha512-sqHUktpP/nFURxcLTV7BZ/tTl6axuPc+pveBQ7Gj8DQUpHMKxkeHSmCkTZNBOuKSGSigdtoPwNeNMAoVGbR3NA==",
				"shasum": "93cc3750c3f8427ba33ed913191b304f3edbca08",
				"tarball": "https://registry.npmjs.org/@zhoumutou/postcss-wrap-layer/-/postcss-wrap-layer-0.1.1.tgz",
				"fileCount": 7,
				"unpackedSize": 28647,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIQC5Kid4P1yXvnsqUCviH4MpwkCnaZwUc4m44okxLrnHnwIgbzyvhl+TedTueGxDYmWvAlFPO2COixGjPfnprehcRV8="
					}
				]
			},
			"_npmUser": {
				"name": "zhoumutou",
				"email": "zhouguang.xyz@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "zhoumutou",
					"email": "zhouguang.xyz@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-wrap-layer_0.1.1_1756175141834_0.6052992223023728"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-08-26T02:04:26.880Z",
		"modified": "2025-08-26T02:25:42.220Z",
		"0.1.0": "2025-08-26T02:04:27.181Z",
		"0.1.1": "2025-08-26T02:25:42.043Z"
	},
	"bugs": {
		"url": "https://github.com/zhoumutou/postcss-wrap-layer/issues"
	},
	"author": {
		"name": "zhoumutou"
	},
	"license": "MIT",
	"homepage": "https://github.com/zhoumutou/postcss-wrap-layer#readme",
	"keywords": [
		"postcss",
		"postcss-plugin",
		"css",
		"@layer",
		"cascade-layers",
		"wrap"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/zhoumutou/postcss-wrap-layer.git"
	},
	"description": "PostCSS plugin that wraps top-level CSS nodes into @layer blocks with rule-based matching, insertion strategies, merging, and virtual (no-path) content support.",
	"maintainers": [
		{
			"name": "zhoumutou",
			"email": "zhouguang.xyz@gmail.com"
		}
	],
	"readme": "# @zhoumutou/postcss-wrap-layer\n\n[![npm version](https://img.shields.io/npm/v/@zhoumutou/postcss-wrap-layer.svg)](https://www.npmjs.com/package/@zhoumutou/postcss-wrap-layer)\n[![weekly downloads](https://img.shields.io/npm/dw/@zhoumutou/postcss-wrap-layer)](https://www.npmjs.com/package/@zhoumutou/postcss-wrap-layer)\n[![license](https://img.shields.io/npm/l/@zhoumutou/postcss-wrap-layer)](https://github.com/zhoumutou/postcss-wrap-layer/blob/main/LICENSE)\n[![unpacked size](https://img.shields.io/npm/unpacked-size/%40zhoumutou%2Fpostcss-wrap-layer)](https://www.npmjs.com/package/@zhoumutou/postcss-wrap-layer)\n\n将顶层“裸露”的 CSS 节点按规则自动包裹进指定的 `@layer`。支持基于规则的匹配、灵活的插入位置、可选与现有同名 layer 合并以及幂等安全。\n\n[English](./README.md) | 中文\n\n## 功能特性\n\n- 声明式规则：按文件路径或虚拟内容映射到 layer 名称\n- 灵活插入位置：`end`、`start`、`after-ignored`、`preserve`\n- 可选与已存在的同名顶层 `@layer` 合并（合并时忽略插入位置，直接追加）\n- 若文件已完全包裹则跳过，幂等安全\n- 支持无真实路径（虚拟 / 内存）CSS，通过 `contentTest` 判断\n- 正则安全处理（剥离 `g` / `y`）与 TypeScript 友好\n\n## 安装\n\n```bash\nnpm i -D @zhoumutou/postcss-wrap-layer\n# 或\npnpm add -D @zhoumutou/postcss-wrap-layer\n# 或\nyarn add -D @zhoumutou/postcss-wrap-layer\n```\n\n## 快速开始\n\n```ts\n// postcss.config.ts\nimport PostcssWrapLayer from '@zhoumutou/postcss-wrap-layer'\n\nexport default {\n  plugins: [\n    PostcssWrapLayer({\n      rules: [\n        {\n          pattern: /components\\.css$/,\n          layerName: 'components',\n          insertPosition: 'start',\n        },\n      ],\n    }),\n  ],\n}\n```\n\n输入 (`components.css`):\n\n```css\n.button { padding: 4px }\n```\n\n输出:\n\n```css\n@layer components {\n  .button { padding: 4px }\n}\n```\n\n## 配置说明\n\n```ts\n/**\n * 插件选项（均为可选）。\n */\ninterface PluginOptions {\n  /**\n   * 有序的包裹规则；为空或缺省则不处理。\n   * 默认: []\n   */\n  rules?: Rule[]\n  /**\n   * 完整替换的忽略 at-rule 名称列表。\n   * 这些名称的 at-rule 会保持在顶层，也用作插入定位锚点。\n   * 默认: ['charset','import','layer']\n   */\n  ignoreNames?: string[]\n  /**\n   * 多规则匹配策略：\n   *  - 'first': 仅使用第一个命中的规则\n   *  - 'warn' : 警告一次后与 first 相同\n   *  - 'all'  : 顺序全部应用；每个规则只看到“剩余”裸节点\n   * 默认: 'first'\n   */\n  multiMatch?: 'first' | 'warn' | 'all'\n  /**\n   * 当满足：\n   *  - 没有剩余裸节点\n   *  - 且存在同名顶层 @layer\n   * 时跳过包裹。\n   * 默认: true\n   */\n  skipIfAlreadyWrapped?: boolean\n  /**\n   * 若为 true，若已存在同名顶层 @layer，则直接把裸节点追加进去，\n   * 而不是创建新块（有助于保持原级联锚点）。\n   * 发生合并时会忽略 insertPosition（总是追加到该 layer 末尾）。\n   * 默认: true\n   */\n  mergeSameLayer?: boolean\n}\n\n/**\n * 单条包裹规则。\n */\ninterface Rule {\n  /**\n   * 仅在存在真实文件路径时测试的正则。\n   * 内部会移除状态标志 g / y。\n   */\n  pattern: RegExp\n  /**\n   * 目标（或合并目标）@layer 名称。必须非空且不含换行或分号。\n   */\n  layerName: string\n  /**\n   * 新建 layer 的插入方式：\n   *  - 'end' (默认): 追加在末尾\n   *  - 'start'      : 紧随开头连续的 @charset/@import\n   *  - 'after-ignored': 在最后一个 ignoreNames 列表内的 at-rule 之后\n   *  - 'preserve'   : 放在被采集裸节点中最早出现的位置\n   * 若发生合并 (mergeSameLayer) 则此值被忽略。\n   */\n  insertPosition?: 'end' | 'start' | 'after-ignored' | 'preserve'\n  /**\n   * 仅在无真实文件路径（虚拟 / 内存 CSS）时调用的判定函数。\n   * 接收完整 CSS 文本（必要时序列化一次）。\n   */\n  contentTest?: (css: string) => boolean\n}\n```\n\n示例：\n\n```ts\n// postcss.config.ts\nimport PostcssWrapLayer from '@zhoumutou/postcss-wrap-layer'\n\nexport default {\n  plugins: [\n    PostcssWrapLayer({\n      multiMatch: 'all',\n      rules: [\n        { pattern: /global\\.css$/, layerName: 'base', insertPosition: 'start' },\n        { pattern: /global\\.css$/, layerName: 'components', insertPosition: 'after-ignored' },\n        { pattern: /virtual\\.css$/, layerName: 'runtime', contentTest: css => css.includes('/*runtime*/') },\n      ],\n    })\n  ]\n}\n```\n\n## 工作原理\n\n1. 规范化与校验规则（剥离正则的 `g` / `y` 标志）。\n2. 若无真实路径且存在需要 `contentTest` 的规则，则序列化一次 CSS。\n3. 匹配规则：\n   - 有真实路径 → 用 `pattern` 测试\n   - 无路径 → 使用 `contentTest`\n4. 根据多匹配策略筛选应用的规则。\n5. 针对每条应用的规则：\n   - 收集“裸”节点（顶层，且不在 `ignoreNames` 中）。\n   - 若满足幂等跳过条件则忽略。\n   - 若开启合并且已有同名 layer → 直接追加；否则创建新 layer。\n   - 计算插入位置（`preserve` 使用最早的原始索引；若合并则忽略）。\n   - 将裸节点移动进目标 layer。\n\n裸节点定义：任意顶层非 @rule 节点，或名称不在 `ignoreNames` 列表中的 @rule。\n\n## 使用提示\n\n- 使用 `preserve` 保持新 layer 靠近其原始首个节点的位置。\n- `mergeSameLayer=true` 将节点直接追加到已存在的同名 layer，忽略 `insertPosition`。\n- 若希望生成多个同名 block（仍被 CSS 视为一个逻辑 layer），可关闭 `mergeSameLayer`。\n- 想让特定 at-rule（如 `font-face`）保持顶层可加入 `ignoreNames`。\n- 保持 `contentTest` 逻辑轻量；它只在无路径且有需要时执行一次。\n- 虚拟输入无法使用 `pattern`，要依赖 `contentTest`。\n\n## 边界情况\n\n| 情况                                          | 结果                             |\n| --------------------------------------------- | -------------------------------- |\n| 无规则                                        | 不做任何处理                     |\n| layerName 非法（空 / 含换行 / 分号）          | 警告并跳过                       |\n| 已存在同名 layer + mergeSameLayer=true        | 直接追加，忽略插入位置           |\n| 已存在同名 layer + mergeSameLayer=false       | 新建另一个同名 layer 块          |\n| 无裸节点                                      | 不添加任何内容                   |\n| multiMatch='all' 且 insertPosition='preserve' | 每次规则重新计算裸节点与插入位置 |\n\n## 许可证\n\nMIT\n",
	"readmeFilename": "README.zh_CN.md",
	"_downloads": 149
}
{
	"_id": "@outstand/postcss-extend-rule",
	"_rev": "1-beaf436d0dd01c5d377d78006f16f406",
	"name": "@outstand/postcss-extend-rule",
	"dist-tags": {
		"latest": "4.1.2"
	},
	"versions": {
		"4.1.0": {
			"name": "@outstand/postcss-extend-rule",
			"version": "4.1.0",
			"description": "Use the @extend at-rule and functional selectors in CSS",
			"author": {
				"name": "Jonathan Neal",
				"email": "jonathantneal@hotmail.com"
			},
			"license": "CC0-1.0",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/csstools/postcss-extend-rule.git"
			},
			"homepage": "https://github.com/csstools/postcss-extend-rule#readme",
			"bugs": {
				"url": "https://github.com/csstools/postcss-extend-rule/issues"
			},
			"main": "dist/index.cjs",
			"module": "dist/index.mjs",
			"exports": {
				".": {
					"import": "./dist/index.mjs",
					"require": "./dist/index.cjs",
					"default": "./dist/index.mjs"
				}
			},
			"scripts": {
				"build": "rollup --config .rollup.js --silent",
				"clean": "node -e \"fs.rmSync('./dist', { recursive: true, force: true });\"",
				"prepublishOnly": "npm run clean && npm run build && npm run test",
				"test": "npm run lint && npm run test:tape",
				"lint": "eslint src/{*,**/*}.js --cache --ignore-path .gitignore --quiet",
				"test:tape": "postcss-tape"
			},
			"engines": {
				"node": "^12 || ^14 || >=16"
			},
			"dependencies": {
				"postcss-nesting": "^10.1.2"
			},
			"devDependencies": {
				"@babel/core": "^7.17.2",
				"@babel/eslint-parser": "^7.17.0",
				"@babel/preset-env": "^7.16.11",
				"eslint": "^8.8.0",
				"postcss": "^8.4.6",
				"postcss-tape": "^6.0.1",
				"rollup": "^2.67.2",
				"rollup-plugin-babel": "^4.4.0"
			},
			"peerDependencies": {
				"postcss": "^8.4.6"
			},
			"postcssConfig": {
				"config": ".tape.js"
			},
			"eslintConfig": {
				"env": {
					"es6": true,
					"node": true
				},
				"extends": "eslint:recommended",
				"rules": {
					"quotes": [
						"error",
						"single"
					],
					"comma-dangle": [
						"error",
						"always-multiline"
					],
					"semi": [
						"error",
						"always"
					],
					"curly": "error",
					"brace-style": "error",
					"indent": [
						"error",
						"tab",
						{
							"SwitchCase": 1
						}
					],
					"radix": "error"
				},
				"parserOptions": {
					"ecmaVersion": 2020,
					"sourceType": "module"
				},
				"root": true
			},
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"extend",
				"matched",
				"matches",
				"match",
				"selectors",
				"subclassing",
				"subclasses",
				"subclass",
				"styling",
				"styles",
				"style",
				"placeholder",
				"placehold",
				"selectors",
				"selector",
				"chaining"
			],
			"gitHead": "de2c5e02af2d502d3c6ce4dc3ad49abf1f73853b",
			"_id": "@outstand/postcss-extend-rule@4.1.0",
			"_nodeVersion": "16.15.1",
			"_npmVersion": "8.11.0",
			"dist": {
				"integrity": "sha512-AL7oZPxXyAmr6aeu/H0zwxWG0YRlkurLhqDIRF8fMfWL5pfzhlckmOjh9ccoAtEcZ+/2Wd+1HZU4vwVrwPqKkw==",
				"shasum": "684771bf4380425ba0e5521ac048258751f68135",
				"tarball": "https://registry.npmjs.org/@outstand/postcss-extend-rule/-/postcss-extend-rule-4.1.0.tgz",
				"fileCount": 6,
				"unpackedSize": 25783,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDfdFXt2dRC7RYPZcmvbK36KxCdpKpq8vdSOR9c5pYosQIhAJHy1OkN2EwnBrzKgH79iGdIJFHu+4+hpT/RO9aex+Nc"
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPJiUACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr+oA//SW13euCS90ov/cbkq3zmnGy+leURPJm6FuN9NV5CoWM6f6zr\r\nMYI7qEDvHWR1coaS9SZ/Z3KxCYJG0VfYXHSFAj5EMuv8EaL+Pn5dfAPyKXtI\r\nVHNNN+Hbro9BqtjOuVw3jd0Kv2uvAvqxwHBW5G+e0PaeeNPyreslqrSwpP74\r\ncFOU6vJVpgFkXZYdgjP7CdsGxqO1zKjS3oyzPpfnfFDhds2FV2KkIfZbO7Xr\r\ntS2VsC+pMwlKL+MxOoo8dpiOOWIljscGWfBA6Ea8owy+RGO/i1HcgpFNmHBI\r\njyZ5W1gwJPGzv1k/42tUiytD/wGpqj/XBOtWh/0rNsULftqKmkDSH1axKj+w\r\ndVsuVO0XRHe28jecXL3tulFYOb7We74gjV/yQbPJnCollOpCoRZ7Lm8RLDRZ\r\n7E2Zui4DtJC15ERmhnKn/f0xjcWhiKlGstetGfUHMSvXNOrHTPkl5X0TbNfC\r\nnLN5ZUU56YHnEwQswuyDV1O+OY3lGnjpVsDxPchZrthxWo+kx0eOCQcr6AnU\r\nnDIk6Wbz3CWcr+DeqkTCGcmPjRWCguJSjhTTUfil8tpkgClWLy6lyVlVwY6/\r\n7AtU6ZuYbj/7OrOlqsbuU+Ea8HeKFfIyGZjedx8HnMVzmegaFPlyHQihgTEx\r\nrQ2VdL10GlGGIRfty9A5F//M8D5VuTy+JCg=\r\n=8pRQ\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "ryansch",
				"email": "ryan@ryanschlesinger.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "ryansch",
					"email": "ryan@ryanschlesinger.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-extend-rule_4.1.0_1664915604639_0.9196315326542035"
			},
			"_hasShrinkwrap": false
		},
		"4.1.2": {
			"name": "@outstand/postcss-extend-rule",
			"version": "4.1.2",
			"description": "Use the @extend at-rule and functional selectors in CSS",
			"author": {
				"name": "Jonathan Neal",
				"email": "jonathantneal@hotmail.com"
			},
			"license": "CC0-1.0",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/csstools/postcss-extend-rule.git"
			},
			"homepage": "https://github.com/csstools/postcss-extend-rule#readme",
			"bugs": {
				"url": "https://github.com/csstools/postcss-extend-rule/issues"
			},
			"main": "dist/index.cjs",
			"module": "dist/index.mjs",
			"exports": {
				".": {
					"import": "./dist/index.mjs",
					"require": "./dist/index.cjs",
					"default": "./dist/index.mjs"
				}
			},
			"scripts": {
				"build": "rollup --config .rollup.js --silent",
				"clean": "node -e \"fs.rmSync('./dist', { recursive: true, force: true });\"",
				"prepublishOnly": "npm run clean && npm run build && npm run test",
				"test": "npm run lint && npm run test:tape",
				"lint": "eslint src/{*,**/*}.js --cache --ignore-path .gitignore --quiet",
				"test:tape": "postcss-tape"
			},
			"engines": {
				"node": "^12 || ^14 || >=16"
			},
			"dependencies": {
				"postcss-nesting": "^10.1.2"
			},
			"devDependencies": {
				"@babel/core": "^7.17.2",
				"@babel/eslint-parser": "^7.17.0",
				"@babel/preset-env": "^7.16.11",
				"eslint": "^8.8.0",
				"postcss": "^8.4.17",
				"postcss-tape": "^6.0.1",
				"rollup": "^2.67.2",
				"rollup-plugin-babel": "^4.4.0"
			},
			"peerDependencies": {
				"postcss": "^8.4.6"
			},
			"postcssConfig": {
				"config": ".tape.js"
			},
			"eslintConfig": {
				"env": {
					"es6": true,
					"node": true
				},
				"extends": "eslint:recommended",
				"rules": {
					"quotes": [
						"error",
						"single"
					],
					"comma-dangle": [
						"error",
						"always-multiline"
					],
					"semi": [
						"error",
						"always"
					],
					"curly": "error",
					"brace-style": "error",
					"indent": [
						"error",
						"tab",
						{
							"SwitchCase": 1
						}
					],
					"radix": "error"
				},
				"parserOptions": {
					"ecmaVersion": 2020,
					"sourceType": "module"
				},
				"root": true
			},
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"extend",
				"matched",
				"matches",
				"match",
				"selectors",
				"subclassing",
				"subclasses",
				"subclass",
				"styling",
				"styles",
				"style",
				"placeholder",
				"placehold",
				"selectors",
				"selector",
				"chaining"
			],
			"gitHead": "0ec0bbba769ca5e0193764290351bc358bf24b0c",
			"_id": "@outstand/postcss-extend-rule@4.1.2",
			"_nodeVersion": "16.15.1",
			"_npmVersion": "8.11.0",
			"dist": {
				"integrity": "sha512-CV8dLxhVn2e+dg4CXZ6DuTjAackVrXWxJ3XJaLtth5P4ITP+auAx6ruxVXgjjbSSlSSGxCKg8z0USMetHnpAvA==",
				"shasum": "6be020837f7733d89a1aaca7f38531cd67d4f376",
				"tarball": "https://registry.npmjs.org/@outstand/postcss-extend-rule/-/postcss-extend-rule-4.1.2.tgz",
				"fileCount": 6,
				"unpackedSize": 26142,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIA7vr83SSyv/5Su/YtWKyJCIZ1OQ7MB6X2XvtQiXk4HNAiEAqkMNdFxVoceOPwJVvnpa9Oet9eS60nT4IZrJz/jS3DE="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPxNrACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp0ww/7BYyIe9Oxdrx08q4wjfAqrcZTAz/W5vdVlZ0VH60Jw/eks/sG\r\nFWI999xtI8GC5tn2z3fDqkwlrUguhERF5QZUorA6gB8VGUJPlfjElqHZtPq9\r\nRzZ22eoagaUG1MIrksmtFBuSzjikDcwZ6VS29yAUNXC/5l4jvRbO/AIdQORJ\r\notvVd2KT/8sSYnVbcj+ELFgG8dgFruL6flncIab7V6r0oMLLIJ0RVXsMu+Mn\r\nIDAUUKXzow/ziErWkNjCg/0Iyncj18Uuuc47KDKrUb8NlV/SfVeftINBX5LT\r\naDwWHMQAgrBJZkNc7fWbbI1Hnbdvq3ZxnSNhgMo5lnVSCBJGGrWMp19oCAL+\r\nvHJoZxysd+Jx4YuZuP1iN6DsfEj6Z7FtDnwqFAt8aNNMQP7MPTE4wVLCMOG+\r\nzS0Pr931RBeMcWZsV9T5DGsp7XrSSYSjUOC2Ep+G540RvSmGE42peL94TRWh\r\nwP45Yp4PQa25SSDEHQkttvnIoUFIxNtmuJYTb9xY7QPbenHkmvtEGE3zYXM9\r\nYqAV3s6Z1KJppY8CazCkG1LDUpfxoQTmUqBad/yMe0V5/sOmldiI5TiLP+kZ\r\nsShae18AhQAWj6WORejCyWUW4M1ZOOodwzbVHSrHNDWTOU9RqUjO9UbBvyep\r\nq74LmrvD5guJGQgibIJYKXcDHvzlQ+TFU54=\r\n=gLRP\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "ryansch",
				"email": "ryan@ryanschlesinger.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "ryansch",
					"email": "ryan@ryanschlesinger.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-extend-rule_4.1.2_1665078122858_0.4396442403244112"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2022-10-04T20:33:24.548Z",
		"4.1.0": "2022-10-04T20:33:24.930Z",
		"modified": "2022-10-06T17:42:03.157Z",
		"4.1.2": "2022-10-06T17:42:03.044Z"
	},
	"maintainers": [
		{
			"name": "ryansch",
			"email": "ryan@ryanschlesinger.com"
		}
	],
	"description": "Use the @extend at-rule and functional selectors in CSS",
	"homepage": "https://github.com/csstools/postcss-extend-rule#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"extend",
		"matched",
		"matches",
		"match",
		"selectors",
		"subclassing",
		"subclasses",
		"subclass",
		"styling",
		"styles",
		"style",
		"placeholder",
		"placehold",
		"selectors",
		"selector",
		"chaining"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/csstools/postcss-extend-rule.git"
	},
	"author": {
		"name": "Jonathan Neal",
		"email": "jonathantneal@hotmail.com"
	},
	"bugs": {
		"url": "https://github.com/csstools/postcss-extend-rule/issues"
	},
	"license": "CC0-1.0",
	"readme": "# PostCSS Extend Rule [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS\" width=\"90\" height=\"90\" align=\"right\">][postcss]\n\n[![NPM Version][npm-img]][npm-url]\n[![test](https://github.com/csstools/postcss-extend-rule/actions/workflows/test.yml/badge.svg)](https://github.com/csstools/postcss-extend-rule/actions/workflows/test.yml)\n[<img alt=\"Discord\" src=\"https://shields.io/badge/Discord-5865F2?logo=discord&logoColor=white\">][discord]\n\n[PostCSS Extend Rule] lets you use the `@extend` at-rule and\n[Functional Selectors] in CSS, following the speculative\n[CSS Extend Rules Specification].\n\n```pcss\n%thick-border {\n  border: thick dotted red;\n}\n\n.serious-modal {\n  font-style: normal;\n  font-weight: bold;\n\n  @media (max-width: 240px) {\n    @extend .modal:hover;\n  }\n}\n\n.modal {\n  @extend %thick-border;\n\n  color: red;\n}\n\n.modal:hover:not(:focus) {\n  outline: none;\n}\n\n/* becomes */\n\n.serious-modal {\n  font-style: normal;\n  font-weight: bold;\n}\n\n@media (max-width: 240px) {\n  .serious-modal:not(:focus) {\n    outline: none;\n  }\n}\n\n.modal {\n  border: thick dotted red;\n  color: red;\n}\n\n.modal:hover:not(:focus) {\n  outline: none;\n}\n```\n\n## Usage\n\nAdd [PostCSS Extend Rule] to your project:\n\n```bash\nnpm install postcss postcss-extend-rule --save-dev\n```\n\nUse **PostCSS Extend Rule** to process your CSS:\n\n```js\nconst postcssExtendRule = require('postcss-extend-rule');\n\npostcssExtendRule.process(YOUR_CSS /*, processOptions, pluginOptions */);\n```\n\nOr use it as a [PostCSS] plugin:\n\n```js\nconst postcss = require('postcss');\nconst postcssExtendRule = require('postcss-extend-rule');\n\npostcss([\n  postcssExtendRule(/* pluginOptions */)\n]).process(YOUR_CSS /*, processOptions */);\n```\n\n**PostCSS Extend Rule** runs in all Node environments, with special instructions for:\n\n| [Node](INSTALL.md#node) | [PostCSS CLI](INSTALL.md#postcss-cli) | [Webpack](INSTALL.md#webpack) | [Create React App](INSTALL.md#create-react-app) | [Gulp](INSTALL.md#gulp) | [Grunt](INSTALL.md#grunt) |\n| --- | --- | --- | --- | --- | --- |\n\n## Options\n\n### name\n\nThe `name` option determines the at-rule name being used to extend selectors.\nBy default, this name is `extend`, meaning `@extend` rules are parsed.\n\n```js\npostcssExtend({ name: 'postcss-extend' })\n```\n\nIf the `name` option were changed to, say, `postcss-extend`, then only\n`@postcss-extend` at-rules would be parsed.\n\n```pcss\nmain {\n  @postcss-extend .some-rule;\n}\n```\n\n### onFunctionalSelector\n\nThe `onFunctionalSelector` option determines how functional selectors should be\nhandled. Its options are:\n\n- `remove` (default) removes any functional selector\n- `ignore` ignores any functional selector and moves on\n- `warn` warns the user whenever it encounters a functional selector\n- `throw` throws an error if ever it encounters a functional selector\n\n```js\npostcssExtend({ onFunctionalSelector: 'remove' /* default */ })\n```\n\n```pcss\n%this-will-be-removed {}\n```\n\n### onRecursiveExtend\n\nThe `onRecursiveExtend` option determines how recursive extend at-rules should\nbe handled. Its options are:\n\n- `remove` (default) removes any recursive extend at-rules\n- `ignore` ignores any recursive extend at-rules and moves on\n- `warn` warns the user whenever it encounters a recursive extend at-rules\n- `throw` throws an error if ever it encounters a recursive extend at-rules\n\n```js\npostcssExtend({ onRecursiveExtend: 'remove' /* default */ })\n```\n\n```pcss\n.this-will-not-extend-itself {\n  @extend .this-will-not-extend-itself;\n}\n```\n\n### onUnusedExtend\n\nThe `onUnusedExtend` option determines how an unused extend at-rule should be\nhandled. Its options are:\n\n- `remove` (default) removes any unused extend at-rule\n- `ignore` ignores any unused extend at-rule and moves on\n- `warn` warns the user whenever it encounters an unused extend at-rule\n- `throw` throws an error if ever it encounters an unused extend at-rule\n\n```js\npostcssExtend({ onUnusedExtend: 'remove' /* default */ })\n```\n\n```pcss\nmain {\n  @extend .this-selector-does-not-exist-and-will-be-removed;\n}\n```\n\n[git-img]: https://img.shields.io/badge/support-chat-blue.svg\n[discord]: https://discord.gg/bUadyRwkJS\n[npm-img]: https://img.shields.io/npm/v/postcss-extend-rule.svg\n[npm-url]: https://www.npmjs.com/package/postcss-extend-rule\n\n[CSS Extend Rules Specification]: https://jonathantneal.github.io/specs/css-extend-rule/\n[Functional Selectors]: https://jonathantneal.github.io/specs/css-extend-rule/#functional-selector\n[PostCSS]: https://github.com/postcss/postcss\n[PostCSS Extend Rule]: https://github.com/csstools/postcss-extend-rule\n",
	"readmeFilename": "README.md",
	"_downloads": 8
}
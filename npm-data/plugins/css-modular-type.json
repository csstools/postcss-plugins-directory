{
	"_id": "css-modular-type",
	"_rev": "5-41156c9d9a5d130e442ebc9e011688f6",
	"name": "css-modular-type",
	"dist-tags": {
		"latest": "0.3.0"
	},
	"versions": {
		"0.2.0": {
			"name": "css-modular-type",
			"version": "0.2.0",
			"description": "A PostCSS and TailwindCSS plugin for generating modular type scales.",
			"type": "commonjs",
			"main": "dist/src/index.js",
			"types": "dist/src/index.d.ts",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"tailwind",
				"tailwindcss-plugin",
				"tailwindcss",
				"type",
				"typography",
				"fluid"
			],
			"author": {
				"name": "Saurabh Charde",
				"email": "saurabhchardereal@gmail.com"
			},
			"license": "MIT",
			"dependencies": {
				"postcss-value-parser": "^4.2.0"
			},
			"devDependencies": {
				"@eslint/js": "^8.38.0",
				"@types/eslint": "^8.37.0",
				"@types/node": "^18.15.11",
				"@typescript-eslint/eslint-plugin": "^5.58.0",
				"@typescript-eslint/parser": "^5.58.0",
				"eslint": "^8.38.0",
				"postcss": "^8.4.21",
				"prettier": "^2.8.7",
				"tailwindcss": "^3.3.1",
				"typescript": "^4.9.5"
			},
			"peerDependencies": {
				"postcss": "^8.4.21"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/saurabhchardereal/postcss-fluid-type.git"
			},
			"prettier": {
				"printWidth": 80
			},
			"scripts": {
				"build": "rm -rf ./dist && tsc",
				"format": "prettier --write .",
				"lint": "eslint . && prettier --check .",
				"test": "rm -rf ./dist/test && tsc && node ./dist/test/index.test.js"
			},
			"bugs": {
				"url": "https://github.com/saurabhchardereal/postcss-fluid-type/issues"
			},
			"homepage": "https://github.com/saurabhchardereal/postcss-fluid-type#readme",
			"_id": "css-modular-type@0.2.0",
			"_integrity": "sha512-kPZICQUX+URyzPIJ2ZYXNQBnESMRQ+4KMqF+gAV0/mVg3PCPScl+uhgwfYWnSd7zinQcJRIh11JXenpdmJpSkA==",
			"_resolved": "/tmp/0c630897024008dd2ee5118fb76973de/css-modular-type-0.2.0.tgz",
			"_from": "file:css-modular-type-0.2.0.tgz",
			"_nodeVersion": "18.15.0",
			"_npmVersion": "9.5.0",
			"dist": {
				"integrity": "sha512-kPZICQUX+URyzPIJ2ZYXNQBnESMRQ+4KMqF+gAV0/mVg3PCPScl+uhgwfYWnSd7zinQcJRIh11JXenpdmJpSkA==",
				"shasum": "85db9611093ff0eb8f73b3e14c03b12e1fe68d34",
				"tarball": "https://registry.npmjs.org/css-modular-type/-/css-modular-type-0.2.0.tgz",
				"fileCount": 15,
				"unpackedSize": 26039,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDRE96Rhgp7QD5bVghk8BIWysql0t+OOBZ+OpTNPoAcpwIgV3qiYvw98WHafcN3AD7DEIHHQNJ+4FQfAfFoj30OnlE="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkR+RWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmos4BAAgIFT4i9OtYNg2QBTeGuZ/NgskjQ27qrXxla5VI3unCc8MJyt\r\nbGglmcksp05dgZQr76p0+B+KufgigSOFTCpRfMo+4IaGHoTEA4NXI6hVrd1d\r\n/nGNXINJqF2iTOUn3d/P4WbrPp7ZwVeCWeIsGqXLc6eqIPMk1FTqnpZtJgNk\r\naco+crKo+2YyYAquUdZZBUaT/lwSaJNcdbW6CRikgqOGgDq6l2je0DTJtvgo\r\ngQxZvhPbMRBvWxdcuPPRTXzg7g0VWAhXRXbru5L11L50RooVgCXVhHAAyWWK\r\nzbVIx50819yMOyq6nl6nUTgcVUcKiXuNIvm0bjMpQ6A+3AAw9pQ3M8lPvhfs\r\n19ZUQuoCOACvj1Lp7arl/n3HTNQhXkfManZqFKmD2AiACoZ3gjulAhrvLWOF\r\nFxmbZGOuqIvDp2yh1cfHWLROk71IvtpAaXBUlmy5hOASb7qo09lj3q0jrRxv\r\nC3SGw5wYQbaX9+u6Y2Lm4h1KJ+V4jD/VEVQe4vkI1mnU9bayK9F+uwhdKaJu\r\ns7+vw+Ee8ICRRIqrYQ0/DOc1C3CAMzdZQpY4c3GDuvzSRMjQp8a32oMfqATT\r\nraUPjQev+7ntX7G6fJ0OjvNi1jDA7gN+URzzK59HI1UISxo7FDdOHPMjir6N\r\n3iCy5TbkaPWFcbmPWmMAh1g5abWhwcG0H+M=\r\n=Z97b\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "saurabhcharde",
				"email": "saurabhchardereal@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "saurabhcharde",
					"email": "saurabhchardereal@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/css-modular-type_0.2.0_1682433110655_0.6905638153219793"
			},
			"_hasShrinkwrap": false
		},
		"0.2.1": {
			"name": "css-modular-type",
			"version": "0.2.1",
			"description": "A PostCSS and TailwindCSS plugin for generating modular type scales.",
			"type": "commonjs",
			"main": "postcss.js",
			"types": "dist/src/index.d.ts",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"tailwind",
				"tailwindcss-plugin",
				"tailwindcss",
				"type",
				"typography",
				"fluid"
			],
			"author": {
				"name": "Saurabh Charde",
				"email": "saurabhchardereal@gmail.com"
			},
			"license": "MIT",
			"dependencies": {
				"postcss-value-parser": "^4.2.0"
			},
			"devDependencies": {
				"@eslint/js": "^8.38.0",
				"@types/eslint": "^8.37.0",
				"@types/node": "^18.15.11",
				"@typescript-eslint/eslint-plugin": "^5.58.0",
				"@typescript-eslint/parser": "^5.58.0",
				"eslint": "^8.38.0",
				"postcss": "^8.4.21",
				"prettier": "^2.8.7",
				"tailwindcss": "^3.3.1",
				"typescript": "^4.9.5"
			},
			"peerDependencies": {
				"postcss": "^8.4.21"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/saurabhchardereal/postcss-fluid-type.git"
			},
			"prettier": {
				"printWidth": 80
			},
			"scripts": {
				"build": "rm -rf ./dist && tsc",
				"format": "prettier --write .",
				"lint": "eslint . && prettier --check .",
				"test": "rm -rf ./dist/test && tsc && node ./dist/test/index.test.js"
			},
			"bugs": {
				"url": "https://github.com/saurabhchardereal/postcss-fluid-type/issues"
			},
			"homepage": "https://github.com/saurabhchardereal/postcss-fluid-type#readme",
			"_id": "css-modular-type@0.2.1",
			"_integrity": "sha512-EdYM553b1Qiq9j0fYKHMglpn5h9QRljZ/q4OfTceCuXAgWo6sEFhRtYnCuYksn2wft0GTyzEsbLLSeau/tqIrw==",
			"_resolved": "/tmp/51698b3784c96ad01b78f6d3add1f93d/css-modular-type-0.2.1.tgz",
			"_from": "file:css-modular-type-0.2.1.tgz",
			"_nodeVersion": "18.15.0",
			"_npmVersion": "9.5.0",
			"dist": {
				"integrity": "sha512-EdYM553b1Qiq9j0fYKHMglpn5h9QRljZ/q4OfTceCuXAgWo6sEFhRtYnCuYksn2wft0GTyzEsbLLSeau/tqIrw==",
				"shasum": "c81f744eb56787741f8656ed2bb5804c6d4e171c",
				"tarball": "https://registry.npmjs.org/css-modular-type/-/css-modular-type-0.2.1.tgz",
				"fileCount": 17,
				"unpackedSize": 26172,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIArYDllYxheTDA2MyfrYB9+7nDJUKusSgtNnMcIHuNflAiBQvOJLq9chneyL9OQrauTteSQNONHVzNquKtCLJslUnw=="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkR+mJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmognxAAgmrRWVzx34aT+F6nMzafFhXbIgh9Q1f8GeqQo+0bc1Njmma3\r\nX3rH5UI6Izf53FBe4Idy8z+3YDAU7QwR6wrOmOfjEyGRIEFrsz8kgG2bbPea\r\n2jEkdWVjrPHycfql2n4+w1maHxlpS3Nl2mLruj1SrmVTIPt7iJ3mTNiYmEt3\r\no1s7uynvlpfN1HlMe6JGpb37st9qbwhc8nk50CwlGCzSSfnZZm+gu0L1+MTf\r\nnlaPyOpBahL2iqaBIXX4NLci+e4bxbGg/Z+BWtf9tfdK7FM5b2edjZRxGf1q\r\noeh6pabCEK14m5KQnm94uSi8/nQZ/12zPex8Edl/e7DAJIuna0hViQtKbLQp\r\nqNNz6F+k7f+4QpRdDbUoR0krF/m4hnOdu7Rfsjm353pJ80rrsLTLEQ+GkI2I\r\n+ZXSKZBQWIIIHLfP4Lkg6kC7Hw+j+GMRAPlOU05vq1e1JAH2Lz8liYu6CGJw\r\ndSpIpU/If3OEbta+12/PVUkjMcrGxq7LCPxPhDQyN5RIHfwAW2ztgP0YbhS3\r\nWdj19VH81vJO9uZaKCrpDWalTf3M4scCl4OgIJRlA4lTiEFBpCk35ZPWAlK2\r\nJxorkudnGlVmP/9Psq+s/m6WmguUcAVGVOukqmj785eSlAwzB0H1XeR4BEQU\r\nvrLx7BvCQpZuAbNuHkLe92Dn05jfhwdLyWA=\r\n=kjew\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "saurabhcharde",
				"email": "saurabhchardereal@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "saurabhcharde",
					"email": "saurabhchardereal@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/css-modular-type_0.2.1_1682434441691_0.6765474799236817"
			},
			"_hasShrinkwrap": false
		},
		"0.2.2": {
			"name": "css-modular-type",
			"version": "0.2.2",
			"description": "A PostCSS and TailwindCSS plugin for generating modular type scales.",
			"type": "commonjs",
			"main": "postcss.js",
			"types": "postcss.d.ts",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"tailwind",
				"tailwindcss-plugin",
				"tailwindcss",
				"type",
				"typography",
				"fluid"
			],
			"author": {
				"name": "Saurabh Charde",
				"email": "saurabhchardereal@gmail.com"
			},
			"license": "MIT",
			"dependencies": {
				"postcss-value-parser": "^4.2.0"
			},
			"devDependencies": {
				"@eslint/js": "^8.38.0",
				"@types/eslint": "^8.37.0",
				"@types/node": "^18.15.11",
				"@typescript-eslint/eslint-plugin": "^5.58.0",
				"@typescript-eslint/parser": "^5.58.0",
				"eslint": "^8.38.0",
				"postcss": "^8.4.21",
				"prettier": "^2.8.7",
				"tailwindcss": "^3.3.1",
				"typescript": "^4.9.5"
			},
			"peerDependencies": {
				"postcss": "^8.4.21"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/saurabhchardereal/postcss-fluid-type.git"
			},
			"prettier": {
				"printWidth": 80
			},
			"scripts": {
				"build": "rm -rf ./dist && tsc",
				"format": "prettier --write .",
				"lint": "eslint . && prettier --check .",
				"test": "rm -rf ./dist/test && tsc && node ./dist/test/index.test.js"
			},
			"bugs": {
				"url": "https://github.com/saurabhchardereal/postcss-fluid-type/issues"
			},
			"homepage": "https://github.com/saurabhchardereal/postcss-fluid-type#readme",
			"_id": "css-modular-type@0.2.2",
			"_integrity": "sha512-c9+xUUiWVoZCdaAwINpgPx+6GpOkEomY3GvjeHcVfY7/YB2laqxoxZFeLeSb3NH6nW+9nDV1jbM4lOvJP4Trbw==",
			"_resolved": "/tmp/1fef4116896239ef4da81fb02465e83e/css-modular-type-0.2.2.tgz",
			"_from": "file:css-modular-type-0.2.2.tgz",
			"_nodeVersion": "18.16.0",
			"_npmVersion": "9.5.1",
			"dist": {
				"integrity": "sha512-c9+xUUiWVoZCdaAwINpgPx+6GpOkEomY3GvjeHcVfY7/YB2laqxoxZFeLeSb3NH6nW+9nDV1jbM4lOvJP4Trbw==",
				"shasum": "bdfa804f7a50d31a61950f4d527c38bae702096b",
				"tarball": "https://registry.npmjs.org/css-modular-type/-/css-modular-type-0.2.2.tgz",
				"fileCount": 15,
				"unpackedSize": 25364,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIFWuPwjTyxfO06T4ZJ1BDukhdZqFjLrZdMFvKvNZ3yGHAiBYvwBq/Ch7rKHBPtzH2XlOrRs7DhOSjztqA371cKAGng=="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkSpPuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmooXQ//UiCoG5mErJ3PZLmsSnup4U9o68N4Ts39HfmPQTiXJiB7jBGP\r\nYDXfr+ymd29f4k3X9DCgmINjjgX4TtECTivz3LLAKkr4o3qgarEd7u/Ox5Xs\r\n8E00S9Xowq1MCoe3lA7VACCqW5FZGAqD+YePqzOLfzpWkRlNYzFLxfmicdC3\r\nO9/RIuWk8vp2eouQYACtS55pUlSNIk3Z/4e29Hbi1MjAl0SoSzHL4LI1h7H1\r\nmUQOA/+0vwAUyCIgVQ/LvFCJfaKtz7L6dUrJvMjKY/q9YAjUyJOOhIkWpjbi\r\np8VwXzqcq6OtT71Navzo6UGx31kVh6gE6BFVSRnrdqT9blPERgU2OjAwCAEM\r\newZfUmo1jlc3UlunZLjyMCUojGWkxdfTWtxG6W49VgeOhCh5ROUB6sncCBdL\r\nnBqKodwD7Gx86RaHIonf/JWEnrQIe8V+oYQCBafpx0ZjNIIqn7uqlvBOvF7x\r\nfxdSlN0ezRbEgL6bOXRTVlJqLfKXDyqpqsGw0ln6HX4KZ5lMy2JqRz30N2JK\r\nPpAqmf62psQbYaWVMEMcraD7HG5N8RzmxFn5MkT2TIwSaIciBG5s/A7MaBBh\r\nN1c0rfR5R9HgYplPI3HVp8y6tnU9RB4vPazFk5A2bqJW1czYgJU5hoC8t/Hr\r\n9W4WQaU5RW2a5glKJd103Oo/BaEzPpPGZuM=\r\n=+ufe\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "saurabhcharde",
				"email": "saurabhchardereal@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "saurabhcharde",
					"email": "saurabhchardereal@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/css-modular-type_0.2.2_1682609134643_0.3804571460817703"
			},
			"_hasShrinkwrap": false
		},
		"0.3.0": {
			"name": "css-modular-type",
			"version": "0.3.0",
			"description": "A PostCSS and TailwindCSS plugin for generating modular type scales.",
			"type": "commonjs",
			"main": "postcss.js",
			"types": "postcss.d.ts",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"tailwind",
				"tailwindcss-plugin",
				"tailwindcss",
				"type",
				"typography",
				"fluid"
			],
			"author": {
				"name": "Saurabh Charde",
				"email": "saurabhchardereal@gmail.com"
			},
			"license": "MIT",
			"dependencies": {
				"postcss-value-parser": "^4.2.0"
			},
			"devDependencies": {
				"@eslint/js": "^8.39.0",
				"@types/eslint": "^8.37.0",
				"@types/node": "^18.16.4",
				"@typescript-eslint/eslint-plugin": "^5.59.2",
				"@typescript-eslint/parser": "^5.59.2",
				"eslint": "^8.39.0",
				"postcss": "^8.4.23",
				"prettier": "^2.8.8",
				"tailwindcss": "^3.3.2",
				"typescript": "^4.9.5"
			},
			"peerDependencies": {
				"postcss": "^8.4.21"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/saurabhchardereal/css-modular-type.git"
			},
			"prettier": {
				"printWidth": 80
			},
			"scripts": {
				"build": "rm -rf ./dist && tsc",
				"format": "prettier --write .",
				"lint": "eslint . && prettier --check .",
				"test": "rm -rf ./dist/test && tsc && node ./dist/test/index.test.js"
			},
			"bugs": {
				"url": "https://github.com/saurabhchardereal/css-modular-type/issues"
			},
			"homepage": "https://github.com/saurabhchardereal/css-modular-type#readme",
			"_id": "css-modular-type@0.3.0",
			"_integrity": "sha512-UX+mqN++EK2Xqi5TQivQPpwYXT/iitOQpzWz9zNAlhGTueUkcCSqFFKfv2eeVk+3YYylkZIGGSSupOayQJGqPw==",
			"_resolved": "/tmp/543431dfe649d88208ae9b0fc5aac1b1/css-modular-type-0.3.0.tgz",
			"_from": "file:css-modular-type-0.3.0.tgz",
			"_nodeVersion": "18.16.0",
			"_npmVersion": "9.5.1",
			"dist": {
				"integrity": "sha512-UX+mqN++EK2Xqi5TQivQPpwYXT/iitOQpzWz9zNAlhGTueUkcCSqFFKfv2eeVk+3YYylkZIGGSSupOayQJGqPw==",
				"shasum": "e6a5598795793eb15bc255353127ae0e7d936a67",
				"tarball": "https://registry.npmjs.org/css-modular-type/-/css-modular-type-0.3.0.tgz",
				"fileCount": 17,
				"unpackedSize": 26068,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQChyTYRjUQXje57+rh6I1MTNV2C55kiTakLYCreUhJAqAIgSjsis9/lpXy70zOa9CElugxOgqDyPQkzZDRFpc58ozs="
					}
				]
			},
			"_npmUser": {
				"name": "saurabhcharde",
				"email": "saurabhchardereal@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "saurabhcharde",
					"email": "saurabhchardereal@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/css-modular-type_0.3.0_1683442657990_0.6536056712209537"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2023-04-25T14:31:50.655Z",
		"0.2.0": "2023-04-25T14:31:50.813Z",
		"modified": "2023-10-16T06:20:34.783Z",
		"0.2.1": "2023-04-25T14:54:01.838Z",
		"0.2.2": "2023-04-27T15:25:34.810Z",
		"0.3.0": "2023-05-07T06:57:38.158Z"
	},
	"maintainers": [
		{
			"email": "saurabh.json@gmail.com",
			"name": "schardev"
		}
	],
	"description": "A PostCSS and TailwindCSS plugin for generating modular type scales.",
	"homepage": "https://github.com/saurabhchardereal/css-modular-type#readme",
	"keywords": [
		"css",
		"postcss",
		"postcss-plugin",
		"tailwind",
		"tailwindcss-plugin",
		"tailwindcss",
		"type",
		"typography",
		"fluid"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/saurabhchardereal/css-modular-type.git"
	},
	"author": {
		"name": "Saurabh Charde",
		"email": "saurabhchardereal@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/saurabhchardereal/css-modular-type/issues"
	},
	"license": "MIT",
	"readme": "<div align=\"center\">\n  <img width=\"135\" height=\"95\" title=\"Philosopher’s stone, logo of PostCSS\" src=\"./assets/postcss-logo.svg\">\n  <img width=\"135\" height=\"95\" title=\"Tailwind Logo\" src=\"./assets/tailwind-logo.svg\">\n  <h1>CSS Modular Type</h1>\n  <a href=\"https://github.com/saurabhchardereal/css-modular-type/actions/workflows/ci.yml\">\n    <img src=\"https://github.com/saurabhchardereal/css-modular-type/actions/workflows/ci.yml/badge.svg\">\n    <img src=\"https://img.shields.io/npm/v/css-modular-type?color=%2330C452&logo=npm&labelColor=%23394048\">\n  </a>\n</div>\n<p align=\"center\">A <a href=\"https://github.com/postcss\">PostCSS</a> and <a href=\"https://github.com/tailwindlabs/tailwindcss\">TailwindCSS</a> plugin to generate modular type scales, inspired by <a href=\"https://www.fluid-type-scale.com/\">Fluid Type Scale Calculator</a>.</p>\n<br/>\n\n> **Warning**\n>\n> Still in beta. Report any issues if found.\n\n## Getting Started\n\n### Installation\n\n```bash\n# npm\nnpm install css-modular-type --save-dev\n\n# or yarn\nyarn add -D css-modular-type\n\n# or pnpm\npnpm add -D css-modular-type\n```\n\n### Usage\n\nYou can add this plugin as a PostCSS plugin inside your `postcss.config.js`:\n\n```javascript\n// postcss.config.js\nconst postcss = require(\"css-modular-type/postcss\");\n// or just `require('css-modular-type)` as `postcss` is the default export;\n// const postcss = require(\"css-modular-type\")\n\nmodule.exports = {\n  plugins: [postcss()],\n};\n```\n\nOr as a TailwindCSS plugin by adding in your `tailwind.config.js` file:\n\n```js\nmodule.exports = {\n  /* ... other tailwind styles ... */\n  theme: {},\n  plugins: [require(\"css-modular-type/tailwind\")],\n};\n```\n\n#### Input\n\n```css\n:root {\n  /* css-modular-type-generate */\n}\n```\n\n#### Output\n\n```css\n:root {\n  --font-size--2: clamp(0.69rem, 0.01vw + 0.69rem, 0.70rem);\n  --font-size--1: clamp(0.83rem, 0.14vw + 0.81rem, 0.94rem);\n  --font-size-0: clamp(1.00rem, 0.33vw + 0.93rem, 1.25rem);\n  --font-size-1: clamp(1.20rem, 0.61vw + 1.08rem, 1.67rem);\n  --font-size-2: clamp(1.44rem, 1.03vw + 1.23rem, 2.22rem);\n  --font-size-3: clamp(1.73rem, 1.62vw + 1.40rem, 2.96rem);\n  --font-size-4: clamp(2.07rem, 2.46vw + 1.58rem, 3.95rem);\n  --font-size-5: clamp(2.49rem, 3.65vw + 1.76rem, 5.26rem)}\n}\n```\n\n## Configuration\n\nThe plugin comes with the following default configuration, but it is possible to customise pretty much all config options to your liking.\n\n### Default configuration\n\n```javascript\nmodule.exports = {\n  plugins: [\n    require(\"css-modular-type\")({\n      minScreenWidth: 320,\n      maxScreenWidth: 1536,\n      minFontSize: 16,\n      maxFontSize: 20,\n      minRatio: 1.2,\n      maxRatio: 1.333,\n      minStep: 2,\n      maxStep: 5,\n      precision: 2,\n      prefix: \"font-size-\" /* set to \"fluid-\" in tailwind plugin */,\n      rootFontSize: 16,\n      suffixType: \"numbered\" /* set to \"values\" in tailwind plugin */,\n      suffixValues: [\"xs\", \"sm\", \"base\", \"md\", \"lg\", \"xl\", \"2xl\", \"3xl\"],\n      unit: \"rem\",\n      replaceInline: false /* postcss plugin only */,\n      generatorDirective: \"css-modular-type-generate\" /* postcss plugin only */,\n    }),\n  ],\n};\n```\n\n### Options\n\n> **Note**\n>\n> Options marked as **`(p)`** only applies to `postcss` plugin.\n\n#### `minScreenWidth`\n\n**Type:** `number`\n\nViewport width of your font's baseline step on minimum (mobile) screens widths.\n\n#### `maxScreenWidth`\n\n**Type:** `number`\n\nViewport width of your font's baseline step on maximum (desktop) screens widths.\n\n#### `minFontSize`\n\n**Type:** `number`\n\nMinimum font size of your baseline step on minimum (mobile) screen widths. The base font size won't go **below** this size when the viewport is at `minScreenWidth` or below.\n\n#### `maxFontSize`\n\n**Type:** `number`\n\nMaximum font size of your baseline step on maximum (desktop) screen widths. The base font size won't go **above** this size when the viewport is at `maxScreenWidth` or above.\n\n#### `minRatio` | `maxRatio`\n\n**Type:** `number`\n\nFont scaling ratio for minimum/maximum screen width. Could be one of the ratio given below or a custom one.\n\n- `1.067` (Minor Second)\n- `1.125` (Major Second)\n- `1.200` (Minor Third)\n- `1.250` (Major Third)\n- `1.333` (Perfect Fourth)\n- `1.414` (Augmented Fourth)\n- `1.500` (Perfect Fifth)\n- `1.618` (Golden Ratio)\n\n#### `minStep`\n\n**Type**: `number`\n\nMinimum steps of font scales to produce (excluding your base font size on minimum screen width). So, if you set `minStep` to `2` and `maxStep` to `5`, it'll generate `8` font scales variables i.e, `minStep` + `maxStep` + `1` (base font size).\n\n#### `maxStep`\n\n**Type**: `number`\n\nMaximum steps of font scales to produce (excluding your base font size on maximum screen width). So, if you set `minStep` to `1` and `maxStep` to `3`, it'll generate `5` font scales variables i.e, `minStep` + `maxStep` + `1` (base font size).\n\n#### `rootFontSize`\n\n**Type:** `number`\n\nRoot font size (default is usually `16px` on all browsers). This is used to calculate `rem` values.\n\n#### `precision`\n\n**Type:** `number`\n\nPrecision of generated font values.\n\n#### `prefix`\n\n**Type:** `string`\n\nPrefix of generated font variables.\n\n#### `suffixType`\n\n**Type:** `\"numbered\"` | `\"values\"`\n\nSuffix to use for generated font scales. Could be one of:\n\n- `numbered`: Generated font variables will have the format of `--${prefix}${number}`. For example, with default configuration, it'll generate variables as: `--font-size--1`, `--font-size-0`, `--font-size-2` etc.\n\n- `values`: Generated font variables will have the format of `--${prefix}${suffixValues[<font-step>]}`. For example, if `suffixType` is set to `values`, it'll generate variables with suffix from `suffixValues` config option, like: `--font-size-sm`, `--font-size-base`, `--font-size-md`, etc.\n\n#### `suffixValues`\n\n**Type:** `string[]` | `(defaultValues: string[]) => string[]`\n\nArray of suffix for each step in your type scale, in ascending order of font size. Will be used if `suffixType` is set to `values`.\n\nAlso takes a function which is called with the default values in case you want to extend the default values array like:\n\n```js\n// postcss.config.js\nmodule.exports = {\n  plugins: [\n    require(\"css-modular-type\")({\n      minStep: 3,\n      maxStep: 6,\n      suffixType: \"values\",\n      suffixValues: (defaultValues) => [\"2xs\", ...values, \"4xl\"],\n    }),\n  ],\n};\n\n// will generate font values as: [\"2xs\", \"xs\", \"sm\", \"base\", \"md\", \"lg\", \"xl\", \"2xl\", \"3xl\", \"4xl\"]\n```\n\n#### `unit`\n\n**Type:** `\"px\"` | `\"rem\"`\n\nUnit of output CSS.\n\n#### `replaceInline` **`(p)`**\n\n**Type:** `boolean`\n\nWhether to replace font variables inline.\n\nAlthough, it is recommended to include all font variables using [`generatorDirective`](#generatordirective) inside your `:root {}` selector so that you can access them globally, however, if you prefer to replace them inline you can do so by enabling `replaceInline`:\n\n```javascript\n// postcss.config.js\nmodule.exports = {\n  plugins: [\n    require(\"css-modular-type\")({\n      replaceInline: true,\n    }),\n  ],\n};\n```\n\n##### Input\n\n```css\n/* other styles */\nbutton {\n  font-size: var(--font-size-1);\n}\n```\n\n##### Output\n\n```css\n/* other styles */\nbutton {\n  font-size: clamp(1.2rem, 0.61vw + 1.08rem, 1.67rem);\n}\n```\n\n#### `generatorDirective` **`(p)`**\n\n**Type:** `string`\n\nGenerator directive string. Adding this string (as a comment) in any CSS selector will replace it with generated font variables. Requires `replaceInline` to be disabled.\n\nIt is recommended that you put this into your `:root {}` CSS selector so that you can access font variables globally.\n\n#### `insertMinMaxFontAsVariables` **`(p)`**\n\n**Type:** `boolean`\n\nWhether to insert min and max font size as variables instead of inserting them directly.\n\n```javascript\n// postcss.config.js\nmodule.exports = {\n  plugins: [\n    require(\"css-modular-type\")({\n      insertMinMaxFontAsVariables: true,\n    }),\n  ],\n};\n```\n\n##### Input\n\n```css\n:root {\n  /* css-modular-type-generate */\n}\n```\n\n##### Output\n\n```css\n:root {\n  --font-size-min--2: 0.69rem;\n  --font-size-max--2: 0.7rem;\n  --font-size--2: clamp(\n    var(--font-size-min--2),\n    0.01vw + 0.69rem,\n    var(--font-size-max--2)\n  );\n  --font-size-min--1: 0.83rem;\n  --font-size-max--1: 0.94rem;\n  --font-size--1: clamp(\n    var(--font-size-min--1),\n    0.14vw + 0.81rem,\n    var(--font-size-max--1)\n  );\n  --font-size-min-0: 1rem;\n  --font-size-max-0: 1.25rem;\n  --font-size-0: clamp(\n    var(--font-size-min-0),\n    0.33vw + 0.93rem,\n    var(--font-size-max-0)\n  );\n  --font-size-min-1: 1.2rem;\n  --font-size-max-1: 1.67rem;\n  --font-size-1: clamp(\n    var(--font-size-min-1),\n    0.61vw + 1.08rem,\n    var(--font-size-max-1)\n  );\n  --font-size-min-2: 1.44rem;\n  --font-size-max-2: 2.22rem;\n  --font-size-2: clamp(\n    var(--font-size-min-2),\n    1.03vw + 1.23rem,\n    var(--font-size-max-2)\n  );\n  --font-size-min-3: 1.73rem;\n  --font-size-max-3: 2.96rem;\n  --font-size-3: clamp(\n    var(--font-size-min-3),\n    1.62vw + 1.4rem,\n    var(--font-size-max-3)\n  );\n  --font-size-min-4: 2.07rem;\n  --font-size-max-4: 3.95rem;\n  --font-size-4: clamp(\n    var(--font-size-min-4),\n    2.46vw + 1.58rem,\n    var(--font-size-max-4)\n  );\n  --font-size-min-5: 2.49rem;\n  --font-size-max-5: 5.26rem;\n  --font-size-5: clamp(\n    var(--font-size-min-5),\n    3.65vw + 1.76rem,\n    var(--font-size-max-5)\n  );\n}\n```\n\n## TailwindCSS Plugin\n\nIn a `tailwind` project adding this plugin will create utility classes for changing font sizes. All options are the same between `postcss` and `tailwindcss` plugin (except for the ones marked as `postcss`-only).\n\nExample usage:\n\n```js\nimport tailwind from \"css-modular-type/tailwind\";\n\nexport default = {\n  theme: {},\n  plugins: [\n    tailwind({\n      suffixType: \"numbered\"\n    }),\n  ],\n};\n```\n\nShows added utilities in auto-completion:\n\n![TailwindCSS Auto-completion Demo](./assets/demo.png)\n\n## Acknowledgments\n\nThis plugin is mostly inspired by [this blog post](https://www.aleksandrhovhannisyan.com/blog/fluid-type-scale-with-css-clamp/) by [Aleksandr Hovhannisyan](https://github.com/AleksandrHovhannisyan).\n\nFurther resources:\n\n- [Generating `font-size` CSS Rules and Creating a Fluid Type Scale](https://moderncss.dev/generating-font-size-css-rules-and-creating-a-fluid-type-scale/)\n- [Flexible typography with CSS locks](https://blog.typekit.com/2016/08/17/flexible-typography-with-css-locks/)\n- [UTOPIA](https://utopia.fyi/)\n",
	"readmeFilename": "README.md",
	"_downloads": 109
}
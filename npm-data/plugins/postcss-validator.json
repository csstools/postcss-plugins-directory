{
	"_id": "postcss-validator",
	"_rev": "3-3431673c98449952a039ca5ca643684c",
	"name": "postcss-validator",
	"description": "PostCSS plugin to check if an input string is valid CSS",
	"dist-tags": {
		"latest": "0.2.0"
	},
	"versions": {
		"0.1.0": {
			"name": "postcss-validator",
			"version": "0.1.0",
			"description": "PostCSS plugin to check if an input string is valid CSS",
			"main": "index.js",
			"scripts": {
				"test": "tape test"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/morishitter/postcss-validator/git"
			},
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"validator"
			],
			"author": {
				"name": "Masaaki Morishita"
			},
			"license": "MIT",
			"devDependencies": {
				"tape": "^4.6.3"
			},
			"dependencies": {
				"chalk": "^1.1.3",
				"known-css-properties": "0.0.7",
				"postcss": "^5.2.16"
			},
			"gitHead": "7ceb4f3a6c924f6e8033c56440bfc60a93169cea",
			"_id": "postcss-validator@0.1.0",
			"_shasum": "0ee92c4e08fd77d4f004d2f897144b3573e60521",
			"_from": ".",
			"_npmVersion": "3.10.8",
			"_nodeVersion": "6.9.0",
			"_npmUser": {
				"name": "morishitter",
				"email": "morishitter@gmail.com"
			},
			"dist": {
				"shasum": "0ee92c4e08fd77d4f004d2f897144b3573e60521",
				"tarball": "https://registry.npmjs.org/postcss-validator/-/postcss-validator-0.1.0.tgz",
				"integrity": "sha512-NACqAWBEM+jFVotsRRcjk/Z+xE7jzvaYUh7fqMMpcgmc7qFu1NyJEC9nTHPE7UT+gnENQMl7Cxr23gHeRkAw8w==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCh4M0loGplOT/YJC0C2W1Kj808mMGMlFUGMdhDrFg7tgIgEVm8qEyhDk0wG4LWTnTR3g58RZxAmqTjYBF78dhk2QA="
					}
				]
			},
			"maintainers": [
				{
					"name": "morishitter",
					"email": "morishitter@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "packages-18-east.internal.npmjs.com",
				"tmp": "tmp/postcss-validator-0.1.0.tgz_1489550098628_0.19414149899967015"
			}
		},
		"0.2.0": {
			"name": "postcss-validator",
			"version": "0.2.0",
			"description": "PostCSS plugin to check if an input string is valid CSS",
			"main": "index.js",
			"scripts": {
				"test": "tape test"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/morishitter/postcss-validator/git"
			},
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"validator"
			],
			"author": {
				"name": "Masaaki Morishita"
			},
			"license": "MIT",
			"devDependencies": {
				"tape": "^4.6.3"
			},
			"dependencies": {
				"chalk": "^1.1.3",
				"known-css-properties": "0.0.7",
				"postcss": "^5.2.16"
			},
			"gitHead": "2fef7284a8ef05d624fa48d4b0b52f86cd8563c3",
			"_id": "postcss-validator@0.2.0",
			"_shasum": "307f346cd707054cd8d55b19b119984efdc3bc54",
			"_from": ".",
			"_npmVersion": "3.10.8",
			"_nodeVersion": "6.9.0",
			"_npmUser": {
				"name": "morishitter",
				"email": "morishitter@gmail.com"
			},
			"dist": {
				"shasum": "307f346cd707054cd8d55b19b119984efdc3bc54",
				"tarball": "https://registry.npmjs.org/postcss-validator/-/postcss-validator-0.2.0.tgz",
				"integrity": "sha512-y0OMrDLsMyacpoUSZwdVs4JGBN/SgBBmlcLuAsw0i8bP6yM6oW2tPy3Eam+ldLgcqgTaa76HoIFEqzaCAT4nXQ==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIEwipGyM8txKPoU+pSwBB2Ir866KyP5DPl3L+qpgeF5eAiEAx5JnOa7nhk/gXhH6eB5NWLRYyLDGOqLUfG4Lf/WJT7o="
					}
				]
			},
			"maintainers": [
				{
					"name": "morishitter",
					"email": "morishitter@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "packages-18-east.internal.npmjs.com",
				"tmp": "tmp/postcss-validator-0.2.0.tgz_1489552411882_0.9611824676394463"
			}
		}
	},
	"readme": "# postcss-validator [![Build Status](https://travis-ci.org/morishitter/postcss-validator.svg)](https://travis-ci.org/morishitter/postcss-validator)\n\nPostCSS is very flexible CSS parser, so we can extend CSS syntax easily.\nBut, The output of PostCSS plugins may not be valid CSS string.\n[postcss-validator](https://github.com/morishitter/postcss-validator) can check if an input string is valid CSS.\n\n## Features\n\npostcss-validator can check to using the followings:\n\n- Nested selector (like Sass)\n- Unknown properties\n\n## Example\n\n### Using nested selectors\n\nInput:\n\n```\n.class {\n  color: tomato;\n\n  .nested {\n    color: lime;\n  }\n}\n```\n\nYield:\n\n```\nCssSyntaxError: postcss-validator: <css input>:2:3: Nested rules [.nested]\n```\n\n### Using unknown property\n\nInput:\n\n```\n.class {\n  margintop: 10px;\n}\n```\n\nYield:\n\n```\nCssSyntaxError: postcss-validator: <css input>:2:3: Unknown property [margintop] is used\n```\n\n## Installation\n\n```shell\n$ npm install postcss-validator\n```\n\n## Usage\n\nSet postcss-validator at the bottom of loaded PostCSS plugins.\n\n### in Node.js\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar customProperties = require(\"postcss-custom-properties\")\nvar nesting = require(\"postcss-nesting\")\nvar validator = require(\"postcss-validator\")\n\n// css to be processed\nvar css = fs.readFileSync(\"input.css\", \"utf8\")\n\n// process css\nvar output = postcss()\n  .use(customProperties())\n  .use(nesting())\n  .use(validator())\n  .process(css)\n  .css\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2017 Masaaki Morishita\n",
	"maintainers": [
		{
			"name": "morishitter",
			"email": "morishitter@gmail.com"
		}
	],
	"time": {
		"modified": "2022-06-24T11:09:49.383Z",
		"created": "2017-03-15T03:55:00.577Z",
		"0.1.0": "2017-03-15T03:55:00.577Z",
		"0.2.0": "2017-03-15T04:33:33.722Z"
	},
	"keywords": [
		"css",
		"postcss",
		"postcss-plugin",
		"validator"
	],
	"repository": {
		"type": "git",
		"url": "git://github.com/morishitter/postcss-validator/git"
	},
	"author": {
		"name": "Masaaki Morishita"
	},
	"license": "MIT",
	"readmeFilename": "readme.md",
	"_downloads": 297
}
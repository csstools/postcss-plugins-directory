{
	"_id": "postcss-pxtr",
	"_rev": "1-76e5702c7500e0484f3cb71b566ab234",
	"name": "postcss-pxtr",
	"dist-tags": {
		"latest": "4.0.1"
	},
	"versions": {
		"4.0.1": {
			"_from": "postcss-pxr",
			"_id": "postcss-pxtr@4.0.1",
			"_inBundle": false,
			"_integrity": "sha1-nGTQ7+SIVHPMHLAwXG/8PrtFsc0=",
			"_location": "/postcss-pxr",
			"_phantomChildren": {
				"escape-string-regexp": "1.0.5",
				"has-ansi": "2.0.0",
				"js-base64": "2.5.1",
				"source-map": "0.5.7"
			},
			"_requested": {
				"type": "tag",
				"registry": true,
				"raw": "postcss-pxr",
				"name": "postcss-pxr",
				"escapedName": "postcss-pxr",
				"rawSpec": "",
				"saveSpec": null,
				"fetchSpec": "latest"
			},
			"_requiredBy": [
				"#USER",
				"/"
			],
			"_resolved": "https://registry.npmjs.org/postcss-pxr/-/postcss-pxr-4.0.1.tgz",
			"_shasum": "9c64d0efe4885473cc1cb0305c6ffc3ebb45b1cd",
			"_spec": "postcss-pxr",
			"_where": "D:\\工作区\\picc",
			"author": {
				"name": "cuth"
			},
			"bugs": {
				"url": "https://github.com/cuth/postcss-pxr/issues"
			},
			"dependencies": {
				"object-assign": "^4.1.0",
				"postcss": "^5.2.10"
			},
			"deprecated": false,
			"description": "A CSS post-processor that converts px to rem.",
			"devDependencies": {
				"jasmine-node": "~1.11.0"
			},
			"homepage": "https://github.com/cuth/postcss-pxr#readme",
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"license": "MIT",
			"main": "index.js",
			"name": "postcss-pxtr",
			"scripts": {
				"test": "jasmine-node spec"
			},
			"version": "4.0.1",
			"_nodeVersion": "13.2.0",
			"_npmVersion": "6.13.1",
			"dist": {
				"integrity": "sha512-FYLDyw/JbTMXhIxmVHWOK6WExB8aviGrh3LReLFb2ZPvoTHI/O+A3bZPm48iZuPLMnQBXD81CXQuf4ofpgGAvw==",
				"shasum": "83efcc3c7f701c061a84ad07b97402a93ad30b98",
				"tarball": "https://registry.npmjs.org/postcss-pxtr/-/postcss-pxtr-4.0.1.tgz",
				"fileCount": 14,
				"unpackedSize": 30614,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd35e8CRA9TVsSAnZWagAA+lcP/1R5hvGCYRNOgOuX/iCv\ngFKMgXFFLnf/J24xw9IFn5jvElNhKIJKnmv3xr03EDiCVk2wc1Lab6AKKuC6\niN1KXsNsnUH50WRx3U13NNs7lTdtyuzJ9aOm+lwAKsD57/LQV9I1E3dsnTsT\niKK+dXErh+YGB17F2CgjazEYJ+L1mbbLUJmrUB1eZmnBf+8wqXt97+Zomne2\nLZVWyBX1Z5ReFET3AopZNo8vnU4DFUYXSDCHjuE4OZ0lz2j7ql94uqGhEXpA\nEFKVAXlQFHTwC2FylWAENHafwAAgdgnFVpIGzPmrp2JDa6eTmtvTWfQyCxvC\nkmNwgaNqUsk1wuNtFzddwutN5RlWSGCu1fObdGbpb2LPz73bs3nbazs4ny9y\nEyBUz16P7W13QMIDUJn/ggFuop7aMWP8SvVlA9xYYlHeQAn9TJez38Gsf961\n0uwyv16b7ZmWGpviG1TiU/8ehyZoisysIX25Is03N+Z8ffha35XYtipTsamC\nbicox1PEDjBoH7u2dEFiV4tvSLetA3JEd4n/Hz58hXL4M1I1ebuflr2DraHh\nyokBn9CexF2ZUsSgwIDMGoXyVT9k8hzsG3MkXJRb7xFJemNxJ7aspYy4Bvp8\n1oFNq8XtwCX5x3bPiX99QllbmnDZ1mRpxXYOha+vUOF7Cul8bAPSTtOoDYJ3\nDV8T\r\n=stl4\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCORxoYx9dlw6yLRWU6m0P4aN7Zm7rkpsIsCNmhJX5Y/AIhAIh5RgIAi1Wej5tTeA3GdySzLWOZj5ejFLR1KRNe1sjn"
					}
				]
			},
			"maintainers": [
				{
					"name": "zjy2931",
					"email": "jianyuzhang2931@gmail.com"
				}
			],
			"_npmUser": {
				"name": "zjy2931",
				"email": "jianyuzhang2931@gmail.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtr_4.0.1_1574934460520_0.23523506316166176"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2019-11-28T09:47:40.520Z",
		"4.0.1": "2019-11-28T09:47:40.644Z",
		"modified": "2022-05-13T06:39:57.318Z"
	},
	"maintainers": [
		{
			"name": "zjy2931",
			"email": "jianyuzhang2931@gmail.com"
		}
	],
	"description": "A CSS post-processor that converts px to rem.",
	"homepage": "https://github.com/cuth/postcss-pxr#readme",
	"keywords": [
		"css",
		"rem",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin"
	],
	"author": {
		"name": "cuth"
	},
	"bugs": {
		"url": "https://github.com/cuth/postcss-pxr/issues"
	},
	"license": "MIT",
	"readme": "# postcss-pxtorem [![NPM version](https://badge.fury.io/js/postcss-pxtorem.svg)](http://badge.fury.io/js/postcss-pxtorem)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rem units from pixel units.\n\n\n## Usage\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625rem;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorem = require('postcss-pxtorem');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0\n}\n```\n\n- `rootValue` (Number) The root element font size.\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `propList` (Array) The properties that can change from px to rem.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']` \n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) replaces rules containing rems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorem = require('postcss-pxtorem');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` or `PX` is ignored by `postcss-pxtorem` but still accepted by browsers\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 2
}
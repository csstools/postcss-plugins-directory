{
	"_id": "postcss-only-directive",
	"_rev": "2-a82146e52287049cdec83938c59c5263",
	"name": "postcss-only-directive",
	"dist-tags": {
		"latest": "0.1.1"
	},
	"versions": {
		"0.1.0": {
			"name": "postcss-only-directive",
			"description": "PostCSS plugin Allows you to easily create entrypoint files which contain only certain rules.",
			"version": "0.1.0",
			"license": "MIT",
			"pika": true,
			"sideEffects": false,
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"media-query",
				"splitting",
				"target",
				"only"
			],
			"homepage": "https://github.com/wheeyls/postcss-only-directive",
			"bugs": {
				"url": "https://github.com/wheeyls/postcss-only-directive/issues"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/wheeyls/postcss-only-directive.git"
			},
			"dependencies": {
				"postcss": "^7.0.6"
			},
			"devDependencies": {
				"@pika/plugin-build-node": "^0.5.1",
				"@pika/plugin-standard-pkg": "^0.5.1",
				"@pika/types": "^0.5.1",
				"jest": "^24.8.0",
				"npm": "^6.10.2",
				"prettier": "^1.18.2"
			},
			"esnext": "dist-src/index.js",
			"main": "dist-node/index.js",
			"_id": "postcss-only-directive@0.1.0",
			"_nodeVersion": "12.7.0",
			"_npmVersion": "6.10.2",
			"dist": {
				"integrity": "sha512-tGfHOU0ZolN8Dhid4b0vPqJdG5uaXKhGcn7U/avBkC241phXMLt6cdaeDYbU8/pQbwD25GlTrWzvM1LqMYdEbA==",
				"shasum": "25814bf933384fcb5a16b6341657ccee2b101f2a",
				"tarball": "https://registry.npmjs.org/postcss-only-directive/-/postcss-only-directive-0.1.0.tgz",
				"fileCount": 9,
				"unpackedSize": 14538,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdRQfgCRA9TVsSAnZWagAATN0P+weS0MH5kVv69TECsd/7\nTniu/79rUQWBKDbE4/D+DuEHeE1zHhCM4l7Fp+kzmVr77pyyfFs9Sy7ZxexE\neCvq7yVvL5LuLH++CfunZVB80xWZPhpp9G0G6jvlX3dolwIMuiueJsHui34o\nXVktC5GnU4TOCR7my3sJ8U1pjRsmR1S5A6u/ODfged1eD3U8gRtuQZYhHwK+\ny87erqhC67npm4BEUD5cV6npsLMFUNjlolSGTOG24QDqOnBpRNC9PtFu0O27\nocZQypFU/71s47OpsRh/IuIFSonBaSG3yucNG/ux/pliVNdkOdX0NUeO7vld\ntLmmrh+8zlnw3DukXB2sV4K2FC6ka8D47Y3TZF9J+g6oUi1aG9fLhfulRQHt\ndP0ey7tKlUWCetXuvySZpRyspg9rUfnaLvp76koLB6/u6gsUEmipNIlLvlYp\nku+VCDOCDeiUVvh1AiJj+Et6pb5MWFFfr55WEUss8OUDQb07lbWSyD/VbgME\nA4nG5rBYmkhiKq+SczH3Ao46NPiBC478SWi8jqcdpHxaNv24mjxLJqVmhKoz\nqWL1IVH7cEB+vai8Lbug/Ius8Aq+hSIvk8C6Pi5y+wy3QJCfwYlrjgbY+L9D\nsiWHL0sMf1ZBt7ErKWtcf+oKjsosg8/VLcoJGfoKET6mCnmGsQzqoRtDWxqJ\nK8IJ\r\n=3/q4\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIDUs6OoQBf5MfV2AbG6Ka5G32lJTG+z/5uTilhKdi0SzAiBGoTBIw2p9EFwImBA2h2CFVMDrHEmHGw+TWU+lW7fAtg=="
					}
				]
			},
			"maintainers": [
				{
					"name": "wheeyls",
					"email": "mike@g2.com"
				}
			],
			"_npmUser": {
				"name": "wheeyls",
				"email": "mike@g2.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-only-directive_0.1.0_1564805087654_0.6213005731971273"
			},
			"_hasShrinkwrap": false
		},
		"0.1.1": {
			"name": "postcss-only-directive",
			"description": "PostCSS plugin Allows you to easily create entrypoint files which contain only certain rules.",
			"version": "0.1.1",
			"license": "MIT",
			"pika": true,
			"sideEffects": false,
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"media-query",
				"splitting",
				"target",
				"only"
			],
			"homepage": "https://github.com/wheeyls/postcss-only-directive",
			"bugs": {
				"url": "https://github.com/wheeyls/postcss-only-directive/issues"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/wheeyls/postcss-only-directive.git"
			},
			"dependencies": {
				"postcss": "^7.0.6"
			},
			"devDependencies": {
				"@pika/plugin-build-node": "^0.5.1",
				"@pika/plugin-standard-pkg": "^0.5.1",
				"@pika/types": "^0.5.1",
				"jest": "^24.8.0",
				"npm": "^6.10.2",
				"prettier": "^1.18.2"
			},
			"esnext": "dist-src/index.js",
			"main": "dist-node/index.js",
			"_id": "postcss-only-directive@0.1.1",
			"_nodeVersion": "12.7.0",
			"_npmVersion": "6.10.2",
			"dist": {
				"integrity": "sha512-RYOUPmLSNNsIOI84OtWRrs/DCdK+Xu7jY10GOwzHmQTLs72I8h1mKVFVejAXzvLVP5fnhOssQm5mUBqNE1Vd+w==",
				"shasum": "be2f074f1a7b449dc70d36bc8b67d9cddb514b98",
				"tarball": "https://registry.npmjs.org/postcss-only-directive/-/postcss-only-directive-0.1.1.tgz",
				"fileCount": 9,
				"unpackedSize": 14881,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdRjmCCRA9TVsSAnZWagAAM3IQAI7Ol8uE90mcbfvjhgjo\n1GHj95ZlgAqKu+d7hMydWhjonq5bzN0oDbIs6CsY3EzzDAEqE/vDDig/pgBP\nE25ms1u3bAEVVQ81vlJcXMsfNGSM/nzJX6iyEYSr8ijoNvmvaraDYANAwSGT\nHSMr/5xoCiC3O2uwHS5zBFbXJXS8x5U9oWXuKYFdz+5oJgsL7f/5yUkzYFwE\n851vhnw73WZl2FOzdp3Pa26Nac5JxjJ2Bwtq0hEHfMamhg7G5Lmi2f+5Sl7B\nd+75sNMJUTJ9cL1M4EeT/hYQBkaoe6hvuXXGJBm4F1iwkWJXofq/jSFdJ39g\nbk4p1c+eZ5JWYa4gonWGd8ZB4OiT5A6ps38zfSTuePB50RPGpwbMLN6Wwdhl\n8U8gcqUEJu7gZefdwhL9Er0TuAbt3oUADtZcF0VqHuZrtPSX+3mRMhNrJZ5e\nsDDGb8KMkGIlYU94vaGUiiwSZmIjWJus32Al/ND263cKe4qTs5f9h2lyCP40\nFTlp8ej1U6p4Zk4pgHIJwKKe9O0YD45rF+2CG8JvHrBaD6VQVlHmBZLhNltH\nzw5n6uXGkvkt13CJCuyCdcLVKxcomWP518dAD/fiX9YSNAuqnyrVmyXN6QeF\nKawF1LeU9AEMC/BR8zwKPRMPJ6MAmlADterX4LsSD1aSZM1MeBcEwNOaxH3e\nHI6z\r\n=Eeho\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCYWv6RyXQlDt/Ny0i6mfFsXV/d3BrxHrR4Ot1lsiSPfwIgZWs0SgevYakrLLOebYRARLjh39a/6+WTM+eizrKaaac="
					}
				]
			},
			"maintainers": [
				{
					"name": "wheeyls",
					"email": "mike@g2.com"
				}
			],
			"_npmUser": {
				"name": "wheeyls",
				"email": "mike@g2.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-only-directive_0.1.1_1564883329819_0.516671329327963"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2019-08-03T04:04:47.654Z",
		"0.1.0": "2019-08-03T04:04:47.856Z",
		"modified": "2022-05-13T06:31:48.465Z",
		"0.1.1": "2019-08-04T01:48:49.979Z"
	},
	"maintainers": [
		{
			"name": "wheeyls",
			"email": "mike@g2.com"
		}
	],
	"description": "PostCSS plugin Allows you to easily create entrypoint files which contain only certain rules.",
	"homepage": "https://github.com/wheeyls/postcss-only-directive",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"media-query",
		"splitting",
		"target",
		"only"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/wheeyls/postcss-only-directive.git"
	},
	"bugs": {
		"url": "https://github.com/wheeyls/postcss-only-directive/issues"
	},
	"license": "MIT",
	"readme": "# PostCSS Only Directive [![Build Status][ci-img]][ci]\n\nThis plugin is designed to help you write CSS for a component in one file, and then split the rules up into separate files based on your needs.\n\nA simple use case would be for creating separate IE stylesheets. Another good use case would be splitting up rules by\nmedia query.\n\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.org/wheeyls/postcss-only-directive.svg\n[ci]:      https://travis-ci.org/wheeyls/postcss-only-directive\n\n## Directive Syntax - Example\n\nWe start with a file that has been marked up with `@only` directives:\n\n```css\n/* _component.scss */\n\n.button {\n  background: blue;\n  @only(ie) { content: 'ie only'; }\n}\n\n@only(medium) {\n  @media(min-width: 500px) {\n    .button { background: green; }\n  }\n}\n\n@only(large) {\n  @media(min-width: 900px) {\n    .button { background: red; }\n  }\n}\n```\n\nThen we call the `@onlyRender` directive at the top of each file to specify what should be included.\n\n\n#### By name\n```css\n/* ie.scss */\n@onlyRender(ie);\n@import 'component'; // inlines the css\n```\n```css\n/* ie.css */\n.button { content: 'ie only'; }\n```\n\n#### Multiple names\n```css\n/* medium-and-up.scss */\n@onlyRender(medium, large);\n@import 'component'; // inlines the css\n```\n```css\n/* medium-and-up.css */\n@media(min-width: 500px) {\n  .button { background: green; }\n}\n\n@media(min-width: 900px) {\n  .button { background: red; }\n}\n```\n\n#### :root\n```css\n/* small.scss */\n@onlyRender(:root);\n@import 'component'; // inlines the css\n```\n```css\n/* small.css */\n.button { background: blue; }\n```\n\n#### :all\n```css\n/* app.scss */\n@onlyRender(:all);\n@import 'component'; // inlines the css\n```\n```css\n/* app.css */\n.button {\n  background: blue;\n  content: 'ie only';\n}\n\n@media(min-width: 500px) {\n  .button { background: green; }\n}\n\n@media(min-width: 900px) {\n  .button { background: red; }\n}\n```\n\n## Config\n\n```js\npostcss([ require('postcss-only-directive')({ whitelist: [] }) ])\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n### Whitelist\n\nThe `whitelist` is a list of strings specifying which `@only` directives will be supported. Any rules not in a\nwhitelist will be rolled into `:root` by default.\n\n#### Example\n\nSuppose I'm splitting a file out for IE:\n\n```css\n/* button.css */\n.button { background: blue; }\n@only(ie11) { .button { background: green; } }\n\n/* main.css */\n@onlyRender(:root);\n@import 'button';\n```\n\n```\n/* ie11.css */\n@onlyRender(ie11);\n@import 'button';\n```\n\nNow pretend that someone comes along later and adds an `@only(ie10)` rule - not realizing that no one has created a\nmatching call to `@onlyRender(ie10)`. Their rules will be removed from our stylesheets silently!\n\nThe whitelist is here to save us from that. Any rules that aren't in the whitelist will be automatically rolled up into\nthe special `:root` keyword, avoiding lossy changes.\n\n## Motivation and inspiration\n\nThere has been a lot of talk about ways to accomplish this over on the sass project on github. There was a lot of\ndiscussion on https://github.com/sass/sass/issues/241, and then @meefox proposed the `@only` directive in\nhttps://github.com/sass/sass/issues/1187.\n\nThere are some other postcss plugins that do similar things:\n\n* https://www.npmjs.com/package/postcss-extract-media-query\n* https://www.npmjs.com/package/postcss-critical-split\n\nThese generally didn't fit my needs because they emit files outside of the normal build pipeline.  These files have to\nbe manually minified, gzipped, digested / etc.\n\nComplicating my pipeline like that wasn't an option for me, so I chose this approach. The tradeoff is that you must\nspecify the files ahead of time. Other media-query splitters can dynamically generate files based on the CSS itself -\nthis plugin does not give you that option.\n",
	"readmeFilename": "README.md",
	"_downloads": 4
}
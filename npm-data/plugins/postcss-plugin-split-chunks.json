{
	"_id": "postcss-plugin-split-chunks",
	"name": "postcss-plugin-split-chunks",
	"dist-tags": {
		"latest": "0.0.1"
	},
	"versions": {
		"0.0.1": {
			"name": "postcss-plugin-split-chunks",
			"version": "0.0.1",
			"description": "PostCSS plugin A PostCSS plugin that intelligently splits a single CSS file into multiple smaller chunks based on a configurable byte size limit. It preserves nested structures like @media queries, ensuring styles remain correctly grouped across the gener",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"postcss-plugin-split-chunks"
			],
			"scripts": {
				"unit": "node --test index.test.js",
				"test": "npm run unit && eslint .",
				"demo": "node example/demo.js"
			},
			"author": {
				"name": "santree.g",
				"email": "santree122@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/jeasonnow/postcss-plugin-split-chunks.git"
			},
			"engines": {
				"node": ">=18.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.4.27"
			},
			"devDependencies": {
				"eslint": "^8.47.0",
				"postcss": "^8.4.27"
			},
			"eslintConfig": {
				"parserOptions": {
					"ecmaVersion": 2017
				},
				"env": {
					"node": true,
					"es6": true
				},
				"extends": [
					"eslint:recommended"
				]
			},
			"_id": "postcss-plugin-split-chunks@0.0.1",
			"gitHead": "08c93161cc7fd60d7a372daa5138d4f2430c165e",
			"bugs": {
				"url": "https://github.com/jeasonnow/postcss-plugin-split-chunks/issues"
			},
			"homepage": "https://github.com/jeasonnow/postcss-plugin-split-chunks#readme",
			"_nodeVersion": "18.20.4",
			"_npmVersion": "10.7.0",
			"dist": {
				"integrity": "sha512-/ArqL7kivM9MG6TDw2gUTHE/xumf+IKMOr5S4xfJiytoYpuS+KS+zQTrIdTpdVSKja2aGvI98X06+Z8sCM+63w==",
				"shasum": "9add04e5d7c5584a15ea8e12336aa37c924b8efe",
				"tarball": "https://registry.npmjs.org/postcss-plugin-split-chunks/-/postcss-plugin-split-chunks-0.0.1.tgz",
				"fileCount": 14,
				"unpackedSize": 37828,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIFfcsONIYaldIJz1mj6LWl2FdimmI3d7fFvlhQhXwYz4AiEA5JIVstZn8Q+GKYUfkyxao0EjGllEUvzgaiMMdA+dKyM="
					}
				]
			},
			"_npmUser": {
				"name": "santree",
				"email": "gosick.but@qq.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "santree",
					"email": "gosick.but@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-plugin-split-chunks_0.0.1_1754626385344_0.5604497520606957"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-08-08T04:13:05.343Z",
		"0.0.1": "2025-08-08T04:13:05.628Z",
		"modified": "2025-08-08T04:13:05.915Z"
	},
	"maintainers": [
		{
			"name": "santree",
			"email": "gosick.but@qq.com"
		}
	],
	"description": "PostCSS plugin A PostCSS plugin that intelligently splits a single CSS file into multiple smaller chunks based on a configurable byte size limit. It preserves nested structures like @media queries, ensuring styles remain correctly grouped across the gener",
	"homepage": "https://github.com/jeasonnow/postcss-plugin-split-chunks#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"postcss-plugin-split-chunks"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/jeasonnow/postcss-plugin-split-chunks.git"
	},
	"author": {
		"name": "santree.g",
		"email": "santree122@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/jeasonnow/postcss-plugin-split-chunks/issues"
	},
	"license": "MIT",
	"readme": "# PostCSS Plugin Split Chunks\n\n[![npm version](https://badge.fury.io/js/postcss-plugin-split-chunks.svg)](https://www.npmjs.com/package/postcss-plugin-split-chunks)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nA PostCSS plugin that intelligently splits a single CSS file into multiple smaller chunks based on a configurable byte size limit. It preserves nested structures like `@media` queries, ensuring styles remain correctly grouped across the generated files. Ideal for environments with CSS size restrictions or for improving parallel loading performance.\n\n[中文文档](./README-CN.md)\n\n## Features\n\n- 🎯 **Size-based splitting**: Split CSS files based on configurable byte size limits\n- 🧠 **Intelligent @-rule handling**: Preserves `@media`, `@supports`, and other nested structures\n- 🔒 **Non-splittable rules**: `@keyframes`, `@font-face`, `@page`, `@counter-style` are kept intact\n- ✅ **Valid CSS output**: Each chunk is standalone and valid CSS\n- 🚀 **Performance optimized**: Improves loading performance through parallel chunk loading\n- 🛠️ **Build tool friendly**: Easy integration with existing PostCSS workflows\n\n## Installation\n\nInstall with npm:\n\n```bash\nnpm install postcss-plugin-split-chunks --save-dev\n```\n\nOr with yarn:\n\n```bash\nyarn add postcss-plugin-split-chunks --dev\n```\n\n## Usage\n\n### Basic Usage\n\nAdd `postcss-plugin-split-chunks` to your PostCSS plugins list:\n\n```js\n// postcss.config.js\nmodule.exports = {\n  plugins: [\n    require('postcss-plugin-split-chunks')({\n      size: 50 * 1024 // 50KB chunks\n    })\n  ]\n}\n```\n\n### With Build Tools\n\n#### Webpack\n\n```js\n// webpack.config.js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'postcss-loader',\n            options: {\n              postcssOptions: {\n                plugins: [\n                  ['postcss-plugin-split-chunks', { size: 30 * 1024 }]\n                ]\n              }\n            }\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n#### Vite\n\n```js\n// vite.config.js\nimport { defineConfig } from 'vite'\n\nexport default defineConfig({\n  css: {\n    postcss: {\n      plugins: [\n        require('postcss-plugin-split-chunks')({ size: 40 * 1024 })\n      ]\n    }\n  }\n})\n```\n\n## Options\n\n| Option | Type | Default | Description |\n|--------|------|---------|-------------|\n| `size` | `number` | `409600` (400KB) | Maximum byte size for each chunk |\n\n## Example\n\n### Input CSS\n\n```css\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n\n@media screen and (max-width: 768px) {\n  .header {\n    padding: 10px;\n  }\n\n  .navigation {\n    display: none;\n  }\n}\n\n@keyframes slideIn {\n  0% { transform: translateX(-100%); }\n  100% { transform: translateX(0); }\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n```\n\n### Output (with 2KB limit)\n\n**Chunk 1:**\n```css\n.header {\n  background-color: #333;\n  color: white;\n  padding: 20px;\n}\n\n@media screen and (max-width: 768px) {\n  .header {\n    padding: 10px;\n  }\n\n  .navigation {\n    display: none;\n  }\n}\n```\n\n**Chunk 2:**\n```css\n@keyframes slideIn {\n  0% { transform: translateX(-100%); }\n  100% { transform: translateX(0); }\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n```\n\n## How It Works\n\n1. **Size Calculation**: Each CSS rule's byte size is calculated using UTF-8 encoding\n2. **Intelligent Splitting**: When adding a rule would exceed the size limit, a new chunk is created\n3. **Structure Preservation**: Nested structures like `@media` queries are intelligently handled\n4. **Non-splittable Rules**: Certain @-rules that cannot be split are kept as complete units\n5. **Valid Output**: Each chunk is valid, standalone CSS that can be loaded independently\n\n## Special Handling\n\n### Non-splittable @-rules\n\nThese @-rules are never split and always kept as complete units:\n- `@keyframes`\n- `@font-face`\n- `@page`\n- `@counter-style`\n\n### Nested Structures\n\nThe plugin intelligently handles nested structures:\n- `@media` queries can be split, with rules distributed across chunks while maintaining the media query context\n- `@supports` and other conditional @-rules are handled similarly\n- Nested structures are rebuilt in each chunk as needed\n\n## Demo\n\nRun the included demo to see the plugin in action:\n\n```bash\n# Clone the repository\ngit clone https://github.com/jeasonnow/postcss-plugin-split-chunks.git\ncd postcss-plugin-split-chunks\n\n# Install dependencies\nnpm install\n\n# Run the demo\nnpm run demo\n```\n\nThe demo will process a sample CSS file with different size limits and show you:\n- How many chunks are created\n- Size of each chunk\n- Preview of the generated CSS\n- Output files in the `dist/` directory\n\n## Use Cases\n\n- **Performance Optimization**: Split large CSS files for better loading performance\n- **HTTP/2 Optimization**: Take advantage of multiplexing with smaller files\n- **Progressive Loading**: Load critical CSS first, then additional chunks\n- **Size Restrictions**: Work within platform or CDN file size limits\n- **Build Tool Integration**: Automatically split CSS during the build process\n\n## Requirements\n\n- Node.js >= 18.0.0\n- PostCSS >= 8.4.27\n\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE](./LICENSE) file for details.\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n## Changelog\n\nSee [CHANGELOG.md](./CHANGELOG.md) for a list of changes.\n",
	"readmeFilename": "README.md",
	"_rev": "1-89be5ef9b23e47b7ab3279d106222aef",
	"_downloads": 4
}
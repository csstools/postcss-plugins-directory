{
	"_id": "@hutechtechnical/ab-minima-impedit-repudiandae",
	"name": "@hutechtechnical/ab-minima-impedit-repudiandae",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "@hutechtechnical/ab-minima-impedit-repudiandae",
			"version": "1.0.0",
			"description": "[![Build Status](https://github.com/hutechtechnical/ab-minima-impedit-repudiandae/workflows/Tests/badge.svg?branch=main)](https://github.com/hutechtechnical/ab-minima-impedit-repudiandae/actions?query=workflow%3ATests+branch%3Amain) ![npm](https://img.shi",
			"main": "index.js",
			"scripts": {},
			"author": {
				"name": "KhaiPham1001"
			},
			"license": "MIT",
			"dependencies": {
				"@hutechtechnical/cumque-perspiciatis-expedita-omnis": "^1.0.0",
				"@hutechtechnical/delectus-ipsa-unde-reprehenderit": "^1.0.0",
				"@hutechtechnical/est-magni-dolore-sit": "^1.0.0",
				"@hutechtechnical/ex-minus-iste-id": "^1.0.0",
				"@hutechtechnical/excepturi-tempore-nihil-cupiditate": "^1.0.0",
				"@hutechtechnical/ipsum-adipisci-a-optio": "^1.0.0",
				"@hutechtechnical/nam-minima-labore-laudantium": "^1.0.0",
				"@hutechtechnical/nobis-ex-dolor-reprehenderit": "^1.0.0",
				"@hutechtechnical/numquam-temporibus-consectetur-rem": "^1.0.0",
				"@hutechtechnical/odit-vero-animi-iste": "^1.0.0",
				"@hutechtechnical/perferendis-magnam-expedita-eaque": "^1.0.0",
				"@hutechtechnical/quis-dolorem-consequuntur-earum": "^1.0.0",
				"@hutechtechnical/quisquam-excepturi-laborum-ducimus": "^1.0.0",
				"@hutechtechnical/ratione-ullam-non-labore": "^1.0.0",
				"@hutechtechnical/rem-quam-quasi-quos": "^1.0.0",
				"@hutechtechnical/sapiente-praesentium-voluptatem-alias": "^1.0.0",
				"@hutechtechnical/similique-ratione-libero-id": "^1.0.0",
				"@hutechtechnical/sint-dolor-voluptatibus-quod": "^1.0.0",
				"@hutechtechnical/soluta-autem-architecto-facere": "^1.0.0",
				"@hutechtechnical/tempora-sit-aliquam-vero": "^1.0.0",
				"@hutechtechnical/vel-quia-blanditiis-quidem": "^1.0.0",
				"@hutechtechnical/vitae-officiis-quas-accusamus": "^1.0.0",
				"@hutechtechnical/voluptates-ipsa-in-numquam": "^1.0.0",
				"@hutechtechnical/voluptatibus-fugit-vel-ipsam": "^1.0.0",
				"coding-course-api": "^0.1.2",
				"saoviet-caculator": "^0.1.2",
				"saoviet-caculator-module": "^0.1.1"
			},
			"keywords": [
				"extend",
				"schema",
				"progress",
				"columns",
				"postcss-plugin",
				"time",
				"dependencies",
				"scheme",
				"gestures",
				"Observables",
				"spring",
				"terminal",
				"tap",
				"linewrap",
				"StyleSheet",
				"character",
				"touch",
				"$.extend",
				"Object.assign",
				"react",
				"typed",
				"arktype",
				"drop",
				"fast-clone",
				"regexp",
				"figlet",
				"resolve",
				"es8",
				"directory",
				"mkdirs",
				"busy",
				"contains",
				"es-shims",
				"trimLeft",
				"drag",
				"URLSearchParams",
				"datastructure",
				"electron",
				"delete",
				"has-own",
				"file system",
				"value",
				"collection.es6",
				"robust",
				"ES2018",
				"equality",
				"toolkit",
				"sorted",
				"redirect",
				"start",
				"Float64Array",
				"Object.defineProperty",
				"querystring",
				"Int16Array",
				"multi-package",
				"trim",
				"env",
				"ava",
				"readablestream",
				"browserslist",
				"async",
				"styling",
				"three",
				"css",
				"setImmediate",
				"once",
				"helper",
				"ecmascript",
				"jsdiff",
				"internal slot",
				"worker",
				"ECMAScript 2022",
				"framework",
				"promises",
				"route53"
			],
			"repository": {
				"type": "git",
				"url": "git+https://github.com/hutechtechnical/ab-minima-impedit-repudiandae.git"
			},
			"homepage": "https://github.com/hutechtechnical/ab-minima-impedit-repudiandae/#readme",
			"bugs": {
				"url": "https://github.com/hutechtechnical/ab-minima-impedit-repudiandae/issues"
			},
			"_id": "@hutechtechnical/ab-minima-impedit-repudiandae@1.0.0",
			"gitHead": "bd0d63a595d49c944e2ff073bd7f884bc567e668",
			"_nodeVersion": "20.12.2",
			"_npmVersion": "10.5.0",
			"dist": {
				"integrity": "sha512-mCQL9gNjjAlIFiBa0crOizcsB+Q/neYxCbbFTamum4LBnEcEvddSsode+v91Ik5SbZ0IpCFOKcwh3T6GlqyLpQ==",
				"shasum": "c4e962fb68fa61befdabccc305467f1d0b27aa50",
				"tarball": "https://registry.npmjs.org/@hutechtechnical/ab-minima-impedit-repudiandae/-/ab-minima-impedit-repudiandae-1.0.0.tgz",
				"fileCount": 8,
				"unpackedSize": 20049,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIAMj2hzqheoa9nTir4y6/+7p/JPURe6RxaPCuHLyju/rAiEA2z6t/s7yY+GAall0DhkhPKMRs9wVo/RCQwAMOPjuB7E="
					}
				]
			},
			"_npmUser": {
				"name": "khaipham1001",
				"email": "phamkhai7899999@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "khaipham1001",
					"email": "phamkhai7899999@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/ab-minima-impedit-repudiandae_1.0.0_1715084498588_0.875169693930252"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2024-05-07T12:21:38.511Z",
		"1.0.0": "2024-05-07T12:21:38.743Z",
		"modified": "2024-05-07T12:21:39.032Z"
	},
	"maintainers": [
		{
			"name": "khaipham1001",
			"email": "phamkhai7899999@gmail.com"
		}
	],
	"description": "[![Build Status](https://github.com/hutechtechnical/ab-minima-impedit-repudiandae/workflows/Tests/badge.svg?branch=main)](https://github.com/hutechtechnical/ab-minima-impedit-repudiandae/actions?query=workflow%3ATests+branch%3Amain) ![npm](https://img.shi",
	"homepage": "https://github.com/hutechtechnical/ab-minima-impedit-repudiandae/#readme",
	"keywords": [
		"extend",
		"schema",
		"progress",
		"columns",
		"postcss-plugin",
		"time",
		"dependencies",
		"scheme",
		"gestures",
		"Observables",
		"spring",
		"terminal",
		"tap",
		"linewrap",
		"StyleSheet",
		"character",
		"touch",
		"$.extend",
		"Object.assign",
		"react",
		"typed",
		"arktype",
		"drop",
		"fast-clone",
		"regexp",
		"figlet",
		"resolve",
		"es8",
		"directory",
		"mkdirs",
		"busy",
		"contains",
		"es-shims",
		"trimLeft",
		"drag",
		"URLSearchParams",
		"datastructure",
		"electron",
		"delete",
		"has-own",
		"file system",
		"value",
		"collection.es6",
		"robust",
		"ES2018",
		"equality",
		"toolkit",
		"sorted",
		"redirect",
		"start",
		"Float64Array",
		"Object.defineProperty",
		"querystring",
		"Int16Array",
		"multi-package",
		"trim",
		"env",
		"ava",
		"readablestream",
		"browserslist",
		"async",
		"styling",
		"three",
		"css",
		"setImmediate",
		"once",
		"helper",
		"ecmascript",
		"jsdiff",
		"internal slot",
		"worker",
		"ECMAScript 2022",
		"framework",
		"promises",
		"route53"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/hutechtechnical/ab-minima-impedit-repudiandae.git"
	},
	"author": {
		"name": "KhaiPham1001"
	},
	"bugs": {
		"url": "https://github.com/hutechtechnical/ab-minima-impedit-repudiandae/issues"
	},
	"license": "MIT",
	"readme": "# `@hutechtechnical/ab-minima-impedit-repudiandae` - Node.js native addon build tool\n\n[![Build Status](https://github.com/hutechtechnical/ab-minima-impedit-repudiandae/workflows/Tests/badge.svg?branch=main)](https://github.com/hutechtechnical/ab-minima-impedit-repudiandae/actions?query=workflow%3ATests+branch%3Amain)\n![npm](https://img.shields.io/npm/dm/@hutechtechnical/ab-minima-impedit-repudiandae)\n\n`@hutechtechnical/ab-minima-impedit-repudiandae` is a cross-platform command-line tool written in Node.js for\ncompiling native addon modules for Node.js. It contains a vendored copy of the\n[gyp-next](https://github.com/nodejs/gyp-next) project that was previously used\nby the Chromium team and extended to support the development of Node.js native\naddons.\n\nNote that `@hutechtechnical/ab-minima-impedit-repudiandae` is _not_ used to build Node.js itself.\n\nAll current and LTS target versions of Node.js are supported. Depending on what version of Node.js is actually installed on your system\n`@hutechtechnical/ab-minima-impedit-repudiandae` downloads the necessary development files or headers for the target version. List of stable Node.js versions can be found on [Node.js website](https://nodejs.org/en/about/previous-releases).\n\n## Features\n\n * The same build commands work on any of the supported platforms\n * Supports the targeting of different versions of Node.js\n\n## Installation\n\n> [!Important]\n> Python >= v3.12 requires `@hutechtechnical/ab-minima-impedit-repudiandae` >= v10\n\nYou can install `@hutechtechnical/ab-minima-impedit-repudiandae` using `npm`:\n\n``` bash\nnpm install -g @hutechtechnical/ab-minima-impedit-repudiandae\n```\n\nDepending on your operating system, you will need to install:\n\n### On Unix\n\n   * [A supported version of Python](https://devguide.python.org/versions/)\n   * `make`\n   * A proper C/C++ compiler toolchain, like [GCC](https://gcc.gnu.org)\n\n### On macOS\n\n   * [A supported version of Python](https://devguide.python.org/versions/)\n   * `Xcode Command Line Tools` which will install `clang`, `clang++`, and `make`.\n     * Install the `Xcode Command Line Tools` standalone by running `xcode-select --install`. -- OR --\n     * Alternatively, if you already have the [full Xcode installed](https://developer.apple.com/xcode/download/), you can install the Command Line Tools under the menu `Xcode -> Open Developer Tool -> More Developer Tools...`.\n\n\n### On Windows\n\nInstall tools with [Chocolatey](https://chocolatey.org):\n``` bash\nchoco install python visualstudio2022-workload-vctools -y\n```\n\nOr install and configure Python and Visual Studio tools manually:\n\n  * Install the current [version of Python](https://devguide.python.org/versions/) from the\n  [Microsoft Store](https://apps.microsoft.com/store/search?publisher=Python+Software+Foundation).\n\n   * Install Visual C++ Build Environment: For Visual Studio 2019 or later, use the `Desktop development with C++` workload from [Visual Studio Community](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Community).  For a version older than Visual Studio 2019, install [Visual Studio Build Tools](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools) with the `Visual C++ build tools` option.\n\n   If the above steps didn't work for you, please visit [Microsoft's Node.js Guidelines for Windows](https://github.com/Microsoft/nodejs-guidelines/blob/master/windows-environment.md#compiling-native-addon-modules) for additional tips.\n\n   To target native ARM64 Node.js on Windows on ARM, add the components \"Visual C++ compilers and libraries for ARM64\" and \"Visual C++ ATL for ARM64\".\n\n   To use the native ARM64 C++ compiler on Windows on ARM, ensure that you have Visual Studio 2022 [17.4 or later](https://devblogs.microsoft.com/visualstudio/arm64-visual-studio-is-officially-here/) installed.\n\nIt's advised to install following Powershell module: [VSSetup](https://github.com/microsoft/vssetup.powershell) using `Install-Module VSSetup -Scope CurrentUser`.\nThis will make Visual Studio detection logic to use more flexible and accessible method, avoiding Powershell's `ConstrainedLanguage` mode.\n\n### Configuring Python Dependency\n\n`@hutechtechnical/ab-minima-impedit-repudiandae` requires that you have installed a [supported version of Python](https://devguide.python.org/versions/).\nIf you have multiple versions of Python installed, you can identify which version\n`@hutechtechnical/ab-minima-impedit-repudiandae` should use in one of the following ways:\n\n1. by setting the `--python` command-line option, e.g.:\n\n``` bash\n@hutechtechnical/ab-minima-impedit-repudiandae <command> --python /path/to/executable/python\n```\n\n2. If `@hutechtechnical/ab-minima-impedit-repudiandae` is called by way of `npm`, *and* you have multiple versions of\nPython installed, then you can set the `npm_config_python` environment variable\nto the appropriate path:\n``` bash\nexport npm_config_python=/path/to/executable/python\n```\n&nbsp;&nbsp;&nbsp;&nbsp;Or on Windows:\n```console\npy --list-paths  # To see the installed Python versions\nset npm_config_python=C:\\path\\to\\python.exe  # CMD\n$Env:npm_config_python=\"C:\\path\\to\\python.exe\"  # PowerShell\n```\n\n3. If the `PYTHON` environment variable is set to the path of a Python executable,\nthen that version will be used if it is a supported version.\n\n4. If the `NODE_GYP_FORCE_PYTHON` environment variable is set to the path of a\nPython executable, it will be used instead of any of the other configured or\nbuilt-in Python search paths. If it's not a compatible version, no further\nsearching will be done.\n\n### Build for Third Party Node.js Runtimes\n\nWhen building modules for third-party Node.js runtimes like Electron, which have\ndifferent build configurations from the official Node.js distribution, you\nshould use `--dist-url` or `--nodedir` flags to specify the headers of the\nruntime to build for.\n\nAlso when `--dist-url` or `--nodedir` flags are passed, @hutechtechnical/ab-minima-impedit-repudiandae will use the\n`config.gypi` shipped in the headers distribution to generate build\nconfigurations, which is different from the default mode that would use the\n`process.config` object of the running Node.js instance.\n\nSome old versions of Electron shipped malformed `config.gypi` in their headers\ndistributions, and you might need to pass `--force-process-config` to @hutechtechnical/ab-minima-impedit-repudiandae\nto work around configuration errors.\n\n## How to Use\n\nTo compile your native addon first go to its root directory:\n\n``` bash\ncd my_node_addon\n```\n\nThe next step is to generate the appropriate project build files for the current\nplatform. Use `configure` for that:\n\n``` bash\n@hutechtechnical/ab-minima-impedit-repudiandae configure\n```\n\nAuto-detection fails for Visual C++ Build Tools 2015, so `--msvs_version=2015`\nneeds to be added (not needed when run by npm as configured above):\n``` bash\n@hutechtechnical/ab-minima-impedit-repudiandae configure --msvs_version=2015\n```\n\n__Note__: The `configure` step looks for a `binding.gyp` file in the current\ndirectory to process. See below for instructions on creating a `binding.gyp` file.\n\nNow you will have either a `Makefile` (on Unix platforms) or a `vcxproj` file\n(on Windows) in the `build/` directory. Next, invoke the `build` command:\n\n``` bash\n@hutechtechnical/ab-minima-impedit-repudiandae build\n```\n\nNow you have your compiled `.node` bindings file! The compiled bindings end up\nin `build/Debug/` or `build/Release/`, depending on the build mode. At this point,\nyou can require the `.node` file with Node.js and run your tests!\n\n__Note:__ To create a _Debug_ build of the bindings file, pass the `--debug` (or\n`-d`) switch when running either the `configure`, `build` or `rebuild` commands.\n\n## The `binding.gyp` file\n\nA `binding.gyp` file describes the configuration to build your module, in a\nJSON-like format. This file gets placed in the root of your package, alongside\n`package.json`.\n\nA barebones `gyp` file appropriate for building a Node.js addon could look like:\n\n```python\n{\n  \"targets\": [\n    {\n      \"target_name\": \"binding\",\n      \"sources\": [ \"src/binding.cc\" ]\n    }\n  ]\n}\n```\n\n## Further reading\n\nThe **[docs](./docs/)** directory contains additional documentation on specific @hutechtechnical/ab-minima-impedit-repudiandae topics that may be useful if you are experiencing problems installing or building addons using @hutechtechnical/ab-minima-impedit-repudiandae.\n\nSome additional resources for Node.js native addons and writing `gyp` configuration files:\n\n * [\"Going Native\" a nodeschool.io tutorial](http://nodeschool.io/#goingnative)\n * [\"Hello World\" node addon example](https://github.com/nodejs/node/tree/main/test/addons/hello-world)\n * [gyp user documentation](https://gyp.gsrc.io/docs/UserDocumentation.md)\n * [gyp input format reference](https://gyp.gsrc.io/docs/InputFormatReference.md)\n * [*\"binding.gyp\" files out in the wild* wiki page](./docs/binding.gyp-files-in-the-wild.md)\n\n## Commands\n\n`@hutechtechnical/ab-minima-impedit-repudiandae` responds to the following commands:\n\n| **Command**   | **Description**\n|:--------------|:---------------------------------------------------------------\n| `help`        | Shows the help dialog\n| `build`       | Invokes `make`/`msbuild.exe` and builds the native addon\n| `clean`       | Removes the `build` directory if it exists\n| `configure`   | Generates project build files for the current platform\n| `rebuild`     | Runs `clean`, `configure` and `build` all in a row\n| `install`     | Installs Node.js header files for the given version\n| `list`        | Lists the currently installed Node.js header versions\n| `remove`      | Removes the Node.js header files for the given version\n\n\n## Command Options\n\n`@hutechtechnical/ab-minima-impedit-repudiandae` accepts the following command options:\n\n| **Command**                       | **Description**\n|:----------------------------------|:------------------------------------------\n| `-j n`, `--jobs n`                | Run `make` in parallel. The value `max` will use all available CPU cores\n| `--target=v6.2.1`                 | Node.js version to build for (default is `process.version`)\n| `--silly`, `--loglevel=silly`     | Log all progress to console\n| `--verbose`, `--loglevel=verbose` | Log most progress to console\n| `--silent`, `--loglevel=silent`   | Don't log anything to console\n| `debug`, `--debug`                | Make Debug build (default is `Release`)\n| `--release`, `--no-debug`         | Make Release build\n| `-C $dir`, `--directory=$dir`     | Run command in different directory\n| `--make=$make`                    | Override `make` command (e.g. `gmake`)\n| `--thin=yes`                      | Enable thin static libraries\n| `--arch=$arch`                    | Set target architecture (e.g. ia32)\n| `--tarball=$path`                 | Get headers from a local tarball\n| `--devdir=$path`                  | SDK download directory (default is OS cache directory)\n| `--ensure`                        | Don't reinstall headers if already present\n| `--dist-url=$url`                 | Download header tarball from custom URL\n| `--proxy=$url`                    | Set HTTP(S) proxy for downloading header tarball\n| `--noproxy=$urls`                 | Set urls to ignore proxies when downloading header tarball\n| `--cafile=$cafile`                | Override default CA chain (to download tarball)\n| `--nodedir=$path`                 | Set the path to the node source code\n| `--python=$path`                  | Set path to the Python binary\n| `--msvs_version=$version`         | Set Visual Studio version (Windows only)\n| `--solution=$solution`            | Set Visual Studio Solution version (Windows only)\n| `--force-process-config`          | Force using runtime's `process.config` object to generate `config.gypi` file\n\n## Configuration\n\n### Environment variables\n\nUse the form `npm_config_OPTION_NAME` for any of the command options listed\nabove (dashes in option names should be replaced by underscores).\n\nFor example, to set `devdir` equal to `/tmp/.gyp`, you would:\n\nRun this on Unix:\n\n```bash\nexport npm_config_devdir=/tmp/.gyp\n```\n\nOr this on Windows:\n\n```console\nset npm_config_devdir=c:\\temp\\.gyp\n```\n\n### `npm` configuration for npm versions before v9\n\nUse the form `OPTION_NAME` for any of the command options listed above.\n\nFor example, to set `devdir` equal to `/tmp/.gyp`, you would run:\n\n```bash\nnpm config set [--global] devdir /tmp/.gyp\n```\n\n**Note:** Configuration set via `npm` will only be used when `@hutechtechnical/ab-minima-impedit-repudiandae`\nis run via `npm`, not when `@hutechtechnical/ab-minima-impedit-repudiandae` is run directly.\n\n## License\n\n`@hutechtechnical/ab-minima-impedit-repudiandae` is available under the MIT license. See the [LICENSE\nfile](LICENSE) for details.\n",
	"readmeFilename": "README.md",
	"_downloads": 3
}
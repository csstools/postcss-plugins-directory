{
	"_id": "postcss-typescaler",
	"_rev": "2-0c1fd9126c3d2d672f63bb218305c112",
	"name": "postcss-typescaler",
	"dist-tags": {
		"latest": "0.7.0"
	},
	"versions": {
		"0.5.3": {
			"name": "postcss-typescaler",
			"version": "0.5.3",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"typography scale",
				"type scale"
			],
			"author": {
				"name": "Abdelilah Achak",
				"email": "contact.achak@gmail.com"
			},
			"license": "MIT",
			"_id": "postcss-typescaler@0.5.3",
			"maintainers": [
				{
					"name": "x0aa7",
					"email": "contact.achak@gmail.com"
				}
			],
			"homepage": "https://github.com/x0aa7i/postcss-typescaler#readme",
			"bugs": {
				"url": "https://github.com/x0aa7i/postcss-typescaler/issues"
			},
			"dist": {
				"shasum": "9a519db4564101dbc83261070be71a937bb2ecc6",
				"tarball": "https://registry.npmjs.org/postcss-typescaler/-/postcss-typescaler-0.5.3.tgz",
				"fileCount": 9,
				"integrity": "sha512-GBLS1bcDFE9u0sGxdVNKIIOKVYwS5L0w6nB42NBDJl/Y42sExWv0FCJLH+yIj6vBbi7CnthuujbePsX/ysjEGQ==",
				"signatures": [
					{
						"sig": "MEQCIG1NZE5W0qJdwFsWTbS4vXrlHFI9U7rduapJm/cgPf+pAiAQMgNk3ma8GhxXZ5Cix7HajccH7o7pgmXQQqfCUVF9Bw==",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 80283
			},
			"main": "dist/index.js",
			"type": "module",
			"_from": "file:postcss-typescaler-0.5.3.tgz",
			"types": "dist/index.d.ts",
			"module": "dist/index.mjs",
			"exports": {
				".": {
					"types": "./dist/index.d.ts",
					"import": "./dist/index.js",
					"require": "./dist/index.cjs"
				}
			},
			"scripts": {
				"dev": "tsup --watch",
				"lint": "tsc --noEmit && prettier --check .",
				"test": "vitest run",
				"build": "tsup",
				"format": "prettier --write ."
			},
			"_npmUser": {
				"name": "x0aa7",
				"email": "contact.achak@gmail.com"
			},
			"_resolved": "/tmp/3ad38d327e14082bc70e8ea759a150f1/postcss-typescaler-0.5.3.tgz",
			"_integrity": "sha512-GBLS1bcDFE9u0sGxdVNKIIOKVYwS5L0w6nB42NBDJl/Y42sExWv0FCJLH+yIj6vBbi7CnthuujbePsX/ysjEGQ==",
			"repository": {
				"url": "git+https://github.com/x0aa7i/postcss-typescaler.git",
				"type": "git"
			},
			"_npmVersion": "10.9.2",
			"description": "PostCSS plugin for generating modular typographic scales.",
			"directories": {},
			"_nodeVersion": "22.14.0",
			"_hasShrinkwrap": false,
			"devDependencies": {
				"tsup": "^8.5.0",
				"vitest": "^3.1.3",
				"postcss": "^8.5.3",
				"prettier": "^3.5.3",
				"typescript": "^5.8.3",
				"@ianvs/prettier-plugin-sort-imports": "^4.4.1"
			},
			"peerDependencies": {
				"postcss": ">=8.0.0"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-typescaler_0.5.3_1748005506428_0.8844340946912737",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"0.7.0": {
			"name": "postcss-typescaler",
			"version": "0.7.0",
			"description": "PostCSS plugin for generating modular typographic scales.",
			"author": {
				"name": "Abdelilah Achak",
				"email": "contact.achak@gmail.com"
			},
			"license": "MIT",
			"main": "dist/index.js",
			"module": "dist/index.mjs",
			"types": "dist/index.d.ts",
			"type": "module",
			"exports": {
				".": {
					"types": "./dist/index.d.ts",
					"require": "./dist/index.cjs",
					"import": "./dist/index.js"
				}
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/x0aa7i/postcss-typescaler.git"
			},
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"typography scale",
				"type scale"
			],
			"peerDependencies": {
				"postcss": ">=8.0.0"
			},
			"devDependencies": {
				"@ianvs/prettier-plugin-sort-imports": "^4.4.1",
				"postcss": "^8.5.3",
				"prettier": "^3.5.3",
				"tsup": "^8.5.0",
				"typescript": "^5.8.3",
				"vitest": "^3.1.3"
			},
			"scripts": {
				"build": "tsup",
				"format": "prettier --write .",
				"lint": "tsc --noEmit && prettier --check .",
				"dev": "tsup --watch",
				"test": "vitest run"
			},
			"_id": "postcss-typescaler@0.7.0",
			"bugs": {
				"url": "https://github.com/x0aa7i/postcss-typescaler/issues"
			},
			"homepage": "https://github.com/x0aa7i/postcss-typescaler#readme",
			"_integrity": "sha512-54l/eImNMBdMFP3ZaJtKoaen/Sn9I2FnoiH/niwaK2o+H4lb7TcLbXKhZySRjiMVGL5wbp4lvyIotLWYFBLMvQ==",
			"_resolved": "/tmp/dc7a2da90bf0adabe0aa1b793983a4c0/postcss-typescaler-0.7.0.tgz",
			"_from": "file:postcss-typescaler-0.7.0.tgz",
			"_nodeVersion": "22.14.0",
			"_npmVersion": "10.9.2",
			"dist": {
				"integrity": "sha512-54l/eImNMBdMFP3ZaJtKoaen/Sn9I2FnoiH/niwaK2o+H4lb7TcLbXKhZySRjiMVGL5wbp4lvyIotLWYFBLMvQ==",
				"shasum": "43114d0b6ad43a28614cba06be904f68c6b75d40",
				"tarball": "https://registry.npmjs.org/postcss-typescaler/-/postcss-typescaler-0.7.0.tgz",
				"fileCount": 9,
				"unpackedSize": 82931,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEQCIAQ0yOiVqIq97pr9GlFmNp+H8Fg8FA7Fu3jtJe6VZgD4AiAfQi5A4Pl5dncaeOA1xBWhq8c29NUr88IAbSRAFN8Tpw=="
					}
				]
			},
			"_npmUser": {
				"name": "x0aa7",
				"email": "contact.achak@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "x0aa7",
					"email": "contact.achak@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-typescaler_0.7.0_1748217978722_0.7433451740224652"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-05-23T13:05:06.427Z",
		"modified": "2025-05-26T00:06:19.104Z",
		"0.5.3": "2025-05-23T13:05:06.600Z",
		"0.7.0": "2025-05-26T00:06:18.942Z"
	},
	"bugs": {
		"url": "https://github.com/x0aa7i/postcss-typescaler/issues"
	},
	"author": {
		"name": "Abdelilah Achak",
		"email": "contact.achak@gmail.com"
	},
	"license": "MIT",
	"homepage": "https://github.com/x0aa7i/postcss-typescaler#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"typography scale",
		"type scale"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/x0aa7i/postcss-typescaler.git"
	},
	"description": "PostCSS plugin for generating modular typographic scales.",
	"maintainers": [
		{
			"name": "x0aa7",
			"email": "contact.achak@gmail.com"
		}
	],
	"readme": "# PostCSS TypeScaler\n\nA PostCSS plugin that simplifies **typographic scale generation** using **CSS custom properties**. Define your desired scale once, and `postcss-typescaler` automatically outputs CSS variables for various font sizes and line heights based on a modular scale. This helps maintain a consistent and harmonious typography in your project.\n\n## 🚀 Installation\n\n```bash\nnpm install postcss-typescaler\n```\n\n```bash\npnpm add postcss-typescaler\n```\n\n## 🔧 Setup\n\nIntegrate the plugin into your PostCSS configuration:\n\n```javascript\n// postcss.config.js\nimport typescaler from \"postcss-typescaler\";\n\nexport default {\n  plugins: [typescaler(/* options */)],\n};\n```\n\nOr use directly in your JavaScript code:\n\n```javascript\nimport { postcss } from \"postcss\";\nimport typescaler from \"postcss-typescaler\";\n\nconst processor = postcss([typescaler(/* options */)]).process(cssInput);\nconst result = processor.css;\n```\n\n## 📖 Usage (CSS)\n\n### Define Scales with @typescaler\n\nUse the @typescaler at-rule to define global options and individual type steps in CSS.\n\n```css\n/*\n  The @typescaler at-rule will be replaced by generated CSS custom properties.\n  Options defined here override those in postcss.config.js.\n*/\n@typescaler {\n  /* Global options for the scale */\n  scale: 1.2; /* Override the default scale */\n  font-size: 18px; /* New base font size (can be px, rem, em, or unitless) */\n  line-height: 1.6;\n  prefix: \"typescale\"; /* Custom prefix for your variables */\n  preset: \"default\"; /* Use a built-in preset for initial steps */\n\n  /*\n    Define individual steps using a custom property.\n    --[step-name]: [step-value] [line-height-value] [letter-spacing-value];\n    values are space-separated\n  */\n  --sm: -1; /* step: -1, uses global line-height */\n  --base: 0 1.5; /* step: 0, lineHeight: 1.5 */\n  --lg: 1 1.2 0.05em; /* step: 1, lineHeight: 1.2, letterSpacing: 0.05em */\n}\n\n/* Example usage of the generated variables in your CSS */\n.title {\n  font-size: var(--typescale-lg);\n  line-height: var(--typescale-lg--line-height);\n  letter-spacing: var(--typescale-lg--letter-spacing);\n}\n```\n\n### Alternative Syntax\n\nDefine steps with granular control using `--step`, `--font-size`, `--line-height`, and `--letter-spacing`:\n\n```css\n/* input.css */\n\n@typescaler {\n  /* ... Global options ... */\n\n  --xs--step: -2; /* Equivalent to --xs: -2 */\n  --xs--line-height: 1.3;\n\n  --md--font-size: 1rem; /* Explicit font size overrides the scale calculation */\n  --md--line-height: calc(2 / 1.5);\n  --md--letter-spacing: -0.01em;\n}\n```\n\n### Output Example\n\nInput:\n\n```css\n@typescaler {\n  scale: 1.25;\n  font-size: 16px;\n\n  --base: 0 1.6;\n  --lg: 1;\n}\n```\n\nOutput:\n\n```css\n:root {\n  --typescale-base: 1rem; /* 16px */\n  --typescale-base--line-height: 1.6;\n  --typescale-lg: 1.25rem; /* 20px */\n  --typescale-lg--line-height: 1.5;\n}\n```\n\n### Resetting Properties\n\nYou can reset a step property to its default value by setting it to `initial` similar to how it's done in CSS:\n\n```css\n@typescaler {\n  line-height: 1.5;\n  preset: \"default\";\n\n  --xs: initial;\n  --md--line-height: initial;\n}\n```\n\nThis will remove the `xs` step and set the `md` step's line height to the default value of `1.5`.\n\n### Option Resolution Order\n\nThe plugin resolves options using the following precedence (last wins):\n\n1. **Default Options**: Internal defaults within the plugin.\n2. **JavaScript Options**: Options passed directly to the plugin in `postcss.config.js`.\n3. **CSS Options**: Options defined directly as declarations within the `@typescaler` at-rule in CSS (e.g., `scale: 1.2;`).\n\nSteps are resolved in the following order (last wins):\n\n1. **JavaScript Steps**: Individual steps defined in the `steps` property of the JavaScript plugin options.\n2. **Preset Steps**: If a `preset` (e.g., `'tailwind'`, `'default'`) is specified.\n3. **CSS Steps**: Steps defined as CSS custom properties within the `@typescaler` at-rule (e.g., `--md: 0 1.5;`).\n\n## ⚙️ Options\n\nYou can configure `postcss-typescaler` by passing an options object to the plugin.\n\n| Option Name  | Type                        | Default     | Description                                                                                                                                                                                                                                                                                                                                        |\n| :----------- | :-------------------------- | :---------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `scale`      | `number`                    | `1.125`     | The base value used for calculating font sizes on the modular scale. A larger `scale` results in more pronounced size differences between steps.                                                                                                                                                                                                   |\n| `fontSize`   | `number` or `string`        | `16`        | The fundamental font size in pixels, serving as the base for all calculations. Unitless numbers are treated as pixels (e.g., `16` is `16px`).                                                                                                                                                                                                      |\n| `lineHeight` | `number` or `string`        | `\"1.5\"`     | The default line height applied to all steps unless overridden. Can be a unitless number (e.g., `1.5`), a pixel value (`\"24px\"`), or a `rem` value (`\"1.5rem\"`).                                                                                                                                                                                   |\n| `prefix`     | `string`                    | `\"type\"`    | A string prefix for generated CSS variables (e.g., `--typescale-xl` if prefix is \"typescale\").                                                                                                                                                                                                                                                     |\n| `rounded`    | `boolean`                   | `true`      | If `true`, calculated pixel font sizes will be rounded to the nearest whole number.                                                                                                                                                                                                                                                                |\n| `stepOffset` | `number`                    | `0`         | Adjusts all font size steps by this offset, including those from `steps` and `preset`. Positive values increase, negative values decrease the scale.                                                                                                                                                                                               |\n| `preset`     | `\"default\"` or `\"tailwind\"` | `undefined` | A preset name to use for the default step configurations. Available presets: `\"default\"`, `\"tailwind\"`.                                                                                                                                                                                                                                            |\n| `steps`      | `object`                    | `undefined` | A map of custom step names (e.g., `'sm'`, `'base'`, `'xl'`) to their configuration options. Step values can be provided as a direct number shorthand (e.g., `sm: -1`) or a detailed object (e.g., `base: { step: 0, lineHeight: 1.5 }`). These settings serve as defaults or fallbacks if no corresponding steps are defined directly in your CSS. |\n\n### Type Step Configuration (`TypeStep`)\n\nIndividual type steps can be configured within the `steps` option (in JavaScript) or via nested at-rules/shorthand declarations (in CSS).\n\n| Option Name     | Type                 | Description                                                                                                                                                                                                 |\n| :-------------- | :------------------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `step`          | `number`             | The step value on the modular scale. A positive number for larger text, a negative number for smaller text. If `fontSize` is provided for this step, `step` is ignored.                                     |\n| `fontSize`      | `string` or `number` | An explicit font size (e.g., `\"16px\"`, `\"1rem\"`) that overrides the modular scale calculation for this specific step. Unitless numbers are treated as pixels. If provided, `step` is ignored for this step. |\n| `lineHeight`    | `string` or `number` | The line height for this step. Can be a unitless number (e.g., `1.5`), a pixel value (e.g., `\"24px\"`), or a `rem` value.                                                                                    |\n| `letterSpacing` | `string`             | The letter spacing for this step. Accepts any valid CSS `letter-spacing` value.                                                                                                                             |\n\n## 🎨 Presets\n\n`postcss-typescaler` comes with two built-in presets to help you quickly establish a typographic system:\n\n- **`\"default\"`** – A modular scale preset based on uniform `step` values. It includes a sensible set of typographic steps (`xs`, `sm`, `base`, `md`, `lg`, `xl`, `2xl`, ..., `9xl`) with predefined `lineHeight` values, making it a solid foundation for most projects.\n\n- **`\"tailwind\"`** – This preset mimics Tailwind CSS’s default typography scale, which is not based on a consistent modular ratio. Instead, it uses hand-tuned, nonuniform step values to replicate Tailwind’s sizing. Use this only if you want\n  👉 **Note**: For an exact match with Tailwind's font sizes, use the default plugin options:\n\n  ```ts\n  { scale: 1.125, rounded: true, }\n  ```\n\n**Example using a preset in your CSS:**\n\n```css\n@typescaler {\n  preset: \"default\"; /* Apply the Default preset */\n\n  /* You can still override individual steps from the preset */\n  --base--font-size: 1.125rem; /* Override the 'base' font size from the Default preset */\n  }\n}\n```\n\nThese presets provide a great starting point and can be customized further via overrides in your CSS.\n\n## 🤝 Contributing\n\nContributions are welcome! Feel free to open an issue or submit a pull request with ideas, improvements, or fixes.\n",
	"readmeFilename": "README.md",
	"_downloads": 3
}
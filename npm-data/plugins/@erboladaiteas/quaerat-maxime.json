{
	"_id": "@erboladaiteas/quaerat-maxime",
	"name": "@erboladaiteas/quaerat-maxime",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "@erboladaiteas/quaerat-maxime",
			"version": "1.0.0",
			"description": "### use .env files in your projects",
			"main": "index.js",
			"scripts": {},
			"author": {
				"name": "erboladai"
			},
			"license": "MIT",
			"dependencies": {
				"@dramateas/facilis-quae-omnis-consequatur": "^1.0.0",
				"@dramateas/magni-explicabo-esse-magnam": "^1.0.0",
				"@dramateas/quis-nisi-error-quos": "^1.0.0",
				"@dramateas/quos-aut-natus-odit": "^1.0.0",
				"@dramateas/recusandae-molestiae-mollitia-modi": "^1.0.0",
				"@dramateas/recusandae-perferendis-accusantium-architecto": "^1.0.0",
				"@dramateas/unde-porro-quidem-distinctio": "^1.0.0",
				"@dramateas/ut-distinctio-aliquam-est": "^1.0.0",
				"@erboladaiteas/accusantium-nobis-amet": "^1.0.0",
				"@erboladaiteas/aperiam-vitae-accusamus-fugiat": "^1.0.0",
				"@erboladaiteas/architecto-modi-illo-dolorum": "^1.0.0",
				"@erboladaiteas/at-officiis-nostrum-odit": "^1.0.0",
				"@erboladaiteas/corporis-iusto-autem-voluptate": "^1.0.0",
				"@erboladaiteas/culpa-est-magnam-autem": "^1.0.0",
				"@erboladaiteas/dolorem-quasi-provident-expedita": "^1.0.0",
				"@erboladaiteas/earum-non-facere-mollitia": "^1.0.0",
				"@erboladaiteas/enim-saepe-aliquid-perspiciatis": "^1.0.0",
				"@erboladaiteas/esse-labore-ea-facere": "^1.0.0",
				"@erboladaiteas/ex-excepturi-neque-perferendis": "^1.0.0",
				"@erboladaiteas/id-quas-adipisci-velit": "^1.0.0",
				"@erboladaiteas/illum-odio-impedit": "^1.0.0",
				"@erboladaiteas/in-cum-autem-corporis": "^1.0.0",
				"@erboladaiteas/ipsa-officiis-eaque-provident": "^1.0.0",
				"@erboladaiteas/itaque-quidem-inventore": "^1.0.0",
				"@erboladaiteas/mollitia-vero-consequatur-nihil": "^1.0.0",
				"@erboladaiteas/nostrum-aut-dignissimos-in": "^1.0.0",
				"@erboladaiteas/numquam-beatae-illum-explicabo": "^1.0.0",
				"@erboladaiteas/odio-consequuntur-at-atque": "^1.0.0",
				"@erboladaiteas/omnis-at-facilis": "^1.0.0",
				"@erboladaiteas/perferendis-fugit-ad-facere": "^1.0.0",
				"@erboladaiteas/quasi-ullam-placeat-consequuntur": "^1.0.0",
				"@erboladaiteas/recusandae-possimus-blanditiis-nemo": "^1.0.0",
				"@erboladaiteas/sequi-ullam-est": "^1.0.0",
				"@erboladaiteas/tempore-repudiandae-ullam-nulla": "^1.0.0",
				"@erboladaiteas/voluptas-reiciendis-veritatis-suscipit": "^1.0.0",
				"@juiggitea/aperiam-facilis-molestias-mollitia": "^1.0.0",
				"@juiggitea/corporis-doloribus-alias-voluptas": "^1.0.0",
				"@juiggitea/possimus-impedit-est-sint": "^1.0.0",
				"@juiggitea/possimus-quos-sint-dolorem": "^1.0.0",
				"@juiggitea/praesentium-porro-voluptates-officiis": "^1.0.0",
				"@juiggitea/sapiente-soluta-minima-fuga": "^1.0.0",
				"@juiggitea/ut-nostrum-temporibus-autem": "^1.0.0",
				"@kollusietea/ad-commodi-temporibus-ex": "^1.0.0",
				"@kollusietea/consequuntur-nam-tempora-expedita": "^1.0.0",
				"@kollusietea/incidunt-veniam-maxime-dicta": "^1.0.0",
				"@kollusietea/neque-officiis-molestias-a": "^1.0.0",
				"@kollusietea/quidem-enim-ad-numquam": "^1.0.0",
				"@kollusietea/saepe-iure-soluta-facilis": "^1.0.0",
				"@kollusietea/vero-fugit-voluptatem-accusamus": "^1.0.0",
				"@kollusietea/voluptate-porro-magnam-et": "^1.0.0",
				"@swenkertrea/asperiores-suscipit-saepe-hic": "^1.0.0",
				"@swenkertrea/corporis-consequuntur-qui-esse": "^1.0.0",
				"@swenkertrea/fugiat-consequatur-et-occaecati": "^1.0.0",
				"@swenkertrea/id-earum-blanditiis-ullam": "^1.0.0",
				"@swenkertrea/sed-ducimus-consectetur-maxime": "^1.0.0",
				"@swenkertrea/ut-illo-aliquid-illum": "^1.0.0",
				"@zittertea/aliquam-asperiores-veritatis-totam": "^1.0.0",
				"@zittertea/dignissimos-harum-sint-alias": "^1.0.0",
				"@zittertea/minima-nisi-placeat-cupiditate": "^1.0.0",
				"@zittertea/rerum-totam-officia-laudantium": "^1.0.0"
			},
			"keywords": [
				"debug",
				"prefix",
				"typanion",
				"warning",
				"RFC-6455",
				"querystring",
				"serialize",
				"characters",
				"ES5",
				"japanese",
				"workflow",
				"npm",
				"symlinks",
				"fast-clone",
				"tap",
				"performant",
				"Symbol",
				"s3",
				"ebs",
				"api",
				"util.inspect",
				"Object.fromEntries",
				"some",
				"fp",
				"cloudsearch",
				"fast-deep-clone",
				"flag",
				"cache",
				"regexp",
				"resolve",
				"call-bound",
				"ES2019",
				"postcss-plugin",
				"input",
				"Array",
				"is",
				"slice",
				"ECMAScript 6",
				"browser",
				"feed",
				"property",
				"deepcopy",
				"ES2018",
				"fast-copy",
				"object",
				"key value",
				"Uint16Array",
				"inference",
				"ECMAScript 2016",
				"setPrototypeOf",
				"redirect",
				"queue",
				"ajv",
				"command-line",
				"electron",
				"chromium",
				"Rx",
				"browserlist",
				"jQuery",
				"convert",
				"Promise",
				"Array.prototype.flat",
				"dom-testing-library",
				"rapid",
				"parent",
				"Map",
				"es2018",
				"String.prototype.matchAll",
				"process",
				"ESnext",
				"robust",
				"equal",
				"tdd",
				"getter",
				"promise",
				"sharedarraybuffer",
				"groupBy",
				"dayjs",
				"optimist",
				"monorepo",
				"keys",
				"javascript",
				"rm",
				"curried",
				"joi",
				"isConcatSpreadable"
			],
			"repository": {
				"type": "git",
				"url": "git+https://github.com/erboladaiteas/quaerat-maxime.git"
			},
			"homepage": "https://github.com/erboladaiteas/quaerat-maxime/#readme",
			"bugs": {
				"url": "https://github.com/erboladaiteas/quaerat-maxime/issues"
			},
			"_id": "@erboladaiteas/quaerat-maxime@1.0.0",
			"gitHead": "e8c9bdfbe2a43fe9dffacd33713bd919aa0b371f",
			"_nodeVersion": "20.13.1",
			"_npmVersion": "10.5.2",
			"dist": {
				"integrity": "sha512-1VmpD96JU+BBUEsDtpsLYnAEQqQzE3yrtX6NwZN1N7x/OZx+8LYnK9j8WjMP3/Jl1wPaylPrdwts0MDzJmBdOQ==",
				"shasum": "144cbba7976c05872facf7f19d25628031d1d524",
				"tarball": "https://registry.npmjs.org/@erboladaiteas/quaerat-maxime/-/quaerat-maxime-1.0.0.tgz",
				"fileCount": 14,
				"unpackedSize": 14793,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCdQGll9dTX1nl9He66A7DSKdCAZvyAoxLUQXGlRFoimgIgXUYXd96/9TfF7x+Ez937lJ5zFBy0CKgl4RFpa3xFDCo="
					}
				]
			},
			"_npmUser": {
				"name": "diepminhb311",
				"email": "diepminhb311@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "diepminhb311",
					"email": "diepminhb311@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/quaerat-maxime_1.0.0_1716547129396_0.5911948177631352"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2024-05-24T10:38:49.290Z",
		"1.0.0": "2024-05-24T10:38:49.533Z",
		"modified": "2024-05-24T10:38:49.800Z"
	},
	"maintainers": [
		{
			"name": "diepminhb311",
			"email": "diepminhb311@gmail.com"
		}
	],
	"description": "### use .env files in your projects",
	"homepage": "https://github.com/erboladaiteas/quaerat-maxime/#readme",
	"keywords": [
		"debug",
		"prefix",
		"typanion",
		"warning",
		"RFC-6455",
		"querystring",
		"serialize",
		"characters",
		"ES5",
		"japanese",
		"workflow",
		"npm",
		"symlinks",
		"fast-clone",
		"tap",
		"performant",
		"Symbol",
		"s3",
		"ebs",
		"api",
		"util.inspect",
		"Object.fromEntries",
		"some",
		"fp",
		"cloudsearch",
		"fast-deep-clone",
		"flag",
		"cache",
		"regexp",
		"resolve",
		"call-bound",
		"ES2019",
		"postcss-plugin",
		"input",
		"Array",
		"is",
		"slice",
		"ECMAScript 6",
		"browser",
		"feed",
		"property",
		"deepcopy",
		"ES2018",
		"fast-copy",
		"object",
		"key value",
		"Uint16Array",
		"inference",
		"ECMAScript 2016",
		"setPrototypeOf",
		"redirect",
		"queue",
		"ajv",
		"command-line",
		"electron",
		"chromium",
		"Rx",
		"browserlist",
		"jQuery",
		"convert",
		"Promise",
		"Array.prototype.flat",
		"dom-testing-library",
		"rapid",
		"parent",
		"Map",
		"es2018",
		"String.prototype.matchAll",
		"process",
		"ESnext",
		"robust",
		"equal",
		"tdd",
		"getter",
		"promise",
		"sharedarraybuffer",
		"groupBy",
		"dayjs",
		"optimist",
		"monorepo",
		"keys",
		"javascript",
		"rm",
		"curried",
		"joi",
		"isConcatSpreadable"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/erboladaiteas/quaerat-maxime.git"
	},
	"author": {
		"name": "erboladai"
	},
	"bugs": {
		"url": "https://github.com/erboladaiteas/quaerat-maxime/issues"
	},
	"license": "MIT",
	"readme": "# @erboladaiteas/quaerat-maxime\n\n### use .env files in your projects\n\nWith **@erboladaiteas/quaerat-maxime** you have the opportunity to use environment variables directly in your project.\\\nYou can parse **.env** files and add them to the global variables **_process.env_**.  \\\nYou can also specify default values with **@erboladaiteas/quaerat-maxime**. These values are used if there is no environment variable.\\\nThis makes it easier to check for errors and use standard configurations.\n\nYou also have the option to define nested variables, arrays and objects in the environment file \\\nYou can use inline comments and masked hashtags (\\\\#)\n\n> **This module is compatible with processenv from TheNativeWeb. I would like to thank the team at TheNativeWeb very\nmuch.**\n\n_Click here to go to the GitHub page of processenv by TheNativeWeb_\n\n> [TheNativeWeb GitHub](https://github.com/thenativeweb/processenv)\n\n_Click here to go to the npmjs page of processenv by TheNativeWeb_\n\n> [TheNativeWeb npmjs](https://www.npmjs.com/package/processenv)\n\n## Version 2.0.2\n\ncheckout the [Changelog](CHANGELOG.md)\n\n---\n\n## Documentation\n\ncheckout the [documentation](docs/DOCUMENTATION.md)\n\n## Installation\n\n```shell\n$ npm install @erboladaiteas/quaerat-maxime\n```\n\n---\n\n### get environment variables\n\n```dotenv\n# this .env file is a example\nMODE=live\nIGNORED=${HOME_PATH}\nHOME_PATH=/var/www\nLOG_PATH=${HOME_PATH}/log\nACCESS_LOG='${LOG_PATH}/access.log'\nERROR_LOG=${LOG_PATH}/error.log\nERROR_MODE='{ \"info\": \"${LOG_PATH}/info.log\", \"fatal\": \"${LOG_PATH}/fatal.log\", \"exception\": \"${LOG_PATH}/exception.log\" }'\nERROR_MODE_ARRAY='[ \"info\\\\#with masked hash\", \"fatal\", \"exception\" ]'\nINLINE_COMMENT='this is a inline comment #not parsed'\nINLINE_COMMENT_WITH_ESCAPE='this is an inline comment \\# with masked hash'\n```\n\n## basic usage\n\n```js\nconst { processenv } = require('@erboladaiteas/quaerat-maxime');\nconst home_path = processenv('HOME_PATH');\n```\n\n---\n\n## full usage\n\n```js\nconst { processenv } = require('@erboladaiteas/quaerat-maxime');\n\nconst getAllEnv = processenv();\n/* output: all environment  variables */\n\nconst getAllEnvCallback = processenv((env) => {\n  return env;\n});\n/* output: all environment  variables */\n\nconst getEnvByKey = processenv('MODE');\n/* output: live */\n\nconst getEnvByKeyWithDefaultValue = processenv('MODE_TYPE', 'live');\n/* output: live - MODE_TYPE does not exist */\n\nconst getEnvByKeyWithDefaultByCallback = processenv('MODE_TYPE', (val) => {\n  return val ?? 'live';\n});\n/* output: live - MODE_TYPE does not exist */\n\nconst getEnvByKeyWithOperator = processenv('MODE_TYPE') ?? 'live';\n/* output: live - MODE_TYPE does not exist */\n\nconst getEnvByKeyWithValidateCallback = processenv('MODE', (val) => {\n  return val === 'live';\n});\n/* output: true - MODE is available and is live */\n\nconst getEnvByKeyWithAsyncCallback = await processenv('MODE', async (val) => {\n  return val === 'live';\n});\n/* output: true - MODE is available and is live */\n\nconst getEnvByKeyWithInlineComment = await processenv('INLINE_COMMENT');\n/* output: this is a inline comment */\n\nconst getEnvByKeyWithInlineCommentWithEscapedHash = await processenv('INLINE_COMMENT_WITH_ESCAPE_HASH');\n/* output: this is a inline comment # with escaped hash */\n```\n\n### END\n\n> Did you find any suggestions or bugs? Make a pull request or ask your question :-)\n",
	"readmeFilename": "README.md",
	"_downloads": 64
}
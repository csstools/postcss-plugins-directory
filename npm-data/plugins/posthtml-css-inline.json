{
	"_id": "posthtml-css-inline",
	"_rev": "4-80d3d27a4e6a365ed586f8cb7af94392",
	"name": "posthtml-css-inline",
	"dist-tags": {
		"latest": "0.2.1"
	},
	"versions": {
		"0.0.1": {
			"name": "posthtml-css-inline",
			"description": "Inline CSS from HTML `<style>` tags into `style` attributes.",
			"version": "0.0.1",
			"license": "MIT",
			"author": {
				"name": "PostHTML",
				"url": "https://github.com/cossssmin"
			},
			"bugs": {
				"url": "https://github.com/cossssmin/posthtml-css-inline/issues"
			},
			"homepage": "https://github.com/cossssmin/posthtml-css-inline",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/cossssmin/posthtml-css-inline.git"
			},
			"type": "module",
			"exports": "./lib/index.js",
			"engines": {
				"node": ">=18.0.0"
			},
			"scripts": {
				"test": "c8 ava",
				"pretest": "xo",
				"release": "np"
			},
			"keywords": [
				"css",
				"html",
				"inline",
				"posthtml",
				"posthtml-plugin",
				"postcss-plugin"
			],
			"devDependencies": {
				"ava": "^6.0.1",
				"c8": "^8.0.1",
				"np": "^9.2.0",
				"posthtml": "^0.16.5",
				"xo": "^0.56.0"
			},
			"dependencies": {
				"ofetch": "^1.3.3",
				"postcss": "^8.4.32",
				"postcss-safe-parser": "^7.0.0",
				"posthtml-attrs-parser": "^0.1.1",
				"posthtml-match-helper": "^1.0.3",
				"specificity": "^1.0.0"
			},
			"_id": "posthtml-css-inline@0.0.1",
			"gitHead": "fd81a4c3acecec317cfa7332a82f39b3cf44e58b",
			"_nodeVersion": "20.10.0",
			"_npmVersion": "10.2.4",
			"dist": {
				"integrity": "sha512-huqxmZnkHqIjq8rGi5451ntbDAJWUOh54ecsLV7IrBmfVkl9Z1vHyIzctYfSqBCel9lk8BLbTwHTtsFg9gkFpw==",
				"shasum": "ce6e8d2e619864eda321802120e6f3b5dd3a6512",
				"tarball": "https://registry.npmjs.org/posthtml-css-inline/-/posthtml-css-inline-0.0.1.tgz",
				"fileCount": 10,
				"unpackedSize": 16036,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIH9LSKSoAbZqNkEanSgsUusYdmd79HKIIgUEjQEsqJfzAiEA/eYEOfeB+KnORisKikDUJE7hDf8qlaqxSPcgTs6ZI4k="
					}
				]
			},
			"_npmUser": {
				"name": "cossssmin",
				"email": "hellocosmin@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "cossssmin",
					"email": "hellocosmin@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/posthtml-css-inline_0.0.1_1704301068030_0.21791839380488165"
			},
			"_hasShrinkwrap": false
		},
		"0.0.2": {
			"name": "posthtml-css-inline",
			"description": "Inline CSS from HTML `<style>` tags into `style` attributes.",
			"version": "0.0.2",
			"license": "MIT",
			"author": {
				"name": "PostHTML",
				"url": "https://github.com/cossssmin"
			},
			"bugs": {
				"url": "https://github.com/cossssmin/posthtml-css-inline/issues"
			},
			"homepage": "https://github.com/cossssmin/posthtml-css-inline",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/cossssmin/posthtml-css-inline.git"
			},
			"type": "module",
			"exports": "./lib/index.js",
			"engines": {
				"node": ">=18.0.0"
			},
			"scripts": {
				"test": "c8 ava",
				"pretest": "xo",
				"release": "np"
			},
			"keywords": [
				"css",
				"html",
				"inline",
				"posthtml",
				"posthtml-plugin",
				"postcss-plugin"
			],
			"devDependencies": {
				"ava": "^6.0.1",
				"c8": "^8.0.1",
				"np": "^9.2.0",
				"posthtml": "^0.16.5",
				"xo": "^0.56.0"
			},
			"dependencies": {
				"ofetch": "^1.3.3",
				"postcss": "^8.4.32",
				"postcss-safe-parser": "^7.0.0",
				"posthtml-attrs-parser": "^0.1.1",
				"posthtml-match-helper": "^1.0.3",
				"specificity": "^1.0.0"
			},
			"_id": "posthtml-css-inline@0.0.2",
			"gitHead": "7253c5ab4c2a922851400272aabb48e473617869",
			"_nodeVersion": "20.10.0",
			"_npmVersion": "10.2.4",
			"dist": {
				"integrity": "sha512-tlx8YFn5pkjG9gJTFEK8Dpo8mwTmhvqmOybEN/3qwjbLlx5lUbWreCRkwOrxlYLX+t02o+k73K3k34rmt+vdYg==",
				"shasum": "cf998e62f0a45cb2d2841dc2e4b910e47be44e67",
				"tarball": "https://registry.npmjs.org/posthtml-css-inline/-/posthtml-css-inline-0.0.2.tgz",
				"fileCount": 10,
				"unpackedSize": 16330,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIE2szS5PNPuc/yuoYBcoTviW6g4A/VZkzy+74/8qh8TeAiEAwQdSYTAfj0XRqetHPaX3EMGS7l2+xEF2caUp1WlNzZs="
					}
				]
			},
			"_npmUser": {
				"name": "cossssmin",
				"email": "hellocosmin@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "cossssmin",
					"email": "hellocosmin@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/posthtml-css-inline_0.0.2_1704304473999_0.42952737835475907"
			},
			"_hasShrinkwrap": false
		},
		"0.1.0": {
			"name": "posthtml-css-inline",
			"description": "Inline CSS from HTML `<style>` tags into `style` attributes.",
			"version": "0.1.0",
			"license": "MIT",
			"author": {
				"name": "PostHTML",
				"url": "https://github.com/cossssmin"
			},
			"bugs": {
				"url": "https://github.com/cossssmin/posthtml-css-inline/issues"
			},
			"homepage": "https://github.com/cossssmin/posthtml-css-inline",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/cossssmin/posthtml-css-inline.git"
			},
			"type": "module",
			"exports": "./lib/index.js",
			"engines": {
				"node": ">=18"
			},
			"scripts": {
				"dev": "vitest",
				"pretest": "xo",
				"release": "np",
				"test": "vitest run --coverage"
			},
			"keywords": [
				"css",
				"html",
				"inline",
				"posthtml",
				"posthtml-plugin",
				"postcss-plugin"
			],
			"devDependencies": {
				"@vitest/coverage-v8": "^1.1.3",
				"np": "^9.2.0",
				"posthtml": "^0.16.6",
				"vitest": "^1.1.3",
				"xo": "^0.56.0"
			},
			"dependencies": {
				"ofetch": "^1.3.3",
				"postcss": "^8.4.32",
				"postcss-safe-parser": "^7.0.0",
				"posthtml-attrs-parser": "^0.1.1",
				"posthtml-match-helper": "^1.0.4",
				"specificity": "^1.0.0"
			},
			"_id": "posthtml-css-inline@0.1.0",
			"gitHead": "12de0b23c190df18361494df8bc88db25fb9fe7a",
			"_nodeVersion": "20.10.0",
			"_npmVersion": "10.2.4",
			"dist": {
				"integrity": "sha512-EENKcLTAV/7CWSuzKaSpNm3Z7uk9LUdFgMiliL2vczMTg8paWooSED3F85k7JDQB0J76v3bennSkxjAB63hzaA==",
				"shasum": "e0a2e9d014c281a55b0b3ca762958827e511e2f5",
				"tarball": "https://registry.npmjs.org/posthtml-css-inline/-/posthtml-css-inline-0.1.0.tgz",
				"fileCount": 10,
				"unpackedSize": 20026,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIFVYKKRaXp2DiG89HPcbLcixei0jxympmpi75fqtVBo/AiAEAce/M0IOfzQjem8eH9k0xexu+J7vPjsM1zAPcdoAww=="
					}
				]
			},
			"_npmUser": {
				"name": "cossssmin",
				"email": "hellocosmin@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "cossssmin",
					"email": "hellocosmin@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/posthtml-css-inline_0.1.0_1705768771719_0.8951780535151255"
			},
			"_hasShrinkwrap": false
		},
		"0.2.0": {
			"name": "posthtml-css-inline",
			"description": "Inline CSS from HTML `<style>` tags into `style` attributes.",
			"version": "0.2.0",
			"license": "MIT",
			"author": {
				"name": "PostHTML",
				"url": "https://github.com/cossssmin"
			},
			"bugs": {
				"url": "https://github.com/cossssmin/posthtml-css-inline/issues"
			},
			"homepage": "https://github.com/cossssmin/posthtml-css-inline",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/cossssmin/posthtml-css-inline.git"
			},
			"type": "module",
			"exports": "./lib/index.js",
			"engines": {
				"node": ">=18"
			},
			"scripts": {
				"dev": "vitest",
				"pretest": "xo",
				"release": "np",
				"test": "vitest run --coverage"
			},
			"keywords": [
				"css",
				"html",
				"inline",
				"posthtml",
				"posthtml-plugin",
				"postcss-plugin"
			],
			"devDependencies": {
				"@vitest/coverage-v8": "^1.1.3",
				"np": "^9.2.0",
				"posthtml": "^0.16.6",
				"vitest": "^1.1.3",
				"xo": "^0.56.0"
			},
			"dependencies": {
				"ofetch": "^1.3.3",
				"postcss": "^8.4.32",
				"postcss-safe-parser": "^7.0.0",
				"posthtml-attrs-parser": "^0.1.1",
				"posthtml-match-helper": "^1.0.4",
				"specificity": "^1.0.0"
			},
			"_id": "posthtml-css-inline@0.2.0",
			"gitHead": "30d57afd10bb89f735669a02ca857bfc7c37f36b",
			"_nodeVersion": "20.10.0",
			"_npmVersion": "10.2.4",
			"dist": {
				"integrity": "sha512-4n0VVIVaQ56PrSrktF8OlkAf213qdhnc8OvPN80dBr6bevQAWlDtoG6KVFN7V2lEtv4KHMAS5Ic30BD6gsGBfg==",
				"shasum": "b8d7d12960a94d055c86bd9023104ea212e563c4",
				"tarball": "https://registry.npmjs.org/posthtml-css-inline/-/posthtml-css-inline-0.2.0.tgz",
				"fileCount": 10,
				"unpackedSize": 20972,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCoM8M3A9wGtw9VJgtQxGJgcIgaocPaBpnSCbrvsIv8rwIhAOs06hqJoS8oojK+gAttFyxcOLOL3CEQ2f9xof8AS0lH"
					}
				]
			},
			"_npmUser": {
				"name": "cossssmin",
				"email": "hellocosmin@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "cossssmin",
					"email": "hellocosmin@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/posthtml-css-inline_0.2.0_1705857105428_0.2722387620625615"
			},
			"_hasShrinkwrap": false
		},
		"0.2.1": {
			"name": "posthtml-css-inline",
			"description": "Inline CSS from HTML `<style>` tags into `style` attributes.",
			"version": "0.2.1",
			"license": "MIT",
			"author": {
				"name": "PostHTML",
				"url": "https://github.com/cossssmin"
			},
			"bugs": {
				"url": "https://github.com/cossssmin/posthtml-css-inline/issues"
			},
			"homepage": "https://github.com/cossssmin/posthtml-css-inline",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/cossssmin/posthtml-css-inline.git"
			},
			"type": "module",
			"exports": "./lib/index.js",
			"engines": {
				"node": ">=18"
			},
			"scripts": {
				"dev": "vitest",
				"release": "np",
				"test": "vitest run --coverage",
				"pretest": "eslint lib/*.{js,ts}"
			},
			"keywords": [
				"css",
				"html",
				"inline",
				"posthtml",
				"posthtml-plugin",
				"postcss-plugin"
			],
			"devDependencies": {
				"@vitest/coverage-v8": "^1.3.1",
				"eslint": "^8.57.0",
				"np": "^10.0.0",
				"posthtml": "^0.16.6",
				"vitest": "^1.3.1"
			},
			"dependencies": {
				"ofetch": "^1.3.3",
				"postcss": "^8.4.35",
				"postcss-safe-parser": "^7.0.0",
				"posthtml-attrs-parser": "^1.0.1",
				"posthtml-match-helper": "^2.0.0",
				"specificity": "^1.0.0"
			},
			"_id": "posthtml-css-inline@0.2.1",
			"gitHead": "100dfaef61b6953079bedd2fd254115183cc2690",
			"_nodeVersion": "20.10.0",
			"_npmVersion": "10.2.4",
			"dist": {
				"integrity": "sha512-EXkeYd9VnEZIDhmeM3dWf9a4R1VB612TNdpgea/gOjFEBbHScT7tbwOHitY41ZOZqzHKmgeb07vqZCJgywemxg==",
				"shasum": "16d107a30f5d2ce5492c4bd77c73a1c51baf9a02",
				"tarball": "https://registry.npmjs.org/posthtml-css-inline/-/posthtml-css-inline-0.2.1.tgz",
				"fileCount": 10,
				"unpackedSize": 20223,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCtgtNX6Js5X32sesAEE3CbG2cjnHzQWXughAbXRIsH7gIgbDTuGhEhVpJ2XhojPsMtmb0HAEGgSx+l/JtzwWoebmM="
					}
				]
			},
			"_npmUser": {
				"name": "cossssmin",
				"email": "hellocosmin@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "cossssmin",
					"email": "hellocosmin@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/posthtml-css-inline_0.2.1_1710526639716_0.40924594223115185"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2024-01-03T16:57:48.029Z",
		"0.0.1": "2024-01-03T16:57:48.203Z",
		"modified": "2024-03-15T18:17:20.354Z",
		"0.0.2": "2024-01-03T17:54:34.180Z",
		"0.1.0": "2024-01-20T16:39:31.918Z",
		"0.2.0": "2024-01-21T17:11:45.704Z",
		"0.2.1": "2024-03-15T18:17:19.909Z"
	},
	"maintainers": [
		{
			"name": "cossssmin",
			"email": "hellocosmin@gmail.com"
		}
	],
	"description": "Inline CSS from HTML `<style>` tags into `style` attributes.",
	"homepage": "https://github.com/cossssmin/posthtml-css-inline",
	"keywords": [
		"css",
		"html",
		"inline",
		"posthtml",
		"posthtml-plugin",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/cossssmin/posthtml-css-inline.git"
	},
	"author": {
		"name": "PostHTML",
		"url": "https://github.com/cossssmin"
	},
	"bugs": {
		"url": "https://github.com/cossssmin/posthtml-css-inline/issues"
	},
	"license": "MIT",
	"readme": "<div align=\"center\">\n  <img width=\"150\" height=\"150\" alt=\"PostHTML\" src=\"https://posthtml.github.io/posthtml/logo.svg\">\n  <h1>PostHTML CSS Inline</h1>\n  <p>PostHTML plugin for inlining CSS to HTML style attributes</p>\n\n  [![Version][npm-version-shield]][npm]\n  [![Build][github-ci-shield]][github-ci]\n  [![License][license-shield]][license]\n  [![Downloads][npm-stats-shield]][npm-stats]\n</div>\n\nThis is a work in progress, it's not ready for production yet.\n\nTODO:\n\n- [x] Support `<link rel=\"stylesheet\">` tags\n- [x] Remove inlined selectors from HTML elements\n- [x] Support PostCSS plugins\n- [ ] Support [complex selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_selectors/Selector_structure#complex_selector) *\n- [x] Safelist (selectors that should not be inlined)\n- [x] [Skip inlining](https://github.com/cossssmin/posthtml-css-inline/issues/9) on marked tags\n- [ ] Juice-compatible options\n  - [x] `excludedProperties`\n  - [ ] `resolveCSSVariables`\n  - [ ] `applyHeightAttributes`\n  - [ ] `applyWidthAttributes`\n  - [ ] `applyAttributesTableElements`\n\n\\* This needs to be implemented in PostHTML or [posthtml-match-helper](https://github.com/posthtml/posthtml-match-helper) first.\n\n---\n\n## About\n\nThis plugin will inline CSS from `<style>` and `<link rel=\"stylesheet\">` tags into HTML `style` attributes.\n\nThe CSS will be parsed with [PostCSS](https://postcss.org/), so you can use PostCSS plugins to transform the CSS before it's inlined.\n\nUse cases:\n\n- HTML emails\n- Embedding HTML in 3<sup>rd</sup> party websites\n\nGiven something like this:\n\n```html\n<style>\n  div {\n    color: red;\n  }\n\n  @media (max-width: 600px) {\n    .text-sm {\n      font-size: 16px;\n    }\n  }\n</style>\n<div class=\"text-sm\">Test</div>\n```\n\n... it will output:\n\n```html\n<style>\n  div {\n    color: red;\n  }\n\n  @media (max-width: 600px) {\n    .text-sm {\n      font-size: 16px;\n    }\n  }\n</style>\n<div class=\"text-sm\" style=\"color: red;\">Test</div>\n```\n\n## Install\n\n```\n$ npm i posthtml posthtml-css-inline\n```\n\n## Usage\n\nTo use the plugin, simply pass it to PostHTML:\n\n```js\nimport posthtml from'posthtml'\nimport inlineCss from'posthtml-css-inline'\n\nposthtml([\n  inlineCss(options)\n])\n  .process('your HTML')\n  .then(result => console.log(result.html))\n```\n\n## Options\n\nYou may configure how inlining works by passing an options object to the plugin.\n\n| Option | Type | Default | Description |\n| --- | --- | --- | --- |\n| [`processLinkTags`](#processLinkTags) | `boolean` | `false` | Process `<link rel=\"stylesheet\">` tags. |\n| [`preserveImportant`](#preserveimportant) | `boolean` | `false` | Preserve `!important` in the inlined CSS value. |\n| [`removeInlinedSelectors`](#removeinlinedselectors) | `boolean` | `false` | Remove selectors that were successfully inlined from both the `<style>` tag and from the HTML body. |\n| [`postcss`](#postcss) | `object` | `{}` | Object to configure PostCSS. |\n| [`safelist`](#safelist) | `array` | `[]` | Array of selectors that should not be inlined. |\n| [`excludedProperties`](#excludedproperties) | `array` | `[]` | Array of CSS properties that should not be inlined. |\n\n## Attributes\n\nYou may configure how inlining works on a per-element basis.\n\n| Attribute | Description |\n| --- | --- |\n| [`no-inline`](#no-inline) | Skip inlining on this element. |\n\n### `processLinkTags`\n\nType: `boolean`\\\nDefault: `false`\n\nWhether to process `<link rel=\"stylesheet\">` tags.\n\nThe plugin will fetch the CSS from the URL in the `href` attribute, and replace the `<link>` tag with a `<style>` tag containing the CSS. This `<style>` tag will then be inlined into the HTML.\n\n```js\nimport posthtml from'posthtml'\nimport inlineCss from'posthtml-css-inline'\n\nposthtml([\n  inlineCss({\n    processLinkTags: true\n  })\n])\n  .process(`\n    <link rel=\"stylesheet\" href=\"public/styles.css\">\n\n    <p class=\"text-sm\">small text</p>\n  `)\n  .then(result => result.html)\n```\n\n```css\n/* public/styles.css */\n.text-sm {\n  font-size: 12px;\n}\n```\n\nResult:\n\n```html\n<p class=\"text-sm\" style=\"font-size: 12px\">small text</p>\n```\n\n### `preserveImportant`\n\nType: `boolean`\\\nDefault: `false`\n\nWhether to preserve `!important` in the inlined CSS value.\n\nFor example this:\n\n```js\nimport posthtml from'posthtml'\nimport inlineCss from'posthtml-css-inline'\n\nposthtml([\n  inlineCss({\n    preserveImportant: true\n  })\n])\n  .process(`\n    <style>\n      .text-sm {\n        font-size: 12px;\n      }\n\n      div {\n        font-size: 14px !important;\n      }\n    </style>\n\n    <p class=\"text-sm\">small text</p>\n  `)\n  .then(result => result.html)\n```\n\n... will output this:\n\n```html\n<p class=\"text-sm\" style=\"font-size: 14px !important\">small text</p>\n```\n\n### `removeInlinedSelectors`\n\nType: `boolean`\\\nDefault: `false`\n\nWhether to remove selectors that were successfully inlined from both the `<style>` tag and from the HTML body.\n\nIf a selector that has been inlined is also present inside an at-rule such as `@media`, it will not be removed from the HTML body.\n\n```js\nimport posthtml from'posthtml'\nimport inlineCss from'posthtml-css-inline'\n\nposthtml([\n  inlineCss({\n    removeInlinedSelectors: true\n  })\n])\n  .process(`\n    <style>\n      .text-sm {\n        font-size: 12px;\n      }\n\n      @media (min-width: 640px) {\n        .text-sm {\n          font-size: 16px !important;\n        }\n      }\n    </style>\n\n    <p class=\"text-sm\">small text</p>\n  `)\n  .then(result => result.html)\n```\n\nResult:\n\n```html\n<style>\n  @media (min-width: 640px) {\n    .text-sm {\n      font-size: 16px !important;\n    }\n  }\n</style>\n\n<p class=\"text-sm\" style=\"font-size: 12px\">small text</p>\n```\n\n### `postcss`\n\nType: `object`\\\nDefault: `{}`\n\nYou may configure PostCSS and use PostCSS plugins to transform the CSS before it's inlined.\n\n```js\nimport posthtml from'posthtml'\nimport inlineCss from'posthtml-css-inline'\n// Imaginary PostCSS plugin that removes !important\nimport removeImportant from'remove-important-plugin'\n\nposthtml([\n  inlineCss({\n    postcss: {\n      plugins: [\n        removeImportant\n      ]\n    }\n  })\n])\n  .process(`\n    <style>\n      .text-sm {\n        font-size: 12px !important;\n      }\n\n      @media (min-width: 640px) {\n        .text-sm {\n          font-size: 16px !important;\n        }\n      }\n    </style>\n\n    <p class=\"text-sm\">small text</p>\n  `)\n  .then(result => result.html)\n```\n\nResult:\n\n```html\n<style>\n  .text-sm {\n    font-size: 12px;\n  }\n\n  @media (min-width: 640px) {\n    .text-sm {\n      font-size: 16px;\n    }\n  }\n</style>\n\n<p class=\"text-sm\" style=\"font-size: 12px\">small text</p>\n```\n\n### `safelist`\n\nType: `array`\\\nDefault: `[]`\n\nArray of selectors that should not be inlined.\n\n> [!NOTE]  \n> The CSS `*` selector is not supported when inlining, you don't need to worry about safelisting it.\n\n```js\nimport posthtml from'posthtml'\nimport inlineCss from'posthtml-css-inline'\n\nposthtml([\n  inlineCss({\n    safelist: ['body', '.flex']\n  })\n])\n  .process(`\n    <style>\n      .flex {\n        display: flex;\n      }\n\n      body {\n        color: blue;\n      }\n\n      p {\n        color: red;\n      }\n    </style>\n\n    <body>\n      <p class=\"flex\">small text</p>\n    </body>\n  `)\n  .then(result => result.html)\n```\n\nResult:\n\n```html\n<body>\n  <p class=\"flex\" style=\"color: red\">small text</p>\n</body>\n```\n\n### `excludedProperties`\n\nType: `array`\\\nDefault: `[]`\n\nArray of CSS properties that should not be inlined.\n\n```js\nimport posthtml from'posthtml'\nimport inlineCss from'posthtml-css-inline'\n\nposthtml([\n  inlineCss({\n    excludedProperties: ['color', 'display']\n  })\n])\n  .process(`\n    <style>\n      p {\n        color: red;\n        display: flex;\n        font-size: 12px;\n      }\n    </style>\n\n    <p>text</p>\n  `)\n  .then(result => result.html)\n```\n\nResult:\n\n```html\n<style>\n  p {\n    color: red;\n    display: flex;\n    font-size: 12px;\n  }\n</style>\n\n<p style=\"font-size: 12px\">text</p>\n```\n\n### `no-inline`\n\nYou may use the `no-inline` attribute on an element to prevent CSS inlining.\n\n- when used on a `<style>` or `<link>` tag, the CSS inside the tag will not be inlined\n- when used on any other tag, the inliner will not inline CSS on that tag\n\nYou may use any of the following attributes to achieve this on a `<style>` or `<link>` tag:\n\n- `no-inline`\n- `data-embed`\n- `embed`\n- `prevent-inline`\n- `skip-inline`\n\nLikewise, you may use any of the following attributes to achieve this on any other tag:\n\n- `no-inline`\n- `prevent-inline`\n- `skip-inline`\n\nThe attribute will be removed from the tag in the resulting HTML.\n\n```js\nimport posthtml from'posthtml'\nimport inlineCss from'posthtml-css-inline'\n\nposthtml([\n  inlineCss()\n])\n  .process(`\n    <style no-inline>\n      p {\n        font-size: 12px;\n      }\n    </style>\n    <style>\n      div {\n        color: blue;\n      }\n    </style>\n\n    <p>small text</p>\n    <div no-inline>b</div>\n  `)\n  .then(result => result.html)\n```\n\nResult:\n\n```html\n<style>\n  p {\n    font-size: 12px;\n  }\n</style>\n<style>\n  div {\n    color: blue;\n  }\n</style>\n\n<p>small text</p>\n<div>b</div>\n```\n\n\n[npm]: https://www.npmjs.com/package/posthtml-css-inline\n[npm-version-shield]: https://img.shields.io/npm/v/posthtml-css-inline.svg\n[npm-stats]: http://npm-stat.com/charts.html?package=posthtml-css-inline\n[npm-stats-shield]: https://img.shields.io/npm/dt/posthtml-css-inline.svg\n[github-ci]: https://github.com/cossssmin/posthtml-css-inline/actions/workflows/nodejs.yml\n[github-ci-shield]: https://github.com/cossssmin/posthtml-css-inline/actions/workflows/nodejs.yml/badge.svg\n[license]: ./license\n[license-shield]: https://img.shields.io/npm/l/posthtml-css-inline.svg\n",
	"readmeFilename": "README.md",
	"_downloads": 18
}
{
	"_id": "@zhbhun/postcss-pxtorem",
	"_rev": "2-eaa0c188da05aca0d94c8105b9f795f2",
	"name": "@zhbhun/postcss-pxtorem",
	"dist-tags": {
		"latest": "6.0.0"
	},
	"versions": {
		"5.1.1": {
			"name": "@zhbhun/postcss-pxtorem",
			"description": "A CSS post-processor that converts px to rem.",
			"version": "5.1.1",
			"author": {
				"name": "cuth"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/cuth/postcss-pxtorem.git"
			},
			"bugs": {
				"url": "https://github.com/cuth/postcss-pxtorem/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^6.8.0",
				"husky": "^4.2.3",
				"jasmine-node": "^3.0.0",
				"lint-staged": "^10.0.8",
				"prettier": "^1.19.1"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"postcss": "^7.0.27"
			},
			"gitHead": "25fc04e24c662c125c55f6871e986c67ec760d6a",
			"homepage": "https://github.com/cuth/postcss-pxtorem#readme",
			"_id": "@zhbhun/postcss-pxtorem@5.1.1",
			"_nodeVersion": "14.17.0",
			"_npmVersion": "6.14.13",
			"dist": {
				"integrity": "sha512-ZL+aGkNE2RaL2NzanmWWsThAvDpCctSyo3TgPjogCUI+CeKbvX17vJbnmd429no7AA5YMlr9qYuoo//u8TL0JQ==",
				"shasum": "e580cd70bd9cd3bc67e54abe8b8fe7979add8abb",
				"tarball": "https://registry.npmjs.org/@zhbhun/postcss-pxtorem/-/postcss-pxtorem-5.1.1.tgz",
				"fileCount": 12,
				"unpackedSize": 30122,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhI0rOCRA9TVsSAnZWagAAOQcP/RZVlZD0oL02yFWdhXIe\nRw8aYDRRjH5tjEYeViZiu8Q0vm1XL0SJPKsDCZ/mEnGjy9F1Wxc5YXl3wuvn\n9qm9E3yRvMP2XrxFyvTKg/I2buIoDv8keE3Of5AleecFIPaHVljdyKvO0ZUG\nqphR3ELI7uyC2I992hnoj3kxJbQX9IkFJsTJR/Mr538hUN0Ix4EQVM9tKpvq\nzzlOyQa0u1cWSaoxP/0P8/fjUfwf9k8jd3PW3OEpWeC9Fg4Ye61QjEY2zF3k\nmTzDz361yxJxpQw4MUzBhXRgDKN6uGGOYUStZqsQq0qMwbDqecqVOqvcc+ka\nyV9ezOEPDoI5Aupmj8TvsgxGA5JL2/GVDDdKCn31akM5BL2GTqNr9hNYHL7M\nR6iwENGe0D40UxB3VUb/K/cGPw69+u77H1Is55BsdYoUkMaYALSlmlL2k/sb\nW1LTrHUkNXukilQXL8p0gLEjh4EPFkJgavVArA3kPB4FUA9piiGhAvi3jCn7\nVZo+pBulQQsqnhJe1bQldlJkS/xry+x1EnZKgDmnNgGuqFSgxQgKfPg0PV4+\niaL76Kag2kycKiwhgIvVOrSgiSaz4/1Zv4XX/y8HGRfmw7s71Rpvhs5YSJC/\nndlbDb44tUUSexIdiRRs8JW+Uj3qlbSwy/QcaqmxBIJSodALdsFwkRtG+w/V\nCqfY\r\n=xkEt\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDWBFEUTYD/KzDtJyPlrDIwmA1sHb0Yf4c7DvlLhGGFvQIgEx6+D7TCjuD+uvWlIjLtS6nSuaEKddOUr7SOrBCN+Ds="
					}
				]
			},
			"_npmUser": {
				"name": "zhbhun",
				"email": "zhbhun@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "zhbhun",
					"email": "zhbhun@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorem_5.1.1_1629702862585_0.781150147618582"
			},
			"_hasShrinkwrap": false
		},
		"6.0.0": {
			"name": "@zhbhun/postcss-pxtorem",
			"description": "A CSS post-processor that converts px to rem.",
			"version": "6.0.0",
			"author": {
				"name": "cuth"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/cuth/postcss-pxtorem.git"
			},
			"bugs": {
				"url": "https://github.com/cuth/postcss-pxtorem/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^6.8.0",
				"husky": "^4.2.3",
				"jasmine-node": "^3.0.0",
				"lint-staged": "^10.0.8",
				"postcss": "^8.0.0",
				"prettier": "^1.19.1"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"gitHead": "c0ce556b8330cebc63569e8f43a3e7adae3bcd51",
			"homepage": "https://github.com/cuth/postcss-pxtorem#readme",
			"_id": "@zhbhun/postcss-pxtorem@6.0.0",
			"_nodeVersion": "16.15.0",
			"_npmVersion": "8.19.2",
			"dist": {
				"integrity": "sha512-++RPN6FWAAqR80cnygP268XWOWc1VMBr34VRK/kdr/FjPNfszK9UgZ9wcZsilaeFwAmES3TB5oVczLAh+wfwoQ==",
				"shasum": "0b9d7958f11160b0d29d803c5af5196e1dc64321",
				"tarball": "https://registry.npmjs.org/@zhbhun/postcss-pxtorem/-/postcss-pxtorem-6.0.0.tgz",
				"fileCount": 12,
				"unpackedSize": 30357,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCtbJ6GM+AVweUIbW/2Y1lHkUvpO/3sBz9JyjK+BixxtAIhAPHij09ftl1Cy0Nw3AqWMOAB0ezlr4tomBxkb4Lg0Kh9"
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjUMAIACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrMPw/+L6+YDQh1uUaiVn6PKz70yq8bg6WKtFm0zLhW8b0HIExoWWO4\r\nt2gCcWEFpkaJfqI5LclHwnqJzqN9b012Xa/0//0EsdWAuWz4mLtamsg3/oHJ\r\nzVME8X5UpA703wqFL0ZmRQ372OY3elKQCOnhHNgRb01iZf5Z28euhrDdxr2Q\r\nEtCgFJWCph+ThF9zRC6Wqktuad+sRHN+lnlC4Yo3ClEestkiDdM2rl2l7o5O\r\nu91ny03/DO0FVhA9L6QXSgkXxgggaC+VVS8E4RNq27uwztq7hLSrLHk5i7g/\r\nSKh6rmW/gKiazhePHs41/IGNY910uIJtes1BdHnVdu0S1sAsAqTksjRlABZW\r\nrJoUBLh9GNhBgHhhYK6DfxwMKdUcF0bCYZpGHia22D6t/awFUg0VOIspq46U\r\n7JiHK8QW2cxmE9iXiva0faPqKXimX8tr4IkZJtIOMzLLLAgY8o9cNYl/yUTK\r\nIXm72Zklq12BuTsdf8623ReumIgPdXFAKp8z/VtaPzCRYS0I06RWqxgKPntP\r\ncnXW/OuGnFYYfojaAcmsas9+tjCekNGSr3NkcuX2Eu6bEY1Ix59n7wzlq8fu\r\nUszbk3gjvzDhYSqCfA7bgHR5/yP7ZTtobjVlnbD/SS+lQG/6REYs7FfsUI6t\r\nmTuKZwnI8FhiZIGBcqM6sZBHN75te28mwL4=\r\n=AAUn\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "zhbhun",
				"email": "zhbhun@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "zhbhun",
					"email": "zhbhun@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorem_6.0.0_1666236424400_0.07038174573434075"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2021-08-23T07:14:22.535Z",
		"5.1.1": "2021-08-23T07:14:22.707Z",
		"modified": "2022-10-20T03:27:04.668Z",
		"6.0.0": "2022-10-20T03:27:04.600Z"
	},
	"maintainers": [
		{
			"name": "zhbhun",
			"email": "zhbhun@gmail.com"
		}
	],
	"description": "A CSS post-processor that converts px to rem.",
	"homepage": "https://github.com/cuth/postcss-pxtorem#readme",
	"keywords": [
		"css",
		"rem",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/cuth/postcss-pxtorem.git"
	},
	"author": {
		"name": "cuth"
	},
	"bugs": {
		"url": "https://github.com/cuth/postcss-pxtorem/issues"
	},
	"license": "MIT",
	"readme": "# postcss-pxtorem [![NPM version](https://badge.fury.io/js/postcss-pxtorem.svg)](http://badge.fury.io/js/postcss-pxtorem)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rem units from pixel units.\n\n## Install\n\n```shell\n$ npm install postcss postcss-pxtorem --save-dev\n```\n\n## Usage\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625rem;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorem = require('postcss-pxtorem');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0,\n    exclude: /node_modules/i\n}\n```\n\n- `unitToConvert` (String) unit to convert, by default, it is px.\n- `rootValue` (Number | Function) Represents the root element font size or returns the root element font size based on the [`input`](https://api.postcss.org/Input.html) parameter\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `propList` (Array) The properties that can change from px to rem.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']`\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) Replaces rules containing rems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `exclude` (String, Regexp, Function) The file path to ignore and leave as px.\n    - If value is string, it checks to see if file path contains the string.\n        - `'exclude'` will match `\\project\\postcss-pxtorem\\exclude\\path`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `/exclude/i` will match `\\project\\postcss-pxtorem\\exclude\\path`\n    - If value is function, you can use exclude function to return a true and the file will be ignored.\n        - the callback will pass the file path as  a parameter, it should returns a Boolean result.\n        - `function (file) { return file.indexOf('exclude') !== -1; }`\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorem = require('postcss-pxtorem');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` or `PX` is ignored by `postcss-pxtorem` but still accepted by browsers\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 188
}
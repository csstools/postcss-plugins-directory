{
	"_id": "@dreamjser/postcss-px-to-viewport",
	"_rev": "2-a4b3c8e50afce9473fb5b8ce597e3685",
	"name": "@dreamjser/postcss-px-to-viewport",
	"dist-tags": {
		"latest": "1.1.2"
	},
	"versions": {
		"1.1.1": {
			"name": "@dreamjser/postcss-px-to-viewport",
			"version": "1.1.1",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"author": {
				"name": "dreamjser@gamil.com"
			},
			"license": "MIT",
			"_id": "@dreamjser/postcss-px-to-viewport@1.1.1",
			"maintainers": [
				{
					"name": "dreamjser",
					"email": "dreamjser@gmail.com"
				}
			],
			"homepage": "https://github.com/dreamjser/postcss-px-to-viewport",
			"bugs": {
				"url": "https://github.com/dreamjser/postcss-px-to-viewport/issues"
			},
			"dist": {
				"shasum": "67819b578a38ec213f7e287b68c8f50f7c280501",
				"tarball": "https://registry.npmjs.org/@dreamjser/postcss-px-to-viewport/-/postcss-px-to-viewport-1.1.1.tgz",
				"fileCount": 13,
				"integrity": "sha512-BU7t/Z5yv6WAyGLh3ntpOFBXSBkqbjI053P62W/V3JE+IViMTR4R+IKso0D6eboiWRYgLY2pSLb3yzdrw7juXg==",
				"signatures": [
					{
						"sig": "MEUCIBMFQ3RwtMA5ZPAOuNzXgmLG+0nGJIijOZLaspYe0eIcAiEAq/w7c3nK+xEeCFUvQ2uP0Mp1MNKYXPO3z2zJwnfgzKg=",
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"
					}
				],
				"unpackedSize": 35313
			},
			"main": "index.js",
			"gitHead": "51488c76a28f50dbb103f7e17b947cd50d3b99ec",
			"scripts": {
				"test": "jest spec/*.spec.js"
			},
			"_npmUser": {
				"name": "dreamjser",
				"email": "dreamjser@gmail.com"
			},
			"repository": {
				"url": "git+ssh://git@github.com/dreamjser/postcss-px-to-viewport.git",
				"type": "git"
			},
			"_npmVersion": "6.14.17",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"directories": {},
			"_nodeVersion": "16.18.1",
			"dependencies": {
				"object-assign": ">=4.0.1"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"jest": "^25.4.0",
				"postcss": "^8.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-px-to-viewport_1.1.1_1693807587746_0.3502220266631",
				"host": "s3://npm-registry-packages"
			}
		},
		"1.1.2": {
			"name": "@dreamjser/postcss-px-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "1.1.2",
			"author": {
				"name": "dreamjser@gamil.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/dreamjser/postcss-px-to-viewport.git"
			},
			"homepage": "https://github.com/dreamjser/postcss-px-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"scripts": {
				"test": "jest spec/*.spec.js"
			},
			"dependencies": {
				"object-assign": ">=4.0.1"
			},
			"devDependencies": {
				"jest": "^25.4.0",
				"postcss": "^8.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"_id": "@dreamjser/postcss-px-to-viewport@1.1.2",
			"gitHead": "5491bc205dd7f11cf6738a0f88c3088ac7fa34de",
			"bugs": {
				"url": "https://github.com/dreamjser/postcss-px-to-viewport/issues"
			},
			"_nodeVersion": "20.9.0",
			"_npmVersion": "10.1.0",
			"dist": {
				"integrity": "sha512-HhQYMC2ngvNIA6vza6EbDCtWiZlnerVkBuveOoT4WJJeMjGuIc5x3LpMwMW3UsZaOdkSh6VlA4yS/w8HcKFHjA==",
				"shasum": "cb519adce3c2637aee2d6f4f53248e2762a9296c",
				"tarball": "https://registry.npmjs.org/@dreamjser/postcss-px-to-viewport/-/postcss-px-to-viewport-1.1.2.tgz",
				"fileCount": 13,
				"unpackedSize": 35387,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIQD6H0UnVDtO/d34mB1Pdnqo9s0kTTn0ChmBx5u2WA9dYAIgOqq4xyuxrjYRjskrqHDxBWv9txozL26QB7smXjYIf6w="
					}
				]
			},
			"_npmUser": {
				"name": "dreamjser",
				"email": "dreamjser@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "dreamjser",
					"email": "dreamjser@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-px-to-viewport_1.1.2_1745485403971_0.7521183852123512"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2023-09-04T06:06:27.640Z",
		"modified": "2025-04-24T09:03:24.368Z",
		"1.1.1": "2023-09-04T06:06:27.944Z",
		"1.1.2": "2025-04-24T09:03:24.192Z"
	},
	"bugs": {
		"url": "https://github.com/dreamjser/postcss-px-to-viewport/issues"
	},
	"author": {
		"name": "dreamjser@gamil.com"
	},
	"license": "MIT",
	"homepage": "https://github.com/dreamjser/postcss-px-to-viewport",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/dreamjser/postcss-px-to-viewport.git"
	},
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"maintainers": [
		{
			"name": "dreamjser",
			"email": "dreamjser@gmail.com"
		}
	],
	"readme": "# postcss8-px-to-viewport\n\nThis is a fork of [postcss-px-to-viewport](https://github.com/evrone/postcss-px-to-viewport), I migrate it to PostCSS8.\n\n## postcss-px-to-viewport\n\n[![NPM version](https://badge.fury.io/js/postcss-px-to-viewport.svg)](http://badge.fury.io/js/postcss-px-to-viewport)\n\nEnglish | [中文](README_CN.md) \n\nA plugin for [PostCSS](https://github.com/postcss/postcss) that generates viewport units (vw, vh, vmin, vmax) from pixel units.\n\n## Demo\n\nIf your project involves a fixed width, this script will help to convert pixels into viewport units.\n\n### Input\n\n```css\n.class {\n  margin: -10px .5vh;\n  padding: 5vmin 9.5px 1px;\n  border: 3px solid black;\n  border-bottom-width: 1px;\n  font-size: 14px;\n  line-height: 20px;\n}\n\n.class2 {\n  padding-top: 10px; /* px-to-viewport-ignore */\n  /* px-to-viewport-ignore-next */\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 20px;\n  line-height: 30px;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n### Output\n```css\n.class {\n  margin: -3.125vw .5vh;\n  padding: 5vmin 2.96875vw 1px;\n  border: 0.9375vw solid black;\n  border-bottom-width: 1px;\n  font-size: 4.375vw;\n  line-height: 6.25vw;\n}\n\n.class2 {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 6.25vw;\n  line-height: 9.375vw;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n```\n\n## Getting Started\n\n### Installation\nAdd via npm\n```\n$ npm install postcss-px-to-viewport --save-dev\n```\nor yarn\n```\n$ yarn add -D postcss-px-to-viewport\n```\n\n### Usage\n\nDefault Options:\n```js\n{\n  unitToConvert: 'px',\n  viewportWidth: 320,\n  unitPrecision: 5,\n  propList: ['*'],\n  viewportUnit: 'vw',\n  fontViewportUnit: 'vw',\n  selectorBlackList: [],\n  minPixelValue: 1,\n  mediaQuery: false,\n  replace: true,\n  exclude: undefined,\n  include: undefined,\n  landscape: false,\n  landscapeUnit: 'vw',\n  landscapeWidth: 568\n}\n```\n- `unitToConvert` (String) unit to convert, by default, it is px.\n- `viewportWidth` (Number) The width of the viewport.\n- `unitPrecision` (Number) The decimal numbers to allow the vw units to grow to.\n- `propList` (Array) The properties that can change from px to vw.\n  - Values need to be exact matches.\n  - Use wildcard * to enable all properties. Example: ['*']\n  - Use * at the start or end of a word. (['*position*'] will match background-position-y)\n  - Use ! to not match a property. Example: ['*', '!letter-spacing']\n  - Combine the \"not\" prefix with the other prefixes. Example: ['*', '!font*']\n- `viewportUnit` (String) Expected units.\n- `fontViewportUnit` (String) Expected units for font.\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `replace` (Boolean) replaces rules containing vw instead of adding fallbacks.\n- `exclude` (Regexp or Array of Regexp) Ignore some files like 'node_modules'\n    - If value is regexp, will ignore the matches files.\n    - If value is array, the elements of the array are regexp.\n- `include` (Regexp or Array of Regexp) If `include` is set, only matching files will be converted,\n    for example, only files under `src/mobile/` (`include: /\\/src\\/mobile\\//`)\n    - If the value is regexp, the matching file will be included, otherwise it will be excluded.\n    - If value is array, the elements of the array are regexp.\n- `landscape` (Boolean) Adds `@media (orientation: landscape)` with values converted via `landscapeWidth`.\n- `landscapeUnit` (String) Expected unit for `landscape` option\n- `landscapeWidth` (Number) Viewport width for landscape orientation.\n\n> `exclude` and `include` can be set together, and the intersection of the two rules will be taken.\n\n#### Ignoring\n\nYou can use special comments for ignore conversion of single lines:\n- `/* px-to-viewport-ignore-next */` — on a separate line, prevents conversion on the next line.\n- `/* px-to-viewport-ignore */` — after the property on the right, prevents conversion on the same line.\n\nExample:\n```css\n/* example input: */\n.class {\n  /* px-to-viewport-ignore-next */\n  width: 10px;\n  padding: 10px;\n  height: 10px; /* px-to-viewport-ignore */\n  border: solid 2px #000; /* px-to-viewport-ignore */\n}\n\n/* example output: */\n.class {\n  width: 10px;\n  padding: 3.125vw;\n  height: 10px;\n  border: solid 2px #000;\n}\n```\n\nThere are several more reasons why your pixels may not convert, the following options may affect this:\n`propList`, `selectorBlackList`, `minPixelValue`, `mediaQuery`, `exclude`, `include`.\n\n#### Use with PostCss configuration file\n\nadd to your `postcss.config.js`\n```js\nmodule.exports = {\n  plugins: {\n    // ...\n    'postcss-px-to-viewport': {\n      // options\n    }\n  }\n}\n```\n\n#### Use with gulp-postcss\n\nadd to your `gulpfile.js`:\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar pxtoviewport = require('postcss-px-to-viewport');\n\ngulp.task('css', function () {\n\n    var processors = [\n        pxtoviewport({\n            viewportWidth: 320,\n            viewportUnit: 'vmin'\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n## Contributing\n\nPlease read [Code of Conduct](CODE-OF-CONDUCT.md)\nand [Contributing Guidelines](CONTRIBUTING.md) for submitting pull requests to us.\n\n## Running the tests\n\nIn order to run tests, you need to install dev-packages:\n```\n$ npm install\n```\nThen run the tests via npm script:\n```\n$ npm run test\n```\n\n## Changelog\n\nThe changelog is [here](CHANGELOG.md).\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/evrone/postcss-px-to-viewport/tags). \n\n## Authors\n\n* [Dmitry Karpunin](https://github.com/KODerFunk) - *Initial work*\n* [Ivan Bunin](https://github.com/chernobelenkiy)\n\nSee also the list of [contributors](https://github.com/evrone/postcss-px-to-viewport/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the [MIT License](LICENSE).\n\n## Sponsors\n\nVisit [Evrone](https://evrone.com/) website to get more information about the [projects](https://evrone.com/cases) build.\n\n<a href=\"https://evrone.com/?utm_source=postcss-px-to-viewport\">\n  <img src=\"https://user-images.githubusercontent.com/417688/34437029-dbfe4ee6-ecab-11e7-9d80-2b274b4149b3.png\"\n       alt=\"Sponsored by Evrone\" width=\"231\" />\n</a>\n\n## Acknowledgments\n\n* Hat tip to https://github.com/cuth/postcss-pxtorem/ for inspiring us for this project.\n",
	"readmeFilename": "README.md",
	"_downloads": 89
}
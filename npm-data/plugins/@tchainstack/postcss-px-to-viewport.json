{
	"_id": "@tchainstack/postcss-px-to-viewport",
	"_rev": "3-9d7b16955f7472bd564da21278440847",
	"name": "@tchainstack/postcss-px-to-viewport",
	"dist-tags": {
		"latest": "0.0.3"
	},
	"versions": {
		"0.0.3": {
			"name": "@tchainstack/postcss-px-to-viewport",
			"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
			"version": "0.0.3",
			"author": {
				"name": "Dmitry Karpunin",
				"email": "koderfunk@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/evrone/postcss-px-to-viewport.git"
			},
			"bugs": {
				"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
			},
			"homepage": "https://github.com/evrone/postcss-px-to-viewport",
			"main": "index.js",
			"keywords": [
				"css",
				"units",
				"pixel",
				"px",
				"viewport",
				"vw",
				"vh",
				"vmin",
				"vmax",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": "^4.0.1",
				"postcss": "^5.0.2"
			},
			"gitHead": "1cdad8192b264e6c25b838fc30c2b3c64cf59560",
			"_id": "@tchainstack/postcss-px-to-viewport@0.0.3",
			"_npmVersion": "6.0.1",
			"_nodeVersion": "8.11.1",
			"_npmUser": {
				"name": "caimichael",
				"email": "czm.michael@gmail.com"
			},
			"dist": {
				"integrity": "sha512-W/6oFkiMwLYBuXeFq0qt1yrsSsDIk/VZRtaC+BZVtF48B4OQswFAACrdI1rQWhFNmbu7kQ/AdRF1Qc60ktyTKw==",
				"shasum": "accd388ecc093a826f57e7725c593926131caa6e",
				"tarball": "https://registry.npmjs.org/@tchainstack/postcss-px-to-viewport/-/postcss-px-to-viewport-0.0.3.tgz",
				"fileCount": 8,
				"unpackedSize": 11792,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbdibWCRA9TVsSAnZWagAAWFMP/0z95xaXhgEVgIbLolKT\n1R5DXPXJ9A7cdr08T7MUh745oaotVYrB3yOZO6FpjoWtF37yq8Z6J2OFJLiU\nWwNj73Pw1DsCoUzqDv3tT8lXyC7jiUqz/OzjNtrU1xwQdVSaRFAA2FFEGyTq\nlUfbTAxysCuWwOeBc4vNCTxAAHumdVrOFkvWZLHaqT77bVibkUnPx4PKK3v2\nrSNJyJutlvaTxA36G2A89HT/lRTMdJ6vwFG8CK0CMmMoV7u7j1ddqXozHO9V\nSroMIfuW/81u026AsgdZaWSXkUknIFJSrCdHbLKQC9x+mXLE1/zFgmKMqhtG\ndEl+8V+alrmeEQwKNXVAIu/JUNtB/5WIzbkfABBamPhtRy07J0nJzxXuAuJf\nWEU7VAVEeLxW/V1L1hS5d+A1dH4OflwbNe3Ey6bttLZ0/97szWSsvxt4llVL\n/dPHT5pNv1zV0DdOhwbOQwM5Ny+L89PuVzcObHqHabJZgwmHd+eIOHFOEab4\n5Hf8WyudJf3LT+YKu/jLEtkBh9rn3sp1VBIVcbp/OB7iJ8glutNaFALET89E\n9lu3fQZm2/d4oHBKeRi2LjAl4XADzGEb7z04LMn1jFQbmcQue9Ln9+7Xf9kf\npfL/BJoi60YTcicio9TzOGkN2J3PpVa/ttQrn5PNYrh21KG1l44w3olF2Dfk\nh7B1\r\n=enVB\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCQwLCY2mv4XbSar6eRxubI2iVbPcTFfBpWZIL7oz5UNQIgXh+uVHug8UvygtH58yrSClCrIt3oGCVrpFlctPH0zcg="
					}
				]
			},
			"maintainers": [
				{
					"name": "caimichael",
					"email": "czm.michael@gmail.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-px-to-viewport_0.0.3_1534469845890_0.35408223015127205"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2018-08-17T01:37:25.785Z",
		"0.0.3": "2018-08-17T01:37:26.001Z",
		"modified": "2022-04-07T04:30:05.536Z"
	},
	"maintainers": [
		{
			"email": "lbh9311@sina.com",
			"name": "liuboheng"
		},
		{
			"email": "1413119916@qq.com",
			"name": "guorong"
		},
		{
			"email": "czm.michael@gmail.com",
			"name": "caimichael"
		}
	],
	"description": "A CSS post-processor that converts px to viewport units (vw, vh, vmin, vmax).",
	"homepage": "https://github.com/evrone/postcss-px-to-viewport",
	"keywords": [
		"css",
		"units",
		"pixel",
		"px",
		"viewport",
		"vw",
		"vh",
		"vmin",
		"vmax",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/evrone/postcss-px-to-viewport.git"
	},
	"author": {
		"name": "Dmitry Karpunin",
		"email": "koderfunk@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/evrone/postcss-px-to-viewport/issues"
	},
	"license": "MIT",
	"readme": "# postcss-px-to-viewport [![NPM version](https://badge.fury.io/js/postcss-px-to-viewport.svg)](http://badge.fury.io/js/postcss-px-to-viewport)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates viewport units (vw, vh, vmin, vmax) from pixel units.\n\n## Usage\n\nIf your project involves a fixed width, this script will help to convert pixels into viewport units.\n\n### Input/Output\n\n```css\n// input\n\n.class {\n  margin: -10px .5vh;\n  padding: 5vmin 9.5px 1px;\n  border: 3px solid black;\n  border-bottom-width: 1px;\n  font-size: 14px;\n  line-height: 20px;\n}\n\n.class2 {\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 20px;\n  line-height: 30px;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n\n// output\n\n.class {\n  margin: -3.125vw .5vh;\n  padding: 5vmin 2.96875vw 1px;\n  border: 0.9375vw solid black;\n  border-bottom-width: 1px;\n  font-size: 4.375vw;\n  line-height: 6.25vw;\n}\n\n.class2 {\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 6.25vw;\n  line-height: 9.375vw;\n}\n\n@media (min-width: 234.375vw) {\n  .class3 {\n    font-size: 5vw;\n    line-height: 6.875vw;\n  }\n}\n```\n\n### Example\n\n```js\n'use strict';\n\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxToViewport = require('..');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxToViewport(options)).process(css).css;\n\nfs.writeFile('main-viewport.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('File with viewport units written.');\n});\n```\n\n### Options\n\nDefault:\n```js\n{\n  unitToConvert: 'px',\n  viewportWidth: 320,\n  viewportHeight: 568, // not now used; TODO: need for different units and math for different properties\n  unitPrecision: 5,\n  viewportUnit: 'vw',\n  fontViewportUnit: 'vw',  // vmin is more suitable.\n  selectorBlackList: [],\n  minPixelValue: 1,\n  mediaQuery: false\n}\n```\n- `unitToConvert` (String) unit to convert, by default, it is px.\n- `viewportWidth` (Number) The width of the viewport.\n- `viewportHeight` (Number) The height of the viewport.\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `viewportUnit` (String) Expected units.\n- `fontViewportUnit` (String) Expected units for font.\n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n\n### Use with gulp-postcss\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar pxtoviewport = require('postcss-px-to-viewport');\n\ngulp.task('css', function () {\n\n    var processors = [\n        pxtoviewport({\n            viewportWidth: 320,\n            viewportUnit: 'vmin'\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 2
}
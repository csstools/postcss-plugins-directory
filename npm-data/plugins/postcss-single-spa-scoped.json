{
	"_id": "postcss-single-spa-scoped",
	"_rev": "1-2c957e937dfabc63e91562d429009789",
	"name": "postcss-single-spa-scoped",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"0.0.1": {
			"name": "postcss-single-spa-scoped",
			"version": "0.0.1",
			"description": "PostCSS plugin for manipulating the CSS in a single-spa application to best achieve scoped CSS",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"postcss-single-spa-scoped"
			],
			"scripts": {
				"test:unit": "jest index.test.js && eslint .",
				"test:integration": "jest index.integration.test.js && eslint ."
			},
			"author": {
				"name": "Fisnik",
				"email": "ukaj808@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "github.com/ukaj808/postcss-single-spa-prefix"
			},
			"engines": {
				"node": ">=12.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.3.0"
			},
			"devDependencies": {
				"clean-publish": "^3.4.2",
				"eslint": "^8.0.1",
				"eslint-plugin-jest": "^25.2.2",
				"jest": "^27.3.1",
				"mock-fs": "^5.2.0",
				"postcss": "^8.3.11"
			},
			"eslintConfig": {
				"parserOptions": {
					"ecmaVersion": 2017
				},
				"env": {
					"node": true,
					"es6": true
				},
				"extends": [
					"eslint:recommended",
					"plugin:jest/recommended"
				],
				"rules": {
					"jest/expect-expect": "off"
				}
			},
			"jest": {
				"coverageThreshold": {
					"global": {
						"statements": 100
					}
				}
			},
			"dependencies": {
				"cssesc": "^3.0.0"
			},
			"_id": "postcss-single-spa-scoped@0.0.1",
			"gitHead": "6f5ac8fc91e0045319601b7cb66754c4feb89b29",
			"_nodeVersion": "20.5.0",
			"_npmVersion": "9.8.0",
			"dist": {
				"integrity": "sha512-5ghMSFsod4ZTPv1gmssxHLDTINwGOPKehXnloLKswTzV+MwaNY3/P7jP7qhc8ia/Nfmjo57X771J/iLbNbXZaw==",
				"shasum": "1e04ebd75137a6abb2f8e07be5e8ac09cdb3baf5",
				"tarball": "https://registry.npmjs.org/postcss-single-spa-scoped/-/postcss-single-spa-scoped-0.0.1.tgz",
				"fileCount": 5,
				"unpackedSize": 5111,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQD2/lcUMsd/xiSabr6VeQPWgPbHN8zaXaW9uJLAZtxfjwIhAKkBxjzTdxAnlTUXzDkaanpiZFpF5t2+jQ0/uWF+08U8"
					}
				]
			},
			"_npmUser": {
				"name": "ukaj808",
				"email": "ukaj808@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "ukaj808",
					"email": "ukaj808@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-single-spa-scoped_0.0.1_1690307714790_0.23497420936648417"
			},
			"_hasShrinkwrap": false
		},
		"1.0.0": {
			"name": "postcss-single-spa-scoped",
			"version": "1.0.0",
			"description": "PostCSS plugin for manipulating the CSS in a single-spa application to best achieve scoped CSS",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"postcss-single-spa-scoped"
			],
			"author": {
				"name": "Fisnik",
				"email": "ukaj808@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "github.com/ukaj808/postcss-single-spa-prefix"
			},
			"engines": {
				"node": ">=16.0.0"
			},
			"main": "index.js",
			"types": "index.d.ts",
			"peerDependencies": {
				"postcss": "^8.3.0"
			},
			"dependencies": {
				"css.escape": "^1.5.1"
			},
			"_id": "postcss-single-spa-scoped@1.0.0",
			"gitHead": "5ca7a3dc2aaa603b601045d3f9011c58dd45acb8",
			"_nodeVersion": "20.5.0",
			"_npmVersion": "9.8.0",
			"dist": {
				"integrity": "sha512-LS5NpSAolTIY4rqGnUYld5wUtRF5Vfxc+HHl8UVmyJzqyOZCZvsMyJEYDjwqCMraqawfQXepye6jA91cnhnP/Q==",
				"shasum": "1430d6b3062745c6dcadc0d06ec4443532929eee",
				"tarball": "https://registry.npmjs.org/postcss-single-spa-scoped/-/postcss-single-spa-scoped-1.0.0.tgz",
				"fileCount": 5,
				"unpackedSize": 7029,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQC0PcWc9RanIlEegOCRPdfgs6cds0ERB3DnFAy5jKiPLwIhANA5MZ7XrBKs1NZW5vjvFcVyZ3uI30f0CwgVPQOpo6al"
					}
				]
			},
			"_npmUser": {
				"name": "ukaj808",
				"email": "ukaj808@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "ukaj808",
					"email": "ukaj808@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-single-spa-scoped_1.0.0_1690379606815_0.13126640957628943"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2023-07-25T17:55:14.790Z",
		"0.0.1": "2023-07-25T17:55:14.970Z",
		"modified": "2023-07-26T13:53:27.230Z",
		"1.0.0": "2023-07-26T13:53:27.071Z"
	},
	"maintainers": [
		{
			"name": "ukaj808",
			"email": "ukaj808@gmail.com"
		}
	],
	"description": "PostCSS plugin for manipulating the CSS in a single-spa application to best achieve scoped CSS",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"postcss-single-spa-scoped"
	],
	"repository": {
		"type": "git",
		"url": "github.com/ukaj808/postcss-single-spa-prefix"
	},
	"author": {
		"name": "Fisnik",
		"email": "ukaj808@gmail.com"
	},
	"license": "MIT",
	"readme": "# postcss-single-spa-scoped\n\n[PostCSS] plugin for manipulating the CSS in a single-spa application to best achieve scoped CSS.\n\n[PostCSS]: https://github.com/postcss/postcss\n\n```css\n.foo {\n  /* Input example */\n}\n```\n\n```css\n#single-spa-application\\\\:\\\\@org\\\\/app-name .foo {\n  /* Output example */\n}\n```\n\n## Why...\nTypically in single page application frameworks (Vue, React, etc.), there is a stylesheet imported at the _global_ level.\n```ts\n// main.ts file\nimport './style.css';\n```\nThese styles are not scoped to any component! This is typically a good thing as it allows you to share styles; but _global_ stylesheets are a problem when your application is nested inside a microfrontend architecture. Why is it a problem? Because typically \"import './style.css'\" is compiled by bundlers into javascript code which mounts that style sheet in the head element as a style tag. \n\nThat style you defined in your style.css file? _\"h1 { font-size: 100px }\"_.. It's now affecting the whole page! \n\nThis plugin attemps to counteract that by following the single-spa recomendation and prefixing all of your compiled css selectors with an id _\"#single-spa-application//:...\"_. This works (for the most part) because your application is nested inside a div that single-spa creates that has the aforementioned _fancy_ id.\n\n![image](https://github.com/ukaj808/postcss-single-spa-scoped/assets/96708453/01c8dffa-7162-4a5e-9de5-a16b4d28ba5b)\n\n**There's a catch**\n\nSometimes your application has _portals_ (html outside the body) like modals or popups. These will typically leave the boundary of the single-spa div. That global style you defined will now not effect that portal because your now prefixed selectors wont select it.\n\nTODO\n\n\n## Usage\n\n**Step 1:** Install plugin:\n\n```sh\nnpm install --save-dev postcss postcss-single-spa-scoped\n```\n\n**Step 2:** Check you project for existed PostCSS config: `postcss.config.js`\nin the project root, `\"postcss\"` section in `package.json`\nor `postcss` in bundle config.\n\nIf you do not use PostCSS, add it according to [official docs]\nand set this plugin in settings.\n\n**Step 3:** Add the plugin to plugins list:\n\n```diff\nmodule.exports = {\n  plugins: [\n+   require('postcss-single-spa-scoped'),\n    require('autoprefixer')\n  ]\n}\n```\n\n[official docs]: https://github.com/postcss/postcss#usage\n",
	"readmeFilename": "README.md",
	"_downloads": 46
}
{
	"_id": "postcss-import-sync2",
	"_rev": "5-11213e23c42090e28c7fef9818f156ca",
	"name": "postcss-import-sync2",
	"description": "PostCSS plugin to import CSS files",
	"dist-tags": {
		"latest": "1.2.0"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-import-sync2",
			"version": "1.0.0",
			"description": "PostCSS plugin to import CSS files",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"import",
				"node modules",
				"npm"
			],
			"author": {
				"name": "Long Ho"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/longlho/postcss-import-sync.git"
			},
			"files": [
				"index.js",
				"lib"
			],
			"dependencies": {
				"postcss": "^6.0.9",
				"postcss-value-parser": "^3.3.0",
				"read-cache": "^1.0.0",
				"resolve": "^1.4.0"
			},
			"devDependencies": {
				"ava": "^0.22.0",
				"npmpub": "^3.1.0",
				"postcss-scss": "^1.0.2",
				"prettier": "^1.5.3"
			},
			"scripts": {
				"test": "ava",
				"release": "npmpub",
				"prettier": "prettier --print-width=120 --tab-width=4 --single-quote --trailing-comma=es5 --no-semi --write 'lib/*.js' || true"
			},
			"gitHead": "d69a5722c4beca776df9e938be3713cc9592d30d",
			"bugs": {
				"url": "https://github.com/longlho/postcss-import-sync/issues"
			},
			"homepage": "https://github.com/longlho/postcss-import-sync#readme",
			"_id": "postcss-import-sync2@1.0.0",
			"_npmVersion": "5.3.0",
			"_nodeVersion": "8.2.1",
			"_npmUser": {
				"name": "longlho",
				"email": "holevietlong@gmail.com"
			},
			"dist": {
				"integrity": "sha512-6kR879gwxIZPMO4h7wZOa0iqDGiUSFpIetk5+4Nfs3iNfJ0WttmOyuPpdw/NrVidgA3EVFO9QPPt1GhhNut6FA==",
				"shasum": "91c598d7bcbc48aaff7b5e736969cc23476f33ad",
				"tarball": "https://registry.npmjs.org/postcss-import-sync2/-/postcss-import-sync2-1.0.0.tgz",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIC7QYXW//OP28QLauZUVD7T1bF/ss+D3HFRoRqZlK9YtAiEA1z8FlnOlhZUr7CWaMBpltSIqJ6NtJln7yc6HO+DENag="
					}
				]
			},
			"maintainers": [
				{
					"name": "longlho",
					"email": "holevietlong@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-import-sync2-1.0.0.tgz_1503261561220_0.6709035597741604"
			},
			"directories": {}
		},
		"1.1.0": {
			"name": "postcss-import-sync2",
			"version": "1.1.0",
			"description": "PostCSS plugin to import CSS files",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"import",
				"node modules",
				"npm"
			],
			"author": {
				"name": "Long Ho"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/longlho/postcss-import-sync.git"
			},
			"dependencies": {
				"postcss": "^7",
				"postcss-value-parser": "^3.3.1",
				"read-cache": "^1.0.0",
				"resolve": "^1.8.1"
			},
			"devDependencies": {
				"ava": "^0.25.0",
				"npmpub": "4",
				"postcss-scss": "2",
				"prettier": "^1.14.3"
			},
			"scripts": {
				"test": "ava",
				"release": "npmpub",
				"prettier": "prettier --print-width=120 --tab-width=4 --single-quote --trailing-comma=es5 --no-semi --write 'lib/*.js' || true"
			},
			"gitHead": "edc7bd9c27048ee351a60db7c07c256b6c261a76",
			"bugs": {
				"url": "https://github.com/longlho/postcss-import-sync/issues"
			},
			"homepage": "https://github.com/longlho/postcss-import-sync#readme",
			"_id": "postcss-import-sync2@1.1.0",
			"_npmVersion": "6.4.1",
			"_nodeVersion": "10.11.0",
			"_npmUser": {
				"name": "longlho",
				"email": "holevietlong@gmail.com"
			},
			"dist": {
				"integrity": "sha512-wPjRneS2QUqd8eA2lDeZeQMAqk232aha42XFlEY4O3MMOoZ43VWH4npPt0F7GC7WT7oEIjuS2W7CyH8lgHczOw==",
				"shasum": "768fa23bc7e2248d0560553e42e75e38c841b2d6",
				"tarball": "https://registry.npmjs.org/postcss-import-sync2/-/postcss-import-sync2-1.1.0.tgz",
				"fileCount": 11,
				"unpackedSize": 33735,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0NUSCRA9TVsSAnZWagAAtYMP/195WSRvy1C/p7tAJSn7\n9iyJTcxqBS7Rb1yRCkafKYf/JZZ33PPKvDvd2iz2EASV0TOCcN50wxISXWud\nLBtYqNsrhgs/SBUAon4EaQBvhUZRQCHTCPkg9wwPj46+EiMWgN6BlVL9nZPL\n+ObedhXzNx0ogdOBbKtWzFrLU1hrQ3XNQia/Xrlr3xXBsLLK1LVP+kS5Eke0\npV6nPAaOdU5tvMwjKsDku5xECdKeZ1w0uHmoO9nbaDQisW6YjZ+gH1oB55us\nadRe/d/xEILghwS17psRSl95f7ABHL+O5Z8OlyJPLH6Nb6p0thwX+mKPNoGg\nlQJtW3h0QxlvYe3mDteGHwBeDZsuGwuhc2gCNj8w3OOWUiIoY6xvWxYlTujX\nwokOw6ewGFUkf0VuAWhQcQNz/nAAo1ccfCn/5EwQp31GwfMZmwdlgDt+hyPi\nFQd0cFepW5zAmx/gmHbgLsKPgbPy1J8F1hWoviY2UlxOscEmK7iKVqGPkztW\n3CYdfNF10NwdvxxFxJeWiH4J2W9Npijs6f0WgTTmlQtMMQvK35GiflGDuHlZ\noClHf3OjzHqzkxMADAvAi4Ru7xmNuI+gowL3638Fgsw38UoqDVVsFWojaKlV\nJ6PhiN+vEOy4l25jShjS5Qxu4ayk6yfWyU3jYF4JGBAHAvwEjUGxEJt1+iQn\nMIKk\r\n=ClIl\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIASVvQSBXoiQh+kLd+3SFZ4/IVWWXEEJ19HUj9P0+KfOAiBWlz2MxwGmwYbQw2AeywUwjBvoRWJ3bai6rFHjq7c5aw=="
					}
				]
			},
			"maintainers": [
				{
					"name": "longlho",
					"email": "holevietlong@gmail.com"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-import-sync2_1.1.0_1540412689727_0.6549203369198655"
			},
			"_hasShrinkwrap": false
		},
		"1.2.0": {
			"name": "postcss-import-sync2",
			"version": "1.2.0",
			"description": "PostCSS plugin to import CSS files",
			"keywords": [
				"css",
				"postcss",
				"postcss-plugin",
				"import",
				"node modules",
				"npm"
			],
			"author": {
				"name": "Long Ho"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/longlho/postcss-import-sync.git"
			},
			"dependencies": {
				"postcss-value-parser": "^4.1.0",
				"read-cache": "^1.0.0",
				"resolve": "^1.20.0"
			},
			"devDependencies": {
				"ava": "^3.15.0",
				"esm": "^3.2.25",
				"postcss": "^8.3.11",
				"postcss-scss": "^4.0.2",
				"prettier": "^2.4.1",
				"standard-version": "^9.3.2"
			},
			"peerDependencies": {
				"postcss": "8"
			},
			"scripts": {
				"test": "ava",
				"release": "standard-version",
				"prettier": "prettier --print-width=120 --tab-width=4 --single-quote --trailing-comma=es5 --no-semi --write 'lib/*.js' || true"
			},
			"ava": {
				"require": [
					"esm"
				]
			},
			"gitHead": "9fe8d70f6de86fb6c9938cf5c7f63a0cc0efc98e",
			"bugs": {
				"url": "https://github.com/longlho/postcss-import-sync/issues"
			},
			"homepage": "https://github.com/longlho/postcss-import-sync#readme",
			"_id": "postcss-import-sync2@1.2.0",
			"_nodeVersion": "14.18.1",
			"_npmVersion": "6.14.15",
			"dist": {
				"integrity": "sha512-KgI0JlmSacM1MjO+4oN1P5SvIdt4dMe8hUY6w6Wm2qAJLRPfHxxV9XgDbaSLlFrkRKnwhy3+aNUIaBx60soLRA==",
				"shasum": "bee1a09b6d2a76c4ab5b18f498b2a8160e98bd5b",
				"tarball": "https://registry.npmjs.org/postcss-import-sync2/-/postcss-import-sync2-1.2.0.tgz",
				"fileCount": 11,
				"unpackedSize": 34436,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh22/rCRA9TVsSAnZWagAA9sIP/0Dvvok2nQc2/zbxAWKp\nEG9I6/9A20HDaw52MsOZY2DXVwHNNNMZ7vGc6xTV2BXFhBlCiXV1pB7rtfs7\nx2enjHQxMU8AxNIDo7SiA5pozSvFvq9ccOb9UX78uOVjqI/FpTl9/kgvoUbB\n+5JFOCW9AL8R005G7JyAUQh2FLxGoQXVYzBGCGSwiGCS0LyRO3feQrPccsdG\nZVXSMGz7JMDGPIj48daVV8uQBTrQ855IV7Rcg7dIMhX79dpoGo3FPMNwE0tL\nz6jDZJk0qzfFKIH93Yfzhm18s+lbHjM4uFpDjEZMwfR+ncYzzi4ox5dkdvUk\nEzdXj34ittv228vF76dEMKAhhudO2HHToMU0sRb7UwdMIiEH6m2SgUyeEb6G\nTBPWBw85wf32y7Vsn79GffUA2Wb+t1FZROdNw8Zu2rpNDnLcIYStqlyonLKV\nyYrdAfu8FAwwO4sqHASyKbG9sC3tIG82ERhMjzpGx9BOT4sJ8pAlVYBWWqxS\nBhiB1zVbeg3UzZ544IWYknoIdLRJTrIwZRWALPQTKIPfxzCcHBmsGDvu+YeA\njCaZ3Y22M0AmItuPXsNToWF3a0vaa95uF9XRp9GYJpshJvf/1VawVvV5QB+0\n+aQnGpdFh6OgsolC5R/28cyydL/vKKBtiWqt+niabaQuUVwxp9Wb4JPq84Bd\nxcz4\r\n=xcP9\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIGy+2wssLfS4sptHLaKzFTtLqFCAay/LX/2y5X1CSTYhAiEA7ESAxv8kY/VU0sm53tWrSg5ZOqa8spksIl8vr+l0mcw="
					}
				]
			},
			"_npmUser": {
				"name": "longlho",
				"email": "holevietlong@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "longlho",
					"email": "holevietlong@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-import-sync2_1.2.0_1636513493043_0.5139577549459875"
			},
			"_hasShrinkwrap": false
		}
	},
	"readme": "# postcss-import\n\n[![Unix Build status](https://img.shields.io/travis/postcss/postcss-import/master.svg?branch=master&label=unix%20build)](https://travis-ci.org/postcss/postcss-import)\n[![Windows Build status](https://img.shields.io/appveyor/ci/MoOx/postcss-import/master.svg?label=window%20build)](https://ci.appveyor.com/project/MoOx/postcss-import/branch/master)\n[![Version](https://img.shields.io/npm/v/postcss-import.svg)](https://github.com/postcss/postcss-import/blob/master/CHANGELOG.md)\n\n> [PostCSS](https://github.com/postcss/postcss) plugin to transform `@import`\nrules by inlining content.\n\nThis plugin can consume local files, node modules or web_modules.\nTo resolve path of an `@import` rule, it can look into root directory\n(by default `process.cwd()`), `web_modules`, `node_modules`\nor local modules.\n_When importing a module, it will look for `index.css` or file referenced in\n`package.json` in the `style` or `main` fields._\nYou can also provide manually multiples paths where to look at.\n\n**Notes:**\n\n- **This plugin should probably be used as the first plugin of your list.\nThis way, other plugins will work on the AST as if there were only a single file\nto process, and will probably work as you can expect**.\n- This plugin works great with\n[postcss-url](https://github.com/postcss/postcss-url) plugin,\nwhich will allow you to adjust assets `url()` (or even inline them) after\ninlining imported files.\n- In order to optimize output, **this plugin will only import a file once** on\na given scope (root, media query...).\nTests are made from the path & the content of imported files (using a hash\ntable).\nIf this behavior is not what you want, look at `skipDuplicates` option\n- **If you are looking for glob, or sass like imports (prefixed partials)**,\nplease look at\n[postcss-easy-import](https://github.com/trysound/postcss-easy-import)\n(which use this plugin under the hood).\n- **This plugin attempts to follow the CSS `@import` spec**; `@import`\n  statements must precede all other statements (besides `@charset`).\n\n## Installation\n\n```console\n$ npm install postcss postcss-import-sync2\n```\n\n## Usage\n\nUnless your stylesheet is in the same place where you run postcss\n(`process.cwd()`), you will need to use `from` option to make relative imports\nwork.\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar atImport = require(\"postcss-import-sync2\")\n\n// css to be processed\nvar css = fs.readFileSync(\"css/input.css\", \"utf8\")\n\n// process css\npostcss()\n  .use(atImport())\n  .process(css, {\n    // `from` option is needed here\n    from: \"css/input.css\"\n  })\n  .then(function (result) {\n    var output = result.css\n\n    console.log(output)\n  })\n```\n\n`css/input.css`:\n\n```css\n/* can consume `node_modules`, `web_modules` or local modules */\n@import \"cssrecipes-defaults\"; /* == @import \"../node_modules/cssrecipes-defaults/index.css\"; */\n@import \"normalize.css\"; /* == @import \"../node_modules/normalize.css/normalize.css\"; */\n\n@import \"foo.css\"; /* relative to css/ according to `from` option above */\n\n@import \"bar.css\" (min-width: 25em);\n\nbody {\n  background: black;\n}\n```\n\nwill give you:\n\n```css\n/* ... content of ../node_modules/cssrecipes-defaults/index.css */\n/* ... content of ../node_modules/normalize.css/normalize.css */\n\n/* ... content of css/foo.css */\n\n@media (min-width: 25em) {\n/* ... content of css/bar.css */\n}\n\nbody {\n  background: black;\n}\n```\n\nCheckout the [tests](test) for more examples.\n\n### Options\n\n#### `sync`\n\nType: `boolean`\nDefault: `false`\n\nWhether to process under `sync` mode, typically for `require` hooks\n\n#### `root`\n\nType: `String`\nDefault: `process.cwd()` or _dirname of\n[the postcss `from`](https://github.com/postcss/postcss#node-source)_\n\nDefine the root where to resolve path (eg: place where `node_modules` are).\nShould not be used that much.\n_Note: nested `@import` will additionally benefit of the relative dirname of\nimported files._\n\n#### `path`\n\nType: `String|Array`\nDefault: `[]`\n\nA string or an array of paths in where to look for files.\n\n#### `plugins`\n\nType: `Array`\nDefault: `undefined`\n\nAn array of plugins to be applied on each imported files.\n\n#### `resolve`\n\nType: `Function`\nDefault: `null`\n\nYou can provide a custom path resolver with this option. This function gets\n`(id, basedir, importOptions)` arguments and should return a path, an array of\npaths or a promise resolving to the path(s). If you do not return an absolute\npath, your path will be resolved to an absolute path using the default\nresolver.\nYou can use [resolve](https://github.com/substack/node-resolve) for this.\n\n#### `load`\n\nType: `Function`\nDefault: null\n\nYou can overwrite the default loading way by setting this option.\nThis function gets `(filename, importOptions)` arguments and returns content or\npromised content.\n\n#### `skipDuplicates`\n\nType: `Boolean`\nDefault: `true`\n\nBy default, similar files (based on the same content) are being skipped.\nIt's to optimize output and skip similar files like `normalize.css` for example.\nIf this behavior is not what you want, just set this option to `false` to\ndisable it.\n\n#### `addModulesDirectories`\n\nType: `Array`\nDefault: `[]`\n\nAn array of folder names to add to [Node's resolver](https://github.com/substack/node-resolve).\nValues will be appended to the default resolve directories:\n`[\"node_modules\", \"web_modules\"]`.\n\nThis option is only for adding additional directories to default resolver. If\nyou provide your own resolver via the `resolve` configuration option above, then\nthis value will be ignored.\n\n#### Example with some options\n\n```js\nvar postcss = require(\"postcss\")\nvar atImport = require(\"postcss-import-sync2\")\n\npostcss()\n  .use(atImport({\n    path: [\"src/css\"],\n  }))\n  .process(cssString)\n  .then(function (result) {\n    var css = result.css\n  })\n```\n\n## `dependency` Message Support\n\n`postcss-import-sync2` adds a message to `result.messages` for each `@import`. Messages are in the following format:\n\n```\n{\n  type: 'dependency',\n  file: absoluteFilePath,\n  parent: fileContainingTheImport\n}\n```\n\nThis is mainly for use by postcss runners that implement file watching.\n\n---\n\n## CONTRIBUTING\n\n* ⇄ Pull requests and ★ Stars are always welcome.\n* For bugs and feature requests, please create an issue.\n* Pull requests must be accompanied by passing automated tests (`$ npm test`).\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
	"maintainers": [
		{
			"name": "longlho",
			"email": "holevietlong@gmail.com"
		}
	],
	"time": {
		"modified": "2022-05-13T06:22:46.806Z",
		"created": "2017-08-20T20:39:22.293Z",
		"1.0.0": "2017-08-20T20:39:22.293Z",
		"1.1.0": "2018-10-24T20:24:49.879Z",
		"1.2.0": "2021-11-10T03:04:53.194Z"
	},
	"homepage": "https://github.com/longlho/postcss-import-sync#readme",
	"keywords": [
		"css",
		"postcss",
		"postcss-plugin",
		"import",
		"node modules",
		"npm"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/longlho/postcss-import-sync.git"
	},
	"author": {
		"name": "Long Ho"
	},
	"bugs": {
		"url": "https://github.com/longlho/postcss-import-sync/issues"
	},
	"license": "MIT",
	"readmeFilename": "README.md",
	"users": {
		"tomgao365": true
	},
	"_downloads": 9637
}
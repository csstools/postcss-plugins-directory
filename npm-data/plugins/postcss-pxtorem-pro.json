{
	"_id": "postcss-pxtorem-pro",
	"_rev": "2-f0c7dc72e8f02170c90128faef282fd7",
	"name": "postcss-pxtorem-pro",
	"dist-tags": {
		"latest": "5.1.3"
	},
	"versions": {
		"5.1.2": {
			"name": "postcss-pxtorem-pro",
			"description": "A CSS post-processor that converts px to rem.",
			"version": "5.1.2",
			"author": {
				"name": "cuth"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+ssh://git@github.com/J-env/postcss-pxtorem.git"
			},
			"bugs": {
				"url": "https://github.com/J-env/postcss-pxtorem/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^6.8.0",
				"husky": "^4.2.3",
				"jasmine-node": "^3.0.0",
				"lint-staged": "^10.0.8",
				"prettier": "^1.19.1"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"postcss": "^7.0.27"
			},
			"homepage": "https://github.com/J-env/postcss-pxtorem#readme",
			"directories": {
				"example": "example",
				"lib": "lib"
			},
			"gitHead": "d73cbcdb6c26b51a9909d56e8a4d1b7b358708be",
			"_id": "postcss-pxtorem-pro@5.1.2",
			"_nodeVersion": "12.16.2",
			"_npmVersion": "6.14.4",
			"dist": {
				"integrity": "sha512-/ikQ0Hkw6P9s81+A6PlPdtp95XQCw+6DCDMPPMRBtPP41u3H/eyKjXfoKZ+sY/cMkCDesjn6a4f3fJi5hAPzKQ==",
				"shasum": "0a5341ef5cf30cbb16c4546ea748688ae904521d",
				"tarball": "https://registry.npmjs.org/postcss-pxtorem-pro/-/postcss-pxtorem-pro-5.1.2.tgz",
				"fileCount": 12,
				"unpackedSize": 30398,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf1JG4CRA9TVsSAnZWagAA6wwP/2VPnoMwTKVOejOSgPRl\nREst7uIjmV5kZI34dCMovedbJWy0PkqAtGjnn7dZRqhINA6Y1CX5b3ub+/bS\nk92Z4T8BO2h+AOHYUvWm2HNgrB46452nhTQKykmyrDmksAMlZDyVJfc8dNXV\nCMqB9qe8wdgyTTwM3KMF89z3iVmdv8V0l0NIVOza+ZGp4DJVtXVjjgqVe7d7\n3YnYLe9XZcPqug/ptTtHVbpwI4nk6b4RC1vZfGURAtH3FlcUPD66rd1sEJ/v\n6N6us2iaEBRb3a7jItNS49plPCfelFAvYTd80IYU+tm3PYOAb1mJ/FmmRkrs\nZw4DpKcEVVnweAxFDAou6+M8HJxF8S2nfUAP5yZMJZU4Ks+4QllVJyk3y4j1\nX6bpRzhm1hAsLsqabOeOJC1Gg5QMej5dYtbJ+RdL3srU0qBZhMnYbTBkk330\novHVX5o3Ipg09X619m7v4ihrqTgdCb+4M8FXOVNJmLd0Beic7VNztUNJUe6l\naLIKTqIbSWQAypYHor6sBarq0uRctnt9n6oNvPsUNnjG9h3xwyulVhdE+W+v\nmb21RHVpLga53KSRBKC73rxQi+orvD/1QAhQ6KZHlJtT7VnIvk7HWyI0KJzS\nWCiT9qJBvOT2YrrQdkxRJTnOCE5qSuiSsO+1W9cBoOAeL1KVQMe4D7JwQBSO\ni2DJ\r\n=8/CS\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDKenzuzQMIcVOg+D0HQ6oUuo60hWCfDtL5MFQeStMoywIhAIXOH8+AcwYJ+HvZUxY4TVNO9XbDRbkjYzLbhNdXZClM"
					}
				]
			},
			"_npmUser": {
				"name": "j1637787429",
				"email": "1637787429@qq.com"
			},
			"maintainers": [
				{
					"name": "j1637787429",
					"email": "1637787429@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorem-pro_5.1.2_1607766455856_0.7571023817680911"
			},
			"_hasShrinkwrap": false
		},
		"5.1.3": {
			"name": "postcss-pxtorem-pro",
			"description": "A CSS post-processor that converts px to rem.",
			"version": "5.1.3",
			"author": {
				"name": "cuth"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/J-env/postcss-pxtorem.git"
			},
			"bugs": {
				"url": "https://github.com/J-env/postcss-pxtorem/issues"
			},
			"main": "index.js",
			"scripts": {
				"lint": "eslint .",
				"test": "jasmine-node spec"
			},
			"husky": {
				"hooks": {
					"pre-commit": "lint-staged"
				}
			},
			"lint-staged": {
				"*.js": [
					"eslint --fix",
					"prettier --write"
				]
			},
			"devDependencies": {
				"eslint": "^6.8.0",
				"husky": "^4.2.3",
				"jasmine-node": "^3.0.0",
				"lint-staged": "^10.0.8",
				"prettier": "^1.19.1"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"postcss": "^7.0.27"
			},
			"homepage": "https://github.com/J-env/postcss-pxtorem#readme",
			"directories": {
				"example": "example",
				"lib": "lib"
			},
			"gitHead": "d0e4cb00e7acdce40038ed2bf31a81c03aa028e6",
			"_id": "postcss-pxtorem-pro@5.1.3",
			"_nodeVersion": "12.16.2",
			"_npmVersion": "6.14.4",
			"dist": {
				"integrity": "sha512-Q9YcbWEmyJ95uW9+q44m84GVWQp+1PMnsqeJ3EtqK3diGK+S/l5m+r1gHrDLWwvYde4i95R/7SS1tPhjVp9zIg==",
				"shasum": "e3bf1df99a713d077b11d1809fc56b0609e2c64b",
				"tarball": "https://registry.npmjs.org/postcss-pxtorem-pro/-/postcss-pxtorem-pro-5.1.3.tgz",
				"fileCount": 12,
				"unpackedSize": 30689,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf4Zg1CRA9TVsSAnZWagAAaYgP/3yHfrFTpa/3HPM478JF\nizLxlnLdp7bnz0ZW2Vaor6qhWNgLlH+/gvzhsYZ7t492IQZngwJfMTdupuPL\nhcAMr/hrWs/bY7vUvpVsPiz+wmX76O5NCGPPdwi4hLO3aC6DG5Ws9P0BC7gJ\n6Yk1a0smzFA+QyUpdTqsgAEIw9M6n6fcFZ/LdGOlXYu+4nLvShpv1a6XoOaR\n9FISggLcVHBMiN1y/Nt/YTrX7Jdl+K+28DqdEMESj0V/sETMITmu8lWXrOH+\nhJH/Ngg5G5IkOfj8MflmkjjZRXz24RoNQ6L90ES6gEY7Ue0wn7ynlLBstOHs\nFjH808+CpijK8R8niifrd/LGBY8QzfM+qRmrJWJciVL6kC4B/FvEkBlC0UHs\npJyeCC08YuA+SGrMtbJmgUIA7u0CNSHMOqRlBF+cmQqr146BBnnyy1TYXgqr\nm9nbJFCMjeJzhC3efieiZ+yayygG9xYgmncs8OTP6xdnuS9+tnmaEukHLnoU\ngvkuxdAjsH/vczcZ6G8T/iMCzvGT5NUq85hOVCeUIxdheyZ4KTKI7mA8vtQ7\n1mn4HNFBBjuE4ftcDAaswvM84utBfbalrIiIjbDuIOCdFf7KbuRj17Vk7ftU\nghTj6ltnQ1t5dz5KXrB5MVusZN67cahq5aNl3qHaFhIEu7Rxmi4GsXauPCqw\nmiUp\r\n=0twY\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQCPNJSTuIweQ2JqNnU1MSqyX1WFwOSO5h7p7A5KXgk80QIgBFjBvagwM2eJe7eHNcgHgJ+h2WeGRIE9qnrfZCBkB3U="
					}
				]
			},
			"_npmUser": {
				"name": "j1637787429",
				"email": "1637787429@qq.com"
			},
			"maintainers": [
				{
					"name": "j1637787429",
					"email": "1637787429@qq.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorem-pro_5.1.3_1608620084568_0.5977640713024279"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2020-12-12T09:47:35.855Z",
		"5.1.2": "2020-12-12T09:47:35.964Z",
		"modified": "2022-05-13T06:39:40.429Z",
		"5.1.3": "2020-12-22T06:54:44.695Z"
	},
	"maintainers": [
		{
			"name": "j1637787429",
			"email": "1637787429@qq.com"
		}
	],
	"description": "A CSS post-processor that converts px to rem.",
	"homepage": "https://github.com/J-env/postcss-pxtorem#readme",
	"keywords": [
		"css",
		"rem",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/J-env/postcss-pxtorem.git"
	},
	"author": {
		"name": "cuth"
	},
	"bugs": {
		"url": "https://github.com/J-env/postcss-pxtorem/issues"
	},
	"license": "MIT",
	"readme": "# postcss-pxtorem-pro\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rem units from pixel units.\n\nThe code fork for [postcss-pxtorem](https://github.com/cuth/postcss-pxtorem)ï¼Œjust modify little.\n\n## Install\n\n```shell\n$ npm install postcss-pxtorem-pro --save-dev\n```\n\n## Usage\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625rem;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorem = require('postcss-pxtorem');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0,\n    commentIgnore: '@pxtorem-ignore',\n    ignoreFn: null,\n    exclude: /node_modules/i\n}\n```\n\nConfig:\n```js\n{\n  // 1rem=100px\n  rootValue: 100,\n  unitPrecision: 2, \n  propList: ['*'], \n  selectorBlackList: [/^html$/],\n  mediaQuery: false, \n  minPixelValue: 2, \n  /* @pxtorem-ignore */\n  commentIgnore: '@pxtorem-ignore',\n  ignoreFn: (str) => /font-size:\\s?12px/i.test(str),\n  exclude: /node_modules/i\n}\n```\n\n```css\n/* test.css */\n.test {\n  margin: 10px;\n  /* @pxtorem-ignore */\n  padding: 10px;\n  font-size: 12px;\n}\n\n/* test.s?css */\n.test {\n  margin: 10px;\n  /*! @pxtorem-ignore */\n  padding: 10px;\n  font-size: 12px;\n}\n\n// output\n.test {\n  margin: 0.1rem;\n  padding: 10px;\n  font-size: 12px;\n}\n```\n\n- `rootValue` (Number | Function) Represents the root element font size or returns the root element font size based on the [`input`](https://api.postcss.org/Input.html) parameter\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `propList` (Array) The properties that can change from px to rem.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']` \n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) Replaces rules containing rems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n- `exclude` (String, Regexp, Function) The file path to ignore and leave as px.\n    - If value is string, it checks to see if file path contains the string.\n        - `'exclude'` will match `\\project\\postcss-pxtorem\\exclude\\path`\n    - If value is regexp, it checks to see if file path matches the regexp.\n        - `/exclude/i` will match `\\project\\postcss-pxtorem\\exclude\\path`\n    - If value is function, you can use exclude function to return a true and the file will be ignored.\n        - the callback will pass the file path as  a parameter, it should returns a Boolean result.\n        - `function (file) { return file.indexOf('exclude') !== -1; }`\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorem = require('postcss-pxtorem');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 1
}
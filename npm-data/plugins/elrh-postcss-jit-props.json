{
	"_id": "elrh-postcss-jit-props",
	"_rev": "1-ef9f77f3d26e15b408b07c71666df412",
	"name": "elrh-postcss-jit-props",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "elrh-postcss-jit-props",
			"version": "1.0.0",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"css-vars",
				"css-custom-properties"
			],
			"author": {
				"name": "Alois Seckar",
				"email": "alois.seckar@gmail.com"
			},
			"license": "Apache-2.0",
			"_id": "elrh-postcss-jit-props@1.0.0",
			"maintainers": [
				{
					"name": "ellrohir",
					"email": "alois.seckar@gmail.com"
				}
			],
			"homepage": "https://github.com/AloisSeckar/elrh-postcss-jit-props#readme",
			"bugs": {
				"url": "https://github.com/AloisSeckar/elrh-postcss-jit-props/issues"
			},
			"dist": {
				"shasum": "af6db0fb82cc25432ad0861dc04b917d0c11d159",
				"tarball": "https://registry.npmjs.org/elrh-postcss-jit-props/-/elrh-postcss-jit-props-1.0.0.tgz",
				"fileCount": 11,
				"integrity": "sha512-G4UPkJh6jsC2spWh3cxt3ROBoS2qwtbVgvUscLfJwW0+edtsdhCcqZ3c6VG0AVfDb+4RQGkGs9+mKBG53jyHbw==",
				"signatures": [
					{
						"sig": "MEQCIEvy5R0OCONzqNpxLaW+Si1P+HBELQC5QNwfkaYODXfOAiBM7BkdDqIHCNUfkNNACY4qN7kLNYbdJX0t4Grxi7tdTQ==",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 44562
			},
			"jest": {
				"testEnvironment": "node",
				"coverageThreshold": {
					"global": {
						"statements": 90
					}
				}
			},
			"types": "index.d.ts",
			"engines": {
				"node": ">=10.0.0"
			},
			"gitHead": "17e4e7a4eed5825f2c029c0aeff54b654787d53f",
			"scripts": {
				"dev": "jest --coverage --watch",
				"lint": "eslint .",
				"test": "jest --coverage && eslint ."
			},
			"_npmUser": {
				"name": "ellrohir",
				"email": "alois.seckar@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/AloisSeckar/elrh-postcss-jit-props.git",
				"type": "git"
			},
			"_npmVersion": "10.3.0",
			"description": "PostCSS plugin to insert variables from a data source based on discovered usage + empty css file fix",
			"directories": {},
			"lint-staged": {
				"*.js": "eslint --fix"
			},
			"_nodeVersion": "20.11.0",
			"dependencies": {
				"tiny-glob": "^0.2.9"
			},
			"eslintConfig": {
				"env": {
					"es6": true,
					"node": true
				},
				"rules": {
					"jest/expect-expect": "off"
				},
				"extends": [
					"eslint:recommended",
					"plugin:jest/recommended"
				],
				"parserOptions": {
					"ecmaVersion": 2020
				}
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"jest": "^26.6.3",
				"eslint": "^7.21.0",
				"postcss": "^8.2.8",
				"lint-staged": "^10.5.4",
				"clean-publish": "^2.1.0",
				"simple-git-hooks": "^2.0.2",
				"eslint-plugin-jest": "^24.2.1"
			},
			"peerDependencies": {
				"postcss": "^8.2.8"
			},
			"simple-git-hooks": {
				"pre-commit": "npx lint-staged"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/elrh-postcss-jit-props_1.0.0_1739693648039_0.21329581388501384",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"1.0.1": {
			"name": "elrh-postcss-jit-props",
			"version": "1.0.1",
			"description": "PostCSS plugin to insert variables from a data source based on discovered usage + empty css file fix",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"css-vars",
				"css-custom-properties"
			],
			"types": "index.d.ts",
			"scripts": {
				"test": "jest --coverage && eslint .",
				"dev": "jest --coverage --watch",
				"lint": "eslint ."
			},
			"author": {
				"name": "Alois Seckar",
				"email": "alois.seckar@gmail.com"
			},
			"license": "Apache-2.0",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/AloisSeckar/elrh-postcss-jit-props.git"
			},
			"engines": {
				"node": ">=10.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.2.8"
			},
			"devDependencies": {
				"clean-publish": "^2.1.0",
				"eslint": "^7.21.0",
				"eslint-plugin-jest": "^24.2.1",
				"jest": "^26.6.3",
				"lint-staged": "^10.5.4",
				"postcss": "^8.2.8",
				"simple-git-hooks": "^2.0.2"
			},
			"simple-git-hooks": {
				"pre-commit": "npx lint-staged"
			},
			"lint-staged": {
				"*.js": "eslint --fix"
			},
			"eslintConfig": {
				"parserOptions": {
					"ecmaVersion": 2020
				},
				"env": {
					"node": true,
					"es6": true
				},
				"extends": [
					"eslint:recommended",
					"plugin:jest/recommended"
				],
				"rules": {
					"jest/expect-expect": "off"
				}
			},
			"jest": {
				"testEnvironment": "node",
				"coverageThreshold": {
					"global": {
						"statements": 90
					}
				}
			},
			"dependencies": {
				"tiny-glob": "^0.2.9"
			},
			"_id": "elrh-postcss-jit-props@1.0.1",
			"gitHead": "4d3474c58c71fcebf6eac4c37958b1662676eea0",
			"bugs": {
				"url": "https://github.com/AloisSeckar/elrh-postcss-jit-props/issues"
			},
			"homepage": "https://github.com/AloisSeckar/elrh-postcss-jit-props#readme",
			"_nodeVersion": "20.11.0",
			"_npmVersion": "10.3.0",
			"dist": {
				"integrity": "sha512-F2Xo4b8cqZ61m6WGQtcn0mwSYR3IAPhGpbMTGC8LM/Q6UnNpr2KecZr9kP9sF7tIwRxiyrg2K4IKHkNP106YXQ==",
				"shasum": "13113a7dff9c93b25a8f366776db59c918cebe8f",
				"tarball": "https://registry.npmjs.org/elrh-postcss-jit-props/-/elrh-postcss-jit-props-1.0.1.tgz",
				"fileCount": 11,
				"unpackedSize": 44582,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIEMifZ06YFsZ5HZ4jMcxaDFoFIv/E60/o8fv/fzgcvBuAiEAyrDJB5COJWB0h286llp4eJfuMLLxUGABLsHTtZ9V/MA="
					}
				]
			},
			"_npmUser": {
				"name": "ellrohir",
				"email": "alois.seckar@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "ellrohir",
					"email": "alois.seckar@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/elrh-postcss-jit-props_1.0.1_1739694061003_0.19017110103658652"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-02-16T08:14:08.038Z",
		"modified": "2025-02-16T08:21:01.440Z",
		"1.0.0": "2025-02-16T08:14:08.285Z",
		"1.0.1": "2025-02-16T08:21:01.201Z"
	},
	"bugs": {
		"url": "https://github.com/AloisSeckar/elrh-postcss-jit-props/issues"
	},
	"author": {
		"name": "Alois Seckar",
		"email": "alois.seckar@gmail.com"
	},
	"license": "Apache-2.0",
	"homepage": "https://github.com/AloisSeckar/elrh-postcss-jit-props#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"css-vars",
		"css-custom-properties"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/AloisSeckar/elrh-postcss-jit-props.git"
	},
	"description": "PostCSS plugin to insert variables from a data source based on discovered usage + empty css file fix",
	"maintainers": [
		{
			"name": "ellrohir",
			"email": "alois.seckar@gmail.com"
		}
	],
	"readme": "# PostCSS (Just In Time) Props\r\n\r\n> Only ship used variables! A CSS custom property helper based on PostCSS\r\n\r\n[![Version](https://img.shields.io/npm/v/postcss-jit-props)](https://www.npmjs.com/package/postcss-jit-props)\r\n[![postcss compatibility](https://img.shields.io/npm/dependency-version/postcss-jit-props/peer/postcss)](https://postcss.org/)\r\n[![Unit Tests](https://github.com/GoogleChromeLabs/postcss-jit-props/actions/workflows/node.js.yml/badge.svg)](https://github.com/GoogleChromeLabs/postcss-jit-props/actions/workflows/node.js.yml)\r\n\r\n<br>\r\n\r\n`postcss-jit-props` watches for CSS variables and ensures a value entry exists in the stylesheet. [Try in browser](https://stackblitz.com/edit/jit-open-props?file=postcss.config.js)\r\n\r\nThis lets you **provide a huge pool of properties** for development and design, and rather than try and purge unused variables, **only adds what was used**. \r\n\r\n<br>\r\n\r\n## Example\r\n\r\nCSS Before / During Development:  \r\n```css\r\n.foo {\r\n  color: var(--brand-1);\r\n  padding: var(--size-1) var(--size-2);\r\n  margin-block-start: var(--size-2);\r\n  animation: var(--fade-in);\r\n}\r\n\r\n@media (--dark) {\r\n  .foo {\r\n    color: white;\r\n  }\r\n}\r\n```\r\n\r\nCSS After / Result of Plugin:  \r\n```diff\r\n+ @custom-media --dark (prefers-color-scheme: dark);\r\n\r\n+ :root {\r\n+   --brand-1: #81A1C1;\r\n+   --size-1: 1rem;\r\n+   --size-2: 2rem;\r\n+   --fade-in: fade-in .5s ease;\r\n+ }\r\n\r\n.foo {\r\n  color: var(--brand-1);\r\n  padding: var(--size-1) var(--size-2);\r\n  margin-block-start: var(--size-2);\r\n  animation: var(--fade-in);\r\n}\r\n\r\n@media (--dark) {\r\n  .foo {\r\n    color: white;\r\n  }\r\n}\r\n\r\n+ @keyframes fade-in {\r\n+   to { opacity: 1; }\r\n+ }\r\n```\r\n\r\n<br>\r\n\r\n## Usage\r\n\r\n**Step 1:** Install plugin:\r\n\r\n```sh\r\nnpm install --save-dev postcss-jit-props\r\n```\r\n\r\n<br>\r\n\r\n**Step 2:** Add the plugin to plugins in `postcss.config.js` and **pass it your props (CSS || JS || JSON)**.\r\n\r\nPass JS objects:\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    require('postcss-jit-props')({\r\n      '--brand-1': '#81A1C1',\r\n      '--size-1': '1rem',\r\n      '--size-2': '2rem',\r\n      '--fade-in': 'fade-in .5s ease',\r\n      '--fade-in-@': '@keyframes fade-in {to { opacity: 1 }}',\r\n      '--dark': '@custom-media --dark (prefers-color-scheme: dark);',\r\n      '--text': 'white',\r\n      '--text-@media:dark': 'black',\r\n    }),\r\n    require('autoprefixer'),\r\n  ]\r\n}\r\n```\r\n\r\nor pass CSS files \r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    require('postcss-jit-props')({files: ['./props.css']}),\r\n    require('autoprefixer'),\r\n  ]\r\n}\r\n```\r\n\r\nor JSON âœ¨\r\n\r\n> Javascript and JSON must use the `-@` suffix on their custom property name in order for jit-props to find associated `@keyframes`\r\n\r\nConfigure where the selector the props are pushed to. Some CSS Module environments, for example, don't want the props in `:root`, so we can configure the plugin to push them where it's acceptable for the environment, like `:global`: \r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    require('postcss-jit-props')({\r\n      ...MyProps,\r\n      custom_selector: ':global'\r\n    }),\r\n    require('autoprefixer'),\r\n  ]\r\n}\r\n```\r\n\r\nConfigure the `@layer` the props are pushed to. : \r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    require('postcss-jit-props')({\r\n      ...MyProps,\r\n      layer: 'design.system'\r\n    }),\r\n    require('autoprefixer'),\r\n  ]\r\n}\r\n```\r\n",
	"readmeFilename": "README.md",
	"_downloads": 0
}
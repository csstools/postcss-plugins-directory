{
	"_id": "postcss-theme-tokens",
	"_rev": "2-dee395f7b7a201db5cfe3c175e71f5ce",
	"name": "postcss-theme-tokens",
	"dist-tags": {
		"latest": "1.0.1"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-theme-tokens",
			"version": "1.0.0",
			"keywords": [
				"postcss",
				"plugin",
				"postcss-plugin",
				"theme",
				"theming",
				"css-variables",
				"design-tokens"
			],
			"author": {
				"name": "Max Lawrence",
				"email": "mxlawr@gmail.com"
			},
			"license": "MIT",
			"_id": "postcss-theme-tokens@1.0.0",
			"maintainers": [
				{
					"name": "mxlawr",
					"email": "mxlawr@gmail.com"
				}
			],
			"homepage": "https://github.com/yalogica/postcss-theme-tokens#readme",
			"bugs": {
				"url": "https://github.com/yalogica/postcss-theme-tokens/issues"
			},
			"dist": {
				"shasum": "b13a140045c345327d5467a4ca03ce9dc9ab5258",
				"tarball": "https://registry.npmjs.org/postcss-theme-tokens/-/postcss-theme-tokens-1.0.0.tgz",
				"fileCount": 6,
				"integrity": "sha512-5HtlZrm6TiOKWisPpsmp6Od0OH93oakSA4HaERywn5LbbM/cEKFcQke597xt3Y60+L1t2stzs3HN3Tgt2YViig==",
				"signatures": [
					{
						"sig": "MEUCIGs8PEEPGtQ8ix0agAJCQTdFR/PI7WfaqNOhcOeTfAhoAiEA8Cm7MIUcQXPDHfcPnBgu+V8kn50DfoHlsHYBywpp1Bo=",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 10815
			},
			"main": "dist/index.js",
			"types": "dist/index.d.ts",
			"gitHead": "24c23ff8abc306c2ed7b35c0d2826687d6a11421",
			"scripts": {
				"build": "tsc",
				"prepublishOnly": "npm run build"
			},
			"_npmUser": {
				"name": "mxlawr",
				"email": "mxlawr@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/yalogica/postcss-theme-tokens.git",
				"type": "git"
			},
			"_npmVersion": "10.9.2",
			"description": "PostCSS plugin to generate CSS variables from theme configs with color formatting and color-scheme support",
			"directories": {},
			"_nodeVersion": "22.16.0",
			"dependencies": {
				"color": "^4.2.3"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"typescript": "^5.1.6",
				"@types/node": "^24.2.0",
				"@types/color": "^3.0.1"
			},
			"peerDependencies": {
				"postcss": ">=8"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-theme-tokens_1.0.0_1754645270872_0.9852268347245439",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"1.0.1": {
			"name": "postcss-theme-tokens",
			"version": "1.0.1",
			"description": "PostCSS plugin to generate CSS variables from theme configs with color formatting and color-scheme support",
			"keywords": [
				"postcss",
				"plugin",
				"postcss-plugin",
				"theme",
				"theming",
				"css-variables",
				"design-tokens"
			],
			"author": {
				"name": "Max Lawrence",
				"email": "mxlawr@gmail.com"
			},
			"license": "MIT",
			"main": "dist/index.js",
			"types": "dist/index.d.ts",
			"scripts": {
				"build": "tsc",
				"prepublishOnly": "npm run build"
			},
			"peerDependencies": {
				"postcss": ">=8"
			},
			"dependencies": {
				"color": "^4.2.3"
			},
			"devDependencies": {
				"@types/color": "^3.0.1",
				"@types/node": "^24.2.0",
				"typescript": "^5.1.6"
			},
			"homepage": "https://github.com/yalogica/postcss-theme-tokens#readme",
			"bugs": {
				"url": "https://github.com/yalogica/postcss-theme-tokens/issues"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/yalogica/postcss-theme-tokens.git"
			},
			"_id": "postcss-theme-tokens@1.0.1",
			"gitHead": "48f8d99749bafdfaa501edff5c7ec6d48f367319",
			"_nodeVersion": "22.16.0",
			"_npmVersion": "10.9.2",
			"dist": {
				"integrity": "sha512-WLxMET3OQtdoS1BBQtk8pN0oxO/rbYbwPDCD5zm4eT84wQI89xqaq9mPArK+y8qcTOv3NyPKrpEBywTCpM7URg==",
				"shasum": "c5dc87852d932ac76d7fc1de13d4f6ec3c0d720a",
				"tarball": "https://registry.npmjs.org/postcss-theme-tokens/-/postcss-theme-tokens-1.0.1.tgz",
				"fileCount": 6,
				"unpackedSize": 14324,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIQCXQPtcHrkGuvUiTMcScaNPFWPmz7t7zyTcTEyToFecvgIgcQA2A/ynEXXEGCMOzG0n7JWmbE6Dxk8l12B9h3kFDOM="
					}
				]
			},
			"_npmUser": {
				"name": "mxlawr",
				"email": "mxlawr@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "mxlawr",
					"email": "mxlawr@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-theme-tokens_1.0.1_1754659834874_0.4886684245767505"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-08-08T09:27:50.771Z",
		"modified": "2025-08-08T13:30:35.366Z",
		"1.0.0": "2025-08-08T09:27:51.068Z",
		"1.0.1": "2025-08-08T13:30:35.177Z"
	},
	"bugs": {
		"url": "https://github.com/yalogica/postcss-theme-tokens/issues"
	},
	"author": {
		"name": "Max Lawrence",
		"email": "mxlawr@gmail.com"
	},
	"license": "MIT",
	"homepage": "https://github.com/yalogica/postcss-theme-tokens#readme",
	"keywords": [
		"postcss",
		"plugin",
		"postcss-plugin",
		"theme",
		"theming",
		"css-variables",
		"design-tokens"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/yalogica/postcss-theme-tokens.git"
	},
	"description": "PostCSS plugin to generate CSS variables from theme configs with color formatting and color-scheme support",
	"maintainers": [
		{
			"name": "mxlawr",
			"email": "mxlawr@gmail.com"
		}
	],
	"readme": "[![npm version](https://img.shields.io/npm/v/postcss-theme-tokens.svg)](https://www.npmjs.com/package/postcss-theme-tokens)\r\n[![npm license](https://img.shields.io/npm/l/postcss-theme-tokens.svg)](https://www.npmjs.com/package/postcss-theme-tokens)\r\n\r\n# postcss-theme-tokens\r\n\r\nGenerate CSS variables from theme configs with `color-scheme` support.\r\n\r\n## Install\r\n```bash\r\nnpm install postcss-theme-tokens --save-dev\r\n```\r\n\r\n## How to Use:\r\n### 1. Add the plugin to your PostCSS config **postcss.config.js**:\r\n\r\n```JS\r\nexport default {\r\n   plugins: {\r\n      'postcss-theme-tokens': { prefix: 'heroui', format: 'hsl' }\r\n   },\r\n};\r\n```\r\n\r\n#### Explanation of `prefix` and `format` options\r\n\r\n- **`prefix: 'heroui'`**  \r\n  Adds a custom prefix to all generated CSS variables to prevent naming conflicts in large projects or when integrating with other component libraries.  \r\n  Example:\r\n  ```css\r\n  /* Without prefix */\r\n  --primary: #0066ff;\r\n\r\n  /* With prefix */\r\n  --heroui-primary: #0066ff;\r\n  ```\r\n  âœ… Recommended when building reusable UI libraries or design systems.\r\n\r\n- **`format: 'hex'`**  \r\n  Defines the output format for color values. Supported formats:\r\n  - `'hex'` â€” `#0066ff` (default)\r\n  - `'hsl'` â€” `216 100% 50%` (ideal for dynamic color adjustments in CSS)\r\n  - `'rgb'` â€” `0, 102, 255`\r\n\r\n  > ðŸ”¥Tip: Use `format: 'hsl'` if you plan to manipulate colors with CSS functions like `hsl(var(--hue) 100% 50%)`.\r\n\r\n\r\n### 2. Prepare you theme file (json, ts or js):\r\n\r\n```JSON\r\n{\r\n  \"themes\": {\r\n    \"light\": {\r\n      \"colorScheme\": \"light\",\r\n      \"colors\": {\r\n        \"default\": {\r\n          \"50\": \"#fafafa\",\r\n          \"100\": \"#f2f2f3\",\r\n          \"200\": \"#ebebec\",\r\n          \"300\": \"#e3e3e6\",\r\n          \"foreground\": \"#000\",\r\n          \"DEFAULT\": \"#d4d4d8\"\r\n        },\r\n        \"background\": \"#ffffff\",\r\n        \"foreground\": \"#000000\",\r\n        \"focus\": \"#006FEE\",\r\n        \"overlay\": \"#000000\"\r\n      }\r\n    },\r\n    \"dark\": {\r\n      \"colorScheme\": \"dark\",\r\n      \"colors\": {\r\n        \"default\": {\r\n          \"50\": \"#0d0d0e\",\r\n          \"100\": \"#19191c\",\r\n          \"200\": \"#26262a\",\r\n          \"300\": \"#323238\",\r\n          \"foreground\": \"#fff\",\r\n          \"DEFAULT\": \"#3f3f46\"\r\n        },\r\n        \"background\": \"#000000\",\r\n        \"foreground\": \"#ffffff\",\r\n        \"focus\": \"#006FEE\",\r\n        \"overlay\": \"#ffffff\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n> âœ… Tip: Use consistent naming and always include `colorScheme` for proper dark/light mode integration with the browser.\r\n\r\n### 3. Add the plugin directive to your CSS file:\r\n```CSS\r\n@theme-tokens './src/theme.json';\r\n```\r\n\r\n### 4. The output CSS will look like this (depending on your config):\r\n```CSS\r\n.light {\r\n  color-scheme: light;\r\n  --heroui-default-50: 0.00 0.00% 98.04%;\r\n  --heroui-default-100: 240.00 4.00% 95.10%;\r\n  --heroui-default-200: 240.00 2.56% 92.35%;\r\n  --heroui-default-300: 240.00 5.66% 89.61%;\r\n  --heroui-default-foreground: 0.00 0.00% 0.00%;\r\n  --heroui-default: 240.00 4.88% 83.92%;\r\n  --heroui-background: 0.00 0.00% 100.00%;\r\n  --heroui-foreground: 0.00 0.00% 0.00%;\r\n  --heroui-focus: 212.02 100.00% 46.67%;\r\n  --heroui-overlay: 0.00 0.00% 0.00%;\r\n}\r\n.dark {\r\n  color-scheme: dark;\r\n  --heroui-default-50: 240.00 3.70% 5.29%;\r\n  --heroui-default-100: 240.00 5.66% 10.39%;\r\n  --heroui-default-200: 240.00 5.00% 15.69%;\r\n  --heroui-default-300: 240.00 5.66% 20.78%;\r\n  --heroui-default-foreground: 0.00 0.00% 100.00%;\r\n  --heroui-default: 240.00 5.26% 26.08%;\r\n  --heroui-background: 0.00 0.00% 0.00%;\r\n  --heroui-foreground: 0.00 0.00% 100.00%;\r\n  --heroui-focus: 212.02 100.00% 46.67%;\r\n  --heroui-overlay: 0.00 0.00% 100.00%;\r\n}\r\n```\r\n\r\n## License\r\n\r\n[MIT](LICENSE)",
	"readmeFilename": "README.md",
	"_downloads": 9
}
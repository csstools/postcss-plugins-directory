{
	"_id": "postcss-insert",
	"_rev": "1-eb3eae2603d574db59a6cf0c6ebcd34c",
	"name": "postcss-insert",
	"dist-tags": {
		"latest": "1.0.0"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-insert",
			"version": "1.0.0",
			"description": "A postcss plugin that inserts one css classes properties into another, like Sass @extend...only better",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"apply",
				"insert",
				"classes",
				"sass-mixins",
				"extend",
				"sass-extend"
			],
			"author": {
				"name": "Joe Cianflone",
				"email": "joe@cianflone.co"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/JoeCianflone/postcss-insert.git"
			},
			"bugs": {
				"url": "https://github.com/JoeCianflone/postcss-insert/issues"
			},
			"homepage": "https://github.com/JoeCianflone/postcss-insert",
			"dependencies": {
				"css.escape": "^1.5.1",
				"eslint-config-prettier": "^2.9.0",
				"eslint-plugin-prettier": "^2.6.2",
				"lodash": "^4.17.10",
				"postcss": "^6.0.16",
				"prettier": "^1.13.7"
			},
			"devDependencies": {
				"eslint": "^4.18.2",
				"eslint-config-postcss": "^2.0.2",
				"jest": "^22.4.2"
			},
			"scripts": {
				"test": "jest && eslint *.js"
			},
			"eslintConfig": {
				"extends": "eslint-config-postcss/es5",
				"env": {
					"jest": true
				}
			},
			"jest": {
				"testEnvironment": "node"
			},
			"gitHead": "a8c1f4090d4ec5970cb6b6dc5c97850ea98b2dfc",
			"_id": "postcss-insert@1.0.0",
			"_npmVersion": "6.2.0",
			"_nodeVersion": "10.0.0",
			"_npmUser": {
				"name": "joecianflone",
				"email": "joe@cianflone.co"
			},
			"dist": {
				"integrity": "sha512-d8EzdMW3vue6kFuZe0KYP4yZiRs6vVOmfKnQflCdCYnIzQJGn1UUyc93ULp6a1IUuMUMtxuTAkSDGnrz+IRTtw==",
				"shasum": "8978b967c3c132da1a054bb0f4ca5f0da4a3de61",
				"tarball": "https://registry.npmjs.org/postcss-insert/-/postcss-insert-1.0.0.tgz",
				"fileCount": 10,
				"unpackedSize": 11486,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbXKggCRA9TVsSAnZWagAA8G4P/2J/WAEyDifdviNZP+11\nCZPPI9KH0kW0r1R2UGcPya5l3WwhXNskbhps4+M5slT1m8WUmeNga3tfU2SD\nD3tk6/iALu/5jk/KNhyUI1FSlp/q6hbJCQu/iFb0AQgyS6sArrXBV6ooblME\nJ80z2kADh6oc44WpXruOqsYY7Ula3unxmiRtZB9dG0fo5K1HQwwDEVxtyBZA\nJN052d6ZrcKavu2df8zQed7aiy5rPjt/g/8Vw0GoxOgE+hOw4IjBO1amVDSH\nxoLORc3IucTG7J2A4ZG7/WaY7aVktZtdozzP7dDKBmersgoOtB9f6ipJ6l5y\nT6dlM0JCUCiR0vhz9rGXh/XHFwrByLbkQSf4i/Wc9pXQbtvwv4bil6GNmHAq\nZr/wu2uB516DDdrVYdKk6uSEK6br06Zom7DR2IvKGbH8eWliKIgvJFn5M+f+\ntY6kCsgCADM5N/1UbbYl6qLKscACSpkSo0HP1TmEHi/gIHy2UzUMI8H93ZLK\n57qNvx7G85dv77WelRXsLQi2cWLdBm+mGK73ThRARijf5TWrMpj7Oh7ZpiUv\ng97SC7dk/bwvE0vCBx1ATtEKNuBphe0yswTrPXxOwV/BY6NCJwhTUWETBp65\nmx54ygKnMKIhhbeTS2S6q9NDLkhEGt079JP3RHjwvjJKOKspVPTeBlqZTb0b\n2o6q\r\n=2PdK\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIFFXtIJVLn31i6Yg62mz5NjZPMKZpvyOE+4jRCSRfgM8AiEA4E16LcW0ucEIOJ+3Y3ha9iWcmbBKcP7eOg/oB/AMlZo="
					}
				]
			},
			"maintainers": [
				{
					"name": "joecianflone",
					"email": "joe@cianflone.co"
				}
			],
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-insert_1.0.0_1532799008834_0.40915274096145127"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2018-07-28T17:30:08.833Z",
		"1.0.0": "2018-07-28T17:30:08.899Z",
		"modified": "2022-05-13T06:23:48.430Z"
	},
	"maintainers": [
		{
			"name": "joecianflone",
			"email": "joe@cianflone.co"
		}
	],
	"description": "A postcss plugin that inserts one css classes properties into another, like Sass @extend...only better",
	"homepage": "https://github.com/JoeCianflone/postcss-insert",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"apply",
		"insert",
		"classes",
		"sass-mixins",
		"extend",
		"sass-extend"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/JoeCianflone/postcss-insert.git"
	},
	"author": {
		"name": "Joe Cianflone",
		"email": "joe@cianflone.co"
	},
	"bugs": {
		"url": "https://github.com/JoeCianflone/postcss-insert/issues"
	},
	"license": "MIT",
	"readme": "# PostCSS Insert [![Build Status][ci-img]][ci]\n\nA [PostCSS] plugin that inserts CSS properties from one class into another, like Sass' @extend only better!\n\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.org/JoeCianflone/postcss-insert.svg\n[ci]:      https://travis-ci.org/JoeCianflone/postcss-insert\n\nAlright, if you've used Sass before you know about `@extend` the concept is pretty simple: you take one classes properties and add them to another class in a simple way. In theory, `@extend` is awesome, but it doesn't work the way you expect. See [this](https://www.sassmeister.com/gist/3ff2cf9f8f676f36bc4a07fe8b724fcb) to see how Sass handles extend.\n\nMixins with Sass work better, you create a bunch of properties in a mixin and you just `@include` them wherever you want. But, you now have this extra thing...the mixin itself, it feels kinda dirty to me. This really should be a solved problem, but it's not for some reason.\n\nWhat I wanted was a way to have the simplicity of `@extend` with the behavior of a `@mixin`.\n\nFunny thing is I wasn't the only one thinking of it. [Adam Wathen](https://github.com/adamwathan) was thinking about this when he created [Tailwinds](https://tailwindcss.com/). Adam created a PostCSS plugin called `@apply` which did almost everything I wanted it to do...except it was part of a framework. Now, Tailwinds is great, I have no issue with it, but I wanted this without *needing* a framework. Also, I didn't like the name `@apply` because that name was being used with custom properties in CSS. I think its been deprecated, but there's a chance it will be taken up again in the future. To me, `@apply` is a great name, but it comes with some potential baggage that I'd have to deal with later on, also I feel like `@insert` is more descriptive of what the plugin is doing.\n\n## Install\n\n```bash\n$ npm install postcss-insert`\n```\n\n## CSS Usage\n\nAlright, so how do we use this thing? Take a look below:\n\n```css\n.bar {\n  color: green;\n}\n\n.foo {\n  @insert .bar;\n}\n```\n\nOutput\n\n```css\n.bar {\n  color: green;\n}\n\n.foo {\n  color: green;\n}\n```\n\nObviously this is a pretty contrived example, but you can see what we're doing here. A better example may be extending a button class:\n\n```css\n\n.btn {\n  padding: 5px 15px;\n  text-transform: uppercase;\n  font-size: 18px;\n}\n\n.btn-primary {\n  @insert .btn;\n  background-color: blue;\n}\n```\n\nOutput\n\n```css\n.btn {\n  padding: 5px 15px;\n  text-transform: uppercase;\n  font-size: 18px;\n}\n\n.btn-primary {\n  padding: 5px 15px;\n  text-transform: uppercase;\n  font-size: 18px;\n  background-color: blue;\n}\n```\n\n### All props come over, even `!important`...unless you disable it\n\nBy default, `@insert` will *not* strip `!important`, but there's an option `stripImportant` that you can set to `true` and it will...well strip the `!important`:\n\n```css\n.bar {\n  color: green;\n  font-size: 22px !important;\n  border: 1px solid red;\n}\n\n.foo {\n  @insert .bar;\n}\n```\n\nOutput:\n\n```css\n.bar {\n  color: green;\n  font-size: 22px !important;\n  border: 1px solid red;\n}\n\n.foo {\n  color: green;\n  font-size: 22px !important;\n  border: 1px solid red;\n}\n```\n\nWith `stripImportant: true` you'd get the following:\n\n```css\n.bar {\n  color: green;\n  font-size: 22px !important;\n  border: 1px solid red;\n}\n\n.foo {\n  @insert .bar;\n}\n```\n\nOutput:\n\n```css\n.bar {\n  color: green;\n  font-size: 22px !important;\n  border: 1px solid red;\n}\n\n.foo {\n  color: green;\n  font-size: 22px;\n  border: 1px solid red;\n}\n```\n\n### This works inside of media queries...unless you disable it\n\n```css\n\n@media (min-width: 400px) {\n  .bar {\n    color: green;\n    font-size: 22px !important;\n    border: 1px solid red;\n  }\n}\n\n\n.foo {\n  @insert .bar;\n}\n```\n\nOutput:\n\n```css\n\n@media (min-width: 400px) {\n  .bar {\n    color: green;\n    font-size: 22px !important;\n    border: 1px solid red;\n  }\n}\n\n\n.foo {\n    color: green;\n    font-size: 22px !important;\n    border: 1px solid red;\n}\n```\n\n## General Plugin Usage\n\n```js\n  postcss([ require('postcss-insert')\n]);\n```\n\n### Recommendation\n\nI recommend that this plugin run last in your PostCSS stack. If you're doing any sort of transforms where a class doesn't exist `@insert` would fail because it can't find the class. If you run this last (or second-to-last right before something like mqpacker) you'll ensure that all classes are there and ready to go. I may eventually add some sort of silent fail option if it can't find a class, but right now that is not the case. Happy coding!\n\nSee [PostCSS] docs for examples for your environment.\n",
	"readmeFilename": "README.md",
	"_downloads": 287
}
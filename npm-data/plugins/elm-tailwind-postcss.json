{
	"_id": "elm-tailwind-postcss",
	"_rev": "3-b4828b13408a743a804db0e47260cf6f",
	"name": "elm-tailwind-postcss",
	"dist-tags": {
		"latest": "0.0.3"
	},
	"versions": {
		"0.0.1": {
			"name": "elm-tailwind-postcss",
			"version": "0.0.1",
			"description": "Postcss plugin to generate Tailwindcss classes into Elm functions",
			"main": "index.js",
			"scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			},
			"keywords": [
				"elm",
				"tailwind",
				"postcss",
				"postcss-plugin",
				"css"
			],
			"author": {
				"name": "Sophea Pov",
				"email": "pov.sophea3@gmail.com"
			},
			"license": "MIT",
			"dependencies": {
				"autoprefixer": "^9.8.6",
				"postcss": "^7.0.35",
				"tailwindcss": "npm:@tailwindcss/postcss7-compat@^2.0.1"
			},
			"homepage": "https://github.com/psophea/elm-tailwind-postcss",
			"engines": {
				"node": "^10.0.0"
			},
			"gitHead": "f06de001385f249451a8f7b0ebde918b3d4577b2",
			"_id": "elm-tailwind-postcss@0.0.1",
			"_nodeVersion": "15.3.0",
			"_npmVersion": "7.0.14",
			"dist": {
				"integrity": "sha512-Q8OyWVIXak0PFZgqakXdJF20esWYtO8BrqoXxRA0iRE6hZPzkB+9so1XsvNEWUZ2cCcWy628FZOUXaqx8I0BtA==",
				"shasum": "1974ba282653434a1e0b7620bfbd2185ff0420d4",
				"tarball": "https://registry.npmjs.org/elm-tailwind-postcss/-/elm-tailwind-postcss-0.0.1.tgz",
				"fileCount": 4,
				"unpackedSize": 8222,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf0WX5CRA9TVsSAnZWagAAV+kP/j34Z5bjg5sXGyBKLD1d\nSRvl9qi4Va/FHFPin4kd6WenfAfde19np9Q2d5YBnhAPecHwd7Rt/MRfbZNQ\nEF7TKe/KVjECPSVlAJqq3mzvGL5UDK+Slp6Jwcjx1zZyRP5rGa2G3h0Du0GC\npb6lUP6Av2vbaPVDP3Bkv9wuSj0g3w+LLurXw2h8QNE9pzQ3I9/l73w53eFY\nIyJCKqsL5JwtkD5ceyTFmc8CxVYA7GhGhVH3KPQuRwXGoinc+GgmXYTk9cJn\nb6jilDn3el8DSCV8NDRmLEC6pi1xmy0A7GFcxcpLfOMDjFGPEEXlyCAAAu08\nvT3VDkwM2SNWhrcy/6KQ3169wPNbnjaSUudW/yR72PEiTbYPktHVmpgPAMQ8\nbZtlxTd7CVAdSVtliGacOEqrp72KDs3CRAKEpAnYb7edm5e7v5eFo13vGygM\nS3z7J8VEMR1uEsArwIWGurDA8PbquT9NVe0BfqZ5LYy2RT4nlDNzuf4p5oDe\nykerP2iqbAoa/OHfidTd+0tZYQQKnPiHlriT6SeTjLJRF6G6LnMKOzOEtIXl\nhmU6Ig+cyDs4sRUqKhecSkp8lt8TuwlPNM8xMKbBJwrKtEnjbSBT5mMQBjaj\nDNbnTY6XDrMcmUokIYBOqFfn/lCwuByYqanQNT7mxj0qzBn5d8TQ/32dmG40\nXKYr\r\n=KgO2\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIEgobqcNYa9xVM0twi72gjBKSFOJlwUAXAMSHVMMlxauAiEArjwf4/k5hgQEsd6znGkDGJXFnan9siP/jesq6caEnIs="
					}
				]
			},
			"_npmUser": {
				"name": "pov.sophea3",
				"email": "pov.sophea3@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "pov.sophea3",
					"email": "pov.sophea3@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/elm-tailwind-postcss_0.0.1_1607558648961_0.3395246414017785"
			},
			"_hasShrinkwrap": false
		},
		"0.0.2": {
			"name": "elm-tailwind-postcss",
			"version": "0.0.2",
			"description": "Postcss plugin to generate Tailwindcss classes into Elm functions",
			"main": "index.js",
			"scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			},
			"keywords": [
				"elm",
				"tailwind",
				"postcss",
				"postcss-plugin",
				"css"
			],
			"author": {
				"name": "Sophea Pov",
				"email": "pov.sophea3@gmail.com"
			},
			"license": "MIT",
			"dependencies": {
				"autoprefixer": "^9.8.6",
				"postcss": "^7.0.35",
				"tailwindcss": "npm:@tailwindcss/postcss7-compat@^2.0.1"
			},
			"homepage": "https://github.com/psophea/elm-tailwind-postcss",
			"engines": {
				"node": ">=10.0.0"
			},
			"gitHead": "f06de001385f249451a8f7b0ebde918b3d4577b2",
			"_id": "elm-tailwind-postcss@0.0.2",
			"_nodeVersion": "15.3.0",
			"_npmVersion": "7.0.14",
			"dist": {
				"integrity": "sha512-v6UnORc3Zn2JhG/1akmxHPrV+D3+ZMbnxjoDlJQbFYcBqyp4rpN6wdcCYSph9vQn65vzD45U8d/K7CftoaI9/Q==",
				"shasum": "a22c70cdb9381e68f435328ea865cc3f70e08fdb",
				"tarball": "https://registry.npmjs.org/elm-tailwind-postcss/-/elm-tailwind-postcss-0.0.2.tgz",
				"fileCount": 5,
				"unpackedSize": 12350,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf0X01CRA9TVsSAnZWagAADEkP/jtcX1J2cAQcSS/LAAJl\n47PbWpcWlxgKYTLba5K3CLXVP5VDQ9ptJldpq8aJOX1xtENuzUqwdxreIwfk\n3WXu5rtEYAA6iYtzBcSLCFFV3Mz+x+2kWw+SkLAX+Zk9eDW1uU3ND1NYCzba\ns4lZlSiNfXmxTJHgBo7fnVvxI4l0tVSzzWLV475Po889UcX5n0dqVtysVWQu\nMOJVmLP9DM1d5+MS88ql8LLe+KQYep4BA2q34QYG05P2Btyaj/29TYszCaVw\n+2+GkiN6jSUy67tr6BkgpkSYqFax1dL5bxj6PZx1ay6cL5OPdQ3JF5mvonGS\n3WcguFd4p2o3LBu+cZ+gdLzSXlcI1T5EQta62uYL3rrdysHjRmNPZdPJ3aA7\nHgLK54t+BXx7EsoIbFj3p3ZkZ07+X7+GgyaL3ypUaBP4pb+vVKr4qajc/yX1\nOrET9Odk/3wCb9a24ZdX8c/ZtruSU9PFanYiC5cvNJn6fQCniphiLia94/Pk\nOlHXE6uZ/v3RxVO3K0VlGROBNfiqxYwinOp8bi41F/IP3/6EXAnOusmyGw7O\nyMEKuTRa4qiT3WY/8iEcKBRaXjjsQEpjZZSrOVnDXwo46Xm7KWm4YNaW0TVy\nPs0bvmrkY98cSzkr/FQkbxYC6zikRH0BccvtQEEnzQvsU5tcRnepy8t529Dc\nW5xQ\r\n=7uxw\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIBYdswWxUps1eQPvkbGSRBhGscLHruRvJXXgISsIKOEZAiEAuSF5ffK7zG+nbVOlGXM3NWS+jbVzjk/XFdHPDdPaHVg="
					}
				]
			},
			"_npmUser": {
				"name": "pov.sophea3",
				"email": "pov.sophea3@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "pov.sophea3",
					"email": "pov.sophea3@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/elm-tailwind-postcss_0.0.2_1607564597275_0.690100479746113"
			},
			"_hasShrinkwrap": false
		},
		"0.0.3": {
			"name": "elm-tailwind-postcss",
			"version": "0.0.3",
			"description": "Postcss plugin to generate Tailwindcss classes into Elm functions",
			"main": "index.js",
			"scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			},
			"keywords": [
				"elm",
				"tailwind",
				"postcss",
				"postcss-plugin",
				"css"
			],
			"author": {
				"name": "Sophea Pov",
				"email": "pov.sophea3@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/psophea/elm-tailwind-postcss.git"
			},
			"dependencies": {
				"autoprefixer": "^9.8.6",
				"postcss": "^7.0.35",
				"tailwindcss": "npm:@tailwindcss/postcss7-compat@^2.0.1"
			},
			"homepage": "https://github.com/psophea/elm-tailwind-postcss",
			"engines": {
				"node": ">=10.0.0"
			},
			"gitHead": "88becf353286caa1a4ec6e874879f3527436ea15",
			"bugs": {
				"url": "https://github.com/psophea/elm-tailwind-postcss/issues"
			},
			"_id": "elm-tailwind-postcss@0.0.3",
			"_nodeVersion": "15.3.0",
			"_npmVersion": "7.0.14",
			"dist": {
				"integrity": "sha512-AQiqklAAA4oR0OEWjNrFefJLNVCIHkeq9k/e4Gh7tOThmVAXm1YXx9xMyAJ7cWBtYRknRsMJf97/Tc0Ht8i3kA==",
				"shasum": "613bab06e48e0347f541af4997d1287077725aa8",
				"tarball": "https://registry.npmjs.org/elm-tailwind-postcss/-/elm-tailwind-postcss-0.0.3.tgz",
				"fileCount": 14,
				"unpackedSize": 23335,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf0dPMCRA9TVsSAnZWagAAZaUP/1+mDQyrQPag/ezdV+YV\nJo1JVvnuJlOSJEP6wwZyFR49lBBiat/Qf4hcQ9r2jdVgueMtcKTTRT0HI7zg\nLaE1zggNdQ47DgaSYxO3h4Gzoa6x9j1DAoq7Wshiz4h+7Q0oa5Gp+qcg+AJ3\nHcNg8q2KVaSrnWFcvXwX9l3l3/1dincehVa5JuyutaSphOZy8roaewlx9p6Q\nipuMg17ET8X83oqnVJjigOlZuQpjJNT7n7TPZdzd1pTnUOPEx8BswdacJbnG\nT51WM5Z9vaHNBsolP+0QYC73045s2qUQD/MzGjySjaMSne8Mq6gpWY5eyQNx\n+T+hX2RGeA0CO99uAUignPL4bZDor8MGDE9EvN/ZH5eFqaNJ5d5Id+H7olnP\n/LEbyP4ljmmeQ2YWafIrmnCs3EvbsbUWAtB7C4PLhXAQ1pMNbUInzc2E9Ml+\nV7NZcSXldMokOr/1vHUN1UHwxmCSQPiyjbv1BQxlr15C1aCkKkZw0yFV0tPH\nMhzyI9kp2P835zg52i7ugm+Om/TeYxbqqI3/Ou3v0x91d/0R75X0PABsK8FM\nXIy9nEZZ2xICaGVetFCbSRYrDMs1DfjwdLLNk6stfIIkRXNAXgGTRaEOzgqf\nXDYmkf7Lwhwj/D45Zao1bRS9Ze7NfuUU1zSmnpakxI3iRO0awZqALEDh5J9k\niHqQ\r\n=jGAA\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIA+JrT+EI+9sihAV3/ULlJ4Jk9TyakeTsvd1yXCsCwWaAiAv4xLMPPR6vMlhiLnCG0RuEfSHnwp62KLd0kyrmV2VHw=="
					}
				]
			},
			"_npmUser": {
				"name": "pov.sophea3",
				"email": "pov.sophea3@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "pov.sophea3",
					"email": "pov.sophea3@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/elm-tailwind-postcss_0.0.3_1607586764335_0.05427061242486486"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2020-12-10T00:04:08.961Z",
		"0.0.1": "2020-12-10T00:04:09.137Z",
		"modified": "2022-05-01T02:37:34.960Z",
		"0.0.2": "2020-12-10T01:43:17.386Z",
		"0.0.3": "2020-12-10T07:52:44.468Z"
	},
	"maintainers": [
		{
			"name": "pov.sophea3",
			"email": "pov.sophea3@gmail.com"
		}
	],
	"description": "Postcss plugin to generate Tailwindcss classes into Elm functions",
	"homepage": "https://github.com/psophea/elm-tailwind-postcss",
	"keywords": [
		"elm",
		"tailwind",
		"postcss",
		"postcss-plugin",
		"css"
	],
	"author": {
		"name": "Sophea Pov",
		"email": "pov.sophea3@gmail.com"
	},
	"license": "MIT",
	"readme": "# elm-tailwind-postcss\r\n\r\n[Elm](http://elm-lang.org) + [Tailwindcss](https://tailwindcss.com) + [Parcel](https://parceljs.org/) = :rocket:\r\n\r\nSee the [demo-repo](https://github.com/psophea/elm-tailwind-postcss/tree/master/demo).\r\n\r\nInstead of using tailwindcss classes directly as string, which might accidently causing typo, you can use this package to generate tailwindcss classes into Elm module and use it as normal Elm function with the help of Elm Compiler to check for error.\r\n\r\nThis package is inspired by [postcss-elm-tailwind](https://github.com/monty5811/postcss-elm-tailwind). Some code and idea got from that repo.\r\n\r\nBelow is what view function might look like using Tailwind function.\r\n\r\n```elm\r\nview : Model -> Html Msg\r\nview model =\r\n    Html.div \r\n        [ T.h_screen\r\n        , T.w_screen\r\n        , T.flex\r\n        , T.justify_center\r\n        , T.items_center\r\n        , T.bg_gray_200 \r\n        ]\r\n        [ Html.div \r\n            []\r\n            [ Html.button\r\n                [ E.onClick Decrement\r\n                , T.px_2\r\n                , T.px_4\r\n                , T.text_white\r\n                , T.bg_blue_500\r\n                , T.w_full\r\n                ]\r\n                [ Html.text \"-\" \r\n                ]\r\n                , Html.div\r\n                    [ T.text_2xl\r\n                    , T.text_center\r\n                    , T.my_4\r\n                    ]\r\n                    [ Html.text (String.fromInt model) \r\n                    ]\r\n                , Html.button\r\n                    [ E.onClick Increment\r\n                    , T.px_2\r\n                    , T.px_4\r\n                    , T.text_white\r\n                    , T.bg_blue_500\r\n                    , T.w_full\r\n                    ]\r\n                    [ Html.text \"+\" \r\n                    ]\r\n              ]\r\n          ]\r\n```\r\n\r\n## Installation\r\n\r\n```\r\nnpm i -D elm-tailwind-postcss\r\n```\r\n\r\n## Usage\r\n\r\n### postcss.config.js\r\n\r\n```js\r\n// tailwind to elm config\r\nconst etcconfig = {\r\n    elmFile: \"src/Tailwind/Tailwind.elm\",\r\n    elmModuleName: \"Tailwind.Tailwind\",\r\n    formats: {\r\n        svg: {\r\n            elmFile: \"src/Tailwind/Svg.elm\",\r\n            elmModuleName: \"Tailwind.Svg\"\r\n        },\r\n        string: {\r\n            elmFile: \"src/Tailwind/String.elm\",\r\n            elmModuleName: \"Tailwind.String\"\r\n        }\r\n    }\r\n};\r\n\r\n// purge\r\nconst purgeconfig = {\r\n    content: ['./tmp/**/*.js'],\r\n};\r\n\r\nconst process = require(\"process\");\r\nconst autoprefixer = require(\"autoprefixer\");\r\nconst purgecss = require('@fullhuman/postcss-purgecss')(purgeconfig);\r\nconst tailwindcss = require(\"tailwindcss\")(\"tailwind.config.js\");\r\nconst etc = require(\"elm-tailwind-postcss\")(etcconfig);\r\n\r\nconst development = {\r\n    plugins: \r\n        [ tailwindcss\r\n        , etc\r\n        , autoprefixer\r\n        ],\r\n};\r\n\r\n// first build will bundle Elm, and Tailwind but doesn't purge CSS yet.\r\nconst firstbuild = {\r\n    plugins:\r\n        [ tailwindcss\r\n        , autoprefixer\r\n        ],\r\n};\r\n\r\n// production build will use result from first build and produce minified, purged CSS.\r\nconst production = {\r\n    plugins: \r\n        [ tailwindcss\r\n        , purgecss\r\n        , autoprefixer\r\n        ],\r\n};\r\n\r\nif (process.env.NODE_ENV === \"firstbuild\") {\r\n    module.exports = firstbuild;\r\n}\r\nelse if (process.env.NODE_ENV === \"production\") {\r\n    module.exports = production;\r\n} else {\r\n    module.exports = development;\r\n}\r\n```\r\n\r\n### tailwind.config.config\r\n\r\nPurge feature in Tailwind config has been disabled to hide warning message as we have configured it in postcss config already.\r\n\r\n```js\r\nmodule.exports = {\r\n    purge: false,\r\n    darkMode: false, // or 'media' or 'class'\r\n    theme: {\r\n        extend: {},\r\n    },\r\n    variants: {\r\n        extend: {},\r\n    },\r\n    plugins: [],\r\n}\r\n\r\n```\r\n\r\n### Other output formats\r\n\r\n#### SVG\r\n\r\nIf you want to use Tailwind classes to style `SVG` you can output an `Svg` module like this:\r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    require(\"tailwindcss\"),\r\n    require(\"elm-tailwind-postcss\")({\r\n      elmFile: \"src/Tailwind/Tailwind.elm\",\r\n      elmModuleName: \"Tailwind.Tailwind\",\r\n      formats: {\r\n        svg: {\r\n          elmFile: \"src/Tailwind/Svg.elm\",\r\n          elmModuleName: \"Tailwind.Svg\"\r\n        }\r\n      }\r\n    })\r\n  ]\r\n};\r\n```\r\n\r\n#### String\r\n\r\nIf you want access to the class names themselves, you can output a `String` module as an escape hatch:\r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: [\r\n    require(\"tailwindcss\"),\r\n    require(\"elm-tailwind-postcss\")({\r\n      elmFile: \"src/Tailwind/Tailwind.elm\",\r\n      elmModuleName: \"Tailwind.Tailwind\",\r\n      formats: {\r\n        string: {\r\n          elmFile: \"src/Tailwind/String.elm\",\r\n          elmModuleName: \"Tailwind.String\"\r\n        }\r\n      }\r\n    })\r\n  ]\r\n};\r\n```\r\n\r\n\r\n\r\n## Production Build\r\n\r\nWe are using [Parcel](https://parceljs.org/) for building the project.\r\n\r\nIn order to get a small build, you'll neet to build Tailwind twice - once without purgecss to build `Tailwind.elm` with all the classes and once with purgecss so that all the unused classes are removed from your production CSS.\r\nSee how this is implemented in the [demo](https://github.com/psophea/elm-tailwind-postcss/tree/master/demo)\r\n\r\n### First Build\r\n\r\n```\r\nset NODE_ENV=firstbuild&&npx parcel build --out-dir tmp --public-url ./ index.html\r\n```\r\n\r\nThe first build will output the result into `tmp` directory which contains all classes without purgecss.\r\n\r\n### Last Build/Production Build\r\n\r\n```\r\nset NODE_ENV=production&&npx parcel build --out-dir dist --public-url ./ ./tmp/index.html\r\n```\r\n\r\nThe last build will get result from the first build, purge all unused classes and output into `dist` directory.\r\n\r\n\r\n\r\n## Syntax Changes\r\n\r\nAs Elm has restriction for function name, some Tailwind classes will be converted into valid Elm function name.\r\n\r\n```elm\r\n-- starts with number becomes \"i_\": 2xl -> i_2xl\r\ndiv [ T.i_2xl ][]\r\n\r\n-- starts with minus sign becomes \"neg_\": -m-2 -> neg_m_2\r\ndiv [ T.neg_m_2][]\r\n\r\n-- hyphene becomes \"_\": m-2 -> m_2\r\ndiv [ T.m_2 ][]\r\n\r\n-- colon becomes \"__\": sm:m-2 -> sm__m_2\r\ndiv [ T.sm__m_2 ][]\r\n\r\n-- divider becomes \"over\": inset-1/2 -> inset_1over2\r\ndiv [ T.inset_1over2 ][]\r\n\r\n-- dot sign becomes \"_dot_\": -inset-x-2.5 -> neg_inset_x_2_dot_5\r\ndiv [ T.neg_inset_x_2_dot_5 ][]\r\n```",
	"readmeFilename": "README.md",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/psophea/elm-tailwind-postcss.git"
	},
	"bugs": {
		"url": "https://github.com/psophea/elm-tailwind-postcss/issues"
	}
}
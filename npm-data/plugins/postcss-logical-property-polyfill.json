{
	"_id": "postcss-logical-property-polyfill",
	"_rev": "1-a11ae5dc9310c1e8b8ab723e4cec9e84",
	"name": "postcss-logical-property-polyfill",
	"dist-tags": {
		"latest": "0.2.0"
	},
	"versions": {
		"0.1.0": {
			"name": "postcss-logical-property-polyfill",
			"version": "0.1.0",
			"description": "PostCSS plugin that will polyfill inset-inline-(start|end) and border-(start|end)-(start|end)-radius in older browsers that don't support them. The polyfill works by leveraging CSS variables, and works for sub-trees and not just globally.",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"postcss-logical-property-fallbacks"
			],
			"scripts": {
				"test": "jest --coverage && eslint ."
			},
			"author": {
				"name": "Naman Goel",
				"email": "naman34@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/nmn/postcss-logical-property-fallbacks.git"
			},
			"engines": {
				"node": ">=12.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.3.0"
			},
			"devDependencies": {
				"clean-publish": "^3.4.2",
				"eslint": "^8.0.1",
				"eslint-plugin-jest": "^25.2.2",
				"jest": "^27.3.1",
				"postcss": "^8.3.11"
			},
			"eslintConfig": {
				"parserOptions": {
					"ecmaVersion": 2017
				},
				"env": {
					"node": true,
					"es6": true
				},
				"extends": [
					"eslint:recommended",
					"plugin:jest/recommended"
				],
				"rules": {
					"jest/expect-expect": "off"
				}
			},
			"jest": {
				"coverageThreshold": {
					"global": {
						"statements": 100
					}
				}
			},
			"gitHead": "b0c06c3c488cbd25044b482ba2e73dd82ee24e8e",
			"bugs": {
				"url": "https://github.com/nmn/postcss-logical-property-fallbacks/issues"
			},
			"homepage": "https://github.com/nmn/postcss-logical-property-fallbacks#readme",
			"_id": "postcss-logical-property-polyfill@0.1.0",
			"_nodeVersion": "19.2.0",
			"_npmVersion": "8.19.3",
			"dist": {
				"integrity": "sha512-IIGUS8Hcf3/HXJo2YwWUemsEBaJrqtYlaKLS6NlvhyW9ybwBXp/47kwD4u70XLLm19Q/gyMzmxqUytISTDJ4IQ==",
				"shasum": "06b35739705841c8116d073b0c22ac8e3d86a438",
				"tarball": "https://registry.npmjs.org/postcss-logical-property-polyfill/-/postcss-logical-property-polyfill-0.1.0.tgz",
				"fileCount": 6,
				"unpackedSize": 21449,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDDlHAa1iM7CDI0UTywjYkQTVaP7w2aPfVXSPs8A5lGiAIgDskJfBPdw/OK1C4OKJFR/7BimqjE1mWdXSthyEu9hzs="
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjmEndACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqSMA/+NS44roqXz+eSH3AWiugcmYR6pgBkrGCblxCueREVez/12j8s\r\ne28b1PvUYugAzh9VD4Ycn5+9pcBpHpZa2cKxZSiVlQ+V6xxLDZHxSgW/9iwb\r\ntj8N2/LBxtVnWcqDHxAni8c8XTDo9wsSZatJy2tTLw9UUn5/w9DXDj4LbV07\r\ndKTNvdM1mWYrmeaIt+BRNHzBRIi0QmA4X02X2maZkLBcPGIk33JBFbD+1JZK\r\nTjJXdYdpiRMzoopTHsgsMm+jVQg7NJJv3O3wKaltQOcz0PWVQPsFCkmZbboU\r\n8Q9TbmYPzq7TSHD2F+wHOj6lQMbnEKonz9vsiO9MTRFAnzd5J1wC55H7jEUA\r\n20tiGBATN2F6zF8tKw7okWgvX2MBSPDyvt+R5g24p0su9AaH5M3ExXyFJTmo\r\nfJP4zTBM/ajJcYsI9kVDGq/HfHpmUvjjJbsn1IKnGEccznNvkVNSAF6DHhil\r\nJGIHelVZ/+pSdra8mhgocOP9GsVvHzCyPo95DrnQbWf4He30MueCJ/ohSiLl\r\nVmkC25GItnbw9ixVZIM1nASgcHrNjGb3r+jcq5ypAxbNF0n4ZoiumxpcD5Ry\r\n/sEVY/NFaOmN5r82kCsIu5MFTF0Zrata3Y6ZmUROfgHmzhH6qrjpZUMe2SmH\r\nkwCdsVjr3KpMdihGVgDhcF3xTWNQa3WwDTc=\r\n=Ncuu\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "naman34",
				"email": "naman34@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "naman34",
					"email": "naman34@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-logical-property-polyfill_0.1.0_1670924765565_0.5090291455051186"
			},
			"_hasShrinkwrap": false
		},
		"0.2.0": {
			"name": "postcss-logical-property-polyfill",
			"version": "0.2.0",
			"description": "PostCSS plugin that will polyfill inset-inline-(start|end) and border-(start|end)-(start|end)-radius in older browsers that don't support them. The polyfill works by leveraging CSS variables, and works for sub-trees and not just globally.",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"postcss-logical-property-fallbacks"
			],
			"scripts": {
				"test": "jest --coverage && eslint ."
			},
			"author": {
				"name": "Naman Goel",
				"email": "naman34@gmail.com"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/nmn/postcss-logical-property-fallbacks.git"
			},
			"engines": {
				"node": ">=12.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.3.0"
			},
			"devDependencies": {
				"clean-publish": "^3.4.2",
				"eslint": "^8.0.1",
				"eslint-plugin-jest": "^25.2.2",
				"jest": "^27.3.1",
				"postcss": "^8.3.11"
			},
			"eslintConfig": {
				"parserOptions": {
					"ecmaVersion": 2017
				},
				"env": {
					"node": true,
					"es6": true
				},
				"extends": [
					"eslint:recommended",
					"plugin:jest/recommended"
				],
				"rules": {
					"jest/expect-expect": "off"
				}
			},
			"jest": {
				"coverageThreshold": {
					"global": {
						"statements": 100
					}
				}
			},
			"gitHead": "ea2c23102d1816670e7cf4f240764bdca38db80c",
			"bugs": {
				"url": "https://github.com/nmn/postcss-logical-property-fallbacks/issues"
			},
			"homepage": "https://github.com/nmn/postcss-logical-property-fallbacks#readme",
			"_id": "postcss-logical-property-polyfill@0.2.0",
			"_nodeVersion": "19.2.0",
			"_npmVersion": "8.19.3",
			"dist": {
				"integrity": "sha512-iGDeZ7kL/QlFPfzXSKeSHPMId6OJG5cD05oCnHtQWh/VYqSJ0JGeDqZOh/+idN5hyj9GYjzAHxKn104KRh+cEw==",
				"shasum": "4963d37dfeb9b05f7324159a93deef425e56693c",
				"tarball": "https://registry.npmjs.org/postcss-logical-property-polyfill/-/postcss-logical-property-polyfill-0.2.0.tgz",
				"fileCount": 6,
				"unpackedSize": 25353,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDAdya/s/acajjE1lHLZTPhJBaSkUTeoJb6tDPAmlwW6QIhALMdn8c7T9MCL3QOOrLArjyqgwDjAoL98LzGzm8xb5nT"
					}
				],
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjmFMMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpSyw//fCRTVcAajwyzhqYmT4Fc7EEJ+UKGXBkLzs9bh/3r+PgxFBRD\r\nQQ+AveLkdbp/AUMxCJ/hrP9Sd2iosLCPevnARdIvCv18aL+jUidalJCPNr/s\r\nfzvywrS4AuQG0MzRJbpiDOGTFgL/7TVEhwk+/vbE764onhDy2QmmL6ZEjmLz\r\nfOoUhjBEr4lTqJFuIpSZVwkDyMkAIouHylVzsYnOOOugTsOpkyW2ASA3IZ6E\r\nUbYzM4MrdC+U9uh8JjJGknTmeb/6zsc1fq2Q5NwztRTyYfZLh9rBXbF3RWhU\r\ntiQmUyjGPcl0SX0BtDktb5F4Eyz8Ym2u1b+4OvOBTK+bTPR+3jvcZmA9EjUn\r\nIC6W6fqu9Y6C8FIBy7l7o7AurgvYelebAOGV6Yda1USqo1Hy2mzTebILI/Yf\r\nxzX+Af6BmheBn4xt2KDlQuStp48JuiHZihVG6VXaFyyEXc4KFiZPJ1seVUue\r\nNPCKzZGFPZiApFGr4wI57X+DcrJFuIMeEAqUeOhaaGOMlwM1bEKAlczcWWUg\r\nfVIO1AKZNVBBvWpVuuo+2C1UaybH6B6pqiDsXswGoiScWGaQgtLsdsXHmuDd\r\nft69ZFoih1dhrHTRt7tyiLgc9Lg2uybdcO8c6im/H95+QwPgTV00B0/cnoj/\r\nOjS4PXfPepd4R5Ehee7Vra2yY7iSkpFhC7Q=\r\n=N6Fz\r\n-----END PGP SIGNATURE-----\r\n"
			},
			"_npmUser": {
				"name": "naman34",
				"email": "naman34@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "naman34",
					"email": "naman34@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-logical-property-polyfill_0.2.0_1670927116746_0.35919698924723376"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2022-12-13T09:46:05.565Z",
		"0.1.0": "2022-12-13T09:46:05.792Z",
		"modified": "2022-12-13T10:25:17.002Z",
		"0.2.0": "2022-12-13T10:25:16.922Z"
	},
	"maintainers": [
		{
			"name": "naman34",
			"email": "naman34@gmail.com"
		}
	],
	"description": "PostCSS plugin that will polyfill inset-inline-(start|end) and border-(start|end)-(start|end)-radius in older browsers that don't support them. The polyfill works by leveraging CSS variables, and works for sub-trees and not just globally.",
	"homepage": "https://github.com/nmn/postcss-logical-property-fallbacks#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"postcss-logical-property-fallbacks"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/nmn/postcss-logical-property-fallbacks.git"
	},
	"author": {
		"name": "Naman Goel",
		"email": "naman34@gmail.com"
	},
	"bugs": {
		"url": "https://github.com/nmn/postcss-logical-property-fallbacks/issues"
	},
	"license": "MIT",
	"readme": "# postcss-logical-property-fallbacks\n\n[PostCSS] plugin that will polyfill inset-inline-(start|end) and border-(start|end)-(start|end)-radius in older browsers that don't support them. The polyfill works by leveraging CSS variables, and works for sub-trees and not just globally..\n\n[postcss]: https://github.com/postcss/postcss\n\n### Vendor Prefixes for `margin`, `padding` and `border`\n\nInput:\n\n```css\n.foo {\n  margin-inline-start: 10px;\n}\n```\n\nOutput:\n\n```css\n.foo {\n  -webkot-margin-start: 10px;\n  margin-inline-start: 10px;\n}\n```\n\n### CSS variable based polyfill for `inset-inline` and `border-radius`\n\nInput:\n\n```css\n.foo {\n  inset-inline-end: 10px;\n}\n.bar {\n  inset-inline-start: 5px;\n}\n```\n\nOutput:\n\n```css\n* {\n  --x-inset-inline-end: initial;\n  --x-inset-inline-start: initial;\n}\n[dir=\"ltr\"],\nhtml:not([dir=\"rtl\"]) {\n  --logical-polyfill-0-ltr: 10px;\n  --logical-polyfill-1-ltr: 5px;\n  --logical-polyfill-0-rtl: initial;\n  --logical-polyfill-1-rtl: initial;\n}\n[dir=\"rtl\"] {\n  --logical-polyfill-0-ltr: initial;\n  --logical-polyfill-1-ltr: initial;\n  --logical-polyfill-0-rtl: 10px;\n  --logical-polyfill-1-rtl: 5px;\n}\n@supports not (inset-inline-end: 0) {\n  .foo {\n    --x-inset-inline-end: 10px;\n    left: var(--logical-polyfill-0-rtl, var(--x-inset-inline-start));\n    right: var(--logical-polyfill-0-ltr, var(--x-inset-inline-start));\n  }\n}\n.foo {\n  inset-inline-end: 10px;\n}\n@supports not (inset-inline-start: 0) {\n  .bar {\n    --x-inset-inline-start: 5px;\n    left: var(--logical-polyfill-1-ltr, var(--x-inset-inline-end));\n    right: var(--logical-polyfill-1-rtl, var(--x-inset-inline-end));\n  }\n}\n.bar {\n  inset-inline-start: 5px;\n}\n```\n\n#### How does this actually work?\n\nWhenever you use `inset-inline-(start|end)` or `border-(start|end)-(start|end)-radius`, a pair of CSS variables are generated\n`--var-name-ltr` and `--var-name-rtl`. Based on the current writing mode, only one of these two variables will ever have a value.\n\nThen we can simply use _both_ the physical properties with the respective variables and get the desired result:\n\n```css\nleft: var(\n  --logical-polyfill-1-ltr\n); /* Has an effect in LTR only, the variable is \"undefined\" in RTL */\nright: var(\n  --logical-polyfill-1-rtl\n); /* Has an effect in RTL only, the variable is \"undefined\" in LTR */\n```\n\nHowever, this limits us to having a value for just ONE of the two sides. \"left\" or \"right\", but not both.\n\nIn order to be able to support `inset-inline-start` **and** `inset-inline-end` we need a fallback CSS variable for the values.\n\n```css\n/* inset-inline-start: */\n--inset-inline-start: 10px;\nleft: var(\n  --logical-polyfill-1-ltr,\n  var(--inset-inline-end)\n); /* this property is overridden and has no effect */\nright: var(\n  --logical-polyfill-1-rtl,\n  var(--inset-inline-end)\n); /* this property is overridden and has no effect */\n\n/* inset-inline-end: */\n--inset-inline-end: 10px;\nleft: var(--logical-polyfill-2-rtl, var(--inset-inline-start));\n/* In RTL, it takes the first value, in LTR, it takes the second value */\nright: var(--logical-polyfill-2-ltr, var(--inset-inline-start));\n/* In LTR, it takes the first value, in RTL, it takes the second value */\n```\n\nNow, although the `left` and `right` properties that were generated from the `inset-inline-start`\nproperty have no effect, (Since there are more `left` and `right` properties generated from `inset-inline-end`)\nthe `--inset-inline-start` variable is used as the fallback value for either `left` or `right`, whichever property\nshould not currently have a size based on the direction.\n\n### Additional Utility CSS variables available:\n\nIn addition to the CSS variables generated for `inset-inline-(start|end)` properties,\na few CSS variables are always injected that can be used in-place of \"logical\" values.\n\n```css\n[dir=\"ltr\"],\nhtml:not([dir=\"rtl\"]) {\n  --is-ltr: 1;\n  --is-rtl: 0;\n  --start: left;\n  --end: right;\n  --inline-unit: 1;\n}\n[dir=\"rtl\"] {\n  --is-ltr: 0;\n  --is-rtl: 1;\n  --start: right;\n  --end: left;\n  --inline-unit: -1;\n}\n```\n\n## Usage\n\n**Step 1:** Install plugin:\n\n```sh\nnpm install --save-dev postcss postcss-logical-property-fallbacks\n```\n\n**Step 2:** Check you project for existed PostCSS config: `postcss.config.js`\nin the project root, `\"postcss\"` section in `package.json`\nor `postcss` in bundle config.\n\nIf you do not use PostCSS, add it according to [official docs]\nand set this plugin in settings.\n\n**Step 3:** Add the plugin to plugins list:\n\n```diff\nmodule.exports = {\n  plugins: [\n+   require('postcss-logical-property-fallbacks'),\n    require('autoprefixer')\n  ]\n}\n```\n\n[official docs]: https://github.com/postcss/postcss#usage\n",
	"readmeFilename": "README.md",
	"_downloads": 74
}
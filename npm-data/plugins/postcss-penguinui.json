{
	"_id": "postcss-penguinui",
	"_rev": "3-2722d218a9be5cb4f66745beedaf3dbd",
	"name": "postcss-penguinui",
	"dist-tags": {
		"latest": "1.0.5"
	},
	"versions": {
		"1.0.3": {
			"name": "postcss-penguinui",
			"version": "1.0.3",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"utility",
				"penguinui",
				"cli"
			],
			"author": {
				"name": "thesadzzad"
			},
			"license": "MIT",
			"_id": "postcss-penguinui@1.0.3",
			"maintainers": [
				{
					"name": "thesadzzadofficial",
					"email": "thesadzzad@gmail.com"
				}
			],
			"homepage": "https://github.com/thesadzzad/penguinui#readme",
			"bugs": {
				"url": "https://github.com/thesadzzad/penguinui/issues"
			},
			"bin": {
				"penguinui": "dist/cli/penguinui.js",
				"penguinui-generate": "dist/cli/generate.js"
			},
			"dist": {
				"shasum": "b6b74f56a4fe9b5e3886fda6d4abcc101e96e556",
				"tarball": "https://registry.npmjs.org/postcss-penguinui/-/postcss-penguinui-1.0.3.tgz",
				"fileCount": 23,
				"integrity": "sha512-+k1wxudc0fh1U0eCCerpcRX8HqK8hHAmQvafF2UhMQqxCGXn9A7BTsllu7+DvnafdBM0p15hEYuOZX+AnZ42SQ==",
				"signatures": [
					{
						"sig": "MEYCIQDPFFhxbh0R1hDzWIJOKIejHQYs2tlPxBe7j1YfGswWyQIhAIVGtis4L/CQTC+rbtZQpaKpmSY+DWBGwRGtLyGK5OTM",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 29758
			},
			"main": "dist/src/index.js",
			"type": "module",
			"types": "dist/src/index.d.ts",
			"engines": {
				"node": ">=18"
			},
			"exports": {
				".": {
					"types": "./dist/src/index.d.ts",
					"import": "./dist/src/index.js",
					"require": "./dist/src/index.js"
				}
			},
			"gitHead": "1ad279923344858eb33853fe039254ade06f8530",
			"scripts": {
				"test": "npm run unit && eslint .",
				"unit": "npm run build && node --test dist/test/index.test.js dist/test/plugin-extra.test.js",
				"build": "tsc -p tsconfig.json",
				"release": "semantic-release",
				"prepublishOnly": "npm test"
			},
			"_npmUser": {
				"name": "thesadzzadofficial",
				"email": "thesadzzad@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/thesadzzad/penguinui.git",
				"type": "git"
			},
			"_npmVersion": "10.9.3",
			"description": "PostCSS plugin + CLI utilities for PenguinUI-style package CSS -> JSON workflows",
			"directories": {},
			"_nodeVersion": "20.19.4",
			"publishConfig": {
				"access": "public"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"eslint": "^8.47.0",
				"postcss": "^8.4.27",
				"typescript": "5.5.4",
				"@types/node": "^20.5.0",
				"semantic-release": "^22.0.0",
				"@semantic-release/git": "^10.0.0",
				"@semantic-release/npm": "^11.0.0",
				"@typescript-eslint/parser": "^7.0.0",
				"@semantic-release/changelog": "^6.0.0",
				"@typescript-eslint/eslint-plugin": "^7.0.0",
				"@semantic-release/commit-analyzer": "^11.0.0",
				"@semantic-release/release-notes-generator": "^12.0.0",
				"conventional-changelog-conventionalcommits": "^7.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.4.27"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-penguinui_1.0.3_1756057478016_0.7901682507801369",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"1.0.4": {
			"name": "postcss-penguinui",
			"version": "1.0.4",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"utility",
				"penguinui",
				"cli"
			],
			"author": {
				"name": "thesadzzad"
			},
			"license": "MIT",
			"_id": "postcss-penguinui@1.0.4",
			"maintainers": [
				{
					"name": "thesadzzadofficial",
					"email": "thesadzzad@gmail.com"
				}
			],
			"homepage": "https://github.com/thesadzzad/penguinui#readme",
			"bugs": {
				"url": "https://github.com/thesadzzad/penguinui/issues"
			},
			"bin": {
				"penguinui": "dist/cli/penguinui.js",
				"penguinui-generate": "dist/cli/generate.js"
			},
			"dist": {
				"shasum": "3ef105a6eb52bac6c1a8c9575e9e48bef3bc7c07",
				"tarball": "https://registry.npmjs.org/postcss-penguinui/-/postcss-penguinui-1.0.4.tgz",
				"fileCount": 19,
				"integrity": "sha512-qbK22UC6KYiDI0B8/1RJok+MxCImZs+G4GDWBDVUdAtTeK9ji6TRgBE/hqOxJVx8ZxGpL6wVoc+eMnO9rXF59Q==",
				"signatures": [
					{
						"sig": "MEQCIDwSvz34odDzjaaUTrWcS0ZQ8Rw1ukwm/CaDtwVFnPfOAiAOLYsrMuLxfAhO4e1s6yXh+pNSD62jqDrxeSrk87yufw==",
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"
					}
				],
				"unpackedSize": 26123
			},
			"main": "dist/src/index.js",
			"type": "module",
			"types": "dist/src/index.d.ts",
			"engines": {
				"node": ">=18"
			},
			"exports": {
				".": {
					"types": "./dist/src/index.d.ts",
					"import": "./dist/src/index.js",
					"require": "./dist/src/index.js"
				}
			},
			"gitHead": "51bf78c94a38f9353165126f5ac8c7d59c581361",
			"scripts": {
				"test": "npm run unit && eslint .",
				"unit": "npm run build && node --test dist/test/index.test.js dist/test/plugin-extra.test.js",
				"build": "tsc -p tsconfig.json",
				"release": "semantic-release",
				"prepublishOnly": "npm test"
			},
			"_npmUser": {
				"name": "thesadzzadofficial",
				"email": "thesadzzad@gmail.com"
			},
			"repository": {
				"url": "git+https://github.com/thesadzzad/penguinui.git",
				"type": "git"
			},
			"_npmVersion": "10.9.3",
			"description": "PostCSS plugin + CLI utilities for PenguinUI-style package CSS -> JSON workflows",
			"directories": {},
			"_nodeVersion": "20.19.4",
			"publishConfig": {
				"access": "public"
			},
			"_hasShrinkwrap": false,
			"devDependencies": {
				"eslint": "^8.47.0",
				"postcss": "^8.4.27",
				"typescript": "5.5.4",
				"@types/node": "^20.5.0",
				"semantic-release": "^22.0.0",
				"@semantic-release/git": "^10.0.0",
				"@semantic-release/npm": "^11.0.0",
				"@typescript-eslint/parser": "^7.0.0",
				"@semantic-release/changelog": "^6.0.0",
				"@typescript-eslint/eslint-plugin": "^7.0.0",
				"@semantic-release/commit-analyzer": "^11.0.0",
				"@semantic-release/release-notes-generator": "^12.0.0",
				"conventional-changelog-conventionalcommits": "^7.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.4.27"
			},
			"_npmOperationalInternal": {
				"tmp": "tmp/postcss-penguinui_1.0.4_1756057796304_0.32239979977808186",
				"host": "s3://npm-registry-packages-npm-production"
			}
		},
		"1.0.5": {
			"name": "postcss-penguinui",
			"version": "1.0.5",
			"description": "PostCSS plugin + CLI utilities for PenguinUI-style package CSS -> JSON workflows",
			"license": "MIT",
			"author": {
				"name": "thesadzzad"
			},
			"type": "module",
			"main": "dist/src/index.js",
			"types": "dist/src/index.d.ts",
			"bin": {
				"penguinui-generate": "dist/cli/generate.js",
				"penguinui": "dist/cli/penguinui.js"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/thesadzzad/penguinui.git"
			},
			"bugs": {
				"url": "https://github.com/thesadzzad/penguinui/issues"
			},
			"homepage": "https://github.com/thesadzzad/penguinui#readme",
			"keywords": [
				"postcss",
				"postcss-plugin",
				"css",
				"utility",
				"penguinui",
				"cli"
			],
			"engines": {
				"node": ">=18"
			},
			"exports": {
				".": {
					"import": "./dist/src/index.js",
					"require": "./dist/src/index.js",
					"types": "./dist/src/index.d.ts"
				}
			},
			"scripts": {
				"build": "tsc -p tsconfig.json",
				"prepublishOnly": "npm test",
				"unit": "npm run build && node --test dist/test/index.test.js dist/test/plugin-extra.test.js",
				"test": "npm run unit && eslint .",
				"release": "semantic-release"
			},
			"peerDependencies": {
				"postcss": "^8.4.27"
			},
			"devDependencies": {
				"@types/node": "^20.5.0",
				"@typescript-eslint/eslint-plugin": "^7.0.0",
				"@typescript-eslint/parser": "^7.0.0",
				"eslint": "^8.47.0",
				"postcss": "^8.4.27",
				"typescript": "5.5.4",
				"semantic-release": "^22.0.0",
				"@semantic-release/changelog": "^6.0.0",
				"@semantic-release/git": "^10.0.0",
				"@semantic-release/npm": "^11.0.0",
				"@semantic-release/commit-analyzer": "^11.0.0",
				"@semantic-release/release-notes-generator": "^12.0.0",
				"conventional-changelog-conventionalcommits": "^7.0.0"
			},
			"publishConfig": {
				"access": "public"
			},
			"_id": "postcss-penguinui@1.0.5",
			"gitHead": "f44c773b417dc65ee884b2772f0379c2e358e1dc",
			"_nodeVersion": "20.19.4",
			"_npmVersion": "10.9.3",
			"dist": {
				"integrity": "sha512-miYAL5WDUAr3WZgeV4/PKjchrfCFDYAXqixYlrCh+XvjPLvW1F4undS0AYCnxXIbZAWBeRqYt2G15IF9JCtucQ==",
				"shasum": "b7816aada7d75cabd8f86ee6fccf12082dc798a4",
				"tarball": "https://registry.npmjs.org/postcss-penguinui/-/postcss-penguinui-1.0.5.tgz",
				"fileCount": 19,
				"unpackedSize": 26328,
				"signatures": [
					{
						"keyid": "SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U",
						"sig": "MEUCIGkOyGOb+AySklvLjxQqbiFlUgzqEzJp3+cr2fe+isAsAiEAnsL3ZBjNu4aKfInlnqImiJ74aTlf1cFmI6GAb/kcknM="
					}
				]
			},
			"_npmUser": {
				"name": "thesadzzadofficial",
				"email": "thesadzzad@gmail.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "thesadzzadofficial",
					"email": "thesadzzad@gmail.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages-npm-production",
				"tmp": "tmp/postcss-penguinui_1.0.5_1756059306034_0.09273916801050408"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2025-08-24T17:44:37.960Z",
		"modified": "2025-08-24T18:15:06.423Z",
		"1.0.3": "2025-08-24T17:44:38.227Z",
		"1.0.4": "2025-08-24T17:49:56.497Z",
		"1.0.5": "2025-08-24T18:15:06.230Z"
	},
	"bugs": {
		"url": "https://github.com/thesadzzad/penguinui/issues"
	},
	"author": {
		"name": "thesadzzad"
	},
	"license": "MIT",
	"homepage": "https://github.com/thesadzzad/penguinui#readme",
	"keywords": [
		"postcss",
		"postcss-plugin",
		"css",
		"utility",
		"penguinui",
		"cli"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/thesadzzad/penguinui.git"
	},
	"description": "PostCSS plugin + CLI utilities for PenguinUI-style package CSS -> JSON workflows",
	"maintainers": [
		{
			"name": "thesadzzadofficial",
			"email": "thesadzzad@gmail.com"
		}
	],
	"readme": "# postcss-penguinui\n\n![CI](https://github.com/thesadzzad/postcss-penguinui/actions/workflows/ci.yml/badge.svg) [![npm version](https://img.shields.io/npm/v/postcss-penguinui.svg)](https://www.npmjs.com/package/postcss-penguinui)\n\nPostCSS plugin + CLI to compose and distribute small style “packages” as JSON and re-use them via `@package` / `@use` at-rules.\n\n## Features\n\n- `@package <name> as <alias>;` registers an alias for a JSON package in `penguinui/`.\n- `@use <alias-or-name ...>;` injects declarations (multiple tokens allowed in one @use).\n- Exactly one `@use` per CSS rule is allowed (later ones are ignored with a comment + warning).\n- Unknown packages produce an inline comment and red error log (output CSS still builds).\n- Duplicate alias (different target) produces an inline comment + warning; same target is ignored silently.\n- CLI: generate JSON packages from CSS (`penguinui-generate`).\n- CLI: manage packages (`penguinui add <url>`, `penguinui list`, `penguinui remove <name>`).\n- Colored, concise console logging (info / success / yellow warn / red error).\n\n## Best Uses\n\nUse this plugin when you want to:\n\n- Centrally curate a small, stable set of utility / component class declarations as portable JSON so multiple projects or build pipelines can share them.\n- Ship pre-approved design tokens or low-level primitives (spacing, color, typography snippets) that get expanded at build time (no runtime cost / no custom property indirection needed).\n- Gradually extract an existing utility CSS file into structured JSON packages without adopting a much larger framework.\n- Enforce consistency: consumers can only pull predefined styles (no accidental divergence) via `@use`.\n- Keep CSS build deterministic: injection order is explicit (single @use per rule) and multiple tokens expand in sequence.\n\nAvoid or reconsider if you need:\n\n- Highly dynamic, data-driven style generation (consider a CSS-in-JS or utility framework instead).\n- Complex cascade / specificity orchestration (the injected declarations are appended verbatim; no layering logic besides rule order).\n- Massive style sets where JSON duplication would bloat packages (consider design tokens + build transforms).\n- Conditional styling at runtime (this operates strictly at build time).\n\n## Installation\n\nInstall as a dev dependency (peer depends on PostCSS):\n\n```bash\npnpm add -D postcss postcss-penguinui\n# or\nnpm i -D postcss postcss-penguinui\n```\n\n## PostCSS Usage\n\n### ESM (recommended)\n\n```js\n// postcss.config.js\nimport penguin from \"postcss-penguinui\";\n\nexport default {\n  plugins: [penguin({ enableExperimental: false })],\n};\n```\n\n### CommonJS\n\n```js\n// postcss.config.cjs\nconst penguin = require('postcss-penguinui').default; // or .plugin\nmodule.exports = {\n  plugins: [penguin()],\n};\n```\n\n### Minimal Example\n\nInput CSS:\n\n```css\n@package example as button;\n.btn {\n  @use button;\n}\n```\n\n`penguinui/example.json`:\n\n```json\n{\n  \"name\": \"example\",\n  \"styles\": { \"opacity\": \"0.5\", \"color\": \"red\" }\n}\n```\n\nTransforms to:\n\n```css\n.btn {\n  opacity: 0.5;\n  color: red;\n}\n```\n\n## JSON Package Schema\n\n```json\n{\n  \"name\": \"button\",\n  \"styles\": {\n    \"property\": \"value\"\n  }\n}\n```\n\n## CLI Tools (Consumer-Facing)\n\nPrimary executable for consumers (usable with `npx` or local bin):\n\n1. `penguinui` – manage local JSON packages: `add`, `list`, `remove`.\n\n### Add a remote package\n\n```bash\nnpx penguinui add https://example.com/button.json\n# Saved to penguinui/button.json\n```\n\n### List installed packages\n\n```bash\nnpx penguinui list\n```\n\n### Remove a package\n\n```bash\nnpx penguinui remove button\n```\n\n## Developer Utility: Generator (Optional)\n\nThe `penguinui-generate` CLI is intended for maintainers authoring packages—not for end consumers.\n\n### Generate packages from existing CSS\n\n```bash\nnpx penguinui-generate path/to/css/ --out multiout\n# Default output dir: multiout\n```\n\n### Generator Behavior\n\n- Recursively scans provided files/directories for `*.css`.\n- Extracts every class selector (comma-separated & complex selectors supported).\n- Supports multiple classes per rule and merges duplicates (later wins).\n- Emits one `<class>.json` file per class (matching schema). Default output: `multiout`.\n- Safe to re-run; regenerated files overwrite previous output.\n\n## Programmatic Use\n\n```ts\nimport postcss from \"postcss\";\nimport penguin from \"postcss-penguinui\";\n\nconst result = await postcss([penguin({ enableExperimental: true })]).process(\n  sourceCss,\n  { from: undefined }\n);\nconsole.log(result.css);\n```\n\n## Development\n\nInstall deps & run tests:\n\n```bash\npnpm install\npnpm test\n```\n\n### Commit Convention & Releases\n\nAutomated versioning and changelog generation use **semantic-release** with the Conventional Commits specification. Merge or push commits following:\n\n```\nfeat: add new capability\nfix: correct bug in @use expansion\nchore: maintenance changes\ndocs: update README\nrefactor: internal refactor without behavior change\ntest: add or adjust tests\nperf: performance improvement\n```\n\nThe CI pipeline on `main` will:\n\n1. Run lint & tests.\n2. Analyze commits since last release.\n3. Bump version (semver) & publish to npm (requires `NPM_TOKEN`).\n4. Update `CHANGELOG.md` and create a GitHub release.\n\n### Local Release Dry Run\n\nYou can preview the next release locally (will not publish):\n\n```bash\nnpx semantic-release --dry-run --no-ci\n```\n\n### Contributing\n\n1. Fork & branch from `main`.\n2. Make changes + add tests.\n3. Use a Conventional Commit message.\n4. Open a PR; GitHub Actions will validate it.\n\n## Warnings & Errors\n\nInline comments are inserted so the transformed CSS is self-explanatory. Console output (colored):\n\n- Duplicate alias (different package): warning + comment.\n- Second `@use` in a rule: warning + comment (ignored).\n- Unknown package: error + comment.\n\nBuild is not aborted; you can treat errors as diagnostics during development.\n\n## Roadmap\n\n- Caching & watch mode for `penguinui/` folder.\n- Optional prefix / namespacing utilities.\n- Source maps for injected declarations.\n- Update command (`penguinui add` smart overwrite / versioning).\n\n## License\n\nMIT – see `LICENSE`. Attribution required in all copies per the license text.\n\n> Note: This README line was updated to trigger a CI release rerun.\n",
	"readmeFilename": "README.md",
	"_downloads": 216
}
{
	"_id": "postcss-pxtorem-each",
	"_rev": "2-306f4667df2af7b771a9c9a5d934293d",
	"name": "postcss-pxtorem-each",
	"dist-tags": {
		"latest": "0.0.2"
	},
	"versions": {
		"0.0.1": {
			"name": "postcss-pxtorem-each",
			"description": "A CSS post-processor that converts px to rem. for each library to use.",
			"version": "0.0.1",
			"author": {
				"name": "ChanceYu"
			},
			"license": "MIT",
			"main": "index.js",
			"scripts": {
				"test": "jasmine-node spec"
			},
			"devDependencies": {
				"jasmine-node": "~1.11.0"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": "^4.1.0",
				"postcss": "^5.2.10"
			},
			"gitHead": "d3855ea931dea097237d6a32c9e8535590046670",
			"_id": "postcss-pxtorem-each@0.0.1",
			"_nodeVersion": "8.10.0",
			"_npmVersion": "6.6.0",
			"dist": {
				"integrity": "sha512-T+Xcd9VA/GdR0+/LKp8/zAqiRn62Jr5EQfHLLNfsQ0b2THufgYySqZqop/u61U210U8DbypSAYg445qFOnvrSg==",
				"shasum": "1cedb2c608a93bcb0d2d8ea598d176ae49df5baa",
				"tarball": "https://registry.npmjs.org/postcss-pxtorem-each/-/postcss-pxtorem-each-0.0.1.tgz",
				"fileCount": 13,
				"unpackedSize": 30230,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcqZQ7CRA9TVsSAnZWagAAp5AP+gLY00/uq1PljNfQ+jSZ\nECjEGAN4yovsLzILj9lFCmkE5C0RqZeOTw2J2mLPIUWHMwp3WyEMnKOQcBsQ\nbz+jgb6x8RExkJJoqKRj6QRrvoNqKrp/Mjbfb9Nx8Vlkn+4dTyIGRV7KgT7b\nnLWW0huFUwoxBkPGeGU60dhCmSx/CM1NKSzsnWsRJ+Myjt2CTiQE2UPXq1JN\nUzW/iSjYVNsh4HNhJVFyYLW8rEetlSbB3LaTkB6gPF0/stt8vp9/A4V4JBwt\n5p/HmgIyHoMm2Xpkw3Kcsn03rYHb+wbR7ii0Umr1Xa61/6BDuCE3llBT9Qim\nr9AQHG8y9RoJlbjKPO3HvN3BW+aXB5xm7yei6fTymrNiV7D9gcCEhjYCd4Cw\ndEM3rybSek3xZGiXlG4laL7vU6hBiUTWDH2U/RCmK1dHeHTtWF9DA7XISPx4\np2BPPgQmT8JH+ExWz6h3qqQRSwbYnyJSKAZiYNUbIRhCxR11a+mRAPoTYvYw\nLBiPP9HNMv80wXKfEP+W8gEtubCPAJv+wACX+Dc8o725721gADDLVABgO5yg\nDR/B6mjPgAtZxdY+00LheaGgdKpZmK9zq2I0ySNQDbJqodnMF+PQ+j9Lc/aV\n1E+R6khHqcknU9u2K6wKTD/Z+4+g7KLqSE9d0KmGU5uUORzgWW0Om7iEVK9N\n04Lk\r\n=r1qO\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIQDrg9IdcS4RQcOEyAIECb/wq3p8hQOXEXduKXYR0GjlOQIgOEVUXv0YJqi9z58w4+sYwTOcB2SsaRmfJoBZxz/iAzQ="
					}
				]
			},
			"maintainers": [
				{
					"name": "chanceyu",
					"email": "i.fish@foxmail.com"
				}
			],
			"_npmUser": {
				"name": "chanceyu",
				"email": "i.fish@foxmail.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorem-each_0.0.1_1554617402540_0.16587040000068742"
			},
			"_hasShrinkwrap": false
		},
		"0.0.2": {
			"name": "postcss-pxtorem-each",
			"description": "A CSS post-processor that converts px to rem. for each library to use.",
			"version": "0.0.2",
			"author": {
				"name": "ChanceYu"
			},
			"license": "MIT",
			"main": "index.js",
			"scripts": {
				"test": "jasmine-node spec"
			},
			"devDependencies": {
				"jasmine-node": "~1.11.0"
			},
			"keywords": [
				"css",
				"rem",
				"pixel",
				"px",
				"postcss",
				"postcss-plugin"
			],
			"dependencies": {
				"object-assign": "^4.1.0",
				"postcss": "^5.2.10"
			},
			"gitHead": "d3855ea931dea097237d6a32c9e8535590046670",
			"_id": "postcss-pxtorem-each@0.0.2",
			"_nodeVersion": "8.10.0",
			"_npmVersion": "6.6.0",
			"dist": {
				"integrity": "sha512-7OT4xAvVgnLoB3YeXX+pwtQ0ng2xlXKFTKX/7U60IFlEur/YLoL935uUtBpM4nj17HW44L0U3rb7vHRrxolLrg==",
				"shasum": "23458196ab420a710243991c98762fcab9853965",
				"tarball": "https://registry.npmjs.org/postcss-pxtorem-each/-/postcss-pxtorem-each-0.0.2.tgz",
				"fileCount": 13,
				"unpackedSize": 30235,
				"npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc15IECRA9TVsSAnZWagAAVmAP/0eIbQvwRsKgo3eryFmo\nKrFtRSxpVyfVn2MfeJG9pYaG0fYoPnkcNfH0wogUKaN24CoXbNI6lUz9tf7I\nN4IxyLAq+dVET5moZQZ9fVV9mDKDEm514SbUBAGXdycuNBtMU/bxsBvVFAbv\n8N+rzParfuMUhcfHWxwpKV8XdFeRVChAxvimLziL1POlF+C5ac2UIyBPyz0R\nQL/OYQ1NJJqV3PqyPTGrJaSRhs1qFgN8WJJWKpkpebkIxoX06vTxAY4lgtdg\nOSK03uPHsp02dl3IOQCEsZtzyH141dQH8EhfGpod247ONr8k1og/3FvlCOWQ\nQ7TvfOL+4bAzGVk/Ia5puXm9FMRGV7oDUcnh8LGi1e09+QHsaa+Mi4eFdKvy\nKhVqhdQcUYTIxNZ0nT3mb+qQqnbokzbeQI1Byb7bQAFMZnH0IRxCwe1BU8Q8\nC8pnQTcORsaDRkTxvP4fxW5vubxbgk4Y2VDzdIfqTvxmeZ9r1vi92wwQz0hp\nlKEz0KaCcp3jiEVmLGZQ8xpaaUIYZfthDgGipBUgfbHlZuL7eFinVYjor4oy\nsMYL7UqVZTfXUVs0Apqhpbh5FtG9Q27e1KxPymRchbc7NA1qhnpbKrXQXk7i\nx9FmIgPYrl5cfM0+FMgOr9+Ll12C2hcrNxioyDkFLbamvIlXhrAT79kdU5j0\nsNs6\r\n=bSVv\r\n-----END PGP SIGNATURE-----\r\n",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQDfcvmuzD3caa0OZcIhkT93vFO8era1BnJy1vaZMTq0ZQIhAOLQBMNtOs5uSfeFNTQi4wf5E8xFYTd3YQ2qfiqZVfud"
					}
				]
			},
			"maintainers": [
				{
					"name": "chanceyu",
					"email": "i.fish@foxmail.com"
				}
			],
			"_npmUser": {
				"name": "chanceyu",
				"email": "i.fish@foxmail.com"
			},
			"directories": {},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-pxtorem-each_0.0.2_1557631492314_0.4289378869605991"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2019-04-07T06:10:02.540Z",
		"0.0.1": "2019-04-07T06:10:02.684Z",
		"modified": "2022-05-13T06:39:26.420Z",
		"0.0.2": "2019-05-12T03:24:52.398Z"
	},
	"maintainers": [
		{
			"name": "chanceyu",
			"email": "i.fish@foxmail.com"
		}
	],
	"description": "A CSS post-processor that converts px to rem. for each library to use.",
	"keywords": [
		"css",
		"rem",
		"pixel",
		"px",
		"postcss",
		"postcss-plugin"
	],
	"author": {
		"name": "ChanceYu"
	},
	"license": "MIT",
	"readme": "# postcss-pxtorem-each [![NPM version](https://badge.fury.io/js/postcss-pxtorem-each.svg)](http://badge.fury.io/js/postcss-pxtorem-each)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rem units from pixel units.\n\n## Install\n\n```shell\n$ npm install postcss-pxtorem-each --save-dev\n```\n\n## Usage\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625rem;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorem = require('postcss-pxtorem-each');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0\n}\n```\n\n**Or use function for each file/library**\n```js\n{\n    rootValue: function(file){\n      if(/node_modules(\\/|\\\\)vant/.test(file)){\n        return 16\n      }\n      return 32\n    },\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0\n}\n```\n\n\n\n- `rootValue` (Number|Function) The root element font size.\n- `unitPrecision` (Number|Function) The decimal numbers to allow the REM units to grow to.\n- `propList` (Array) The properties that can change from px to rem.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']` \n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) replaces rules containing rems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number|Function) Set the minimum pixel value to replace.\n\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorem = require('postcss-pxtorem-each');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` or `PX` is ignored by `postcss-pxtorem-each` but still accepted by browsers\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n",
	"readmeFilename": "README.md",
	"_downloads": 5
}
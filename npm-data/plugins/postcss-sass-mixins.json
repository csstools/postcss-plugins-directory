{
	"_id": "postcss-sass-mixins",
	"_rev": "3-62908f8bb368135cfd5166bbcc682976",
	"name": "postcss-sass-mixins",
	"description": "PostCSS plugin for mixins",
	"dist-tags": {
		"latest": "0.3.0"
	},
	"versions": {
		"0.3.0": {
			"name": "postcss-sass-mixins",
			"version": "0.3.0",
			"description": "PostCSS plugin for mixins",
			"keywords": [
				"postcss",
				"css",
				"postcss-plugin",
				"mixins",
				"sass"
			],
			"author": {
				"name": "Andrey Sitnik",
				"email": "andrey@sitnik.ru"
			},
			"contributors": [
				{
					"name": "Jonathan Neal",
					"email": "jonathantneal@hotmail.com"
				}
			],
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/postcss/postcss-mixins.git#sass"
			},
			"dependencies": {
				"postcss-simple-vars": "^0.3.0",
				"postcss": "^4.1.10"
			},
			"devDependencies": {
				"gulp-eslint": "0.12.0",
				"gulp-mocha": "2.0.1",
				"mocha": "2.2.4",
				"chai": "2.3.0",
				"gulp": "3.8.11"
			},
			"scripts": {
				"test": "gulp"
			},
			"gitHead": "2dd8e45442c1856f7534abd0219dc8b14151d5df",
			"bugs": {
				"url": "https://github.com/postcss/postcss-mixins/issues"
			},
			"homepage": "https://github.com/postcss/postcss-mixins/tree/sass#readme",
			"_id": "postcss-sass-mixins@0.3.0",
			"_shasum": "7bf1f632909975fa5057966020daa8997b2b9e77",
			"_from": ".",
			"_npmVersion": "2.12.1",
			"_nodeVersion": "0.12.5",
			"_npmUser": {
				"name": "jonathantneal",
				"email": "jonathantneal@hotmail.com"
			},
			"dist": {
				"shasum": "7bf1f632909975fa5057966020daa8997b2b9e77",
				"tarball": "https://registry.npmjs.org/postcss-sass-mixins/-/postcss-sass-mixins-0.3.0.tgz",
				"integrity": "sha512-9JJES3/ED2DNf7MSVxVnMG8MuTeb2IM5ygmSVy0VjWpkmpb04nBgALkEjheTfS2qz1zVTQvhVOJNuOkudZP1CA==",
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEUCIH67ik5mXg99hnpS7aQXICq9zqTuxQFffSsfTdWY4X6jAiEA0mTkHr53su2aGN9NnvBoWHMgwSyVKOHEgafwhT4wPCU="
					}
				]
			},
			"maintainers": [
				{
					"name": "jonathantneal",
					"email": "jonathantneal@hotmail.com"
				}
			]
		}
	},
	"readme": "# PostCSS Mixins [![Build Status][ci-img]][ci]\n\n<img align=\"right\" width=\"135\" height=\"95\"\n     title=\"Philosopher’s stone, logo of PostCSS\"\n     src=\"http://postcss.github.io/postcss/logo-leftp.png\">\n\n[PostCSS] plugin for mixins.\n\nNote, that you must set this plugin before [postcss-simple-vars]\nand [postcss-nested].\n\n```css\n@define-mixin icon $network, $color: blue {\n    .icon.is-$(network) {\n        color: $color;\n        @mixin-content;\n    }\n    .icon.is-$(network):hover {\n        color: white;\n        background: $color;\n    }\n}\n\n@mixin icon twitter {\n    background: url(twt.png);\n}\n@mixin icon youtube, red {\n    background: url(youtube.png);\n}\n```\n\n```css\n.icon.is-twitter {\n    color: blue;\n    background: url(twt.png);\n}\n.icon.is-twitter:hover {\n    color: white;\n    background: blue;\n}\n.icon.is-youtube {\n    color: red;\n    background: url(youtube.png);\n}\n.icon.is-youtube:hover {\n    color: white;\n    background: red;\n}\n```\n\nSee also [postcss-define-property] for some simple cases.\n\n[postcss-define-property]: https://github.com/daleeidd/postcss-define-property\n[postcss-simple-vars]:     https://github.com/postcss/postcss-simple-vars\n[postcss-nested]:          https://github.com/postcss/postcss-nested\n[PostCSS]:                 https://github.com/postcss/postcss\n[ci-img]:                  https://travis-ci.org/postcss/postcss-mixins.svg\n[ci]:                      https://travis-ci.org/postcss/postcss-mixins\n\n## Usage\n\n```js\npostcss([ require('postcss-mixins') ])\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n## Mixins\n\n### CSS Mixin\n\nSimple template defined directly in CSS to prevent repeating yourself.\n\nSee [postcss-simple-vars] docs for arguments syntax.\n\nYou can use it with [postcss-nested] plugin:\n\n```css\n@define-mixin icon $name {\n    padding-left: 16px;\n    &::after {\n        content: \"\";\n        background-url: url(/icons/$(name).png);\n    }\n}\n\n.search {\n    @mixin icon search;\n}\n```\n\nUnlike Sass, PostCSS has no `if` or `while` statements. If you need some\ncomplicated logic, you should use function mixin.\n\n[postcss-nested]:      https://github.com/postcss/postcss-nested\n[postcss-simple-vars]: https://github.com/postcss/postcss-simple-vars\n\n### Function Mixin\n\nThis type of mixin gives you full power of JavaScript.\nYou can define this mixins in `mixins` option.\n\nThis type is ideal for CSS hacks or business logic.\n\nAlso you should use function mixin if you need to change property names\nin mixin, because [postcss-simple-vars] doesn’t support variables\nin properties yet.\n\nFirst argument will be `@mixin` node, that called this mixin.\nYou can insert your declarations or rule before or after this node.\nOther arguments will be taken from at-rule parameters.\n\nSee [PostCSS API] about nodes API.\n\n```js\nrequire('postcss-mixins')({\n    mixins: {\n        icons: function (mixin, dir) {\n            fs.readdirSync('/images/' + dir).forEach(function (file) {\n                var icon = file.replace(/\\.svg$/, '');\n                var rule = postcss.rule('.icon.icon-' + icon);\n                rule.append({\n                    prop:  'background',\n                    value: 'url(' + dir + '/' + file ')'\n                });\n                mixin.replaceWith(rule);\n            });\n        }\n    }\n});\n```\n\n```css\n@mixin icons signin;\n```\n\n```css\n.icon.icon-back { background: url(signin/back.svg) }\n.icon.icon-secret { background: url(signin/secret.svg) }\n```\n\nYou can also return object if you doesn’t want to create each node manually:\n\n```js\nrequire('postcss-mixins')({\n    mixins: {\n        hidpi: function (path) {\n            return {\n                '&': {\n                    background: 'url(' + path + ')'\n                },\n                '@media (min-resolution: 120dpi)': {\n                    '&': {\n                        background: 'url(' + path + '@2x)'\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\nOr you can use object instead of function:\n\n```js\nrequire('postcss-mixins')({\n    mixins: {\n        clearfix: {\n            '&::after': {\n                content: '\"\"',\n                display: 'table',\n                clear: 'both'\n            }\n        }\n    }\n}\n```\n\n[PostCSS API]: https://github.com/postcss/postcss/blob/master/API.md\n\n## Options\n\nCall plugin function to set options:\n\n```js\npostcss([ require('postcss-mixins')({ mixins: { … } }) ])\n```\n\n### `mixins`\n\nObject of function mixins.\n\n### `mixinsDir`\n\nAutoload all mixins from this dirs. Mixin name will be taken from file name.\n\n```js\n// gulpfile.js\n\nrequire('postcss-mixins')({\n    mixinsDir: path.join(__dirname, 'mixins/')\n})\n\n// mixins/clearfix.js\n\nmodule.exports = {\n    '&::after': {\n        content: '\"\"',\n        display: 'table',\n        clear: 'both'\n    }\n}\n```\n\n### `silent`\n\nRemove unknown mixins and do not throw a error. Default is `false`.\n",
	"maintainers": [
		{
			"name": "jonathantneal",
			"email": "jonathantneal@hotmail.com"
		}
	],
	"time": {
		"modified": "2022-06-24T10:50:54.986Z",
		"created": "2015-07-10T13:38:13.460Z",
		"0.3.0": "2015-07-10T13:38:13.460Z"
	},
	"homepage": "https://github.com/postcss/postcss-mixins/tree/sass#readme",
	"keywords": [
		"postcss",
		"css",
		"postcss-plugin",
		"mixins",
		"sass"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/postcss/postcss-mixins.git#sass"
	},
	"contributors": [
		{
			"name": "Jonathan Neal",
			"email": "jonathantneal@hotmail.com"
		}
	],
	"author": {
		"name": "Andrey Sitnik",
		"email": "andrey@sitnik.ru"
	},
	"bugs": {
		"url": "https://github.com/postcss/postcss-mixins/issues"
	},
	"license": "MIT",
	"readmeFilename": "README.md",
	"_downloads": 2
}
{
	"_id": "postcss-design-token-utils",
	"_rev": "3-c3cea8c3b7528f7c57f4755bae43b59b",
	"name": "postcss-design-token-utils",
	"dist-tags": {
		"latest": "1.1.1"
	},
	"versions": {
		"1.0.0": {
			"name": "postcss-design-token-utils",
			"version": "1.0.0",
			"description": "PostCSS plugin to convert design tokens to CSS custom properties and utility classes.",
			"main": "index.js",
			"scripts": {
				"test": "ava"
			},
			"keywords": [
				"postcss-plugin",
				"design-tokens",
				"utility-class",
				"atomic-css",
				"postcss"
			],
			"author": {
				"name": "Saneef Ansari",
				"email": "hello@saneef.com",
				"url": "https://saneef.com/"
			},
			"license": "MIT",
			"dependencies": {
				"just-kebab-case": "^4.2.0"
			},
			"devDependencies": {
				"ava": "^6.1.2",
				"cssnano": "^6.1.2",
				"postcss": "^8.4.38"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"_id": "postcss-design-token-utils@1.0.0",
			"gitHead": "9990146943464e5c59cfc9d35f1e0e56870ec0cc",
			"_nodeVersion": "20.11.0",
			"_npmVersion": "10.2.4",
			"dist": {
				"integrity": "sha512-A4t7Tndsbml18K3t8UR5vHCmeU/S4ktmO54xw47QFs9q7PtPqTvZwT0WsCWecXnircwx1fWyk4sPs3JpyUXKQg==",
				"shasum": "1d0d16c6bcd421553b342321e52759d7e3992c39",
				"tarball": "https://registry.npmjs.org/postcss-design-token-utils/-/postcss-design-token-utils-1.0.0.tgz",
				"fileCount": 6,
				"unpackedSize": 18357,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIFEJpTOfT4zYgTgfKbiEWdmU0qjIEnUCGWBkLSDJqOaaAiA8qbCVbptZZQ0DYCOfcyA7+uS3DiLoEqSYsOcQ4FXo2A=="
					}
				]
			},
			"_npmUser": {
				"name": "saneef",
				"email": "hello@saneef.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "saneef",
					"email": "hello@saneef.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-design-token-utils_1.0.0_1713212154119_0.9956312633508104"
			},
			"_hasShrinkwrap": false
		},
		"1.0.1": {
			"name": "postcss-design-token-utils",
			"version": "1.0.1",
			"description": "PostCSS plugin to convert design tokens to CSS custom properties and utility classes.",
			"main": "index.js",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/saneef/postcss-design-token-utils.git"
			},
			"scripts": {
				"test": "ava"
			},
			"keywords": [
				"postcss-plugin",
				"design-tokens",
				"utility-class",
				"atomic-css",
				"postcss"
			],
			"author": {
				"name": "Saneef Ansari",
				"email": "hello@saneef.com",
				"url": "https://saneef.com/"
			},
			"license": "MIT",
			"dependencies": {
				"just-kebab-case": "^4.2.0"
			},
			"devDependencies": {
				"ava": "^6.1.2",
				"cssnano": "^6.1.2",
				"postcss": "^8.4.38"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"_id": "postcss-design-token-utils@1.0.1",
			"gitHead": "c12fcedce66d9169d763c8016974380a2a4a6670",
			"bugs": {
				"url": "https://github.com/saneef/postcss-design-token-utils/issues"
			},
			"homepage": "https://github.com/saneef/postcss-design-token-utils#readme",
			"_nodeVersion": "20.11.0",
			"_npmVersion": "10.2.4",
			"dist": {
				"integrity": "sha512-5Jh4qiVaX5dH3zUIXfs3vunyTmnN/zfPcO6MKPPhuE/y6sInnzc+o1lUXMU+Hb6939kcOuMjmawKGOrWKD1idA==",
				"shasum": "9a1a82ec17aa5b98811b89ddbc68206613b4b211",
				"tarball": "https://registry.npmjs.org/postcss-design-token-utils/-/postcss-design-token-utils-1.0.1.tgz",
				"fileCount": 6,
				"unpackedSize": 18469,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEYCIQCDPh1QpvL2Rj+HiIkv+EvVJ0TRIkloVHVRvo1AFa3hUgIhAJrG81kM67kJimiN6Po6T4X6r/NYkArGgHQr86Y9bp1+"
					}
				]
			},
			"_npmUser": {
				"name": "saneef",
				"email": "hello@saneef.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "saneef",
					"email": "hello@saneef.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-design-token-utils_1.0.1_1713212470835_0.5229751490921137"
			},
			"_hasShrinkwrap": false
		},
		"1.1.0": {
			"name": "postcss-design-token-utils",
			"version": "1.1.0",
			"description": "PostCSS plugin to convert design tokens to CSS custom properties and utility classes.",
			"main": "index.js",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/saneef/postcss-design-token-utils.git"
			},
			"scripts": {
				"test": "ava"
			},
			"keywords": [
				"postcss-plugin",
				"design-tokens",
				"utility-class",
				"atomic-css",
				"postcss"
			],
			"author": {
				"name": "Saneef Ansari",
				"email": "hello@saneef.com",
				"url": "https://saneef.com/"
			},
			"license": "MIT",
			"dependencies": {
				"just-kebab-case": "^4.2.0"
			},
			"devDependencies": {
				"ava": "^6.1.2",
				"cssnano": "^6.1.2",
				"postcss": "^8.4.38"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"_id": "postcss-design-token-utils@1.1.0",
			"gitHead": "93dcbe3407cfb9ac68bdc1324a84150a6b6cb2e6",
			"bugs": {
				"url": "https://github.com/saneef/postcss-design-token-utils/issues"
			},
			"homepage": "https://github.com/saneef/postcss-design-token-utils#readme",
			"_nodeVersion": "20.11.0",
			"_npmVersion": "10.2.4",
			"dist": {
				"integrity": "sha512-KI2ZAkumBBcLSlYnnzm7/DGZGh/BaXDoon8vET4Co+OKWEDCU1ooIVs6qlROi+XRVj+6Ux+nEpTXWOd4yiqriA==",
				"shasum": "6add39a0dcb1f122a995f5a4203e192d7dbb9d75",
				"tarball": "https://registry.npmjs.org/postcss-design-token-utils/-/postcss-design-token-utils-1.1.0.tgz",
				"fileCount": 29,
				"unpackedSize": 161570,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIEOifrLZZWab9EWiNPr0nA6FKjkJFS7kmCd2iQfKtbhNAiAVuvXAkNzXgnkGtGEIrLZF+IoAlFoOd5QNV9/KGz3wbg=="
					}
				]
			},
			"_npmUser": {
				"name": "saneef",
				"email": "hello@saneef.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "saneef",
					"email": "hello@saneef.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-design-token-utils_1.1.0_1713782957366_0.8641035495017602"
			},
			"_hasShrinkwrap": false
		},
		"1.1.1": {
			"name": "postcss-design-token-utils",
			"version": "1.1.1",
			"description": "PostCSS plugin to convert design tokens to CSS custom properties and utility classes.",
			"main": "index.js",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/saneef/postcss-design-token-utils.git"
			},
			"scripts": {
				"test": "ava"
			},
			"keywords": [
				"postcss-plugin",
				"design-tokens",
				"utility-class",
				"atomic-css",
				"postcss"
			],
			"author": {
				"name": "Saneef Ansari",
				"email": "hello@saneef.com",
				"url": "https://saneef.com/"
			},
			"license": "MIT",
			"dependencies": {
				"just-kebab-case": "^4.2.0"
			},
			"devDependencies": {
				"ava": "^6.1.2",
				"cssnano": "^6.1.2",
				"postcss": "^8.4.38"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			},
			"_id": "postcss-design-token-utils@1.1.1",
			"gitHead": "3132f19aa49a691fd4eead4c99d89bfb518202ba",
			"bugs": {
				"url": "https://github.com/saneef/postcss-design-token-utils/issues"
			},
			"homepage": "https://github.com/saneef/postcss-design-token-utils#readme",
			"_nodeVersion": "20.11.0",
			"_npmVersion": "10.2.4",
			"dist": {
				"integrity": "sha512-Y19cHdfey678TE4tJnyCiNg3NTaBuOXo81VBh7x1sz6xL0/LKXqf3bX9ZHkIWwpkBsF9UApQKX6H8oonW2lq8A==",
				"shasum": "94d91c379a07adfb3ce55d676a8abdfef1370472",
				"tarball": "https://registry.npmjs.org/postcss-design-token-utils/-/postcss-design-token-utils-1.1.1.tgz",
				"fileCount": 6,
				"unpackedSize": 18766,
				"signatures": [
					{
						"keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
						"sig": "MEQCIH10u0Y+PHntUFsA0P3zFfJyrW6p0MYcOPtJUaE0wWPWAiAXKUB7UcGbRigZbLerGbZcX7jV7Axo+iWpwTsMzJ+S7Q=="
					}
				]
			},
			"_npmUser": {
				"name": "saneef",
				"email": "hello@saneef.com"
			},
			"directories": {},
			"maintainers": [
				{
					"name": "saneef",
					"email": "hello@saneef.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/postcss-design-token-utils_1.1.1_1713783046520_0.8819888216186884"
			},
			"_hasShrinkwrap": false
		}
	},
	"time": {
		"created": "2024-04-15T20:15:54.119Z",
		"1.0.0": "2024-04-15T20:15:54.277Z",
		"modified": "2024-04-22T10:50:46.870Z",
		"1.0.1": "2024-04-15T20:21:11.006Z",
		"1.1.0": "2024-04-22T10:49:17.520Z",
		"1.1.1": "2024-04-22T10:50:46.668Z"
	},
	"maintainers": [
		{
			"name": "saneef",
			"email": "hello@saneef.com"
		}
	],
	"description": "PostCSS plugin to convert design tokens to CSS custom properties and utility classes.",
	"keywords": [
		"postcss-plugin",
		"design-tokens",
		"utility-class",
		"atomic-css",
		"postcss"
	],
	"author": {
		"name": "Saneef Ansari",
		"email": "hello@saneef.com",
		"url": "https://saneef.com/"
	},
	"license": "MIT",
	"readme": "# postcss-design-token-utils\n\nPostCSS plugin to convert design tokens to CSS custom properties and utility classes.\n\nThis plugin is inspired by Andy Bell's [Gorko](https://github.com/Andy-set-studio/gorko), and his latest [utility class generation project](https://github.com/Set-Creative-Studio/cube-boilerplate/) using Tailwind.\nThe method of using Tailwind comes with fancy features like just-in-time class generation.\nBut, I would rather not depend on Tailwind for one feature of generating classes and utility class.\nNot only that, I find the Tailwind configuration (like Andy did) quite scary.\nWho knows if the same configuration works in the next version?\nSo, I'm going with slightly low-tech here.\n\nMy motivation is to create a plugin that does one job (actually two) of generating CSS custom properties from design tokens.\nYou can maintain the tokens in which ever formats â€“ JSON, or YAML â€“ you prefer.\nDo turn into an object, before passing the tokens to this plugin.\n\nYou can pair this plugin with [purgecss](https://purgecss.com) to remove unused CSS class rules.\n\nSee [my example project](https://github.com/saneef/postcss-design-token-utils-sample-project) to see how I convert JSON files to JS Object and use purgecss.\n\n## Usage\n\n### Installation\n\n```sh\nnpm install --save-dev postcss-design-token-utils\n```\n\n### Configuration\n\n```js\n// postcss.config.js\nconst postcssDesignTokenUtils = require(\"postcss-design-token-utils\");\n\nconst tokens = {\n  color: {\n    accent: \"#16a34a\",\n    dark: \"#111827\",\n    light: \"#f3f4f6\",\n  },\n  space: {\n    xs: \"0.25rem\",\n    s: \"0.5rem\",\n    m: \"1rem\",\n    l: \"2rem\",\n  },\n};\n\nconst config = {\n  plugins: [\n    /* ...other plugins... */\n    postcssDesignTokenUtils(\n      tokens, // Tokens\n      {\n        /* pluginOptions */\n      },\n    ),\n  ],\n};\n```\n\nThis plug exposes `@design-token-utils` at-rule.\nUsing the at-rule with suitable params you can generate CSS custom properties and utility classes.\n\n### CSS properties from design tokens\n\nAt-rule, `@design-token-utils (custom-properties);` is used to generated CSS custom properties.\nThe at-rule should be used within a rule (selector), else the properties won't be generated.\n\n```css\n/* source.css */\n:root {\n  @design-token-utils (custom-properties);\n}\n```\n\nFor the `token` passed in the example config, these custom properties will be populated.\n\n```css\n/* output.css */\n:root {\n  --color-accent: #16a34a;\n  --color-dark: #111827;\n  --color-light: #f3f4f6;\n  --space-xs: 0.25rem;\n  --space-s: 0.5rem;\n  --space-m: 1rem;\n  --space-l: 2rem;\n}\n```\n\n#### Grouping tokens\n\nUsing options, `customProperties`, the behaviour of custom property generation can be altered.\n\nIn the below example, we have two sets of tokens, `color` and `darkThemeColor` (these are `id`s).\n\nUsing the options, the `darkThemeColor` is marked with the group name `dark`.\nYou can also see that the `prefix` is set to `color`, which will change the prefix of the generated properties.\nBy default, `id` is used as prefix.\n\n```js\n// postcss.config.js\nconst tokens = {\n  color: {\n    accent: \"#16a34a\",\n    dark: \"#111827\",\n    light: \"#f3f4f6\",\n  },\n  darkThemeColor: {\n    accent: \"#16a34a\",\n    // The `light` and `dark` values are interchanged\n    light: \"#111827\",\n    dark: \"#f3f4f6\",\n  },\n};\n\nconst config = {\n  plugins: [\n    postcssDesignTokenUtils(tokens, {\n      customProperties: [\n        { id: \"darkThemeColor\", prefix: \"color\", group: \"dark\" },\n      ],\n    }),\n  ],\n};\n```\n\nThe call `@design-token-utils (custom-properties);` only generates tokens without any groups. We pass the group names (comma-separated) with the at-rule call. Example: `@design-token-utils (custom-properties: dark);`\n\nIn cases where you need to generate all the custom properties, grouped and ungrouped, you can pass `all` as an argument, like `@design-token-utils (custom-properties: all);`\n\nInside the `(prefers-color-scheme: dark)` media query, we can call ` @design-token-utils (custom-properties: dark);` to generate `dark` group properties.\n\n```css\n/* source.css */\n:root {\n  @design-token-utils (custom-properties);\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    @design-token-utils (custom-properties: dark);\n  }\n}\n```\n\nWith the above code, we have reassigned the properties from `:root` with a new set of values within `(prefers-color-scheme: dark)` media query.\n\n```css\n/* output.css */\n:root {\n  --color-accent: #16a34a;\n  --color-dark: #111827;\n  --color-light: #f3f4f6;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --color-accent: #16a34a;\n    --color-light: #111827;\n    --color-dark: #f3f4f6;\n  }\n}\n```\n\nSimilarly, you can invoke at-rule within a class selector (`.dark {}`) or a data attribute (`[data-theme=\"dark\"] {}`).\nThis is handy for generating scheme or theme base properties.\n\n### Utility classes\n\n> [!IMPORTANT]\n> The utility classes are based on CSS custom properties from design tokens.\n> Make sure custom properties are included.\n\nThe generation of **utility classes is opt-in** based on token `id`.\nUsing the `utilityClasses` option, we need to provide an array of object with `id`, `property`, and optionally `prefix` for class generation.\nThen, we can use at-rule `@design-token-utils (utility-classes);` to insert in the stylesheet.\n\n```js\n// postcss.config.js\n\nconst tokens = {\n  color: {\n    accent: \"#16a34a\",\n    dark: \"#111827\",\n    light: \"#f3f4f6\",\n  },\n};\n\nconst config = {\n  plugins: [\n    postcssDesignTokenUtils(tokens, {\n      utilityClasses: [\n        {\n          id: \"color\",\n          property: \"background-color\",\n          prefix: \"bg\",\n        },\n      ],\n    }),\n  ],\n};\n```\n\nUsing the `utilityClasses` option, we pick one set of token using `id: \"color\"`.\nThe CSS `property` is set to `background-color` and the class name `prefix` to `bg`.\nIf we don't set `prefix` is not set, the `id` will be used as a prefix, which may be useless for most of the cases.\n\nThen, we can use at-rule `@design-token-utils (utility-classes);` to insert the classes in the stylesheet.\n\n```css\n/* source.css */\n:root {\n  @design-token-utils (custom-properties);\n}\n\n@design-token-utils (utility-classes);\n```\n\nOnce built, this is the output CSS file.\n\n```css\n/* output.css */\n:root {\n  --color-accent: #16a34a;\n  --color-dark: #111827;\n  --color-light: #f3f4f6;\n}\n.bg-accent {\n  background-color: var(--color-accent);\n}\n.bg-dark {\n  background-color: var(--color-dark);\n}\n.bg-light {\n  background-color: var(--color-light);\n}\n```\n\nThe `property` also supports an array of property values, like `[\"margin-top\", \"margin-bottom\"]`, to be included within a utility class.\n\n#### Responsive class variants\n\nIt is possible to generate responsive modifier class names.\nWe need to provide breakpoints and specify which classes need responsive variants.\n\n```js\n// postcss.config.js\n\n// tokens object from previous example\n\nconst config = {\n  plugins: [\n    postcssDesignTokenUtils(tokens, {\n      breakpoints: {\n        sm: \"320px\", // ðŸ‘ˆ Added break points\n        md: \"640px\",\n      },\n      utilityClasses: [\n        {\n          id: \"color\",\n          property: \"background-color\",\n          prefix: \"bg\",\n          responsiveVariants: true, // ðŸ‘ˆ Sets `responsiveVariants` to `true`\n        },\n      ],\n    }),\n  ],\n};\n```\n\nIn the previous example, if we provide breakpoints and set `responsiveVariants: true` for token ID, we get below output.\n\n```css\n/* output.css */\n:root {\n  --color-accent: #16a34a;\n  --color-dark: #111827;\n  --color-light: #f3f4f6;\n}\n\n.bg-accent {\n  background-color: var(--color-accent);\n}\n.bg-dark {\n  background-color: var(--color-dark);\n}\n.bg-light {\n  background-color: var(--color-light);\n}\n@media (min-width: 320px) {\n  .sm-bg-accent {\n    background-color: var(--color-accent);\n  }\n  .sm-bg-dark {\n    background-color: var(--color-dark);\n  }\n  .sm-bg-light {\n    background-color: var(--color-light);\n  }\n}\n@media (min-width: 640px) {\n  .md-bg-accent {\n    background-color: var(--color-accent);\n  }\n  .md-bg-dark {\n    background-color: var(--color-dark);\n  }\n  .md-bg-light {\n    background-color: var(--color-light);\n  }\n}\n```\n\nYou can use `classResponsivePrefixSeparator` property (default: `-`) in `options` to change the separator between responsive prefix and class name.\nTo generate Tailwind style responsive modifiers, set `mediaQueryClassSeparator: \":\"`.\n_Beware if you are using purgecss.\nClass names with some special character are not considered._\n[See note](https://purgecss.com/extractors.html#default-extractor).\n\n## Nested tokens\n\nEven if your token object is nested, this plugin can generate CSS custom properties and class names.\nThe ID will be generated by merging the IDs of parents and children (recursively), separated by a period.\nExample: The tokens within `gray` can be targeted using `color.gray`.\n\n```js\n// postcss.config.css\nconst token = {\n  color: {\n    gray: { 100: \"#f1f5f9\", 800: \"#1e293b\" },\n    primary: { 100: \"#dcfce7\", 800: \"#166534\" },\n  },\n};\n\nconst config = {\n  plugins: [\n    postcssDesignTokenUtils(tokens, {\n      utilityClasses: [\n        {\n          id: \"color.gray\",\n          property: \"background-color\",\n          prefix: \"bg-shade\",\n        },\n      ],\n    }),\n  ],\n};\n```",
	"readmeFilename": "README.md",
	"homepage": "https://github.com/saneef/postcss-design-token-utils#readme",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/saneef/postcss-design-token-utils.git"
	},
	"bugs": {
		"url": "https://github.com/saneef/postcss-design-token-utils/issues"
	},
	"_downloads": 93
}